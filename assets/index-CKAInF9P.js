var N7=Object.defineProperty;var z7=(s,e,t)=>e in s?N7(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var j9=(s,e,t)=>z7(s,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();function t6(...s){console.warn(...s)}const u3={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function d5(s){const e=K3();for(let t=0,i=s.length;t<i;++t)u5(e,s[t]);return e}function N1(s,e,t){return t?(t[0]=s[0]-e,t[1]=s[1]-e,t[2]=s[2]+e,t[3]=s[3]+e,t):[s[0]-e,s[1]-e,s[2]+e,s[3]+e]}function i6(s,e){return e?(e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e):s.slice()}function a2(s,e,t){let i,n;return e<s[0]?i=s[0]-e:s[2]<e?i=e-s[2]:i=0,t<s[1]?n=s[1]-t:s[3]<t?n=t-s[3]:n=0,i*i+n*n}function F2(s,e){return U4(s,e[0],e[1])}function T2(s,e){return s[0]<=e[0]&&e[2]<=s[2]&&s[1]<=e[1]&&e[3]<=s[3]}function U4(s,e,t){return s[0]<=e&&e<=s[2]&&s[1]<=t&&t<=s[3]}function R4(s,e){const t=s[0],i=s[1],n=s[2],r=s[3],o=e[0],a=e[1];let l=u3.UNKNOWN;return o<t?l=l|u3.LEFT:o>n&&(l=l|u3.RIGHT),a<i?l=l|u3.BELOW:a>r&&(l=l|u3.ABOVE),l===u3.UNKNOWN&&(l=u3.INTERSECTING),l}function K3(){return[1/0,1/0,-1/0,-1/0]}function w1(s,e,t,i,n){return n?(n[0]=s,n[1]=e,n[2]=t,n[3]=i,n):[s,e,t,i]}function T5(s){return w1(1/0,1/0,-1/0,-1/0,s)}function n6(s,e){const t=s[0],i=s[1];return w1(t,i,t,i,e)}function j4(s,e,t,i,n){const r=T5(n);return r6(r,s,e,t,i)}function D2(s,e){return s[0]==e[0]&&s[2]==e[2]&&s[1]==e[1]&&s[3]==e[3]}function s6(s,e){return e[0]<s[0]&&(s[0]=e[0]),e[2]>s[2]&&(s[2]=e[2]),e[1]<s[1]&&(s[1]=e[1]),e[3]>s[3]&&(s[3]=e[3]),s}function u5(s,e){e[0]<s[0]&&(s[0]=e[0]),e[0]>s[2]&&(s[2]=e[0]),e[1]<s[1]&&(s[1]=e[1]),e[1]>s[3]&&(s[3]=e[1])}function r6(s,e,t,i,n){for(;t<i;t+=n)W7(s,e[t],e[t+1]);return s}function W7(s,e,t){s[0]=Math.min(s[0],e),s[1]=Math.min(s[1],t),s[2]=Math.max(s[2],e),s[3]=Math.max(s[3],t)}function q4(s,e){let t;return t=e(C0(s)),t||(t=e(S0(s)),t)||(t=e(T0(s)),t)||(t=e(X1(s)),t)?t:!1}function I4(s){let e=0;return R0(s)||(e=e3(s)*C3(s)),e}function C0(s){return[s[0],s[1]]}function S0(s){return[s[2],s[1]]}function C1(s){return[(s[0]+s[2])/2,(s[1]+s[3])/2]}function B7(s,e){let t;if(e==="bottom-left")t=C0(s);else if(e==="bottom-right")t=S0(s);else if(e==="top-left")t=X1(s);else if(e==="top-right")t=T0(s);else throw new Error("Invalid corner");return t}function v4(s,e,t,i,n){const[r,o,a,l,h,c,u,d]=o6(s,e,t,i);return w1(Math.min(r,a,h,u),Math.min(o,l,c,d),Math.max(r,a,h,u),Math.max(o,l,c,d),n)}function o6(s,e,t,i){const n=e*i[0]/2,r=e*i[1]/2,o=Math.cos(t),a=Math.sin(t),l=n*o,h=n*a,c=r*o,u=r*a,d=s[0],f=s[1];return[d-l+u,f-h-c,d-l-u,f-h+c,d+l-u,f+h+c,d+l+u,f+h-c,d-l+u,f-h-c]}function C3(s){return s[3]-s[1]}function p1(s,e,t){const i=t||K3();return r3(s,e)?(s[0]>e[0]?i[0]=s[0]:i[0]=e[0],s[1]>e[1]?i[1]=s[1]:i[1]=e[1],s[2]<e[2]?i[2]=s[2]:i[2]=e[2],s[3]<e[3]?i[3]=s[3]:i[3]=e[3]):T5(i),i}function X1(s){return[s[0],s[3]]}function T0(s){return[s[2],s[3]]}function e3(s){return s[2]-s[0]}function r3(s,e){return s[0]<=e[2]&&s[2]>=e[0]&&s[1]<=e[3]&&s[3]>=e[1]}function R0(s){return s[2]<s[0]||s[3]<s[1]}function K7(s,e){return e?(e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e):s}function X7(s,e,t){let i=!1;const n=R4(s,e),r=R4(s,t);if(n===u3.INTERSECTING||r===u3.INTERSECTING)i=!0;else{const o=s[0],a=s[1],l=s[2],h=s[3],c=e[0],u=e[1],d=t[0],f=t[1],g=(f-u)/(d-c);let _,m;r&u3.ABOVE&&!(n&u3.ABOVE)&&(_=d-(f-h)/g,i=_>=o&&_<=l),!i&&r&u3.RIGHT&&!(n&u3.RIGHT)&&(m=f-(d-l)*g,i=m>=a&&m<=h),!i&&r&u3.BELOW&&!(n&u3.BELOW)&&(_=d-(f-a)/g,i=_>=o&&_<=l),!i&&r&u3.LEFT&&!(n&u3.LEFT)&&(m=f-(d-o)*g,i=m>=a&&m<=h)}return i}function a6(s,e){const t=e.getExtent(),i=C1(s);if(e.canWrapX()&&(i[0]<t[0]||i[0]>=t[2])){const n=e3(t),o=Math.floor((i[0]-t[0])/n)*n;s[0]-=o,s[2]-=o}return s}function l6(s,e,t){if(e.canWrapX()){const i=e.getExtent();if(!isFinite(s[0])||!isFinite(s[2]))return[[i[0],s[1],i[2],s[3]]];a6(s,e);const n=e3(i);if(e3(s)>n&&!t)return[[i[0],s[1],i[2],s[3]]];if(s[0]<i[0])return[[s[0]+n,s[1],i[2],s[3]],[i[0],s[1],s[2],s[3]]];if(s[2]>i[2])return[[s[0],s[1],i[2],s[3]],[i[0],s[1],s[2]-n,s[3]]]}return[s]}function o3(s,e,t){return Math.min(Math.max(s,e),t)}function V7(s,e,t,i,n,r){const o=n-t,a=r-i;if(o!==0||a!==0){const l=((s-t)*o+(e-i)*a)/(o*o+a*a);l>1?(t=n,i=r):l>0&&(t+=o*l,i+=a*l)}return y1(s,e,t,i)}function y1(s,e,t,i){const n=t-s,r=i-e;return n*n+r*r}function Y7(s){const e=s.length;for(let i=0;i<e;i++){let n=i,r=Math.abs(s[i][i]);for(let a=i+1;a<e;a++){const l=Math.abs(s[a][i]);l>r&&(r=l,n=a)}if(r===0)return null;const o=s[n];s[n]=s[i],s[i]=o;for(let a=i+1;a<e;a++){const l=-s[a][i]/s[i][i];for(let h=i;h<e+1;h++)i==h?s[a][h]=0:s[a][h]+=l*s[i][h]}}const t=new Array(e);for(let i=e-1;i>=0;i--){t[i]=s[i][e]/s[i][i];for(let n=i-1;n>=0;n--)s[n][e]-=s[n][i]*t[i]}return t}function q9(s){return s*180/Math.PI}function z1(s){return s*Math.PI/180}function M2(s,e){const t=s%e;return t*e<0?t+e:t}function L3(s,e,t){return s+t*(e-s)}function I0(s,e){const t=Math.pow(10,e);return Math.round(s*t)/t}function W5(s,e){return Math.floor(I0(s,e))}function B5(s,e){return Math.ceil(I0(s,e))}function A4(s,e,t){if(s>=e&&s<t)return s;const i=t-e;return((s-e)%i+i)%i+e}function Z7(s,e){return s[0]+=+e[0],s[1]+=+e[1],s}function s0(s,e){let t=!0;for(let i=s.length-1;i>=0;--i)if(s[i]!=e[i]){t=!1;break}return t}function $4(s,e){const t=Math.cos(e),i=Math.sin(e),n=s[0]*t-s[1]*i,r=s[1]*t+s[0]*i;return s[0]=n,s[1]=r,s}function H7(s,e){return s[0]*=e,s[1]*=e,s}function h6(s,e){const t=s[0]-e[0],i=s[1]-e[1];return t*t+i*i}function c6(s,e){return Math.sqrt(h6(s,e))}function J4(s,e){if(e.canWrapX()){const t=e3(e.getExtent()),i=U7(s,e,t);i&&(s[0]-=i*t)}return s}function U7(s,e,t){const i=e.getExtent();let n=0;return e.canWrapX()&&(s[0]<i[0]||s[0]>i[2])&&(t=t||e3(i),n=Math.floor((s[0]-i[0])/t)),n}const Q4={radians:6370997/(2*Math.PI),degrees:2*Math.PI*6370997/360,ft:.3048,m:1,"us-ft":1200/3937};class v0{constructor(e){this.code_=e.code,this.units_=e.units,this.extent_=e.extent!==void 0?e.extent:null,this.worldExtent_=e.worldExtent!==void 0?e.worldExtent:null,this.axisOrientation_=e.axisOrientation!==void 0?e.axisOrientation:"enu",this.global_=e.global!==void 0?e.global:!1,this.canWrapX_=!!(this.global_&&this.extent_),this.getPointResolutionFunc_=e.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=e.metersPerUnit}canWrapX(){return this.canWrapX_}getCode(){return this.code_}getExtent(){return this.extent_}getUnits(){return this.units_}getMetersPerUnit(){return this.metersPerUnit_||Q4[this.units_]}getWorldExtent(){return this.worldExtent_}getAxisOrientation(){return this.axisOrientation_}isGlobal(){return this.global_}setGlobal(e){this.global_=e,this.canWrapX_=!!(e&&this.extent_)}getDefaultTileGrid(){return this.defaultTileGrid_}setDefaultTileGrid(e){this.defaultTileGrid_=e}setExtent(e){this.extent_=e,this.canWrapX_=!!(this.global_&&e)}setWorldExtent(e){this.worldExtent_=e}setGetPointResolution(e){this.getPointResolutionFunc_=e}getPointResolutionFunc(){return this.getPointResolutionFunc_}}const R5=6378137,R2=Math.PI*R5,j7=[-R2,-R2,R2,R2],q7=[-180,-85,180,85],K5=R5*Math.log(Math.tan(Math.PI/2));class d2 extends v0{constructor(e){super({code:e,units:"m",extent:j7,global:!0,worldExtent:q7,getPointResolution:function(t,i){return t/Math.cosh(i[1]/R5)}})}}const $9=[new d2("EPSG:3857"),new d2("EPSG:102100"),new d2("EPSG:102113"),new d2("EPSG:900913"),new d2("http://www.opengis.net/def/crs/EPSG/0/3857"),new d2("http://www.opengis.net/gml/srs/epsg.xml#3857")];function $7(s,e,t,i){const n=s.length;t=t>1?t:2,i=i??t,e===void 0&&(t>2?e=s.slice():e=new Array(n));for(let r=0;r<n;r+=i){e[r]=R2*s[r]/180;let o=R5*Math.log(Math.tan(Math.PI*(+s[r+1]+90)/360));o>K5?o=K5:o<-K5&&(o=-K5),e[r+1]=o}return e}function J7(s,e,t,i){const n=s.length;t=t>1?t:2,i=i??t,e===void 0&&(t>2?e=s.slice():e=new Array(n));for(let r=0;r<n;r+=i)e[r]=180*s[r]/R2,e[r+1]=360*Math.atan(Math.exp(s[r+1]/R5))/Math.PI-90;return e}const Q7=6378137,J9=[-180,-90,180,90],ee=Math.PI*Q7/180;class q1 extends v0{constructor(e,t){super({code:e,units:"degrees",extent:J9,axisOrientation:t,global:!0,metersPerUnit:ee,worldExtent:J9})}}const Q9=[new q1("CRS:84"),new q1("EPSG:4326","neu"),new q1("urn:ogc:def:crs:OGC:1.3:CRS84"),new q1("urn:ogc:def:crs:OGC:2:84"),new q1("http://www.opengis.net/def/crs/OGC/1.3/CRS84"),new q1("http://www.opengis.net/gml/srs/epsg.xml#4326","neu"),new q1("http://www.opengis.net/def/crs/EPSG/0/4326","neu")];let M4={};function te(s){return M4[s]||M4[s.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\w+)$/,"EPSG:$3")]||null}function ie(s,e){M4[s]=e}function I5(s){for(const e in s)delete s[e]}function r2(s){let e;for(e in s)return!1;return!e}let L2={};function f5(s,e,t){const i=s.getCode(),n=e.getCode();i in L2||(L2[i]={}),L2[i][n]=t}function J0(s,e){return s in L2&&e in L2[s]?L2[s][e]:null}const r0=.9996,W3=.00669438,A0=W3*W3,M0=A0*W3,Q1=W3/(1-W3),e8=Math.sqrt(1-W3),k2=(1-e8)/(1+e8),u6=k2*k2,e9=u6*k2,t9=e9*k2,d6=t9*k2,f6=1-W3/4-3*A0/64-5*M0/256,ne=3*W3/8+3*A0/32+45*M0/1024,se=15*A0/256+45*M0/1024,re=35*M0/3072,oe=3/2*k2-27/32*e9+269/512*d6,ae=21/16*u6-55/32*t9,le=151/96*e9-417/128*d6,he=1097/512*t9,o0=6378137;function ce(s,e,t){const i=s-5e5,o=(t.north?e:e-1e7)/r0/(o0*f6),a=o+oe*Math.sin(2*o)+ae*Math.sin(4*o)+le*Math.sin(6*o)+he*Math.sin(8*o),l=Math.sin(a),h=l*l,c=Math.cos(a),u=l/c,d=u*u,f=d*d,g=1-W3*h,_=Math.sqrt(1-W3*h),m=o0/_,p=(1-W3)/g,y=Q1*c**2,w=y*y,x=i/(m*r0),E=x*x,T=E*x,R=T*x,C=R*x,I=C*x,A=a-u/p*(E/2-R/24*(5+3*d+10*y-4*w-9*Q1))+I/720*(61+90*d+298*y+45*f-252*Q1-3*w);let k=(x-T/6*(1+2*d+y)+C/120*(5-2*y+28*d-3*w+8*Q1+24*f))/c;return k=A4(k+z1(g6(t.number)),-Math.PI,Math.PI),[q9(k),q9(A)]}const t8=-80,i8=84,ue=-180,de=180;function fe(s,e,t){s=A4(s,ue,de),e<t8?e=t8:e>i8&&(e=i8);const i=z1(e),n=Math.sin(i),r=Math.cos(i),o=n/r,a=o*o,l=a*a,h=z1(s),c=g6(t.number),u=z1(c),d=o0/Math.sqrt(1-W3*n**2),f=Q1*r**2,g=r*A4(h-u,-Math.PI,Math.PI),_=g*g,m=_*g,p=m*g,y=p*g,w=y*g,x=o0*(f6*i-ne*Math.sin(2*i)+se*Math.sin(4*i)-re*Math.sin(6*i)),E=r0*d*(g+m/6*(1-a+f)+y/120*(5-18*a+l+72*f-58*Q1))+5e5;let T=r0*(x+d*o*(_/2+p/24*(5-a+9*f+4*f**2)+w/720*(61-58*a+l+600*f-330*Q1)));return t.north||(T+=1e7),[E,T]}function g6(s){return(s-1)*6-180+3}const ge=[/^EPSG:(\d+)$/,/^urn:ogc:def:crs:EPSG::(\d+)$/,/^http:\/\/www\.opengis\.net\/def\/crs\/EPSG\/0\/(\d+)$/];function _6(s){let e=0;for(const n of ge){const r=s.match(n);if(r){e=parseInt(r[1]);break}}if(!e)return null;let t=0,i=!1;return e>32700&&e<32761?t=e-32700:e>32600&&e<32661&&(i=!0,t=e-32600),t?{number:t,north:i}:null}function n8(s,e){return function(t,i,n,r){const o=t.length;n=n>1?n:2,r=r??n,i||(n>2?i=t.slice():i=new Array(o));for(let a=0;a<o;a+=r){const l=t[a],h=t[a+1],c=s(l,h,e);i[a]=c[0],i[a+1]=c[1]}return i}}function _e(s){return _6(s)?new v0({code:s,units:"m"}):null}function me(s){const e=_6(s.getCode());return e?{forward:n8(fe,e),inverse:n8(ce,e)}:null}const pe=63710088e-1;function L4(s,e,t){t=t||pe;const i=z1(s[1]),n=z1(e[1]),r=(n-i)/2,o=z1(e[0]-s[0])/2,a=Math.sin(r)*Math.sin(r)+Math.sin(o)*Math.sin(o)*Math.cos(i)*Math.cos(n);return 2*t*Math.atan2(Math.sqrt(a),Math.sqrt(1-a))}const ye=[me],xe=[_e];let P4=!0;function m6(s){P4=!1}function i9(s,e){if(e!==void 0){for(let t=0,i=s.length;t<i;++t)e[t]=s[t];e=e}else e=s.slice();return e}function b4(s){ie(s.getCode(),s),f5(s,s,i9)}function Ee(s){s.forEach(b4)}function c3(s){if(typeof s!="string")return s;const e=te(s);if(e)return e;for(const t of xe){const i=t(s);if(i)return i}return null}function s8(s,e,t,i){s=c3(s);let n;const r=s.getPointResolutionFunc();if(r)n=r(e,t);else{const o=s.getUnits();if(o=="degrees"||i=="degrees")n=e;else{const a=P0(s,c3("EPSG:4326"));if(!a&&o!=="degrees")n=e*s.getMetersPerUnit();else{let h=[t[0]-e/2,t[1],t[0]+e/2,t[1],t[0],t[1]-e/2,t[0],t[1]+e/2];h=a(h,h,2);const c=L4(h.slice(0,2),h.slice(2,4)),u=L4(h.slice(4,6),h.slice(6,8));n=(c+u)/2}const l=s.getMetersPerUnit();l!==void 0&&(n/=l)}}return n}function r8(s){Ee(s),s.forEach(function(e){s.forEach(function(t){e!==t&&f5(e,t,i9)})})}function we(s,e,t,i){s.forEach(function(n){e.forEach(function(r){f5(n,r,t),f5(r,n,i)})})}function n9(s,e){return s?typeof s=="string"?c3(s):s:c3(e)}function Ce(s){return function(e,t,i,n){const r=e.length;i=i!==void 0?i:2,n=n??i,t=t!==void 0?t:new Array(r);for(let o=0;o<r;o+=n){const a=s(e.slice(o,o+i)),l=a.length;for(let h=0,c=n;h<c;++h)t[o+h]=h>=l?e[o+h]:a[h]}return t}}function L0(s,e){return m6(),b0(s,"EPSG:4326","EPSG:3857")}function n0(s,e){if(s===e)return!0;const t=s.getUnits()===e.getUnits();return(s.getCode()===e.getCode()||P0(s,e)===i9)&&t}function P0(s,e){const t=s.getCode(),i=e.getCode();let n=J0(t,i);if(n)return n;let r=null,o=null;for(const l of ye)r||(r=l(s)),o||(o=l(e));if(!r&&!o)return null;const a="EPSG:4326";if(o)if(r)n=Q0(r.inverse,o.forward);else{const l=J0(t,a);l&&(n=Q0(l,o.forward))}else{const l=J0(a,i);l&&(n=Q0(r.inverse,l))}return n&&(b4(s),b4(e),f5(s,e,n)),n}function Q0(s,e){return function(t,i,n,r){return i=s(t,i,n,r),e(i,i,n,r)}}function g5(s,e){const t=c3(s),i=c3(e);return P0(t,i)}function b0(s,e,t){const i=g5(e,t);if(!i){const n=c3(e).getCode(),r=c3(t).getCode();throw new Error(`No transform available between ${n} and ${r}`)}return i(s,void 0,s.length)}let Se=null;function Te(){return Se}function F4(s,e){return s}function V3(s,e){return P4&&!s0(s,[0,0])&&s[0]>=-180&&s[0]<=180&&s[1]>=-90&&s[1]<=90&&(P4=!1,t6("Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.")),s}function s9(s,e){return s}function D1(s,e){return s}function Re(){r8($9),r8(Q9),we(Q9,$9,$7,J7)}Re();const V={IDLE:0,LOADING:1,LOADED:2,ERROR:3},o8={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};var a8={red:0,orange:60,yellow:120,green:180,blue:240,purple:300};function Ie(s){var c,u;var e,t=[],i=1,n;if(typeof s=="number")return{space:"rgb",values:[s>>>16,(s&65280)>>>8,s&255],alpha:1};if(typeof s=="number")return{space:"rgb",values:[s>>>16,(s&65280)>>>8,s&255],alpha:1};if(s=String(s).toLowerCase(),o8[s])t=o8[s].slice(),n="rgb";else if(s==="transparent")i=0,n="rgb",t=[0,0,0];else if(s[0]==="#"){var r=s.slice(1),o=r.length,a=o<=4;i=1,a?(t=[parseInt(r[0]+r[0],16),parseInt(r[1]+r[1],16),parseInt(r[2]+r[2],16)],o===4&&(i=parseInt(r[3]+r[3],16)/255)):(t=[parseInt(r[0]+r[1],16),parseInt(r[2]+r[3],16),parseInt(r[4]+r[5],16)],o===8&&(i=parseInt(r[6]+r[7],16)/255)),t[0]||(t[0]=0),t[1]||(t[1]=0),t[2]||(t[2]=0),n="rgb"}else if(e=/^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\s*\(([^\)]*)\)/.exec(s)){var l=e[1];n=l.replace(/a$/,"");var h=n==="cmyk"?4:n==="gray"?1:3;t=e[2].trim().split(/\s*[,\/]\s*|\s+/),n==="color"&&(n=t.shift()),t=t.map(function(d,f){if(d[d.length-1]==="%")return d=parseFloat(d)/100,f===3?d:n==="rgb"?d*255:n[0]==="h"||n[0]==="l"&&!f?d*100:n==="lab"?d*125:n==="lch"?f<2?d*150:d*360:n[0]==="o"&&!f?d:n==="oklab"?d*.4:n==="oklch"?f<2?d*.4:d*360:d;if(n[f]==="h"||f===2&&n[n.length-1]==="h"){if(a8[d]!==void 0)return a8[d];if(d.endsWith("deg"))return parseFloat(d);if(d.endsWith("turn"))return parseFloat(d)*360;if(d.endsWith("grad"))return parseFloat(d)*360/400;if(d.endsWith("rad"))return parseFloat(d)*180/Math.PI}return d==="none"?0:parseFloat(d)}),i=t.length>h?t.pop():1}else/[0-9](?:\s|\/|,)/.test(s)&&(t=s.match(/([0-9]+)/g).map(function(d){return parseFloat(d)}),n=((u=(c=s.match(/([a-z])/ig))==null?void 0:c.join(""))==null?void 0:u.toLowerCase())||"rgb");return{space:n,values:t,alpha:i}}const _5={name:"rgb",min:[0,0,0],max:[255,255,255],channel:["red","green","blue"],alias:["RGB"]};var e4={name:"hsl",min:[0,0,0],max:[360,100,100],channel:["hue","saturation","lightness"],alias:["HSL"],rgb:function(s){var e=s[0]/360,t=s[1]/100,i=s[2]/100,n,r,o,a,l,h=0;if(t===0)return l=i*255,[l,l,l];for(r=i<.5?i*(1+t):i+t-i*t,n=2*i-r,a=[0,0,0];h<3;)o=e+1/3*-(h-1),o<0?o++:o>1&&o--,l=6*o<1?n+(r-n)*6*o:2*o<1?r:3*o<2?n+(r-n)*(2/3-o)*6:n,a[h++]=l*255;return a}};_5.hsl=function(s){var e=s[0]/255,t=s[1]/255,i=s[2]/255,n=Math.min(e,t,i),r=Math.max(e,t,i),o=r-n,a,l,h;return r===n?a=0:e===r?a=(t-i)/o:t===r?a=2+(i-e)/o:i===r&&(a=4+(e-t)/o),a=Math.min(a*60,360),a<0&&(a+=360),h=(n+r)/2,r===n?l=0:h<=.5?l=o/(r+n):l=o/(2-r-n),[a,l*100,h*100]};function ve(s){Array.isArray(s)&&s.raw&&(s=String.raw(...arguments)),s instanceof Number&&(s=+s);var e,t=Ie(s);if(!t.space)return[];const i=t.space[0]==="h"?e4.min:_5.min,n=t.space[0]==="h"?e4.max:_5.max;return e=Array(3),e[0]=Math.min(Math.max(t.values[0],i[0]),n[0]),e[1]=Math.min(Math.max(t.values[1],i[1]),n[1]),e[2]=Math.min(Math.max(t.values[2],i[2]),n[2]),t.space[0]==="h"&&(e=e4.rgb(e)),e.push(Math.min(Math.max(t.alpha,0),1)),e}const p3={name:"xyz",min:[0,0,0],channel:["X","Y","Z"],alias:["XYZ","ciexyz","cie1931"],whitepoint:{2:{A:[109.85,100,35.585],C:[98.074,100,118.232],D50:[96.422,100,82.521],D55:[95.682,100,92.149],D65:[95.045592705167,100,108.9057750759878],D75:[94.972,100,122.638],F2:[99.187,100,67.395],F7:[95.044,100,108.755],F11:[100.966,100,64.37],E:[100,100,100]},10:{A:[111.144,100,35.2],C:[97.285,100,116.145],D50:[96.72,100,81.427],D55:[95.799,100,90.926],D65:[94.811,100,107.304],D75:[94.416,100,120.641],F2:[103.28,100,69.026],F7:[95.792,100,107.687],F11:[103.866,100,65.627],E:[100,100,100]}}};p3.max=p3.whitepoint[2].D65;p3.rgb=function(s,e){e=e||p3.whitepoint[2].E;var t=s[0]/e[0],i=s[1]/e[1],n=s[2]/e[2],r,o,a;return r=t*3.240969941904521+i*-1.537383177570093+n*-.498610760293,o=t*-.96924363628087+i*1.87596750150772+n*.041555057407175,a=t*.055630079696993+i*-.20397695888897+n*1.056971514242878,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:r=r*12.92,o=o>.0031308?1.055*Math.pow(o,1/2.4)-.055:o=o*12.92,a=a>.0031308?1.055*Math.pow(a,1/2.4)-.055:a=a*12.92,r=Math.min(Math.max(0,r),1),o=Math.min(Math.max(0,o),1),a=Math.min(Math.max(0,a),1),[r*255,o*255,a*255]};_5.xyz=function(s,e){var t=s[0]/255,i=s[1]/255,n=s[2]/255;t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92,i=i>.04045?Math.pow((i+.055)/1.055,2.4):i/12.92,n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92;var r=t*.41239079926595+i*.35758433938387+n*.18048078840183,o=t*.21263900587151+i*.71516867876775+n*.072192315360733,a=t*.019330818715591+i*.11919477979462+n*.95053215224966;return e=e||p3.whitepoint[2].E,[r*e[0],o*e[1],a*e[2]]};var r9={name:"luv",min:[0,-134,-140],max:[100,224,122],channel:["lightness","u","v"],alias:["LUV","cieluv","cie1976"],xyz:function(s,e,t){var i,n,r,o,a,l,h,c,u,d,f,g,_;if(r=s[0],o=s[1],a=s[2],r===0)return[0,0,0];var m=.0011070564598794539;return e=e||"D65",t=t||2,u=p3.whitepoint[t][e][0],d=p3.whitepoint[t][e][1],f=p3.whitepoint[t][e][2],g=4*u/(u+15*d+3*f),_=9*d/(u+15*d+3*f),i=o/(13*r)+g||0,n=a/(13*r)+_||0,h=r>8?d*Math.pow((r+16)/116,3):d*r*m,l=h*9*i/(4*n)||0,c=h*(12-3*i-20*n)/(4*n)||0,[l,h,c]}};p3.luv=function(s,e,t){var i,n,r,o,a,l,h,c,u,d,f,g,_,m=.008856451679035631,p=903.2962962962961;e=e||"D65",t=t||2,u=p3.whitepoint[t][e][0],d=p3.whitepoint[t][e][1],f=p3.whitepoint[t][e][2],g=4*u/(u+15*d+3*f),_=9*d/(u+15*d+3*f),l=s[0],h=s[1],c=s[2],i=4*l/(l+15*h+3*c)||0,n=9*h/(l+15*h+3*c)||0;var y=h/d;return r=y<=m?p*y:116*Math.pow(y,1/3)-16,o=13*r*(i-g),a=13*r*(n-_),[r,o,a]};var p6={name:"lchuv",channel:["lightness","chroma","hue"],alias:["LCHuv","cielchuv"],min:[0,0,0],max:[100,100,360],luv:function(s){var e=s[0],t=s[1],i=s[2],n,r,o;return o=i/360*2*Math.PI,n=t*Math.cos(o),r=t*Math.sin(o),[e,n,r]},xyz:function(s){return r9.xyz(p6.luv(s))}};r9.lchuv=function(s){var e=s[0],t=s[1],i=s[2],n=Math.sqrt(t*t+i*i),r=Math.atan2(i,t),o=r*360/2/Math.PI;return o<0&&(o+=360),[e,n,o]};p3.lchuv=function(s){return r9.lchuv(p3.luv(s))};const o9=[NaN,NaN,NaN,0];function Ae(s){return typeof s=="string"?s:l9(s)}const Me=1024,e5={};let t4=0;function Le(s){if(s.length===4)return s;const e=s.slice();return e[3]=1,e}function l8(s){const e=p3.lchuv(_5.xyz(s));return e[3]=s[3],e}function Pe(s){const e=p3.rgb(p6.xyz(s));return e[3]=s[3],e}function a9(s){if(s==="none")return o9;if(e5.hasOwnProperty(s))return e5[s];if(t4>=Me){let t=0;for(const i in e5)(t++&3)===0&&(delete e5[i],--t4)}const e=ve(s);if(e.length!==4)throw new Error('failed to parse "'+s+'" as color');for(const t of e)if(isNaN(t))throw new Error('failed to parse "'+s+'" as color');return y6(e),e5[s]=e,++t4,e}function O2(s){return Array.isArray(s)?s:a9(s)}function y6(s){return s[0]=o3(s[0]+.5|0,0,255),s[1]=o3(s[1]+.5|0,0,255),s[2]=o3(s[2]+.5|0,0,255),s[3]=o3(s[3],0,1),s}function l9(s){let e=s[0];e!=(e|0)&&(e=e+.5|0);let t=s[1];t!=(t|0)&&(t=t+.5|0);let i=s[2];i!=(i|0)&&(i=i+.5|0);const n=s[3]===void 0?1:Math.round(s[3]*1e3)/1e3;return"rgba("+e+","+t+","+i+","+n+")"}const K1=typeof navigator<"u"&&typeof navigator.userAgent<"u"?navigator.userAgent.toLowerCase():"",be=K1.includes("firefox"),Fe=K1.includes("safari")&&!K1.includes("chrom");Fe&&(K1.includes("version/15.4")||/cpu (os|iphone os) 15_4 like mac os x/.test(K1));const De=K1.includes("webkit")&&!K1.includes("edge"),x6=K1.includes("macintosh"),E6=typeof devicePixelRatio<"u"?devicePixelRatio:1,w6=typeof WorkerGlobalScope<"u"&&typeof OffscreenCanvas<"u"&&self instanceof WorkerGlobalScope,C6=typeof Image<"u"&&Image.prototype.decode,S6=function(){let s=!1;try{const e=Object.defineProperty({},"passive",{get:function(){s=!0}});window.addEventListener("_",null,e),window.removeEventListener("_",null,e)}catch{}return s}();function h3(s,e,t,i){let n;return t&&t.length?n=t.shift():w6?n=new OffscreenCanvas(s||300,e||300):n=document.createElement("canvas"),s&&(n.width=s),e&&(n.height=e),n.getContext("2d",i)}let i4;function a0(){return i4||(i4=h3(1,1)),i4}function v5(s){const e=s.canvas;e.width=1,e.height=1,s.clearRect(0,0,1,1)}function h8(s,e){const t=e.parentNode;t&&t.replaceChild(s,e)}function ke(s){for(;s.lastChild;)s.lastChild.remove()}function Oe(s,e){const t=s.childNodes;for(let i=0;;++i){const n=t[i],r=e[i];if(!n&&!r)break;if(n!==r){if(!n){s.appendChild(r);continue}if(!r){s.removeChild(n),--i;continue}s.insertBefore(r,n)}}}const z={CHANGE:"change",ERROR:"error",CONTEXTMENU:"contextmenu",CLICK:"click",DBLCLICK:"dblclick",KEYDOWN:"keydown",KEYPRESS:"keypress",LOAD:"load",TOUCHMOVE:"touchmove",WHEEL:"wheel"};class F0{constructor(){this.disposed=!1}dispose(){this.disposed||(this.disposed=!0,this.disposeInternal())}disposeInternal(){}}function Ge(s,e,t){let i,n;t=t||e1;let r=0,o=s.length,a=!1;for(;r<o;)i=r+(o-r>>1),n=+t(s[i],e),n<0?r=i+1:(o=i,a=!n);return a?r:~r}function e1(s,e){return s>e?1:s<e?-1:0}function Ne(s,e){return s<e?1:s>e?-1:0}function h9(s,e,t){if(s[0]<=e)return 0;const i=s.length;if(e<=s[i-1])return i-1;if(typeof t=="function"){for(let n=1;n<i;++n){const r=s[n];if(r===e)return n;if(r<e)return t(e,s[n-1],r)>0?n-1:n}return i-1}if(t>0){for(let n=1;n<i;++n)if(s[n]<e)return n-1;return i-1}if(t<0){for(let n=1;n<i;++n)if(s[n]<=e)return n;return i-1}for(let n=1;n<i;++n){if(s[n]==e)return n;if(s[n]<e)return s[n-1]-e<e-s[n]?n-1:n}return i-1}function ze(s,e,t){for(;e<t;){const i=s[e];s[e]=s[t],s[t]=i,++e,--t}}function t1(s,e){const t=Array.isArray(e)?e:[e],i=t.length;for(let n=0;n<i;n++)s[s.length]=t[n]}function V1(s,e){const t=s.length;if(t!==e.length)return!1;for(let i=0;i<t;i++)if(s[i]!==e[i])return!1;return!0}function We(s,e,t){const i=e||e1;return s.every(function(n,r){if(r===0)return!0;const o=i(s[r-1],n);return!(o>0||o===0)})}function G2(){return!0}function Y2(){return!1}function N2(){}function T6(s){let e,t,i;return function(){const n=Array.prototype.slice.call(arguments);return(!t||this!==i||!V1(n,t))&&(i=this,t=n,e=s.apply(this,arguments)),e}}function Be(s){function e(){let t;try{t=s()}catch(i){return Promise.reject(i)}return t instanceof Promise?t:Promise.resolve(t)}return e()}class r1{constructor(e){this.propagationStopped,this.defaultPrevented,this.type=e,this.target=null}preventDefault(){this.defaultPrevented=!0}stopPropagation(){this.propagationStopped=!0}}class D0 extends F0{constructor(e){super(),this.eventTarget_=e,this.pendingRemovals_=null,this.dispatching_=null,this.listeners_=null}addEventListener(e,t){if(!e||!t)return;const i=this.listeners_||(this.listeners_={}),n=i[e]||(i[e]=[]);n.includes(t)||n.push(t)}dispatchEvent(e){const t=typeof e=="string",i=t?e:e.type,n=this.listeners_&&this.listeners_[i];if(!n)return;const r=t?new r1(e):e;r.target||(r.target=this.eventTarget_||this);const o=this.dispatching_||(this.dispatching_={}),a=this.pendingRemovals_||(this.pendingRemovals_={});i in o||(o[i]=0,a[i]=0),++o[i];let l;for(let h=0,c=n.length;h<c;++h)if("handleEvent"in n[h]?l=n[h].handleEvent(r):l=n[h].call(this,r),l===!1||r.propagationStopped){l=!1;break}if(--o[i]===0){let h=a[i];for(delete a[i];h--;)this.removeEventListener(i,N2);delete o[i]}return l}disposeInternal(){this.listeners_&&I5(this.listeners_)}getListeners(e){return this.listeners_&&this.listeners_[e]||void 0}hasListener(e){return this.listeners_?e?e in this.listeners_:Object.keys(this.listeners_).length>0:!1}removeEventListener(e,t){if(!this.listeners_)return;const i=this.listeners_[e];if(!i)return;const n=i.indexOf(t);n!==-1&&(this.pendingRemovals_&&e in this.pendingRemovals_?(i[n]=N2,++this.pendingRemovals_[e]):(i.splice(n,1),i.length===0&&delete this.listeners_[e]))}}function j(s,e,t,i,n){if(n){const o=t;t=function(a){return s.removeEventListener(e,t),o.call(i??this,a)}}else i&&i!==s&&(t=t.bind(i));const r={target:s,type:e,listener:t};return s.addEventListener(e,t),r}function l0(s,e,t,i){return j(s,e,t,i,!0)}function t3(s){s&&s.target&&(s.target.removeEventListener(s.type,s.listener),I5(s))}function Ke(s,e,t){const i=s;let n=!0,r=!1,o=!1;const a=[l0(i,z.LOAD,function(){o=!0,r||e()})];return i.src&&C6?(r=!0,i.decode().then(function(){n&&e()}).catch(function(l){n&&(o?e():t())})):a.push(l0(i,z.ERROR,t)),function(){n=!1,a.forEach(t3)}}function Xe(s,e){return new Promise((t,i)=>{function n(){o(),t(s)}function r(){o(),i(new Error("Image load error"))}function o(){s.removeEventListener("load",n),s.removeEventListener("error",r)}s.addEventListener("load",n),s.addEventListener("error",r)})}function Ve(s,e){return e&&(s.src=e),s.src&&C6?new Promise((t,i)=>s.decode().then(()=>t(s)).catch(n=>s.complete&&s.width?t(s):i(n))):Xe(s)}class Ye{constructor(){this.cache_={},this.patternCache_={},this.cacheSize_=0,this.maxCacheSize_=1024}clear(){this.cache_={},this.patternCache_={},this.cacheSize_=0}canExpireCache(){return this.cacheSize_>this.maxCacheSize_}expire(){if(this.canExpireCache()){let e=0;for(const t in this.cache_){const i=this.cache_[t];(e++&3)===0&&!i.hasListener()&&(delete this.cache_[t],delete this.patternCache_[t],--this.cacheSize_)}}}get(e,t,i){const n=n4(e,t,i);return n in this.cache_?this.cache_[n]:null}getPattern(e,t,i){const n=n4(e,t,i);return n in this.patternCache_?this.patternCache_[n]:null}set(e,t,i,n,r){const o=n4(e,t,i),a=o in this.cache_;this.cache_[o]=n,r&&(n.getImageState()===V.IDLE&&n.load(),n.getImageState()===V.LOADING?n.ready().then(()=>{this.patternCache_[o]=a0().createPattern(n.getImage(1),"repeat")}):this.patternCache_[o]=a0().createPattern(n.getImage(1),"repeat")),a||++this.cacheSize_}setSize(e){this.maxCacheSize_=e,this.expire()}}function n4(s,e,t){const i=t?O2(t):"null";return e+":"+s+":"+i}const N3=new Ye;let t5=null;class R6 extends D0{constructor(e,t,i,n,r){super(),this.hitDetectionImage_=null,this.image_=e,this.crossOrigin_=i,this.canvas_={},this.color_=r,this.imageState_=n===void 0?V.IDLE:n,this.size_=e&&e.width&&e.height?[e.width,e.height]:null,this.src_=t,this.tainted_,this.ready_=null}initializeImage_(){this.image_=new Image,this.crossOrigin_!==null&&(this.image_.crossOrigin=this.crossOrigin_)}isTainted_(){if(this.tainted_===void 0&&this.imageState_===V.LOADED){t5||(t5=h3(1,1,void 0,{willReadFrequently:!0})),t5.drawImage(this.image_,0,0);try{t5.getImageData(0,0,1,1),this.tainted_=!1}catch{t5=null,this.tainted_=!0}}return this.tainted_===!0}dispatchChangeEvent_(){this.dispatchEvent(z.CHANGE)}handleImageError_(){this.imageState_=V.ERROR,this.dispatchChangeEvent_()}handleImageLoad_(){this.imageState_=V.LOADED,this.size_=[this.image_.width,this.image_.height],this.dispatchChangeEvent_()}getImage(e){return this.image_||this.initializeImage_(),this.replaceColor_(e),this.canvas_[e]?this.canvas_[e]:this.image_}getPixelRatio(e){return this.replaceColor_(e),this.canvas_[e]?e:1}getImageState(){return this.imageState_}getHitDetectionImage(){if(this.image_||this.initializeImage_(),!this.hitDetectionImage_)if(this.isTainted_()){const e=this.size_[0],t=this.size_[1],i=h3(e,t);i.fillRect(0,0,e,t),this.hitDetectionImage_=i.canvas}else this.hitDetectionImage_=this.image_;return this.hitDetectionImage_}getSize(){return this.size_}getSrc(){return this.src_}load(){if(this.imageState_===V.IDLE){this.image_||this.initializeImage_(),this.imageState_=V.LOADING;try{this.src_!==void 0&&(this.image_.src=this.src_)}catch{this.handleImageError_()}this.image_ instanceof HTMLImageElement&&Ve(this.image_,this.src_).then(e=>{this.image_=e,this.handleImageLoad_()}).catch(this.handleImageError_.bind(this))}}replaceColor_(e){if(!this.color_||this.canvas_[e]||this.imageState_!==V.LOADED)return;const t=this.image_,i=h3(Math.ceil(t.width*e),Math.ceil(t.height*e)),n=i.canvas;i.scale(e,e),i.drawImage(t,0,0),i.globalCompositeOperation="multiply",i.fillStyle=Ae(this.color_),i.fillRect(0,0,n.width/e,n.height/e),i.globalCompositeOperation="destination-in",i.drawImage(t,0,0),this.canvas_[e]=n}ready(){return this.ready_||(this.ready_=new Promise(e=>{if(this.imageState_===V.LOADED||this.imageState_===V.ERROR)e();else{const t=()=>{(this.imageState_===V.LOADED||this.imageState_===V.ERROR)&&(this.removeEventListener(z.CHANGE,t),e())};this.addEventListener(z.CHANGE,t)}})),this.ready_}}function c9(s,e,t,i,n,r){let o=e===void 0?void 0:N3.get(e,t,n);return o||(o=new R6(s,s&&"src"in s?s.src||void 0:e,t,i,n),N3.set(e,t,n,o,r)),r&&o&&!N3.getPattern(e,t,n)&&N3.set(e,t,n,o,r),o}function J3(s){return s?Array.isArray(s)?l9(s):typeof s=="object"&&"src"in s?Ze(s):s:null}function Ze(s){if(!s.offset||!s.size)return N3.getPattern(s.src,"anonymous",s.color);const e=s.src+":"+s.offset,t=N3.getPattern(e,void 0,s.color);if(t)return t;const i=N3.get(s.src,"anonymous",null);if(i.getImageState()!==V.LOADED)return null;const n=h3(s.size[0],s.size[1]);return n.drawImage(i.getImage(1),s.offset[0],s.offset[1],s.size[0],s.size[1],0,0,s.size[0],s.size[1]),c9(n.canvas,e,void 0,V.LOADED,s.color,!0),N3.getPattern(e,void 0,s.color)}const z2={PROPERTYCHANGE:"propertychange"};class A5 extends D0{constructor(){super(),this.on=this.onInternal,this.once=this.onceInternal,this.un=this.unInternal,this.revision_=0}changed(){++this.revision_,this.dispatchEvent(z.CHANGE)}getRevision(){return this.revision_}onInternal(e,t){if(Array.isArray(e)){const i=e.length,n=new Array(i);for(let r=0;r<i;++r)n[r]=j(this,e[r],t);return n}return j(this,e,t)}onceInternal(e,t){let i;if(Array.isArray(e)){const n=e.length;i=new Array(n);for(let r=0;r<n;++r)i[r]=l0(this,e[r],t)}else i=l0(this,e,t);return t.ol_key=i,i}unInternal(e,t){const i=t.ol_key;if(i)He(i);else if(Array.isArray(e))for(let n=0,r=e.length;n<r;++n)this.removeEventListener(e[n],t);else this.removeEventListener(e,t)}}A5.prototype.on;A5.prototype.once;A5.prototype.un;function He(s){if(Array.isArray(s))for(let e=0,t=s.length;e<t;++e)t3(s[e]);else t3(s)}function Y(){throw new Error("Unimplemented abstract method.")}let Ue=0;function Z(s){return s.ol_uid||(s.ol_uid=String(++Ue))}class c8 extends r1{constructor(e,t,i){super(e),this.key=t,this.oldValue=i}}class o1 extends A5{constructor(e){super(),this.on,this.once,this.un,Z(this),this.values_=null,e!==void 0&&this.setProperties(e)}get(e){let t;return this.values_&&this.values_.hasOwnProperty(e)&&(t=this.values_[e]),t}getKeys(){return this.values_&&Object.keys(this.values_)||[]}getProperties(){return this.values_&&Object.assign({},this.values_)||{}}getPropertiesInternal(){return this.values_}hasProperties(){return!!this.values_}notify(e,t){let i;i=`change:${e}`,this.hasListener(i)&&this.dispatchEvent(new c8(i,e,t)),i=z2.PROPERTYCHANGE,this.hasListener(i)&&this.dispatchEvent(new c8(i,e,t))}addChangeListener(e,t){this.addEventListener(`change:${e}`,t)}removeChangeListener(e,t){this.removeEventListener(`change:${e}`,t)}set(e,t,i){const n=this.values_||(this.values_={});if(i)n[e]=t;else{const r=n[e];n[e]=t,r!==t&&this.notify(e,r)}}setProperties(e,t){for(const i in e)this.set(i,e[i],t)}applyProperties(e){e.values_&&Object.assign(this.values_||(this.values_={}),e.values_)}unset(e,t){if(this.values_&&e in this.values_){const i=this.values_[e];delete this.values_[e],r2(this.values_)&&(this.values_=null),t||this.notify(e,i)}}}const X5="ol-hidden",k0="ol-unselectable",u9="ol-control",u8="ol-collapsed",je=new RegExp(["^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)","(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)","(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)","(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?","(?:small|large)|medium|smaller|larger|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))","(?:\\s*\\/\\s*(normal|[\\.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])?))",`?\\s*([-,\\"\\'\\sa-z]+?)\\s*$`].join(""),"i"),d8=["style","variant","weight","size","lineHeight","family"],I6=function(s){const e=s.match(je);if(!e)return null;const t={lineHeight:"normal",size:"1.2em",style:"normal",weight:"normal",variant:"normal"};for(let i=0,n=d8.length;i<n;++i){const r=e[i+1];r!==void 0&&(t[d8[i]]=r)}return t.families=t.family.split(/,\s?/),t},v6="10px sans-serif",R3="#000",W2="round",x1=[],E1=0,B2="round",m5=10,p5="#000",y5="center",h0="middle",e2=[0,0,0,0],x5=1,f1=new o1;let E2=null,D4;const k4={},qe=function(){const e="32px ",t=["monospace","serif"],i=t.length,n="wmytzilWMYTZIL@#/&?$%10";let r,o;function a(h,c,u){let d=!0;for(let f=0;f<i;++f){const g=t[f];if(o=c0(h+" "+c+" "+e+g,n),u!=g){const _=c0(h+" "+c+" "+e+u+","+g,n);d=d&&_!=o}}return!!d}function l(){let h=!0;const c=f1.getKeys();for(let u=0,d=c.length;u<d;++u){const f=c[u];if(f1.get(f)<100){const[g,_,m]=f.split(`
`);a(g,_,m)?(I5(k4),E2=null,D4=void 0,f1.set(f,100)):(f1.set(f,f1.get(f)+1,!0),h=!1)}}h&&(clearInterval(r),r=void 0)}return function(h){const c=I6(h);if(!c)return;const u=c.families;for(let d=0,f=u.length;d<f;++d){const g=u[d],_=c.style+`
`+c.weight+`
`+g;f1.get(_)===void 0&&(f1.set(_,100,!0),a(c.style,c.weight,g)||(f1.set(_,0,!0),r===void 0&&(r=setInterval(l,32))))}}}(),$e=function(){let s;return function(e){let t=k4[e];if(t==null){if(w6){const i=I6(e),n=A6(e,"Žg");t=(isNaN(Number(i.lineHeight))?1.2:Number(i.lineHeight))*(n.actualBoundingBoxAscent+n.actualBoundingBoxDescent)}else s||(s=document.createElement("div"),s.innerHTML="M",s.style.minHeight="0",s.style.maxHeight="none",s.style.height="auto",s.style.padding="0",s.style.border="none",s.style.position="absolute",s.style.display="block",s.style.left="-99999px"),s.style.font=e,document.body.appendChild(s),t=s.offsetHeight,document.body.removeChild(s);k4[e]=t}return t}}();function A6(s,e){return E2||(E2=h3(1,1)),s!=D4&&(E2.font=s,D4=E2.font),E2.measureText(e)}function c0(s,e){return A6(s,e).width}function f8(s,e,t){if(e in t)return t[e];const i=e.split(`
`).reduce((n,r)=>Math.max(n,c0(s,r)),0);return t[e]=i,i}function Je(s,e){const t=[],i=[],n=[];let r=0,o=0,a=0,l=0;for(let h=0,c=e.length;h<=c;h+=2){const u=e[h];if(u===`
`||h===c){r=Math.max(r,o),n.push(o),o=0,a+=l,l=0;continue}const d=e[h+1]||s.font,f=c0(d,u);t.push(f),o+=f;const g=$e(d);i.push(g),l=Math.max(l,g)}return{width:r,height:a,widths:t,heights:i,lineWidths:n}}function Qe(s,e,t,i,n,r,o,a,l,h,c){s.save(),t!==1&&(s.globalAlpha===void 0?s.globalAlpha=u=>u.globalAlpha*=t:s.globalAlpha*=t),e&&s.transform.apply(s,e),i.contextInstructions?(s.translate(l,h),s.scale(c[0],c[1]),et(i,s)):c[0]<0||c[1]<0?(s.translate(l,h),s.scale(c[0],c[1]),s.drawImage(i,n,r,o,a,0,0,o,a)):s.drawImage(i,n,r,o,a,l,h,o*c[0],a*c[1]),s.restore()}function et(s,e){const t=s.contextInstructions;for(let i=0,n=t.length;i<n;i+=2)Array.isArray(t[i+1])?e[t[i]].apply(e,t[i+1]):e[t[i]]=t[i+1]}function g8(s){return s[0]>0&&s[1]>0}function tt(s,e,t){return t===void 0&&(t=[0,0]),t[0]=s[0]*e+.5|0,t[1]=s[1]*e+.5|0,t}function y3(s,e){return Array.isArray(s)?s:(e===void 0?e=[s,s]:(e[0]=s,e[1]=s),e)}class O0{constructor(e){this.opacity_=e.opacity,this.rotateWithView_=e.rotateWithView,this.rotation_=e.rotation,this.scale_=e.scale,this.scaleArray_=y3(e.scale),this.displacement_=e.displacement,this.declutterMode_=e.declutterMode}clone(){const e=this.getScale();return new O0({opacity:this.getOpacity(),scale:Array.isArray(e)?e.slice():e,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()})}getOpacity(){return this.opacity_}getRotateWithView(){return this.rotateWithView_}getRotation(){return this.rotation_}getScale(){return this.scale_}getScaleArray(){return this.scaleArray_}getDisplacement(){return this.displacement_}getDeclutterMode(){return this.declutterMode_}getAnchor(){return Y()}getImage(e){return Y()}getHitDetectionImage(){return Y()}getPixelRatio(e){return 1}getImageState(){return Y()}getImageSize(){return Y()}getOrigin(){return Y()}getSize(){return Y()}setDisplacement(e){this.displacement_=e}setOpacity(e){this.opacity_=e}setRotateWithView(e){this.rotateWithView_=e}setRotation(e){this.rotation_=e}setScale(e){this.scale_=e,this.scaleArray_=y3(e)}listenImageChange(e){Y()}load(){Y()}unlistenImageChange(e){Y()}ready(){return Promise.resolve()}}class G0 extends O0{constructor(e){super({opacity:1,rotateWithView:e.rotateWithView!==void 0?e.rotateWithView:!1,rotation:e.rotation!==void 0?e.rotation:0,scale:e.scale!==void 0?e.scale:1,displacement:e.displacement!==void 0?e.displacement:[0,0],declutterMode:e.declutterMode}),this.hitDetectionCanvas_=null,this.fill_=e.fill!==void 0?e.fill:null,this.origin_=[0,0],this.points_=e.points,this.radius=e.radius,this.radius2_=e.radius2,this.angle_=e.angle!==void 0?e.angle:0,this.stroke_=e.stroke!==void 0?e.stroke:null,this.size_,this.renderOptions_,this.imageState_=this.fill_&&this.fill_.loading()?V.LOADING:V.LOADED,this.imageState_===V.LOADING&&this.ready().then(()=>this.imageState_=V.LOADED),this.render()}clone(){const e=this.getScale(),t=new G0({fill:this.getFill()?this.getFill().clone():void 0,points:this.getPoints(),radius:this.getRadius(),radius2:this.getRadius2(),angle:this.getAngle(),stroke:this.getStroke()?this.getStroke().clone():void 0,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),scale:Array.isArray(e)?e.slice():e,displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()});return t.setOpacity(this.getOpacity()),t}getAnchor(){const e=this.size_,t=this.getDisplacement(),i=this.getScaleArray();return[e[0]/2-t[0]/i[0],e[1]/2+t[1]/i[1]]}getAngle(){return this.angle_}getFill(){return this.fill_}setFill(e){this.fill_=e,this.render()}getHitDetectionImage(){return this.hitDetectionCanvas_||(this.hitDetectionCanvas_=this.createHitDetectionCanvas_(this.renderOptions_)),this.hitDetectionCanvas_}getImage(e){var r,o;const t=(r=this.fill_)==null?void 0:r.getKey(),i=`${e},${this.angle_},${this.radius},${this.radius2_},${this.points_},${t}`+Object.values(this.renderOptions_).join(",");let n=(o=N3.get(i,null,null))==null?void 0:o.getImage(1);if(!n){const a=this.renderOptions_,l=Math.ceil(a.size*e),h=h3(l,l);this.draw_(a,h,e),n=h.canvas,N3.set(i,null,null,new R6(n,void 0,null,V.LOADED,null))}return n}getPixelRatio(e){return e}getImageSize(){return this.size_}getImageState(){return this.imageState_}getOrigin(){return this.origin_}getPoints(){return this.points_}getRadius(){return this.radius}getRadius2(){return this.radius2_}getSize(){return this.size_}getStroke(){return this.stroke_}setStroke(e){this.stroke_=e,this.render()}listenImageChange(e){}load(){}unlistenImageChange(e){}calculateLineJoinSize_(e,t,i){if(t===0||this.points_===1/0||e!=="bevel"&&e!=="miter")return t;let n=this.radius,r=this.radius2_===void 0?n:this.radius2_;if(n<r){const T=n;n=r,r=T}const o=this.radius2_===void 0?this.points_:this.points_*2,a=2*Math.PI/o,l=r*Math.sin(a),h=Math.sqrt(r*r-l*l),c=n-h,u=Math.sqrt(l*l+c*c),d=u/l;if(e==="miter"&&d<=i)return d*t;const f=t/2/d,g=t/2*(c/u),m=Math.sqrt((n+f)*(n+f)+g*g)-n;if(this.radius2_===void 0||e==="bevel")return m*2;const p=n*Math.sin(a),y=Math.sqrt(n*n-p*p),w=r-y,E=Math.sqrt(p*p+w*w)/p;if(E<=i){const T=E*t/2-r-n;return 2*Math.max(m,T)}return m*2}createRenderOptions(){let e=W2,t=B2,i=0,n=null,r=0,o,a=0;this.stroke_&&(o=J3(this.stroke_.getColor()??p5),a=this.stroke_.getWidth()??x5,n=this.stroke_.getLineDash(),r=this.stroke_.getLineDashOffset()??0,t=this.stroke_.getLineJoin()??B2,e=this.stroke_.getLineCap()??W2,i=this.stroke_.getMiterLimit()??m5);const l=this.calculateLineJoinSize_(t,a,i),h=Math.max(this.radius,this.radius2_||0),c=Math.ceil(2*h+l);return{strokeStyle:o,strokeWidth:a,size:c,lineCap:e,lineDash:n,lineDashOffset:r,lineJoin:t,miterLimit:i}}render(){this.renderOptions_=this.createRenderOptions();const e=this.renderOptions_.size;this.hitDetectionCanvas_=null,this.size_=[e,e]}draw_(e,t,i){if(t.scale(i,i),t.translate(e.size/2,e.size/2),this.createPath_(t),this.fill_){let n=this.fill_.getColor();n===null&&(n=R3),t.fillStyle=J3(n),t.fill()}e.strokeStyle&&(t.strokeStyle=e.strokeStyle,t.lineWidth=e.strokeWidth,e.lineDash&&(t.setLineDash(e.lineDash),t.lineDashOffset=e.lineDashOffset),t.lineCap=e.lineCap,t.lineJoin=e.lineJoin,t.miterLimit=e.miterLimit,t.stroke())}createHitDetectionCanvas_(e){let t;if(this.fill_){let i=this.fill_.getColor(),n=0;typeof i=="string"&&(i=O2(i)),i===null?n=1:Array.isArray(i)&&(n=i.length===4?i[3]:1),n===0&&(t=h3(e.size,e.size),this.drawHitDetectionCanvas_(e,t))}return t?t.canvas:this.getImage(1)}createPath_(e){let t=this.points_;const i=this.radius;if(t===1/0)e.arc(0,0,i,0,2*Math.PI);else{const n=this.radius2_===void 0?i:this.radius2_;this.radius2_!==void 0&&(t*=2);const r=this.angle_-Math.PI/2,o=2*Math.PI/t;for(let a=0;a<t;a++){const l=r+a*o,h=a%2===0?i:n;e.lineTo(h*Math.cos(l),h*Math.sin(l))}e.closePath()}}drawHitDetectionCanvas_(e,t){t.translate(e.size/2,e.size/2),this.createPath_(t),t.fillStyle=R3,t.fill(),e.strokeStyle&&(t.strokeStyle=e.strokeStyle,t.lineWidth=e.strokeWidth,e.lineDash&&(t.setLineDash(e.lineDash),t.lineDashOffset=e.lineDashOffset),t.lineJoin=e.lineJoin,t.miterLimit=e.miterLimit,t.stroke())}ready(){return this.fill_?this.fill_.ready():Promise.resolve()}}class l2 extends G0{constructor(e){e=e||{radius:5},super({points:1/0,fill:e.fill,radius:e.radius,stroke:e.stroke,scale:e.scale!==void 0?e.scale:1,rotation:e.rotation!==void 0?e.rotation:0,rotateWithView:e.rotateWithView!==void 0?e.rotateWithView:!1,displacement:e.displacement!==void 0?e.displacement:[0,0],declutterMode:e.declutterMode})}clone(){const e=this.getScale(),t=new l2({fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,radius:this.getRadius(),scale:Array.isArray(e)?e.slice():e,rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()});return t.setOpacity(this.getOpacity()),t}setRadius(e){this.radius=e,this.render()}}class S1{constructor(e){e=e||{},this.patternImage_=null,this.color_=null,e.color!==void 0&&this.setColor(e.color)}clone(){const e=this.getColor();return new S1({color:Array.isArray(e)?e.slice():e||void 0})}getColor(){return this.color_}setColor(e){if(e!==null&&typeof e=="object"&&"src"in e){const t=c9(null,e.src,"anonymous",void 0,e.offset?null:e.color?e.color:null,!(e.offset&&e.size));t.ready().then(()=>{this.patternImage_=null}),t.getImageState()===V.IDLE&&t.load(),t.getImageState()===V.LOADING&&(this.patternImage_=t)}this.color_=e}getKey(){const e=this.getColor();return e?e instanceof CanvasPattern||e instanceof CanvasGradient?Z(e):typeof e=="object"&&"src"in e?e.src+":"+e.offset:O2(e).toString():""}loading(){return!!this.patternImage_}ready(){return this.patternImage_?this.patternImage_.ready():Promise.resolve()}}function q(s,e){if(!s)throw new Error(e)}function _8(s,e,t,i){return t!==void 0&&i!==void 0?[t/s,i/e]:t!==void 0?t/s:i!==void 0?i/e:1}class N0 extends O0{constructor(e){e=e||{};const t=e.opacity!==void 0?e.opacity:1,i=e.rotation!==void 0?e.rotation:0,n=e.scale!==void 0?e.scale:1,r=e.rotateWithView!==void 0?e.rotateWithView:!1;super({opacity:t,rotation:i,scale:n,displacement:e.displacement!==void 0?e.displacement:[0,0],rotateWithView:r,declutterMode:e.declutterMode}),this.anchor_=e.anchor!==void 0?e.anchor:[.5,.5],this.normalizedAnchor_=null,this.anchorOrigin_=e.anchorOrigin!==void 0?e.anchorOrigin:"top-left",this.anchorXUnits_=e.anchorXUnits!==void 0?e.anchorXUnits:"fraction",this.anchorYUnits_=e.anchorYUnits!==void 0?e.anchorYUnits:"fraction",this.crossOrigin_=e.crossOrigin!==void 0?e.crossOrigin:null;const o=e.img!==void 0?e.img:null;let a=e.src;q(!(a!==void 0&&o),"`image` and `src` cannot be provided at the same time"),(a===void 0||a.length===0)&&o&&(a=o.src||Z(o)),q(a!==void 0&&a.length>0,"A defined and non-empty `src` or `image` must be provided"),q(!((e.width!==void 0||e.height!==void 0)&&e.scale!==void 0),"`width` or `height` cannot be provided together with `scale`");let l;if(e.src!==void 0?l=V.IDLE:o!==void 0&&("complete"in o?o.complete?l=o.src?V.LOADED:V.IDLE:l=V.LOADING:l=V.LOADED),this.color_=e.color!==void 0?O2(e.color):null,this.iconImage_=c9(o,a,this.crossOrigin_,l,this.color_),this.offset_=e.offset!==void 0?e.offset:[0,0],this.offsetOrigin_=e.offsetOrigin!==void 0?e.offsetOrigin:"top-left",this.origin_=null,this.size_=e.size!==void 0?e.size:null,this.initialOptions_,e.width!==void 0||e.height!==void 0){let h,c;if(e.size)[h,c]=e.size;else{const u=this.getImage(1);if(u.width&&u.height)h=u.width,c=u.height;else if(u instanceof HTMLImageElement){this.initialOptions_=e;const d=()=>{if(this.unlistenImageChange(d),!this.initialOptions_)return;const f=this.iconImage_.getSize();this.setScale(_8(f[0],f[1],e.width,e.height))};this.listenImageChange(d);return}}h!==void 0&&this.setScale(_8(h,c,e.width,e.height))}}clone(){let e,t,i;return this.initialOptions_?(t=this.initialOptions_.width,i=this.initialOptions_.height):(e=this.getScale(),e=Array.isArray(e)?e.slice():e),new N0({anchor:this.anchor_.slice(),anchorOrigin:this.anchorOrigin_,anchorXUnits:this.anchorXUnits_,anchorYUnits:this.anchorYUnits_,color:this.color_&&this.color_.slice?this.color_.slice():this.color_||void 0,crossOrigin:this.crossOrigin_,offset:this.offset_.slice(),offsetOrigin:this.offsetOrigin_,opacity:this.getOpacity(),rotateWithView:this.getRotateWithView(),rotation:this.getRotation(),scale:e,width:t,height:i,size:this.size_!==null?this.size_.slice():void 0,src:this.getSrc(),displacement:this.getDisplacement().slice(),declutterMode:this.getDeclutterMode()})}getAnchor(){let e=this.normalizedAnchor_;if(!e){e=this.anchor_;const n=this.getSize();if(this.anchorXUnits_=="fraction"||this.anchorYUnits_=="fraction"){if(!n)return null;e=this.anchor_.slice(),this.anchorXUnits_=="fraction"&&(e[0]*=n[0]),this.anchorYUnits_=="fraction"&&(e[1]*=n[1])}if(this.anchorOrigin_!="top-left"){if(!n)return null;e===this.anchor_&&(e=this.anchor_.slice()),(this.anchorOrigin_=="top-right"||this.anchorOrigin_=="bottom-right")&&(e[0]=-e[0]+n[0]),(this.anchorOrigin_=="bottom-left"||this.anchorOrigin_=="bottom-right")&&(e[1]=-e[1]+n[1])}this.normalizedAnchor_=e}const t=this.getDisplacement(),i=this.getScaleArray();return[e[0]-t[0]/i[0],e[1]+t[1]/i[1]]}setAnchor(e){this.anchor_=e,this.normalizedAnchor_=null}getColor(){return this.color_}getImage(e){return this.iconImage_.getImage(e)}getPixelRatio(e){return this.iconImage_.getPixelRatio(e)}getImageSize(){return this.iconImage_.getSize()}getImageState(){return this.iconImage_.getImageState()}getHitDetectionImage(){return this.iconImage_.getHitDetectionImage()}getOrigin(){if(this.origin_)return this.origin_;let e=this.offset_;if(this.offsetOrigin_!="top-left"){const t=this.getSize(),i=this.iconImage_.getSize();if(!t||!i)return null;e=e.slice(),(this.offsetOrigin_=="top-right"||this.offsetOrigin_=="bottom-right")&&(e[0]=i[0]-t[0]-e[0]),(this.offsetOrigin_=="bottom-left"||this.offsetOrigin_=="bottom-right")&&(e[1]=i[1]-t[1]-e[1])}return this.origin_=e,this.origin_}getSrc(){return this.iconImage_.getSrc()}getSize(){return this.size_?this.size_:this.iconImage_.getSize()}getWidth(){const e=this.getScaleArray();if(this.size_)return this.size_[0]*e[0];if(this.iconImage_.getImageState()==V.LOADED)return this.iconImage_.getSize()[0]*e[0]}getHeight(){const e=this.getScaleArray();if(this.size_)return this.size_[1]*e[1];if(this.iconImage_.getImageState()==V.LOADED)return this.iconImage_.getSize()[1]*e[1]}setScale(e){delete this.initialOptions_,super.setScale(e)}listenImageChange(e){this.iconImage_.addEventListener(z.CHANGE,e)}load(){this.iconImage_.load()}unlistenImageChange(e){this.iconImage_.removeEventListener(z.CHANGE,e)}ready(){return this.iconImage_.ready()}}class n2{constructor(e){e=e||{},this.color_=e.color!==void 0?e.color:null,this.lineCap_=e.lineCap,this.lineDash_=e.lineDash!==void 0?e.lineDash:null,this.lineDashOffset_=e.lineDashOffset,this.lineJoin_=e.lineJoin,this.miterLimit_=e.miterLimit,this.width_=e.width}clone(){const e=this.getColor();return new n2({color:Array.isArray(e)?e.slice():e||void 0,lineCap:this.getLineCap(),lineDash:this.getLineDash()?this.getLineDash().slice():void 0,lineDashOffset:this.getLineDashOffset(),lineJoin:this.getLineJoin(),miterLimit:this.getMiterLimit(),width:this.getWidth()})}getColor(){return this.color_}getLineCap(){return this.lineCap_}getLineDash(){return this.lineDash_}getLineDashOffset(){return this.lineDashOffset_}getLineJoin(){return this.lineJoin_}getMiterLimit(){return this.miterLimit_}getWidth(){return this.width_}setColor(e){this.color_=e}setLineCap(e){this.lineCap_=e}setLineDash(e){this.lineDash_=e}setLineDashOffset(e){this.lineDashOffset_=e}setLineJoin(e){this.lineJoin_=e}setMiterLimit(e){this.miterLimit_=e}setWidth(e){this.width_=e}}class F3{constructor(e){e=e||{},this.geometry_=null,this.geometryFunction_=m8,e.geometry!==void 0&&this.setGeometry(e.geometry),this.fill_=e.fill!==void 0?e.fill:null,this.image_=e.image!==void 0?e.image:null,this.renderer_=e.renderer!==void 0?e.renderer:null,this.hitDetectionRenderer_=e.hitDetectionRenderer!==void 0?e.hitDetectionRenderer:null,this.stroke_=e.stroke!==void 0?e.stroke:null,this.text_=e.text!==void 0?e.text:null,this.zIndex_=e.zIndex}clone(){let e=this.getGeometry();return e&&typeof e=="object"&&(e=e.clone()),new F3({geometry:e??void 0,fill:this.getFill()?this.getFill().clone():void 0,image:this.getImage()?this.getImage().clone():void 0,renderer:this.getRenderer()??void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,text:this.getText()?this.getText().clone():void 0,zIndex:this.getZIndex()})}getRenderer(){return this.renderer_}setRenderer(e){this.renderer_=e}setHitDetectionRenderer(e){this.hitDetectionRenderer_=e}getHitDetectionRenderer(){return this.hitDetectionRenderer_}getGeometry(){return this.geometry_}getGeometryFunction(){return this.geometryFunction_}getFill(){return this.fill_}setFill(e){this.fill_=e}getImage(){return this.image_}setImage(e){this.image_=e}getStroke(){return this.stroke_}setStroke(e){this.stroke_=e}getText(){return this.text_}setText(e){this.text_=e}getZIndex(){return this.zIndex_}setGeometry(e){typeof e=="function"?this.geometryFunction_=e:typeof e=="string"?this.geometryFunction_=function(t){return t.get(e)}:e?e!==void 0&&(this.geometryFunction_=function(){return e}):this.geometryFunction_=m8,this.geometry_=e}setZIndex(e){this.zIndex_=e}}function it(s){let e;if(typeof s=="function")e=s;else{let t;Array.isArray(s)?t=s:(q(typeof s.getZIndex=="function","Expected an `Style` or an array of `Style`"),t=[s]),e=function(){return t}}return e}let s4=null;function M6(s,e){if(!s4){const t=new S1({color:"rgba(255,255,255,0.4)"}),i=new n2({color:"#3399CC",width:1.25});s4=[new F3({image:new l2({fill:t,stroke:i,radius:5}),fill:t,stroke:i})]}return s4}function nt(){const s={},e=[255,255,255,1],t=[0,153,255,1],i=3;return s.Polygon=[new F3({fill:new S1({color:[255,255,255,.5]})})],s.MultiPolygon=s.Polygon,s.LineString=[new F3({stroke:new n2({color:e,width:i+2})}),new F3({stroke:new n2({color:t,width:i})})],s.MultiLineString=s.LineString,s.Circle=s.Polygon.concat(s.LineString),s.Point=[new F3({image:new l2({radius:i*2,fill:new S1({color:t}),stroke:new n2({color:e,width:i/2})}),zIndex:1/0})],s.MultiPoint=s.Point,s.GeometryCollection=s.Polygon.concat(s.LineString,s.Point),s}function m8(s){return s.getGeometry()}const st="#333";class d9{constructor(e){e=e||{},this.font_=e.font,this.rotation_=e.rotation,this.rotateWithView_=e.rotateWithView,this.keepUpright_=e.keepUpright,this.scale_=e.scale,this.scaleArray_=y3(e.scale!==void 0?e.scale:1),this.text_=e.text,this.textAlign_=e.textAlign,this.justify_=e.justify,this.repeat_=e.repeat,this.textBaseline_=e.textBaseline,this.fill_=e.fill!==void 0?e.fill:new S1({color:st}),this.maxAngle_=e.maxAngle!==void 0?e.maxAngle:Math.PI/4,this.placement_=e.placement!==void 0?e.placement:"point",this.overflow_=!!e.overflow,this.stroke_=e.stroke!==void 0?e.stroke:null,this.offsetX_=e.offsetX!==void 0?e.offsetX:0,this.offsetY_=e.offsetY!==void 0?e.offsetY:0,this.backgroundFill_=e.backgroundFill?e.backgroundFill:null,this.backgroundStroke_=e.backgroundStroke?e.backgroundStroke:null,this.padding_=e.padding===void 0?null:e.padding,this.declutterMode_=e.declutterMode}clone(){const e=this.getScale();return new d9({font:this.getFont(),placement:this.getPlacement(),repeat:this.getRepeat(),maxAngle:this.getMaxAngle(),overflow:this.getOverflow(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),keepUpright:this.getKeepUpright(),scale:Array.isArray(e)?e.slice():e,text:this.getText(),textAlign:this.getTextAlign(),justify:this.getJustify(),textBaseline:this.getTextBaseline(),fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,offsetX:this.getOffsetX(),offsetY:this.getOffsetY(),backgroundFill:this.getBackgroundFill()?this.getBackgroundFill().clone():void 0,backgroundStroke:this.getBackgroundStroke()?this.getBackgroundStroke().clone():void 0,padding:this.getPadding()||void 0,declutterMode:this.getDeclutterMode()})}getOverflow(){return this.overflow_}getFont(){return this.font_}getMaxAngle(){return this.maxAngle_}getPlacement(){return this.placement_}getRepeat(){return this.repeat_}getOffsetX(){return this.offsetX_}getOffsetY(){return this.offsetY_}getFill(){return this.fill_}getRotateWithView(){return this.rotateWithView_}getKeepUpright(){return this.keepUpright_}getRotation(){return this.rotation_}getScale(){return this.scale_}getScaleArray(){return this.scaleArray_}getStroke(){return this.stroke_}getText(){return this.text_}getTextAlign(){return this.textAlign_}getJustify(){return this.justify_}getTextBaseline(){return this.textBaseline_}getBackgroundFill(){return this.backgroundFill_}getBackgroundStroke(){return this.backgroundStroke_}getPadding(){return this.padding_}getDeclutterMode(){return this.declutterMode_}setOverflow(e){this.overflow_=e}setFont(e){this.font_=e}setMaxAngle(e){this.maxAngle_=e}setOffsetX(e){this.offsetX_=e}setOffsetY(e){this.offsetY_=e}setPlacement(e){this.placement_=e}setRepeat(e){this.repeat_=e}setRotateWithView(e){this.rotateWithView_=e}setKeepUpright(e){this.keepUpright_=e}setFill(e){this.fill_=e}setRotation(e){this.rotation_=e}setScale(e){this.scale_=e,this.scaleArray_=y3(e!==void 0?e:1)}setStroke(e){this.stroke_=e}setText(e){this.text_=e}setTextAlign(e){this.textAlign_=e}setJustify(e){this.justify_=e}setTextBaseline(e){this.textBaseline_=e}setBackgroundFill(e){this.backgroundFill_=e}setBackgroundStroke(e){this.backgroundStroke_=e}setPadding(e){this.padding_=e}}const I3={ADD:"add",REMOVE:"remove"},p8={LENGTH:"length"};class V5 extends r1{constructor(e,t,i){super(e),this.element=t,this.index=i}}class Q3 extends o1{constructor(e,t){if(super(),this.on,this.once,this.un,t=t||{},this.unique_=!!t.unique,this.array_=e||[],this.unique_)for(let i=0,n=this.array_.length;i<n;++i)this.assertUnique_(this.array_[i],i);this.updateLength_()}clear(){for(;this.getLength()>0;)this.pop()}extend(e){for(let t=0,i=e.length;t<i;++t)this.push(e[t]);return this}forEach(e){const t=this.array_;for(let i=0,n=t.length;i<n;++i)e(t[i],i,t)}getArray(){return this.array_}item(e){return this.array_[e]}getLength(){return this.get(p8.LENGTH)}insertAt(e,t){if(e<0||e>this.getLength())throw new Error("Index out of bounds: "+e);this.unique_&&this.assertUnique_(t),this.array_.splice(e,0,t),this.updateLength_(),this.dispatchEvent(new V5(I3.ADD,t,e))}pop(){return this.removeAt(this.getLength()-1)}push(e){this.unique_&&this.assertUnique_(e);const t=this.getLength();return this.insertAt(t,e),this.getLength()}remove(e){const t=this.array_;for(let i=0,n=t.length;i<n;++i)if(t[i]===e)return this.removeAt(i)}removeAt(e){if(e<0||e>=this.getLength())return;const t=this.array_[e];return this.array_.splice(e,1),this.updateLength_(),this.dispatchEvent(new V5(I3.REMOVE,t,e)),t}setAt(e,t){const i=this.getLength();if(e>=i){this.insertAt(e,t);return}if(e<0)throw new Error("Index out of bounds: "+e);this.unique_&&this.assertUnique_(t,e);const n=this.array_[e];this.array_[e]=t,this.dispatchEvent(new V5(I3.REMOVE,n,e)),this.dispatchEvent(new V5(I3.ADD,t,e))}updateLength_(){this.set(p8.LENGTH,this.array_.length)}assertUnique_(e,t){for(let i=0,n=this.array_.length;i<n;++i)if(this.array_[i]===e&&i!==t)throw new Error("Duplicate item added to a unique collection")}}class m1 extends o1{constructor(e){if(super(),this.on,this.once,this.un,this.id_=void 0,this.geometryName_="geometry",this.style_=null,this.styleFunction_=void 0,this.geometryChangeKey_=null,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),e)if(typeof e.getSimplifiedGeometry=="function"){const t=e;this.setGeometry(t)}else{const t=e;this.setProperties(t)}}clone(){const e=new m1(this.hasProperties()?this.getProperties():null);e.setGeometryName(this.getGeometryName());const t=this.getGeometry();t&&e.setGeometry(t.clone());const i=this.getStyle();return i&&e.setStyle(i),e}getGeometry(){return this.get(this.geometryName_)}getId(){return this.id_}getGeometryName(){return this.geometryName_}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}handleGeometryChange_(){this.changed()}handleGeometryChanged_(){this.geometryChangeKey_&&(t3(this.geometryChangeKey_),this.geometryChangeKey_=null);const e=this.getGeometry();e&&(this.geometryChangeKey_=j(e,z.CHANGE,this.handleGeometryChange_,this)),this.changed()}setGeometry(e){this.set(this.geometryName_,e)}setStyle(e){this.style_=e,this.styleFunction_=e?rt(e):void 0,this.changed()}setId(e){this.id_=e,this.changed()}setGeometryName(e){this.removeChangeListener(this.geometryName_,this.handleGeometryChanged_),this.geometryName_=e,this.addChangeListener(this.geometryName_,this.handleGeometryChanged_),this.handleGeometryChanged_()}}function rt(s){if(typeof s=="function")return s;let e;return Array.isArray(s)?e=s:(q(typeof s.getZIndex=="function","Expected an `ol/style/Style` or an array of `ol/style/Style.js`"),e=[s]),function(){return e}}const L6=new Array(6);function B3(){return[1,0,0,1,0,0]}function y8(s){return g9(s,1,0,0,1,0,0)}function f9(s,e){const t=s[0],i=s[1],n=s[2],r=s[3],o=s[4],a=s[5],l=e[0],h=e[1],c=e[2],u=e[3],d=e[4],f=e[5];return s[0]=t*l+n*h,s[1]=i*l+r*h,s[2]=t*c+n*u,s[3]=i*c+r*u,s[4]=t*d+n*f+o,s[5]=i*d+r*f+a,s}function g9(s,e,t,i,n,r,o){return s[0]=e,s[1]=t,s[2]=i,s[3]=n,s[4]=r,s[5]=o,s}function ot(s,e){return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s}function l3(s,e){const t=e[0],i=e[1];return e[0]=s[0]*t+s[2]*i+s[4],e[1]=s[1]*t+s[3]*i+s[5],e}function r4(s,e,t){return f9(s,g9(L6,e,0,0,t,0,0))}function at(s,e,t){return f9(s,g9(L6,1,0,0,1,e,t))}function T1(s,e,t,i,n,r,o,a){const l=Math.sin(r),h=Math.cos(r);return s[0]=i*h,s[1]=n*l,s[2]=-i*l,s[3]=n*h,s[4]=o*i*h-a*i*l+e,s[5]=o*n*l+a*n*h+t,s}function P6(s,e){const t=lt(e);q(t!==0,"Transformation matrix cannot be inverted");const i=e[0],n=e[1],r=e[2],o=e[3],a=e[4],l=e[5];return s[0]=o/t,s[1]=-n/t,s[2]=-r/t,s[3]=i/t,s[4]=(r*l-o*a)/t,s[5]=-(i*l-n*a)/t,s}function lt(s){return s[0]*s[3]-s[1]*s[2]}const x8=[1e6,1e6,1e6,1e6,2,2];function ht(s){return"matrix("+s.map((t,i)=>Math.round(t*x8[i])/x8[i]).join(", ")+")"}function W1(s,e,t,i,n,r,o){r=r||[],o=o||2;let a=0;for(let l=e;l<t;l+=i){const h=s[l],c=s[l+1];r[a++]=n[0]*h+n[2]*c+n[4],r[a++]=n[1]*h+n[3]*c+n[5];for(let u=2;u<o;u++)r[a++]=s[l+u]}return r&&r.length!=a&&(r.length=a),r}function _9(s,e,t,i,n,r,o){o=o||[];const a=Math.cos(n),l=Math.sin(n),h=r[0],c=r[1];let u=0;for(let d=e;d<t;d+=i){const f=s[d]-h,g=s[d+1]-c;o[u++]=h+f*a-g*l,o[u++]=c+f*l+g*a;for(let _=d+2;_<d+i;++_)o[u++]=s[_]}return o&&o.length!=u&&(o.length=u),o}function ct(s,e,t,i,n,r,o,a){a=a||[];const l=o[0],h=o[1];let c=0;for(let u=e;u<t;u+=i){const d=s[u]-l,f=s[u+1]-h;a[c++]=l+n*d,a[c++]=h+r*f;for(let g=u+2;g<u+i;++g)a[c++]=s[g]}return a&&a.length!=c&&(a.length=c),a}function ut(s,e,t,i,n,r,o){o=o||[];let a=0;for(let l=e;l<t;l+=i){o[a++]=s[l]+n,o[a++]=s[l+1]+r;for(let h=l+2;h<l+i;++h)o[a++]=s[h]}return o&&o.length!=a&&(o.length=a),o}const E8=B3(),dt=[NaN,NaN];class b6 extends o1{constructor(){super(),this.extent_=K3(),this.extentRevision_=-1,this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=0,this.simplifyTransformedInternal=T6((e,t,i)=>{if(!i)return this.getSimplifiedGeometry(t);const n=this.clone();return n.applyTransform(i),n.getSimplifiedGeometry(t)})}simplifyTransformed(e,t){return this.simplifyTransformedInternal(this.getRevision(),e,t)}clone(){return Y()}closestPointXY(e,t,i,n){return Y()}containsXY(e,t){return this.closestPointXY(e,t,dt,Number.MIN_VALUE)===0}getClosestPoint(e,t){return t=t||[NaN,NaN],this.closestPointXY(e[0],e[1],t,1/0),t}intersectsCoordinate(e){return this.containsXY(e[0],e[1])}computeExtent(e){return Y()}getExtent(e){if(this.extentRevision_!=this.getRevision()){const t=this.computeExtent(this.extent_);(isNaN(t[0])||isNaN(t[1]))&&T5(t),this.extentRevision_=this.getRevision()}return K7(this.extent_,e)}rotate(e,t){Y()}scale(e,t,i){Y()}simplify(e){return this.getSimplifiedGeometry(e*e)}getSimplifiedGeometry(e){return Y()}getType(){return Y()}applyTransform(e){Y()}intersectsExtent(e){return Y()}translate(e,t){Y()}transform(e,t){const i=c3(e),n=i.getUnits()=="tile-pixels"?function(r,o,a){const l=i.getExtent(),h=i.getWorldExtent(),c=C3(h)/C3(l);T1(E8,h[0],h[3],c,-c,0,0,0);const u=W1(r,0,r.length,a,E8,o),d=g5(i,t);return d?d(u,u,a):u}:g5(i,t);return this.applyTransform(n),this}}class Y1 extends b6{constructor(){super(),this.layout="XY",this.stride=2,this.flatCoordinates}computeExtent(e){return j4(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e)}getCoordinates(){return Y()}getFirstCoordinate(){return this.flatCoordinates.slice(0,this.stride)}getFlatCoordinates(){return this.flatCoordinates}getLastCoordinate(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)}getLayout(){return this.layout}getSimplifiedGeometry(e){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||this.simplifiedGeometryMaxMinSquaredTolerance!==0&&e<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;const t=this.getSimplifiedGeometryInternal(e);return t.getFlatCoordinates().length<this.flatCoordinates.length?t:(this.simplifiedGeometryMaxMinSquaredTolerance=e,this)}getSimplifiedGeometryInternal(e){return this}getStride(){return this.stride}setFlatCoordinates(e,t){this.stride=u0(e),this.layout=e,this.flatCoordinates=t}setCoordinates(e,t){Y()}setLayout(e,t,i){let n;if(e)n=u0(e);else{for(let r=0;r<i;++r){if(t.length===0){this.layout="XY",this.stride=2;return}t=t[0]}n=t.length,e=ft(n)}this.layout=e,this.stride=n}applyTransform(e){this.flatCoordinates&&(e(this.flatCoordinates,this.flatCoordinates,this.layout.startsWith("XYZ")?3:2,this.stride),this.changed())}rotate(e,t){const i=this.getFlatCoordinates();if(i){const n=this.getStride();_9(i,0,i.length,n,e,t,i),this.changed()}}scale(e,t,i){t===void 0&&(t=e),i||(i=C1(this.getExtent()));const n=this.getFlatCoordinates();if(n){const r=this.getStride();ct(n,0,n.length,r,e,t,i,n),this.changed()}}translate(e,t){const i=this.getFlatCoordinates();if(i){const n=this.getStride();ut(i,0,i.length,n,e,t,i),this.changed()}}}function ft(s){let e;return s==2?e="XY":s==3?e="XYZ":s==4&&(e="XYZM"),e}function u0(s){let e;return s=="XY"?e=2:s=="XYZ"||s=="XYM"?e=3:s=="XYZM"&&(e=4),e}function gt(s,e,t){const i=s.getFlatCoordinates();if(!i)return null;const n=s.getStride();return W1(i,0,i.length,n,e,t)}function F6(s,e,t,i){let n=0;const r=s[t-i],o=s[t-i+1];let a=0,l=0;for(;e<t;e+=i){const h=s[e]-r,c=s[e+1]-o;n+=l*h-a*c,a=h,l=c}return n/2}function D6(s,e,t,i){let n=0;for(let r=0,o=t.length;r<o;++r){const a=t[r];n+=F6(s,e,a,i),e=a}return n}function _t(s,e,t,i){let n=0;for(let r=0,o=t.length;r<o;++r){const a=t[r];n+=D6(s,e,a,i),e=a[a.length-1]}return n}function w8(s,e,t,i,n,r,o){const a=s[e],l=s[e+1],h=s[t]-a,c=s[t+1]-l;let u;if(h===0&&c===0)u=e;else{const d=((n-a)*h+(r-l)*c)/(h*h+c*c);if(d>1)u=t;else if(d>0){for(let f=0;f<i;++f)o[f]=L3(s[e+f],s[t+f],d);o.length=i;return}else u=e}for(let d=0;d<i;++d)o[d]=s[u+d];o.length=i}function m9(s,e,t,i,n){let r=s[e],o=s[e+1];for(e+=i;e<t;e+=i){const a=s[e],l=s[e+1],h=y1(r,o,a,l);h>n&&(n=h),r=a,o=l}return n}function p9(s,e,t,i,n){for(let r=0,o=t.length;r<o;++r){const a=t[r];n=m9(s,e,a,i,n),e=a}return n}function mt(s,e,t,i,n){for(let r=0,o=t.length;r<o;++r){const a=t[r];n=p9(s,e,a,i,n),e=a[a.length-1]}return n}function y9(s,e,t,i,n,r,o,a,l,h,c){if(e==t)return h;let u,d;if(n===0){if(d=y1(o,a,s[e],s[e+1]),d<h){for(u=0;u<i;++u)l[u]=s[e+u];return l.length=i,d}return h}c=c||[NaN,NaN];let f=e+i;for(;f<t;)if(w8(s,f-i,f,i,o,a,c),d=y1(o,a,c[0],c[1]),d<h){for(h=d,u=0;u<i;++u)l[u]=c[u];l.length=i,f+=i}else f+=i*Math.max((Math.sqrt(d)-Math.sqrt(h))/n|0,1);if(r&&(w8(s,t-i,e,i,o,a,c),d=y1(o,a,c[0],c[1]),d<h)){for(h=d,u=0;u<i;++u)l[u]=c[u];l.length=i}return h}function x9(s,e,t,i,n,r,o,a,l,h,c){c=c||[NaN,NaN];for(let u=0,d=t.length;u<d;++u){const f=t[u];h=y9(s,e,f,i,n,r,o,a,l,h,c),e=f}return h}function pt(s,e,t,i,n,r,o,a,l,h,c){c=c||[NaN,NaN];for(let u=0,d=t.length;u<d;++u){const f=t[u];h=x9(s,e,f,i,n,r,o,a,l,h,c),e=f[f.length-1]}return h}function k6(s,e,t,i){for(let n=0,r=t.length;n<r;++n)s[e++]=t[n];return e}function z0(s,e,t,i){for(let n=0,r=t.length;n<r;++n){const o=t[n];for(let a=0;a<i;++a)s[e++]=o[a]}return e}function E9(s,e,t,i,n){n=n||[];let r=0;for(let o=0,a=t.length;o<a;++o){const l=z0(s,e,t[o],i);n[r++]=l,e=l}return n.length=r,n}function yt(s,e,t,i,n){n=n||[];let r=0;for(let o=0,a=t.length;o<a;++o){const l=E9(s,e,t[o],i,n[r]);l.length===0&&(l[0]=e),n[r++]=l,e=l[l.length-1]}return n.length=r,n}function k1(s,e,t,i,n){n=n!==void 0?n:[];let r=0;for(let o=e;o<t;o+=i)n[r++]=s.slice(o,o+i);return n.length=r,n}function E5(s,e,t,i,n){n=n!==void 0?n:[];let r=0;for(let o=0,a=t.length;o<a;++o){const l=t[o];n[r++]=k1(s,e,l,i,n[r]),e=l}return n.length=r,n}function O4(s,e,t,i,n){n=n!==void 0?n:[];let r=0;for(let o=0,a=t.length;o<a;++o){const l=t[o];n[r++]=l.length===1&&l[0]===e?[]:E5(s,e,l,i,n[r]),e=l[l.length-1]}return n.length=r,n}function W0(s,e,t,i,n,r,o){const a=(t-e)/i;if(a<3){for(;e<t;e+=i)r[o++]=s[e],r[o++]=s[e+1];return o}const l=new Array(a);l[0]=1,l[a-1]=1;const h=[e,t-i];let c=0;for(;h.length>0;){const u=h.pop(),d=h.pop();let f=0;const g=s[d],_=s[d+1],m=s[u],p=s[u+1];for(let y=d+i;y<u;y+=i){const w=s[y],x=s[y+1],E=V7(w,x,g,_,m,p);E>f&&(c=y,f=E)}f>n&&(l[(c-e)/i]=1,d+i<c&&h.push(d,c),c+i<u&&h.push(c,u))}for(let u=0;u<a;++u)l[u]&&(r[o++]=s[e+u*i],r[o++]=s[e+u*i+1]);return o}function O6(s,e,t,i,n,r,o,a){for(let l=0,h=t.length;l<h;++l){const c=t[l];o=W0(s,e,c,i,n,r,o),a.push(o),e=c}return o}function J1(s,e){return e*Math.round(s/e)}function xt(s,e,t,i,n,r,o){if(e==t)return o;let a=J1(s[e],n),l=J1(s[e+1],n);e+=i,r[o++]=a,r[o++]=l;let h,c;do if(h=J1(s[e],n),c=J1(s[e+1],n),e+=i,e==t)return r[o++]=h,r[o++]=c,o;while(h==a&&c==l);for(;e<t;){const u=J1(s[e],n),d=J1(s[e+1],n);if(e+=i,u==h&&d==c)continue;const f=h-a,g=c-l,_=u-a,m=d-l;if(f*m==g*_&&(f<0&&_<f||f==_||f>0&&_>f)&&(g<0&&m<g||g==m||g>0&&m>g)){h=u,c=d;continue}r[o++]=h,r[o++]=c,a=h,l=c,h=u,c=d}return r[o++]=h,r[o++]=c,o}function w9(s,e,t,i,n,r,o,a){for(let l=0,h=t.length;l<h;++l){const c=t[l];o=xt(s,e,c,i,n,r,o),a.push(o),e=c}return o}function Et(s,e,t,i,n,r,o,a){for(let l=0,h=t.length;l<h;++l){const c=t[l],u=[];o=w9(s,e,c,i,n,r,o,u),a.push(u),e=c[c.length-1]}return o}class w5 extends Y1{constructor(e,t){super(),this.maxDelta_=-1,this.maxDeltaRevision_=-1,t!==void 0&&!Array.isArray(e[0])?this.setFlatCoordinates(t,e):this.setCoordinates(e,t)}clone(){return new w5(this.flatCoordinates.slice(),this.layout)}closestPointXY(e,t,i,n){return n<a2(this.getExtent(),e,t)?n:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(m9(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),y9(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,e,t,i,n))}getArea(){return F6(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinates(){return k1(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getSimplifiedGeometryInternal(e){const t=[];return t.length=W0(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e,t,0),new w5(t,"XY")}getType(){return"LinearRing"}intersectsExtent(e){return!1}setCoordinates(e,t){this.setLayout(t,e,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=z0(this.flatCoordinates,0,e,this.stride),this.changed()}}class i1 extends Y1{constructor(e,t){super(),this.setCoordinates(e,t)}clone(){const e=new i1(this.flatCoordinates.slice(),this.layout);return e.applyProperties(this),e}closestPointXY(e,t,i,n){const r=this.flatCoordinates,o=y1(e,t,r[0],r[1]);if(o<n){const a=this.stride;for(let l=0;l<a;++l)i[l]=r[l];return i.length=a,o}return n}getCoordinates(){return this.flatCoordinates.slice()}computeExtent(e){return n6(this.flatCoordinates,e)}getType(){return"Point"}intersectsExtent(e){return U4(e,this.flatCoordinates[0],this.flatCoordinates[1])}setCoordinates(e,t){this.setLayout(t,e,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=k6(this.flatCoordinates,0,e,this.stride),this.changed()}}function wt(s,e,t,i,n){return!q4(n,function(o){return!t2(s,e,t,i,o[0],o[1])})}function t2(s,e,t,i,n,r){let o=0,a=s[t-i],l=s[t-i+1];for(;e<t;e+=i){const h=s[e],c=s[e+1];l<=r?c>r&&(h-a)*(r-l)-(n-a)*(c-l)>0&&o++:c<=r&&(h-a)*(r-l)-(n-a)*(c-l)<0&&o--,a=h,l=c}return o!==0}function C9(s,e,t,i,n,r){if(t.length===0||!t2(s,e,t[0],i,n,r))return!1;for(let o=1,a=t.length;o<a;++o)if(t2(s,t[o-1],t[o],i,n,r))return!1;return!0}function Ct(s,e,t,i,n,r){if(t.length===0)return!1;for(let o=0,a=t.length;o<a;++o){const l=t[o];if(C9(s,e,l,i,n,r))return!0;e=l[l.length-1]}return!1}function S9(s,e,t,i,n,r,o){let a,l,h,c,u,d,f;const g=n[r+1],_=[];for(let y=0,w=t.length;y<w;++y){const x=t[y];for(c=s[x-i],d=s[x-i+1],a=e;a<x;a+=i)u=s[a],f=s[a+1],(g<=d&&f<=g||d<=g&&g<=f)&&(h=(g-d)/(f-d)*(u-c)+c,_.push(h)),c=u,d=f}let m=NaN,p=-1/0;for(_.sort(e1),c=_[0],a=1,l=_.length;a<l;++a){u=_[a];const y=Math.abs(u-c);y>p&&(h=(c+u)/2,C9(s,e,t,i,h,g)&&(m=h,p=y)),c=u}return isNaN(m)&&(m=n[r]),o?(o.push(m,g,p),o):[m,g,p]}function G6(s,e,t,i,n){let r=[];for(let o=0,a=t.length;o<a;++o){const l=t[o];r=S9(s,e,l,i,n,2*o,r),e=l[l.length-1]}return r}function N6(s,e,t,i,n){let r;for(e+=i;e<t;e+=i)if(r=n(s.slice(e-i,e),s.slice(e,e+i)),r)return r;return!1}function B0(s,e,t,i,n,r){return r=r??r6(K3(),s,e,t,i),r3(n,r)?r[0]>=n[0]&&r[2]<=n[2]||r[1]>=n[1]&&r[3]<=n[3]?!0:N6(s,e,t,i,function(o,a){return X7(n,o,a)}):!1}function St(s,e,t,i,n){for(let r=0,o=t.length;r<o;++r){if(B0(s,e,t[r],i,n))return!0;e=t[r]}return!1}function z6(s,e,t,i,n){return!!(B0(s,e,t,i,n)||t2(s,e,t,i,n[0],n[1])||t2(s,e,t,i,n[0],n[3])||t2(s,e,t,i,n[2],n[1])||t2(s,e,t,i,n[2],n[3]))}function W6(s,e,t,i,n){if(!z6(s,e,t[0],i,n))return!1;if(t.length===1)return!0;for(let r=1,o=t.length;r<o;++r)if(wt(s,t[r-1],t[r],i,n)&&!B0(s,t[r-1],t[r],i,n))return!1;return!0}function Tt(s,e,t,i,n){for(let r=0,o=t.length;r<o;++r){const a=t[r];if(W6(s,e,a,i,n))return!0;e=a[a.length-1]}return!1}function Rt(s,e,t,i){for(;e<t-i;){for(let n=0;n<i;++n){const r=s[e+n];s[e+n]=s[t-i+n],s[t-i+n]=r}e+=i,t-=i}}function T9(s,e,t,i){let n=0,r=s[t-i],o=s[t-i+1];for(;e<t;e+=i){const a=s[e],l=s[e+1];n+=(a-r)*(l+o),r=a,o=l}return n===0?void 0:n>0}function B6(s,e,t,i,n){n=n!==void 0?n:!1;for(let r=0,o=t.length;r<o;++r){const a=t[r],l=T9(s,e,a,i);if(r===0){if(n&&l||!n&&!l)return!1}else if(n&&!l||!n&&l)return!1;e=a}return!0}function It(s,e,t,i,n){for(let r=0,o=t.length;r<o;++r){const a=t[r];if(!B6(s,e,a,i,n))return!1;a.length&&(e=a[a.length-1])}return!0}function G4(s,e,t,i,n){n=n!==void 0?n:!1;for(let r=0,o=t.length;r<o;++r){const a=t[r],l=T9(s,e,a,i);(r===0?n&&l||!n&&!l:n&&!l||!n&&l)&&Rt(s,e,a,i),e=a}return e}function C8(s,e,t,i,n){for(let r=0,o=t.length;r<o;++r)e=G4(s,e,t[r],i,n);return e}function K6(s,e){const t=[];let i=0,n=0,r;for(let o=0,a=e.length;o<a;++o){const l=e[o],h=T9(s,i,l,2);if(r===void 0&&(r=h),h===r)t.push(e.slice(n,o+1));else{if(t.length===0)continue;t[t.length-1].push(e[n])}n=o+1,i=l}return t}class s1 extends Y1{constructor(e,t,i){super(),this.ends_=[],this.flatInteriorPointRevision_=-1,this.flatInteriorPoint_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,t!==void 0&&i?(this.setFlatCoordinates(t,e),this.ends_=i):this.setCoordinates(e,t)}appendLinearRing(e){this.flatCoordinates?t1(this.flatCoordinates,e.getFlatCoordinates()):this.flatCoordinates=e.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const e=new s1(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return e.applyProperties(this),e}closestPointXY(e,t,i,n){return n<a2(this.getExtent(),e,t)?n:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(p9(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),x9(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,e,t,i,n))}containsXY(e,t){return C9(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,e,t)}getArea(){return D6(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)}getCoordinates(e){let t;return e!==void 0?(t=this.getOrientedFlatCoordinates().slice(),G4(t,0,this.ends_,this.stride,e)):t=this.flatCoordinates,E5(t,0,this.ends_,this.stride)}getEnds(){return this.ends_}getFlatInteriorPoint(){if(this.flatInteriorPointRevision_!=this.getRevision()){const e=C1(this.getExtent());this.flatInteriorPoint_=S9(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,e,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_}getInteriorPoint(){return new i1(this.getFlatInteriorPoint(),"XYM")}getLinearRingCount(){return this.ends_.length}getLinearRing(e){return e<0||this.ends_.length<=e?null:new w5(this.flatCoordinates.slice(e===0?0:this.ends_[e-1],this.ends_[e]),this.layout)}getLinearRings(){const e=this.layout,t=this.flatCoordinates,i=this.ends_,n=[];let r=0;for(let o=0,a=i.length;o<a;++o){const l=i[o],h=new w5(t.slice(r,l),e);n.push(h),r=l}return n}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const e=this.flatCoordinates;B6(e,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=e:(this.orientedFlatCoordinates_=e.slice(),this.orientedFlatCoordinates_.length=G4(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(e){const t=[],i=[];return t.length=w9(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(e),t,0,i),new s1(t,"XY",i)}getType(){return"Polygon"}intersectsExtent(e){return W6(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,e)}setCoordinates(e,t){this.setLayout(t,e,2),this.flatCoordinates||(this.flatCoordinates=[]);const i=E9(this.flatCoordinates,0,e,this.stride,this.ends_);this.flatCoordinates.length=i.length===0?0:i[i.length-1],this.changed()}}function S8(s){if(R0(s))throw new Error("Cannot create polygon from empty extent");const e=s[0],t=s[1],i=s[2],n=s[3],r=[e,t,e,n,i,n,i,t,e,t];return new s1(r,"XY",[r.length])}function d0(s,e,t,i,n,r,o){let a,l;const h=(t-e)/i;if(h===1)a=e;else if(h===2)a=e,l=n;else if(h!==0){let c=s[e],u=s[e+1],d=0;const f=[0];for(let m=e+i;m<t;m+=i){const p=s[m],y=s[m+1];d+=Math.sqrt((p-c)*(p-c)+(y-u)*(y-u)),f.push(d),c=p,u=y}const g=n*d,_=Ge(f,g);_<0?(l=(g-f[-_-2])/(f[-_-1]-f[-_-2]),a=e+(-_-2)*i):a=e+_*i}o=o>1?o:2,r=r||new Array(o);for(let c=0;c<o;++c)r[c]=a===void 0?NaN:l===void 0?s[a+c]:L3(s[a+c],s[a+i+c],l);return r}function N4(s,e,t,i,n,r){if(t==e)return null;let o;if(n<s[e+i-1])return r?(o=s.slice(e,e+i),o[i-1]=n,o):null;if(s[t-1]<n)return r?(o=s.slice(t-i,t),o[i-1]=n,o):null;if(n==s[e+i-1])return s.slice(e,e+i);let a=e/i,l=t/i;for(;a<l;){const d=a+l>>1;n<s[(d+1)*i-1]?l=d:a=d+1}const h=s[a*i-1];if(n==h)return s.slice((a-1)*i,(a-1)*i+i);const c=s[(a+1)*i-1],u=(n-h)/(c-h);o=[];for(let d=0;d<i-1;++d)o.push(L3(s[(a-1)*i+d],s[a*i+d],u));return o.push(n),o}function vt(s,e,t,i,n,r,o){if(o)return N4(s,e,t[t.length-1],i,n,r);let a;if(n<s[i-1])return r?(a=s.slice(0,i),a[i-1]=n,a):null;if(s[s.length-1]<n)return r?(a=s.slice(s.length-i),a[i-1]=n,a):null;for(let l=0,h=t.length;l<h;++l){const c=t[l];if(e!=c){if(n<s[e+i-1])return null;if(n<=s[c-1])return N4(s,e,c,i,n,!1);e=c}}return null}function X6(s,e,t,i){let n=s[e],r=s[e+1],o=0;for(let a=e+i;a<t;a+=i){const l=s[a],h=s[a+1];o+=Math.sqrt((l-n)*(l-n)+(h-r)*(h-r)),n=l,r=h}return o}class n1 extends Y1{constructor(e,t){super(),this.flatMidpoint_=null,this.flatMidpointRevision_=-1,this.maxDelta_=-1,this.maxDeltaRevision_=-1,t!==void 0&&!Array.isArray(e[0])?this.setFlatCoordinates(t,e):this.setCoordinates(e,t)}appendCoordinate(e){t1(this.flatCoordinates,e),this.changed()}clone(){const e=new n1(this.flatCoordinates.slice(),this.layout);return e.applyProperties(this),e}closestPointXY(e,t,i,n){return n<a2(this.getExtent(),e,t)?n:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(m9(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),y9(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,e,t,i,n))}forEachSegment(e){return N6(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e)}getCoordinateAtM(e,t){return this.layout!="XYM"&&this.layout!="XYZM"?null:(t=t!==void 0?t:!1,N4(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e,t))}getCoordinates(){return k1(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getCoordinateAt(e,t){return d0(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e,t,this.stride)}getLength(){return X6(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getFlatMidpoint(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_??void 0),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_}getSimplifiedGeometryInternal(e){const t=[];return t.length=W0(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e,t,0),new n1(t,"XY")}getType(){return"LineString"}intersectsExtent(e){return B0(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,e,this.getExtent())}setCoordinates(e,t){this.setLayout(t,e,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=z0(this.flatCoordinates,0,e,this.stride),this.changed()}}const z3={PRERENDER:"prerender",POSTRENDER:"postrender",PRECOMPOSE:"precompose",POSTCOMPOSE:"postcompose",RENDERCOMPLETE:"rendercomplete"};class V6{drawCustom(e,t,i,n,r){}drawGeometry(e){}setStyle(e){}drawCircle(e,t,i){}drawFeature(e,t,i){}drawGeometryCollection(e,t,i){}drawLineString(e,t,i){}drawMultiLineString(e,t,i){}drawMultiPoint(e,t,i){}drawMultiPolygon(e,t,i){}drawPoint(e,t,i){}drawPolygon(e,t,i){}drawText(e,t,i){}setFillStrokeStyle(e,t){}setImageStyle(e,t){}setTextStyle(e,t){}}class At extends V6{constructor(e,t,i,n,r,o,a){super(),this.context_=e,this.pixelRatio_=t,this.extent_=i,this.transform_=n,this.transformRotation_=n?I0(Math.atan2(n[1],n[0]),10):0,this.viewRotation_=r,this.squaredTolerance_=o,this.userTransform_=a,this.contextFillState_=null,this.contextStrokeState_=null,this.contextTextState_=null,this.fillState_=null,this.strokeState_=null,this.image_=null,this.imageAnchorX_=0,this.imageAnchorY_=0,this.imageHeight_=0,this.imageOpacity_=0,this.imageOriginX_=0,this.imageOriginY_=0,this.imageRotateWithView_=!1,this.imageRotation_=0,this.imageScale_=[0,0],this.imageWidth_=0,this.text_="",this.textOffsetX_=0,this.textOffsetY_=0,this.textRotateWithView_=!1,this.textRotation_=0,this.textScale_=[0,0],this.textFillState_=null,this.textStrokeState_=null,this.textState_=null,this.pixelCoordinates_=[],this.tmpLocalTransform_=B3()}drawImages_(e,t,i,n){if(!this.image_)return;const r=W1(e,t,i,n,this.transform_,this.pixelCoordinates_),o=this.context_,a=this.tmpLocalTransform_,l=o.globalAlpha;this.imageOpacity_!=1&&(o.globalAlpha=l*this.imageOpacity_);let h=this.imageRotation_;this.transformRotation_===0&&(h-=this.viewRotation_),this.imageRotateWithView_&&(h+=this.viewRotation_);for(let c=0,u=r.length;c<u;c+=2){const d=r[c]-this.imageAnchorX_,f=r[c+1]-this.imageAnchorY_;if(h!==0||this.imageScale_[0]!=1||this.imageScale_[1]!=1){const g=d+this.imageAnchorX_,_=f+this.imageAnchorY_;T1(a,g,_,1,1,h,-g,-_),o.save(),o.transform.apply(o,a),o.translate(g,_),o.scale(this.imageScale_[0],this.imageScale_[1]),o.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,-this.imageAnchorX_,-this.imageAnchorY_,this.imageWidth_,this.imageHeight_),o.restore()}else o.drawImage(this.image_,this.imageOriginX_,this.imageOriginY_,this.imageWidth_,this.imageHeight_,d,f,this.imageWidth_,this.imageHeight_)}this.imageOpacity_!=1&&(o.globalAlpha=l)}drawText_(e,t,i,n){if(!this.textState_||this.text_==="")return;this.textFillState_&&this.setContextFillState_(this.textFillState_),this.textStrokeState_&&this.setContextStrokeState_(this.textStrokeState_),this.setContextTextState_(this.textState_);const r=W1(e,t,i,n,this.transform_,this.pixelCoordinates_),o=this.context_;let a=this.textRotation_;for(this.transformRotation_===0&&(a-=this.viewRotation_),this.textRotateWithView_&&(a+=this.viewRotation_);t<i;t+=n){const l=r[t]+this.textOffsetX_,h=r[t+1]+this.textOffsetY_;a!==0||this.textScale_[0]!=1||this.textScale_[1]!=1?(o.save(),o.translate(l-this.textOffsetX_,h-this.textOffsetY_),o.rotate(a),o.translate(this.textOffsetX_,this.textOffsetY_),o.scale(this.textScale_[0],this.textScale_[1]),this.textStrokeState_&&o.strokeText(this.text_,0,0),this.textFillState_&&o.fillText(this.text_,0,0),o.restore()):(this.textStrokeState_&&o.strokeText(this.text_,l,h),this.textFillState_&&o.fillText(this.text_,l,h))}}moveToLineTo_(e,t,i,n,r){const o=this.context_,a=W1(e,t,i,n,this.transform_,this.pixelCoordinates_);o.moveTo(a[0],a[1]);let l=a.length;r&&(l-=2);for(let h=2;h<l;h+=2)o.lineTo(a[h],a[h+1]);return r&&o.closePath(),i}drawRings_(e,t,i,n){for(let r=0,o=i.length;r<o;++r)t=this.moveToLineTo_(e,t,i[r],n,!0);return t}drawCircle(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!r3(this.extent_,e.getExtent())){if(this.fillState_||this.strokeState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const t=gt(e,this.transform_,this.pixelCoordinates_),i=t[2]-t[0],n=t[3]-t[1],r=Math.sqrt(i*i+n*n),o=this.context_;o.beginPath(),o.arc(t[0],t[1],r,0,2*Math.PI),this.fillState_&&o.fill(),this.strokeState_&&o.stroke()}this.text_!==""&&this.drawText_(e.getCenter(),0,2,2)}}setStyle(e){this.setFillStrokeStyle(e.getFill(),e.getStroke()),this.setImageStyle(e.getImage()),this.setTextStyle(e.getText())}setTransform(e){this.transform_=e}drawGeometry(e){switch(e.getType()){case"Point":this.drawPoint(e);break;case"LineString":this.drawLineString(e);break;case"Polygon":this.drawPolygon(e);break;case"MultiPoint":this.drawMultiPoint(e);break;case"MultiLineString":this.drawMultiLineString(e);break;case"MultiPolygon":this.drawMultiPolygon(e);break;case"GeometryCollection":this.drawGeometryCollection(e);break;case"Circle":this.drawCircle(e);break}}drawFeature(e,t){const i=t.getGeometryFunction()(e);i&&(this.setStyle(t),this.drawGeometry(i))}drawGeometryCollection(e){const t=e.getGeometriesArray();for(let i=0,n=t.length;i<n;++i)this.drawGeometry(t[i])}drawPoint(e){this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const t=e.getFlatCoordinates(),i=e.getStride();this.image_&&this.drawImages_(t,0,t.length,i),this.text_!==""&&this.drawText_(t,0,t.length,i)}drawMultiPoint(e){this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const t=e.getFlatCoordinates(),i=e.getStride();this.image_&&this.drawImages_(t,0,t.length,i),this.text_!==""&&this.drawText_(t,0,t.length,i)}drawLineString(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!r3(this.extent_,e.getExtent())){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);const t=this.context_,i=e.getFlatCoordinates();t.beginPath(),this.moveToLineTo_(i,0,i.length,e.getStride(),!1),t.stroke()}if(this.text_!==""){const t=e.getFlatMidpoint();this.drawText_(t,0,2,2)}}}drawMultiLineString(e){this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_));const t=e.getExtent();if(r3(this.extent_,t)){if(this.strokeState_){this.setContextStrokeState_(this.strokeState_);const i=this.context_,n=e.getFlatCoordinates();let r=0;const o=e.getEnds(),a=e.getStride();i.beginPath();for(let l=0,h=o.length;l<h;++l)r=this.moveToLineTo_(n,r,o[l],a,!1);i.stroke()}if(this.text_!==""){const i=e.getFlatMidpoints();this.drawText_(i,0,i.length,2)}}}drawPolygon(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!r3(this.extent_,e.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const t=this.context_;t.beginPath(),this.drawRings_(e.getOrientedFlatCoordinates(),0,e.getEnds(),e.getStride()),this.fillState_&&t.fill(),this.strokeState_&&t.stroke()}if(this.text_!==""){const t=e.getFlatInteriorPoint();this.drawText_(t,0,2,2)}}}drawMultiPolygon(e){if(this.squaredTolerance_&&(e=e.simplifyTransformed(this.squaredTolerance_,this.userTransform_)),!!r3(this.extent_,e.getExtent())){if(this.strokeState_||this.fillState_){this.fillState_&&this.setContextFillState_(this.fillState_),this.strokeState_&&this.setContextStrokeState_(this.strokeState_);const t=this.context_,i=e.getOrientedFlatCoordinates();let n=0;const r=e.getEndss(),o=e.getStride();t.beginPath();for(let a=0,l=r.length;a<l;++a){const h=r[a];n=this.drawRings_(i,n,h,o)}this.fillState_&&t.fill(),this.strokeState_&&t.stroke()}if(this.text_!==""){const t=e.getFlatInteriorPoints();this.drawText_(t,0,t.length,2)}}}setContextFillState_(e){const t=this.context_,i=this.contextFillState_;i?i.fillStyle!=e.fillStyle&&(i.fillStyle=e.fillStyle,t.fillStyle=e.fillStyle):(t.fillStyle=e.fillStyle,this.contextFillState_={fillStyle:e.fillStyle})}setContextStrokeState_(e){const t=this.context_,i=this.contextStrokeState_;i?(i.lineCap!=e.lineCap&&(i.lineCap=e.lineCap,t.lineCap=e.lineCap),V1(i.lineDash,e.lineDash)||t.setLineDash(i.lineDash=e.lineDash),i.lineDashOffset!=e.lineDashOffset&&(i.lineDashOffset=e.lineDashOffset,t.lineDashOffset=e.lineDashOffset),i.lineJoin!=e.lineJoin&&(i.lineJoin=e.lineJoin,t.lineJoin=e.lineJoin),i.lineWidth!=e.lineWidth&&(i.lineWidth=e.lineWidth,t.lineWidth=e.lineWidth),i.miterLimit!=e.miterLimit&&(i.miterLimit=e.miterLimit,t.miterLimit=e.miterLimit),i.strokeStyle!=e.strokeStyle&&(i.strokeStyle=e.strokeStyle,t.strokeStyle=e.strokeStyle)):(t.lineCap=e.lineCap,t.setLineDash(e.lineDash),t.lineDashOffset=e.lineDashOffset,t.lineJoin=e.lineJoin,t.lineWidth=e.lineWidth,t.miterLimit=e.miterLimit,t.strokeStyle=e.strokeStyle,this.contextStrokeState_={lineCap:e.lineCap,lineDash:e.lineDash,lineDashOffset:e.lineDashOffset,lineJoin:e.lineJoin,lineWidth:e.lineWidth,miterLimit:e.miterLimit,strokeStyle:e.strokeStyle})}setContextTextState_(e){const t=this.context_,i=this.contextTextState_,n=e.textAlign?e.textAlign:y5;i?(i.font!=e.font&&(i.font=e.font,t.font=e.font),i.textAlign!=n&&(i.textAlign=n,t.textAlign=n),i.textBaseline!=e.textBaseline&&(i.textBaseline=e.textBaseline,t.textBaseline=e.textBaseline)):(t.font=e.font,t.textAlign=n,t.textBaseline=e.textBaseline,this.contextTextState_={font:e.font,textAlign:n,textBaseline:e.textBaseline})}setFillStrokeStyle(e,t){if(!e)this.fillState_=null;else{const i=e.getColor();this.fillState_={fillStyle:J3(i||R3)}}if(!t)this.strokeState_=null;else{const i=t.getColor(),n=t.getLineCap(),r=t.getLineDash(),o=t.getLineDashOffset(),a=t.getLineJoin(),l=t.getWidth(),h=t.getMiterLimit(),c=r||x1;this.strokeState_={lineCap:n!==void 0?n:W2,lineDash:this.pixelRatio_===1?c:c.map(u=>u*this.pixelRatio_),lineDashOffset:(o||E1)*this.pixelRatio_,lineJoin:a!==void 0?a:B2,lineWidth:(l!==void 0?l:x5)*this.pixelRatio_,miterLimit:h!==void 0?h:m5,strokeStyle:J3(i||p5)}}}setImageStyle(e){let t;if(!e||!(t=e.getSize())){this.image_=null;return}const i=e.getPixelRatio(this.pixelRatio_),n=e.getAnchor(),r=e.getOrigin();this.image_=e.getImage(this.pixelRatio_),this.imageAnchorX_=n[0]*i,this.imageAnchorY_=n[1]*i,this.imageHeight_=t[1]*i,this.imageOpacity_=e.getOpacity(),this.imageOriginX_=r[0],this.imageOriginY_=r[1],this.imageRotateWithView_=e.getRotateWithView(),this.imageRotation_=e.getRotation();const o=e.getScaleArray();this.imageScale_=[o[0]*this.pixelRatio_/i,o[1]*this.pixelRatio_/i],this.imageWidth_=t[0]*i}setTextStyle(e){if(!e)this.text_="";else{const t=e.getFill();if(!t)this.textFillState_=null;else{const f=t.getColor();this.textFillState_={fillStyle:J3(f||R3)}}const i=e.getStroke();if(!i)this.textStrokeState_=null;else{const f=i.getColor(),g=i.getLineCap(),_=i.getLineDash(),m=i.getLineDashOffset(),p=i.getLineJoin(),y=i.getWidth(),w=i.getMiterLimit();this.textStrokeState_={lineCap:g!==void 0?g:W2,lineDash:_||x1,lineDashOffset:m||E1,lineJoin:p!==void 0?p:B2,lineWidth:y!==void 0?y:x5,miterLimit:w!==void 0?w:m5,strokeStyle:J3(f||p5)}}const n=e.getFont(),r=e.getOffsetX(),o=e.getOffsetY(),a=e.getRotateWithView(),l=e.getRotation(),h=e.getScaleArray(),c=e.getText(),u=e.getTextAlign(),d=e.getTextBaseline();this.textState_={font:n!==void 0?n:v6,textAlign:u!==void 0?u:y5,textBaseline:d!==void 0?d:h0},this.text_=c!==void 0?Array.isArray(c)?c.reduce((f,g,_)=>f+=_%2?" ":g,""):c:"",this.textOffsetX_=r!==void 0?this.pixelRatio_*r:0,this.textOffsetY_=o!==void 0?this.pixelRatio_*o:0,this.textRotateWithView_=a!==void 0?a:!1,this.textRotation_=l!==void 0?l:0,this.textScale_=[this.pixelRatio_*h[0],this.pixelRatio_*h[1]]}}}const Mt=.5,Y6={Point:Gt,LineString:Dt,Polygon:zt,MultiPoint:Nt,MultiLineString:kt,MultiPolygon:Ot,GeometryCollection:Ft,Circle:Pt};function Lt(s,e){return parseInt(Z(s),10)-parseInt(Z(e),10)}function z4(s,e){const t=Z6(s,e);return t*t}function Z6(s,e){return Mt*s/e}function Pt(s,e,t,i,n){const r=t.getFill(),o=t.getStroke();if(r||o){const l=s.getBuilder(t.getZIndex(),"Circle");l.setFillStrokeStyle(r,o),l.drawCircle(e,i,n)}const a=t.getText();if(a&&a.getText()){const l=s.getBuilder(t.getZIndex(),"Text");l.setTextStyle(a),l.drawText(e,i)}}function f0(s,e,t,i,n,r,o,a){const l=[],h=t.getImage();if(h){let d=!0;const f=h.getImageState();f==V.LOADED||f==V.ERROR?d=!1:f==V.IDLE&&h.load(),d&&l.push(h.ready())}const c=t.getFill();c&&c.loading()&&l.push(c.ready());const u=l.length>0;return u&&Promise.all(l).then(()=>n(null)),bt(s,e,t,i,r,o,a),u}function bt(s,e,t,i,n,r,o){const a=t.getGeometryFunction()(e);if(!a)return;const l=a.simplifyTransformed(i,n);if(t.getRenderer())H6(s,l,t,e,o);else{const c=Y6[l.getType()];c(s,l,t,e,o,r)}}function H6(s,e,t,i,n){if(e.getType()=="GeometryCollection"){const o=e.getGeometries();for(let a=0,l=o.length;a<l;++a)H6(s,o[a],t,i,n);return}s.getBuilder(t.getZIndex(),"Default").drawCustom(e,i,t.getRenderer(),t.getHitDetectionRenderer(),n)}function Ft(s,e,t,i,n,r){const o=e.getGeometriesArray();let a,l;for(a=0,l=o.length;a<l;++a){const h=Y6[o[a].getType()];h(s,o[a],t,i,n,r)}}function Dt(s,e,t,i,n){const r=t.getStroke();if(r){const a=s.getBuilder(t.getZIndex(),"LineString");a.setFillStrokeStyle(null,r),a.drawLineString(e,i,n)}const o=t.getText();if(o&&o.getText()){const a=s.getBuilder(t.getZIndex(),"Text");a.setTextStyle(o),a.drawText(e,i,n)}}function kt(s,e,t,i,n){const r=t.getStroke();if(r){const a=s.getBuilder(t.getZIndex(),"LineString");a.setFillStrokeStyle(null,r),a.drawMultiLineString(e,i,n)}const o=t.getText();if(o&&o.getText()){const a=s.getBuilder(t.getZIndex(),"Text");a.setTextStyle(o),a.drawText(e,i,n)}}function Ot(s,e,t,i,n){const r=t.getFill(),o=t.getStroke();if(o||r){const l=s.getBuilder(t.getZIndex(),"Polygon");l.setFillStrokeStyle(r,o),l.drawMultiPolygon(e,i,n)}const a=t.getText();if(a&&a.getText()){const l=s.getBuilder(t.getZIndex(),"Text");l.setTextStyle(a),l.drawText(e,i,n)}}function Gt(s,e,t,i,n,r){const o=t.getImage(),a=t.getText(),l=a&&a.getText(),h=r&&o&&l?{}:void 0;if(o){if(o.getImageState()!=V.LOADED)return;const c=s.getBuilder(t.getZIndex(),"Image");c.setImageStyle(o,h),c.drawPoint(e,i,n)}if(l){const c=s.getBuilder(t.getZIndex(),"Text");c.setTextStyle(a,h),c.drawText(e,i,n)}}function Nt(s,e,t,i,n,r){const o=t.getImage(),a=o&&o.getOpacity()!==0,l=t.getText(),h=l&&l.getText(),c=r&&a&&h?{}:void 0;if(a){if(o.getImageState()!=V.LOADED)return;const u=s.getBuilder(t.getZIndex(),"Image");u.setImageStyle(o,c),u.drawMultiPoint(e,i,n)}if(h){const u=s.getBuilder(t.getZIndex(),"Text");u.setTextStyle(l,c),u.drawText(e,i,n)}}function zt(s,e,t,i,n){const r=t.getFill(),o=t.getStroke();if(r||o){const l=s.getBuilder(t.getZIndex(),"Polygon");l.setFillStrokeStyle(r,o),l.drawPolygon(e,i,n)}const a=t.getText();if(a&&a.getText()){const l=s.getBuilder(t.getZIndex(),"Text");l.setTextStyle(a),l.drawText(e,i,n)}}let Wt=!1;function U6(s,e,t,i,n,r,o){const a=new XMLHttpRequest;a.open("GET",typeof s=="function"?s(t,i,n):s,!0),e.getType()=="arraybuffer"&&(a.responseType="arraybuffer"),a.withCredentials=Wt,a.onload=function(l){if(!a.status||a.status>=200&&a.status<300){const h=e.getType();try{let c;h=="text"||h=="json"?c=a.responseText:h=="xml"?c=a.responseXML||a.responseText:h=="arraybuffer"&&(c=a.response),c?r(e.readFeatures(c,{extent:t,featureProjection:n}),e.readProjection(c)):o()}catch{o()}}else o()},a.onerror=o,a.send()}function T8(s,e){return function(t,i,n,r,o){U6(s,e,t,i,n,(a,l)=>{this.addFeatures(a),r!==void 0&&r(a)},o||N2)}}function Bt(s,e){return[[-1/0,-1/0,1/0,1/0]]}function j6(s,e,t,i){const n=[];let r=K3();for(let o=0,a=t.length;o<a;++o){const l=t[o];r=j4(s,e,l[0],i),n.push((r[0]+r[2])/2,(r[1]+r[3])/2),e=l[l.length-1]}return n}class K0 extends Y1{constructor(e,t,i){super(),i!==void 0&&t===void 0?this.setFlatCoordinates(i,e):(t=t||0,this.setCenterAndRadius(e,t,i))}clone(){const e=new K0(this.flatCoordinates.slice(),void 0,this.layout);return e.applyProperties(this),e}closestPointXY(e,t,i,n){const r=this.flatCoordinates,o=e-r[0],a=t-r[1],l=o*o+a*a;if(l<n){if(l===0)for(let h=0;h<this.stride;++h)i[h]=r[h];else{const h=this.getRadius()/Math.sqrt(l);i[0]=r[0]+h*o,i[1]=r[1]+h*a;for(let c=2;c<this.stride;++c)i[c]=r[c]}return i.length=this.stride,l}return n}containsXY(e,t){const i=this.flatCoordinates,n=e-i[0],r=t-i[1];return n*n+r*r<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(e){const t=this.flatCoordinates,i=t[this.stride]-t[0];return w1(t[0]-i,t[1]-i,t[0]+i,t[1]+i,e)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const e=this.flatCoordinates[this.stride]-this.flatCoordinates[0],t=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return e*e+t*t}getType(){return"Circle"}intersectsExtent(e){const t=this.getExtent();if(r3(e,t)){const i=this.getCenter();return e[0]<=i[0]&&e[2]>=i[0]||e[1]<=i[1]&&e[3]>=i[1]?!0:q4(e,this.intersectsCoordinate.bind(this))}return!1}setCenter(e){const t=this.stride,i=this.flatCoordinates[t]-this.flatCoordinates[0],n=e.slice();n[t]=n[0]+i;for(let r=1;r<t;++r)n[t+r]=e[r];this.setFlatCoordinates(this.layout,n),this.changed()}setCenterAndRadius(e,t,i){this.setLayout(i,e,0),this.flatCoordinates||(this.flatCoordinates=[]);const n=this.flatCoordinates;let r=k6(n,0,e,this.stride);n[r++]=n[0]+t;for(let o=1,a=this.stride;o<a;++o)n[r++]=n[o];n.length=r,this.changed()}getCoordinates(){return null}setCoordinates(e,t){}setRadius(e){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+e,this.changed()}rotate(e,t){const i=this.getCenter(),n=this.getStride();this.setCenter(_9(i,0,i.length,n,e,t,i)),this.changed()}}K0.prototype.transform;class g0 extends b6{constructor(e){super(),this.geometries_=e,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(t3),this.changeEventsKeys_.length=0}listenGeometriesChange_(){const e=this.geometries_;for(let t=0,i=e.length;t<i;++t)this.changeEventsKeys_.push(j(e[t],z.CHANGE,this.changed,this))}clone(){const e=new g0(o4(this.geometries_));return e.applyProperties(this),e}closestPointXY(e,t,i,n){if(n<a2(this.getExtent(),e,t))return n;const r=this.geometries_;for(let o=0,a=r.length;o<a;++o)n=r[o].closestPointXY(e,t,i,n);return n}containsXY(e,t){const i=this.geometries_;for(let n=0,r=i.length;n<r;++n)if(i[n].containsXY(e,t))return!0;return!1}computeExtent(e){T5(e);const t=this.geometries_;for(let i=0,n=t.length;i<n;++i)s6(e,t[i].getExtent());return e}getGeometries(){return o4(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let e=[];const t=this.geometries_;for(let i=0,n=t.length;i<n;++i)t[i].getType()===this.getType()?e=e.concat(t[i].getGeometriesArrayRecursive()):e.push(t[i]);return e}getSimplifiedGeometry(e){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||this.simplifiedGeometryMaxMinSquaredTolerance!==0&&e<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const t=[],i=this.geometries_;let n=!1;for(let r=0,o=i.length;r<o;++r){const a=i[r],l=a.getSimplifiedGeometry(e);t.push(l),l!==a&&(n=!0)}return n?new g0(t):(this.simplifiedGeometryMaxMinSquaredTolerance=e,this)}getType(){return"GeometryCollection"}intersectsExtent(e){const t=this.geometries_;for(let i=0,n=t.length;i<n;++i)if(t[i].intersectsExtent(e))return!0;return!1}isEmpty(){return this.geometries_.length===0}rotate(e,t){const i=this.geometries_;for(let n=0,r=i.length;n<r;++n)i[n].rotate(e,t);this.changed()}scale(e,t,i){i||(i=C1(this.getExtent()));const n=this.geometries_;for(let r=0,o=n.length;r<o;++r)n[r].scale(e,t,i);this.changed()}setGeometries(e){this.setGeometriesArray(o4(e))}setGeometriesArray(e){this.unlistenGeometriesChange_(),this.geometries_=e,this.listenGeometriesChange_(),this.changed()}applyTransform(e){const t=this.geometries_;for(let i=0,n=t.length;i<n;++i)t[i].applyTransform(e);this.changed()}translate(e,t){const i=this.geometries_;for(let n=0,r=i.length;n<r;++n)i[n].translate(e,t);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function o4(s){return s.map(e=>e.clone())}class K2 extends Y1{constructor(e,t,i){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(e[0]))this.setCoordinates(e,t);else if(t!==void 0&&i)this.setFlatCoordinates(t,e),this.ends_=i;else{const n=e,r=[],o=[];for(let l=0,h=n.length;l<h;++l){const c=n[l];t1(r,c.getFlatCoordinates()),o.push(r.length)}const a=n.length===0?this.getLayout():n[0].getLayout();this.setFlatCoordinates(a,r),this.ends_=o}}appendLineString(e){t1(this.flatCoordinates,e.getFlatCoordinates().slice()),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const e=new K2(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return e.applyProperties(this),e}closestPointXY(e,t,i,n){return n<a2(this.getExtent(),e,t)?n:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(p9(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),x9(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,e,t,i,n))}getCoordinateAtM(e,t,i){return this.layout!="XYM"&&this.layout!="XYZM"||this.flatCoordinates.length===0?null:(t=t!==void 0?t:!1,i=i!==void 0?i:!1,vt(this.flatCoordinates,0,this.ends_,this.stride,e,t,i))}getCoordinates(){return E5(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(e){return e<0||this.ends_.length<=e?null:new n1(this.flatCoordinates.slice(e===0?0:this.ends_[e-1],this.ends_[e]),this.layout)}getLineStrings(){const e=this.flatCoordinates,t=this.ends_,i=this.layout,n=[];let r=0;for(let o=0,a=t.length;o<a;++o){const l=t[o],h=new n1(e.slice(r,l),i);n.push(h),r=l}return n}getFlatMidpoints(){const e=[],t=this.flatCoordinates;let i=0;const n=this.ends_,r=this.stride;for(let o=0,a=n.length;o<a;++o){const l=n[o],h=d0(t,i,l,r,.5);t1(e,h),i=l}return e}getSimplifiedGeometryInternal(e){const t=[],i=[];return t.length=O6(this.flatCoordinates,0,this.ends_,this.stride,e,t,0,i),new K2(t,"XY",i)}getType(){return"MultiLineString"}intersectsExtent(e){return St(this.flatCoordinates,0,this.ends_,this.stride,e)}setCoordinates(e,t){this.setLayout(t,e,2),this.flatCoordinates||(this.flatCoordinates=[]);const i=E9(this.flatCoordinates,0,e,this.stride,this.ends_);this.flatCoordinates.length=i.length===0?0:i[i.length-1],this.changed()}}class M5 extends Y1{constructor(e,t){super(),t&&!Array.isArray(e[0])?this.setFlatCoordinates(t,e):this.setCoordinates(e,t)}appendPoint(e){t1(this.flatCoordinates,e.getFlatCoordinates()),this.changed()}clone(){const e=new M5(this.flatCoordinates.slice(),this.layout);return e.applyProperties(this),e}closestPointXY(e,t,i,n){if(n<a2(this.getExtent(),e,t))return n;const r=this.flatCoordinates,o=this.stride;for(let a=0,l=r.length;a<l;a+=o){const h=y1(e,t,r[a],r[a+1]);if(h<n){n=h;for(let c=0;c<o;++c)i[c]=r[a+c];i.length=o}}return n}getCoordinates(){return k1(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)}getPoint(e){const t=this.flatCoordinates.length/this.stride;return e<0||t<=e?null:new i1(this.flatCoordinates.slice(e*this.stride,(e+1)*this.stride),this.layout)}getPoints(){const e=this.flatCoordinates,t=this.layout,i=this.stride,n=[];for(let r=0,o=e.length;r<o;r+=i){const a=new i1(e.slice(r,r+i),t);n.push(a)}return n}getType(){return"MultiPoint"}intersectsExtent(e){const t=this.flatCoordinates,i=this.stride;for(let n=0,r=t.length;n<r;n+=i){const o=t[n],a=t[n+1];if(U4(e,o,a))return!0}return!1}setCoordinates(e,t){this.setLayout(t,e,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=z0(this.flatCoordinates,0,e,this.stride),this.changed()}}class X2 extends Y1{constructor(e,t,i){if(super(),this.endss_=[],this.flatInteriorPointsRevision_=-1,this.flatInteriorPoints_=null,this.maxDelta_=-1,this.maxDeltaRevision_=-1,this.orientedRevision_=-1,this.orientedFlatCoordinates_=null,!i&&!Array.isArray(e[0])){const n=e,r=[],o=[];for(let a=0,l=n.length;a<l;++a){const h=n[a],c=r.length,u=h.getEnds();for(let d=0,f=u.length;d<f;++d)u[d]+=c;t1(r,h.getFlatCoordinates()),o.push(u)}t=n.length===0?this.getLayout():n[0].getLayout(),e=r,i=o}t!==void 0&&i?(this.setFlatCoordinates(t,e),this.endss_=i):this.setCoordinates(e,t)}appendPolygon(e){let t;if(!this.flatCoordinates)this.flatCoordinates=e.getFlatCoordinates().slice(),t=e.getEnds().slice(),this.endss_.push();else{const i=this.flatCoordinates.length;t1(this.flatCoordinates,e.getFlatCoordinates()),t=e.getEnds().slice();for(let n=0,r=t.length;n<r;++n)t[n]+=i}this.endss_.push(t),this.changed()}clone(){const e=this.endss_.length,t=new Array(e);for(let n=0;n<e;++n)t[n]=this.endss_[n].slice();const i=new X2(this.flatCoordinates.slice(),this.layout,t);return i.applyProperties(this),i}closestPointXY(e,t,i,n){return n<a2(this.getExtent(),e,t)?n:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(mt(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),pt(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,e,t,i,n))}containsXY(e,t){return Ct(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,e,t)}getArea(){return _t(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)}getCoordinates(e){let t;return e!==void 0?(t=this.getOrientedFlatCoordinates().slice(),C8(t,0,this.endss_,this.stride,e)):t=this.flatCoordinates,O4(t,0,this.endss_,this.stride)}getEndss(){return this.endss_}getFlatInteriorPoints(){if(this.flatInteriorPointsRevision_!=this.getRevision()){const e=j6(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=G6(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,e),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_}getInteriorPoints(){return new M5(this.getFlatInteriorPoints().slice(),"XYM")}getOrientedFlatCoordinates(){if(this.orientedRevision_!=this.getRevision()){const e=this.flatCoordinates;It(e,0,this.endss_,this.stride)?this.orientedFlatCoordinates_=e:(this.orientedFlatCoordinates_=e.slice(),this.orientedFlatCoordinates_.length=C8(this.orientedFlatCoordinates_,0,this.endss_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_}getSimplifiedGeometryInternal(e){const t=[],i=[];return t.length=Et(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(e),t,0,i),new X2(t,"XY",i)}getPolygon(e){if(e<0||this.endss_.length<=e)return null;let t;if(e===0)t=0;else{const r=this.endss_[e-1];t=r[r.length-1]}const i=this.endss_[e].slice(),n=i[i.length-1];if(t!==0)for(let r=0,o=i.length;r<o;++r)i[r]-=t;return new s1(this.flatCoordinates.slice(t,n),this.layout,i)}getPolygons(){const e=this.layout,t=this.flatCoordinates,i=this.endss_,n=[];let r=0;for(let o=0,a=i.length;o<a;++o){const l=i[o].slice(),h=l[l.length-1];if(r!==0)for(let u=0,d=l.length;u<d;++u)l[u]-=r;const c=new s1(t.slice(r,h),e,l);n.push(c),r=h}return n}getType(){return"MultiPolygon"}intersectsExtent(e){return Tt(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,e)}setCoordinates(e,t){this.setLayout(t,e,3),this.flatCoordinates||(this.flatCoordinates=[]);const i=yt(this.flatCoordinates,0,e,this.stride,this.endss_);if(i.length===0)this.flatCoordinates.length=0;else{const n=i[i.length-1];this.flatCoordinates.length=n.length===0?0:n[n.length-1]}this.changed()}}const R8=B3();class P3{constructor(e,t,i,n,r,o){this.styleFunction,this.extent_,this.id_=o,this.type_=e,this.flatCoordinates_=t,this.flatInteriorPoints_=null,this.flatMidpoints_=null,this.ends_=i||null,this.properties_=r,this.squaredTolerance_,this.stride_=n,this.simplifiedGeometry_}get(e){return this.properties_[e]}getExtent(){return this.extent_||(this.extent_=this.type_==="Point"?n6(this.flatCoordinates_):j4(this.flatCoordinates_,0,this.flatCoordinates_.length,2)),this.extent_}getFlatInteriorPoint(){if(!this.flatInteriorPoints_){const e=C1(this.getExtent());this.flatInteriorPoints_=S9(this.flatCoordinates_,0,this.ends_,2,e,0)}return this.flatInteriorPoints_}getFlatInteriorPoints(){if(!this.flatInteriorPoints_){const e=K6(this.flatCoordinates_,this.ends_),t=j6(this.flatCoordinates_,0,e,2);this.flatInteriorPoints_=G6(this.flatCoordinates_,0,e,2,t)}return this.flatInteriorPoints_}getFlatMidpoint(){return this.flatMidpoints_||(this.flatMidpoints_=d0(this.flatCoordinates_,0,this.flatCoordinates_.length,2,.5)),this.flatMidpoints_}getFlatMidpoints(){if(!this.flatMidpoints_){this.flatMidpoints_=[];const e=this.flatCoordinates_;let t=0;const i=this.ends_;for(let n=0,r=i.length;n<r;++n){const o=i[n],a=d0(e,t,o,2,.5);t1(this.flatMidpoints_,a),t=o}}return this.flatMidpoints_}getId(){return this.id_}getOrientedFlatCoordinates(){return this.flatCoordinates_}getGeometry(){return this}getSimplifiedGeometry(e){return this}simplifyTransformed(e,t){return this}getProperties(){return this.properties_}getPropertiesInternal(){return this.properties_}getStride(){return this.stride_}getStyleFunction(){return this.styleFunction}getType(){return this.type_}transform(e){e=c3(e);const t=e.getExtent(),i=e.getWorldExtent();if(t&&i){const n=C3(i)/C3(t);T1(R8,i[0],i[3],n,-n,0,0,0),W1(this.flatCoordinates_,0,this.flatCoordinates_.length,2,R8,this.flatCoordinates_)}}applyTransform(e){e(this.flatCoordinates_,this.flatCoordinates_,this.stride_)}clone(){var e;return new P3(this.type_,this.flatCoordinates_.slice(),(e=this.ends_)==null?void 0:e.slice(),this.stride_,Object.assign({},this.properties_),this.id_)}getEnds(){return this.ends_}enableSimplifyTransformed(){return this.simplifyTransformed=T6((e,t)=>{if(e===this.squaredTolerance_)return this.simplifiedGeometry_;this.simplifiedGeometry_=this.clone(),t&&this.simplifiedGeometry_.applyTransform(t);const i=this.simplifiedGeometry_.getFlatCoordinates();let n;switch(this.type_){case"LineString":i.length=W0(i,0,this.simplifiedGeometry_.flatCoordinates_.length,this.simplifiedGeometry_.stride_,e,i,0),n=[i.length];break;case"MultiLineString":n=[],i.length=O6(i,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,e,i,0,n);break;case"Polygon":n=[],i.length=w9(i,0,this.simplifiedGeometry_.ends_,this.simplifiedGeometry_.stride_,Math.sqrt(e),i,0,n);break}return n&&(this.simplifiedGeometry_=new P3(this.type_,i,n,2,this.properties_,this.id_)),this.squaredTolerance_=e,this.simplifiedGeometry_}),this}}P3.prototype.getFlatCoordinates=P3.prototype.getOrientedFlatCoordinates;function q6(s,e,t=0,i=s.length-1,n=Kt){for(;i>t;){if(i-t>600){const l=i-t+1,h=e-t+1,c=Math.log(l),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(l-u)/l)*(h-l/2<0?-1:1),f=Math.max(t,Math.floor(e-h*u/l+d)),g=Math.min(i,Math.floor(e+(l-h)*u/l+d));q6(s,e,f,g,n)}const r=s[e];let o=t,a=i;for(i5(s,t,e),n(s[i],r)>0&&i5(s,t,i);o<a;){for(i5(s,o,a),o++,a--;n(s[o],r)<0;)o++;for(;n(s[a],r)>0;)a--}n(s[t],r)===0?i5(s,t,a):(a++,i5(s,a,i)),a<=e&&(t=a+1),e<=a&&(i=a-1)}}function i5(s,e,t){const i=s[e];s[e]=s[t],s[t]=i}function Kt(s,e){return s<e?-1:s>e?1:0}let $6=class{constructor(e=9){this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(this._maxEntries*.4)),this.clear()}all(){return this._all(this.data,[])}search(e){let t=this.data;const i=[];if(!Z5(e,t))return i;const n=this.toBBox,r=[];for(;t;){for(let o=0;o<t.children.length;o++){const a=t.children[o],l=t.leaf?n(a):a;Z5(e,l)&&(t.leaf?i.push(a):l4(e,l)?this._all(a,i):r.push(a))}t=r.pop()}return i}collides(e){let t=this.data;if(!Z5(e,t))return!1;const i=[];for(;t;){for(let n=0;n<t.children.length;n++){const r=t.children[n],o=t.leaf?this.toBBox(r):r;if(Z5(e,o)){if(t.leaf||l4(e,o))return!0;i.push(r)}}t=i.pop()}return!1}load(e){if(!(e&&e.length))return this;if(e.length<this._minEntries){for(let i=0;i<e.length;i++)this.insert(e[i]);return this}let t=this._build(e.slice(),0,e.length-1,0);if(!this.data.children.length)this.data=t;else if(this.data.height===t.height)this._splitRoot(this.data,t);else{if(this.data.height<t.height){const i=this.data;this.data=t,t=i}this._insert(t,this.data.height-t.height-1,!0)}return this}insert(e){return e&&this._insert(e,this.data.height-1),this}clear(){return this.data=w2([]),this}remove(e,t){if(!e)return this;let i=this.data;const n=this.toBBox(e),r=[],o=[];let a,l,h;for(;i||r.length;){if(i||(i=r.pop(),l=r[r.length-1],a=o.pop(),h=!0),i.leaf){const c=Xt(e,i.children,t);if(c!==-1)return i.children.splice(c,1),r.push(i),this._condense(r),this}!h&&!i.leaf&&l4(i,n)?(r.push(i),o.push(a),a=0,l=i,i=i.children[0]):l?(a++,i=l.children[a],h=!1):i=null}return this}toBBox(e){return e}compareMinX(e,t){return e.minX-t.minX}compareMinY(e,t){return e.minY-t.minY}toJSON(){return this.data}fromJSON(e){return this.data=e,this}_all(e,t){const i=[];for(;e;)e.leaf?t.push(...e.children):i.push(...e.children),e=i.pop();return t}_build(e,t,i,n){const r=i-t+1;let o=this._maxEntries,a;if(r<=o)return a=w2(e.slice(t,i+1)),f2(a,this.toBBox),a;n||(n=Math.ceil(Math.log(r)/Math.log(o)),o=Math.ceil(r/Math.pow(o,n-1))),a=w2([]),a.leaf=!1,a.height=n;const l=Math.ceil(r/o),h=l*Math.ceil(Math.sqrt(o));I8(e,t,i,h,this.compareMinX);for(let c=t;c<=i;c+=h){const u=Math.min(c+h-1,i);I8(e,c,u,l,this.compareMinY);for(let d=c;d<=u;d+=l){const f=Math.min(d+l-1,u);a.children.push(this._build(e,d,f,n-1))}}return f2(a,this.toBBox),a}_chooseSubtree(e,t,i,n){for(;n.push(t),!(t.leaf||n.length-1===i);){let r=1/0,o=1/0,a;for(let l=0;l<t.children.length;l++){const h=t.children[l],c=a4(h),u=Zt(e,h)-c;u<o?(o=u,r=c<r?c:r,a=h):u===o&&c<r&&(r=c,a=h)}t=a||t.children[0]}return t}_insert(e,t,i){const n=i?e:this.toBBox(e),r=[],o=this._chooseSubtree(n,this.data,t,r);for(o.children.push(e),o5(o,n);t>=0&&r[t].children.length>this._maxEntries;)this._split(r,t),t--;this._adjustParentBBoxes(n,r,t)}_split(e,t){const i=e[t],n=i.children.length,r=this._minEntries;this._chooseSplitAxis(i,r,n);const o=this._chooseSplitIndex(i,r,n),a=w2(i.children.splice(o,i.children.length-o));a.height=i.height,a.leaf=i.leaf,f2(i,this.toBBox),f2(a,this.toBBox),t?e[t-1].children.push(a):this._splitRoot(i,a)}_splitRoot(e,t){this.data=w2([e,t]),this.data.height=e.height+1,this.data.leaf=!1,f2(this.data,this.toBBox)}_chooseSplitIndex(e,t,i){let n,r=1/0,o=1/0;for(let a=t;a<=i-t;a++){const l=r5(e,0,a,this.toBBox),h=r5(e,a,i,this.toBBox),c=Ht(l,h),u=a4(l)+a4(h);c<r?(r=c,n=a,o=u<o?u:o):c===r&&u<o&&(o=u,n=a)}return n||i-t}_chooseSplitAxis(e,t,i){const n=e.leaf?this.compareMinX:Vt,r=e.leaf?this.compareMinY:Yt,o=this._allDistMargin(e,t,i,n),a=this._allDistMargin(e,t,i,r);o<a&&e.children.sort(n)}_allDistMargin(e,t,i,n){e.children.sort(n);const r=this.toBBox,o=r5(e,0,t,r),a=r5(e,i-t,i,r);let l=Y5(o)+Y5(a);for(let h=t;h<i-t;h++){const c=e.children[h];o5(o,e.leaf?r(c):c),l+=Y5(o)}for(let h=i-t-1;h>=t;h--){const c=e.children[h];o5(a,e.leaf?r(c):c),l+=Y5(a)}return l}_adjustParentBBoxes(e,t,i){for(let n=i;n>=0;n--)o5(t[n],e)}_condense(e){for(let t=e.length-1,i;t>=0;t--)e[t].children.length===0?t>0?(i=e[t-1].children,i.splice(i.indexOf(e[t]),1)):this.clear():f2(e[t],this.toBBox)}};function Xt(s,e,t){if(!t)return e.indexOf(s);for(let i=0;i<e.length;i++)if(t(s,e[i]))return i;return-1}function f2(s,e){r5(s,0,s.children.length,e,s)}function r5(s,e,t,i,n){n||(n=w2(null)),n.minX=1/0,n.minY=1/0,n.maxX=-1/0,n.maxY=-1/0;for(let r=e;r<t;r++){const o=s.children[r];o5(n,s.leaf?i(o):o)}return n}function o5(s,e){return s.minX=Math.min(s.minX,e.minX),s.minY=Math.min(s.minY,e.minY),s.maxX=Math.max(s.maxX,e.maxX),s.maxY=Math.max(s.maxY,e.maxY),s}function Vt(s,e){return s.minX-e.minX}function Yt(s,e){return s.minY-e.minY}function a4(s){return(s.maxX-s.minX)*(s.maxY-s.minY)}function Y5(s){return s.maxX-s.minX+(s.maxY-s.minY)}function Zt(s,e){return(Math.max(e.maxX,s.maxX)-Math.min(e.minX,s.minX))*(Math.max(e.maxY,s.maxY)-Math.min(e.minY,s.minY))}function Ht(s,e){const t=Math.max(s.minX,e.minX),i=Math.max(s.minY,e.minY),n=Math.min(s.maxX,e.maxX),r=Math.min(s.maxY,e.maxY);return Math.max(0,n-t)*Math.max(0,r-i)}function l4(s,e){return s.minX<=e.minX&&s.minY<=e.minY&&e.maxX<=s.maxX&&e.maxY<=s.maxY}function Z5(s,e){return e.minX<=s.maxX&&e.minY<=s.maxY&&e.maxX>=s.minX&&e.maxY>=s.minY}function w2(s){return{children:s,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function I8(s,e,t,i,n){const r=[e,t];for(;r.length;){if(t=r.pop(),e=r.pop(),t-e<=i)continue;const o=e+Math.ceil((t-e)/i/2)*i;q6(s,o,e,t,n),r.push(e,o,o,t)}}class v8{constructor(e){this.rbush_=new $6(e),this.items_={}}insert(e,t){const i={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3],value:t};this.rbush_.insert(i),this.items_[Z(t)]=i}load(e,t){const i=new Array(t.length);for(let n=0,r=t.length;n<r;n++){const o=e[n],a=t[n],l={minX:o[0],minY:o[1],maxX:o[2],maxY:o[3],value:a};i[n]=l,this.items_[Z(a)]=l}this.rbush_.load(i)}remove(e){const t=Z(e),i=this.items_[t];return delete this.items_[t],this.rbush_.remove(i)!==null}update(e,t){const i=this.items_[Z(t)],n=[i.minX,i.minY,i.maxX,i.maxY];D2(n,e)||(this.remove(t),this.insert(e,t))}getAll(){return this.rbush_.all().map(function(t){return t.value})}getInExtent(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this.rbush_.search(t).map(function(n){return n.value})}forEach(e){return this.forEach_(this.getAll(),e)}forEachInExtent(e,t){return this.forEach_(this.getInExtent(e),t)}forEach_(e,t){let i;for(let n=0,r=e.length;n<r;n++)if(i=t(e[n]),i)return i;return i}isEmpty(){return r2(this.items_)}clear(){this.rbush_.clear(),this.items_={}}getExtent(e){const t=this.rbush_.toJSON();return w1(t.minX,t.minY,t.maxX,t.maxY,e)}concat(e){this.rbush_.load(e.rbush_.all());for(const t in e.items_)this.items_[t]=e.items_[t]}}class J6 extends o1{constructor(e){super(),this.projection=c3(e.projection),this.attributions_=A8(e.attributions),this.attributionsCollapsible_=e.attributionsCollapsible??!0,this.loading=!1,this.state_=e.state!==void 0?e.state:"ready",this.wrapX_=e.wrapX!==void 0?e.wrapX:!1,this.interpolate_=!!e.interpolate,this.viewResolver=null,this.viewRejector=null;const t=this;this.viewPromise_=new Promise(function(i,n){t.viewResolver=i,t.viewRejector=n})}getAttributions(){return this.attributions_}getAttributionsCollapsible(){return this.attributionsCollapsible_}getProjection(){return this.projection}getResolutions(e){return null}getView(){return this.viewPromise_}getState(){return this.state_}getWrapX(){return this.wrapX_}getInterpolate(){return this.interpolate_}refresh(){this.changed()}setAttributions(e){this.attributions_=A8(e),this.changed()}setState(e){this.state_=e,this.changed()}}function A8(s){return s?typeof s=="function"?s:(Array.isArray(s)||(s=[s]),e=>s):null}const G3={ADDFEATURE:"addfeature",CHANGEFEATURE:"changefeature",CLEAR:"clear",REMOVEFEATURE:"removefeature",FEATURESLOADSTART:"featuresloadstart",FEATURESLOADEND:"featuresloadend",FEATURESLOADERROR:"featuresloaderror"};class v1 extends r1{constructor(e,t,i){super(e),this.feature=t,this.features=i}}class R9 extends J6{constructor(e){e=e||{},super({attributions:e.attributions,interpolate:!0,projection:void 0,state:"ready",wrapX:e.wrapX!==void 0?e.wrapX:!0}),this.on,this.once,this.un,this.loader_=N2,this.format_=e.format||null,this.overlaps_=e.overlaps===void 0?!0:e.overlaps,this.url_=e.url,e.loader!==void 0?this.loader_=e.loader:this.url_!==void 0&&(q(this.format_,"`format` must be set when `url` is set"),this.loader_=T8(this.url_,this.format_)),this.strategy_=e.strategy!==void 0?e.strategy:Bt;const t=e.useSpatialIndex!==void 0?e.useSpatialIndex:!0;this.featuresRtree_=t?new v8:null,this.loadedExtentsRtree_=new v8,this.loadingExtentsCount_=0,this.nullGeometryFeatures_={},this.idIndex_={},this.uidIndex_={},this.featureChangeKeys_={},this.featuresCollection_=null;let i,n;Array.isArray(e.features)?n=e.features:e.features&&(i=e.features,n=i.getArray()),!t&&i===void 0&&(i=new Q3(n)),n!==void 0&&this.addFeaturesInternal(n),i!==void 0&&this.bindFeaturesCollection_(i)}addFeature(e){this.addFeatureInternal(e),this.changed()}addFeatureInternal(e){const t=Z(e);if(!this.addToIndex_(t,e)){this.featuresCollection_&&this.featuresCollection_.remove(e);return}this.setupChangeEvents_(t,e);const i=e.getGeometry();if(i){const n=i.getExtent();this.featuresRtree_&&this.featuresRtree_.insert(n,e)}else this.nullGeometryFeatures_[t]=e;this.dispatchEvent(new v1(G3.ADDFEATURE,e))}setupChangeEvents_(e,t){t instanceof P3||(this.featureChangeKeys_[e]=[j(t,z.CHANGE,this.handleFeatureChange_,this),j(t,z2.PROPERTYCHANGE,this.handleFeatureChange_,this)])}addToIndex_(e,t){let i=!0;if(t.getId()!==void 0){const n=String(t.getId());if(!(n in this.idIndex_))this.idIndex_[n]=t;else if(t instanceof P3){const r=this.idIndex_[n];r instanceof P3?Array.isArray(r)?r.push(t):this.idIndex_[n]=[r,t]:i=!1}else i=!1}return i&&(q(!(e in this.uidIndex_),"The passed `feature` was already added to the source"),this.uidIndex_[e]=t),i}addFeatures(e){this.addFeaturesInternal(e),this.changed()}addFeaturesInternal(e){const t=[],i=[],n=[];for(let r=0,o=e.length;r<o;r++){const a=e[r],l=Z(a);this.addToIndex_(l,a)&&i.push(a)}for(let r=0,o=i.length;r<o;r++){const a=i[r],l=Z(a);this.setupChangeEvents_(l,a);const h=a.getGeometry();if(h){const c=h.getExtent();t.push(c),n.push(a)}else this.nullGeometryFeatures_[l]=a}if(this.featuresRtree_&&this.featuresRtree_.load(t,n),this.hasListener(G3.ADDFEATURE))for(let r=0,o=i.length;r<o;r++)this.dispatchEvent(new v1(G3.ADDFEATURE,i[r]))}bindFeaturesCollection_(e){let t=!1;this.addEventListener(G3.ADDFEATURE,function(i){t||(t=!0,e.push(i.feature),t=!1)}),this.addEventListener(G3.REMOVEFEATURE,function(i){t||(t=!0,e.remove(i.feature),t=!1)}),e.addEventListener(I3.ADD,i=>{t||(t=!0,this.addFeature(i.element),t=!1)}),e.addEventListener(I3.REMOVE,i=>{t||(t=!0,this.removeFeature(i.element),t=!1)}),this.featuresCollection_=e}clear(e){if(e){for(const i in this.featureChangeKeys_)this.featureChangeKeys_[i].forEach(t3);this.featuresCollection_||(this.featureChangeKeys_={},this.idIndex_={},this.uidIndex_={})}else if(this.featuresRtree_){this.featuresRtree_.forEach(i=>{this.removeFeatureInternal(i)});for(const i in this.nullGeometryFeatures_)this.removeFeatureInternal(this.nullGeometryFeatures_[i])}this.featuresCollection_&&this.featuresCollection_.clear(),this.featuresRtree_&&this.featuresRtree_.clear(),this.nullGeometryFeatures_={};const t=new v1(G3.CLEAR);this.dispatchEvent(t),this.changed()}forEachFeature(e){if(this.featuresRtree_)return this.featuresRtree_.forEach(e);this.featuresCollection_&&this.featuresCollection_.forEach(e)}forEachFeatureAtCoordinateDirect(e,t){const i=[e[0],e[1],e[0],e[1]];return this.forEachFeatureInExtent(i,function(n){const r=n.getGeometry();if(r instanceof P3||r.intersectsCoordinate(e))return t(n)})}forEachFeatureInExtent(e,t){if(this.featuresRtree_)return this.featuresRtree_.forEachInExtent(e,t);this.featuresCollection_&&this.featuresCollection_.forEach(t)}forEachFeatureIntersectingExtent(e,t){return this.forEachFeatureInExtent(e,function(i){const n=i.getGeometry();if(n instanceof P3||n.intersectsExtent(e)){const r=t(i);if(r)return r}})}getFeaturesCollection(){return this.featuresCollection_}getFeatures(){let e;return this.featuresCollection_?e=this.featuresCollection_.getArray().slice(0):this.featuresRtree_&&(e=this.featuresRtree_.getAll(),r2(this.nullGeometryFeatures_)||t1(e,Object.values(this.nullGeometryFeatures_))),e}getFeaturesAtCoordinate(e){const t=[];return this.forEachFeatureAtCoordinateDirect(e,function(i){t.push(i)}),t}getFeaturesInExtent(e,t){if(this.featuresRtree_){if(!(t&&t.canWrapX()&&this.getWrapX()))return this.featuresRtree_.getInExtent(e);const n=l6(e,t);return[].concat(...n.map(r=>this.featuresRtree_.getInExtent(r)))}return this.featuresCollection_?this.featuresCollection_.getArray().slice(0):[]}getClosestFeatureToCoordinate(e,t){const i=e[0],n=e[1];let r=null;const o=[NaN,NaN];let a=1/0;const l=[-1/0,-1/0,1/0,1/0];return t=t||G2,this.featuresRtree_.forEachInExtent(l,function(h){if(t(h)){const c=h.getGeometry(),u=a;if(a=c instanceof P3?0:c.closestPointXY(i,n,o,a),a<u){r=h;const d=Math.sqrt(a);l[0]=i-d,l[1]=n-d,l[2]=i+d,l[3]=n+d}}}),r}getExtent(e){return this.featuresRtree_.getExtent(e)}getFeatureById(e){const t=this.idIndex_[e.toString()];return t!==void 0?t:null}getFeatureByUid(e){const t=this.uidIndex_[e];return t!==void 0?t:null}getFormat(){return this.format_}getOverlaps(){return this.overlaps_}getUrl(){return this.url_}handleFeatureChange_(e){const t=e.target,i=Z(t),n=t.getGeometry();if(!n)i in this.nullGeometryFeatures_||(this.featuresRtree_&&this.featuresRtree_.remove(t),this.nullGeometryFeatures_[i]=t);else{const o=n.getExtent();i in this.nullGeometryFeatures_?(delete this.nullGeometryFeatures_[i],this.featuresRtree_&&this.featuresRtree_.insert(o,t)):this.featuresRtree_&&this.featuresRtree_.update(o,t)}const r=t.getId();if(r!==void 0){const o=r.toString();this.idIndex_[o]!==t&&(this.removeFromIdIndex_(t),this.idIndex_[o]=t)}else this.removeFromIdIndex_(t),this.uidIndex_[i]=t;this.changed(),this.dispatchEvent(new v1(G3.CHANGEFEATURE,t))}hasFeature(e){const t=e.getId();return t!==void 0?t in this.idIndex_:Z(e)in this.uidIndex_}isEmpty(){return this.featuresRtree_?this.featuresRtree_.isEmpty()&&r2(this.nullGeometryFeatures_):this.featuresCollection_?this.featuresCollection_.getLength()===0:!0}loadFeatures(e,t,i){const n=this.loadedExtentsRtree_,r=this.strategy_(e,t,i);for(let o=0,a=r.length;o<a;++o){const l=r[o];n.forEachInExtent(l,function(c){return T2(c.extent,l)})||(++this.loadingExtentsCount_,this.dispatchEvent(new v1(G3.FEATURESLOADSTART)),this.loader_.call(this,l,t,i,c=>{--this.loadingExtentsCount_,this.dispatchEvent(new v1(G3.FEATURESLOADEND,void 0,c))},()=>{--this.loadingExtentsCount_,this.dispatchEvent(new v1(G3.FEATURESLOADERROR))}),n.insert(l,{extent:l.slice()}))}this.loading=this.loader_.length<4?!1:this.loadingExtentsCount_>0}refresh(){this.clear(!0),this.loadedExtentsRtree_.clear(),super.refresh()}removeLoadedExtent(e){const t=this.loadedExtentsRtree_,i=t.forEachInExtent(e,function(n){if(D2(n.extent,e))return n});i&&t.remove(i)}removeFeatures(e){let t=!1;for(let i=0,n=e.length;i<n;++i)t=this.removeFeatureInternal(e[i])||t;t&&this.changed()}removeFeature(e){if(!e)return;this.removeFeatureInternal(e)&&this.changed()}removeFeatureInternal(e){const t=Z(e);if(!(t in this.uidIndex_))return!1;t in this.nullGeometryFeatures_?delete this.nullGeometryFeatures_[t]:this.featuresRtree_&&this.featuresRtree_.remove(e);const i=this.featureChangeKeys_[t];i==null||i.forEach(t3),delete this.featureChangeKeys_[t];const n=e.getId();if(n!==void 0){const r=n.toString(),o=this.idIndex_[r];o===e?delete this.idIndex_[r]:Array.isArray(o)&&(o.splice(o.indexOf(e),1),o.length===1&&(this.idIndex_[r]=o[0]))}return delete this.uidIndex_[t],this.hasListener(G3.REMOVEFEATURE)&&this.dispatchEvent(new v1(G3.REMOVEFEATURE,e)),!0}removeFromIdIndex_(e){for(const t in this.idIndex_)if(this.idIndex_[t]===e){delete this.idIndex_[t];break}}setLoader(e){this.loader_=e}setUrl(e){q(this.format_,"`format` must be set when `url` is set"),this.url_=e,this.setLoader(T8(e,this.format_))}setOverlaps(e){this.overlaps_=e,this.changed()}}const s3={ANIMATING:0,INTERACTING:1},G={BEGIN_GEOMETRY:0,BEGIN_PATH:1,CIRCLE:2,CLOSE_PATH:3,CUSTOM:4,DRAW_CHARS:5,DRAW_IMAGE:6,END_GEOMETRY:7,FILL:8,MOVE_TO_LINE_TO:9,SET_FILL_STYLE:10,SET_STROKE_STYLE:11,STROKE:12},H5=[G.FILL],O1=[G.STROKE],i2=[G.BEGIN_PATH],M8=[G.CLOSE_PATH];class L5 extends V6{constructor(e,t,i,n){super(),this.tolerance=e,this.maxExtent=t,this.pixelRatio=n,this.maxLineWidth=0,this.resolution=i,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_=null,this.bufferedMaxExtent_=null,this.instructions=[],this.coordinates=[],this.tmpCoordinate_=[],this.hitDetectionInstructions=[],this.state={}}applyPixelRatio(e){const t=this.pixelRatio;return t==1?e:e.map(function(i){return i*t})}appendFlatPointCoordinates(e,t){const i=this.getBufferedMaxExtent(),n=this.tmpCoordinate_,r=this.coordinates;let o=r.length;for(let a=0,l=e.length;a<l;a+=t)n[0]=e[a],n[1]=e[a+1],F2(i,n)&&(r[o++]=n[0],r[o++]=n[1]);return o}appendFlatLineCoordinates(e,t,i,n,r,o){const a=this.coordinates;let l=a.length;const h=this.getBufferedMaxExtent();o&&(t+=n);let c=e[t],u=e[t+1];const d=this.tmpCoordinate_;let f=!0,g,_,m;for(g=t+n;g<i;g+=n)d[0]=e[g],d[1]=e[g+1],m=R4(h,d),m!==_?(f&&(a[l++]=c,a[l++]=u,f=!1),a[l++]=d[0],a[l++]=d[1]):m===u3.INTERSECTING?(a[l++]=d[0],a[l++]=d[1],f=!1):f=!0,c=d[0],u=d[1],_=m;return(r&&f||g===t+n)&&(a[l++]=c,a[l++]=u),l}drawCustomCoordinates_(e,t,i,n,r){for(let o=0,a=i.length;o<a;++o){const l=i[o],h=this.appendFlatLineCoordinates(e,t,l,n,!1,!1);r.push(h),t=l}return t}drawCustom(e,t,i,n,r){this.beginGeometry(e,t,r);const o=e.getType(),a=e.getStride(),l=this.coordinates.length;let h,c,u,d,f;switch(o){case"MultiPolygon":h=e.getOrientedFlatCoordinates(),d=[];const g=e.getEndss();f=0;for(let _=0,m=g.length;_<m;++_){const p=[];f=this.drawCustomCoordinates_(h,f,g[_],a,p),d.push(p)}this.instructions.push([G.CUSTOM,l,d,e,i,O4,r]),this.hitDetectionInstructions.push([G.CUSTOM,l,d,e,n||i,O4,r]);break;case"Polygon":case"MultiLineString":u=[],h=o=="Polygon"?e.getOrientedFlatCoordinates():e.getFlatCoordinates(),f=this.drawCustomCoordinates_(h,0,e.getEnds(),a,u),this.instructions.push([G.CUSTOM,l,u,e,i,E5,r]),this.hitDetectionInstructions.push([G.CUSTOM,l,u,e,n||i,E5,r]);break;case"LineString":case"Circle":h=e.getFlatCoordinates(),c=this.appendFlatLineCoordinates(h,0,h.length,a,!1,!1),this.instructions.push([G.CUSTOM,l,c,e,i,k1,r]),this.hitDetectionInstructions.push([G.CUSTOM,l,c,e,n||i,k1,r]);break;case"MultiPoint":h=e.getFlatCoordinates(),c=this.appendFlatPointCoordinates(h,a),c>l&&(this.instructions.push([G.CUSTOM,l,c,e,i,k1,r]),this.hitDetectionInstructions.push([G.CUSTOM,l,c,e,n||i,k1,r]));break;case"Point":h=e.getFlatCoordinates(),this.coordinates.push(h[0],h[1]),c=this.coordinates.length,this.instructions.push([G.CUSTOM,l,c,e,i,void 0,r]),this.hitDetectionInstructions.push([G.CUSTOM,l,c,e,n||i,void 0,r]);break}this.endGeometry(t)}beginGeometry(e,t,i){this.beginGeometryInstruction1_=[G.BEGIN_GEOMETRY,t,0,e,i],this.instructions.push(this.beginGeometryInstruction1_),this.beginGeometryInstruction2_=[G.BEGIN_GEOMETRY,t,0,e,i],this.hitDetectionInstructions.push(this.beginGeometryInstruction2_)}finish(){return{instructions:this.instructions,hitDetectionInstructions:this.hitDetectionInstructions,coordinates:this.coordinates}}reverseHitDetectionInstructions(){const e=this.hitDetectionInstructions;e.reverse();let t;const i=e.length;let n,r,o=-1;for(t=0;t<i;++t)n=e[t],r=n[0],r==G.END_GEOMETRY?o=t:r==G.BEGIN_GEOMETRY&&(n[2]=t,ze(this.hitDetectionInstructions,o,t),o=-1)}fillStyleToState(e,t={}){if(e){const i=e.getColor();t.fillPatternScale=i&&typeof i=="object"&&"src"in i?this.pixelRatio:1,t.fillStyle=J3(i||R3)}else t.fillStyle=void 0;return t}strokeStyleToState(e,t={}){if(e){const i=e.getColor();t.strokeStyle=J3(i||p5);const n=e.getLineCap();t.lineCap=n!==void 0?n:W2;const r=e.getLineDash();t.lineDash=r?r.slice():x1;const o=e.getLineDashOffset();t.lineDashOffset=o||E1;const a=e.getLineJoin();t.lineJoin=a!==void 0?a:B2;const l=e.getWidth();t.lineWidth=l!==void 0?l:x5;const h=e.getMiterLimit();t.miterLimit=h!==void 0?h:m5,t.lineWidth>this.maxLineWidth&&(this.maxLineWidth=t.lineWidth,this.bufferedMaxExtent_=null)}else t.strokeStyle=void 0,t.lineCap=void 0,t.lineDash=null,t.lineDashOffset=void 0,t.lineJoin=void 0,t.lineWidth=void 0,t.miterLimit=void 0;return t}setFillStrokeStyle(e,t){const i=this.state;this.fillStyleToState(e,i),this.strokeStyleToState(t,i)}createFill(e){const t=e.fillStyle,i=[G.SET_FILL_STYLE,t];return typeof t!="string"&&i.push(e.fillPatternScale),i}applyStroke(e){this.instructions.push(this.createStroke(e))}createStroke(e){return[G.SET_STROKE_STYLE,e.strokeStyle,e.lineWidth*this.pixelRatio,e.lineCap,e.lineJoin,e.miterLimit,e.lineDash?this.applyPixelRatio(e.lineDash):null,e.lineDashOffset*this.pixelRatio]}updateFillStyle(e,t){const i=e.fillStyle;(typeof i!="string"||e.currentFillStyle!=i)&&(i!==void 0&&this.instructions.push(t.call(this,e)),e.currentFillStyle=i)}updateStrokeStyle(e,t){const i=e.strokeStyle,n=e.lineCap,r=e.lineDash,o=e.lineDashOffset,a=e.lineJoin,l=e.lineWidth,h=e.miterLimit;(e.currentStrokeStyle!=i||e.currentLineCap!=n||r!=e.currentLineDash&&!V1(e.currentLineDash,r)||e.currentLineDashOffset!=o||e.currentLineJoin!=a||e.currentLineWidth!=l||e.currentMiterLimit!=h)&&(i!==void 0&&t.call(this,e),e.currentStrokeStyle=i,e.currentLineCap=n,e.currentLineDash=r,e.currentLineDashOffset=o,e.currentLineJoin=a,e.currentLineWidth=l,e.currentMiterLimit=h)}endGeometry(e){this.beginGeometryInstruction1_[2]=this.instructions.length,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_[2]=this.hitDetectionInstructions.length,this.beginGeometryInstruction2_=null;const t=[G.END_GEOMETRY,e];this.instructions.push(t),this.hitDetectionInstructions.push(t)}getBufferedMaxExtent(){if(!this.bufferedMaxExtent_&&(this.bufferedMaxExtent_=i6(this.maxExtent),this.maxLineWidth>0)){const e=this.resolution*(this.maxLineWidth+1)/2;N1(this.bufferedMaxExtent_,e,this.bufferedMaxExtent_)}return this.bufferedMaxExtent_}}class Ut extends L5{constructor(e,t,i,n){super(e,t,i,n),this.hitDetectionImage_=null,this.image_=null,this.imagePixelRatio_=void 0,this.anchorX_=void 0,this.anchorY_=void 0,this.height_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.scale_=void 0,this.width_=void 0,this.declutterMode_=void 0,this.declutterImageWithText_=void 0}drawPoint(e,t,i){if(!this.image_||this.maxExtent&&!F2(this.maxExtent,e.getFlatCoordinates()))return;this.beginGeometry(e,t,i);const n=e.getFlatCoordinates(),r=e.getStride(),o=this.coordinates.length,a=this.appendFlatPointCoordinates(n,r);this.instructions.push([G.DRAW_IMAGE,o,a,this.image_,this.anchorX_*this.imagePixelRatio_,this.anchorY_*this.imagePixelRatio_,Math.ceil(this.height_*this.imagePixelRatio_),this.opacity_,this.originX_*this.imagePixelRatio_,this.originY_*this.imagePixelRatio_,this.rotateWithView_,this.rotation_,[this.scale_[0]*this.pixelRatio/this.imagePixelRatio_,this.scale_[1]*this.pixelRatio/this.imagePixelRatio_],Math.ceil(this.width_*this.imagePixelRatio_),this.declutterMode_,this.declutterImageWithText_]),this.hitDetectionInstructions.push([G.DRAW_IMAGE,o,a,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.height_,1,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_,this.declutterMode_,this.declutterImageWithText_]),this.endGeometry(t)}drawMultiPoint(e,t,i){if(!this.image_)return;this.beginGeometry(e,t,i);const n=e.getFlatCoordinates(),r=[];for(let l=0,h=n.length;l<h;l+=e.getStride())(!this.maxExtent||F2(this.maxExtent,n.slice(l,l+2)))&&r.push(n[l],n[l+1]);const o=this.coordinates.length,a=this.appendFlatPointCoordinates(r,2);this.instructions.push([G.DRAW_IMAGE,o,a,this.image_,this.anchorX_*this.imagePixelRatio_,this.anchorY_*this.imagePixelRatio_,Math.ceil(this.height_*this.imagePixelRatio_),this.opacity_,this.originX_*this.imagePixelRatio_,this.originY_*this.imagePixelRatio_,this.rotateWithView_,this.rotation_,[this.scale_[0]*this.pixelRatio/this.imagePixelRatio_,this.scale_[1]*this.pixelRatio/this.imagePixelRatio_],Math.ceil(this.width_*this.imagePixelRatio_),this.declutterMode_,this.declutterImageWithText_]),this.hitDetectionInstructions.push([G.DRAW_IMAGE,o,a,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.height_,1,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_,this.declutterMode_,this.declutterImageWithText_]),this.endGeometry(t)}finish(){return this.reverseHitDetectionInstructions(),this.anchorX_=void 0,this.anchorY_=void 0,this.hitDetectionImage_=null,this.image_=null,this.imagePixelRatio_=void 0,this.height_=void 0,this.scale_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.width_=void 0,super.finish()}setImageStyle(e,t){const i=e.getAnchor(),n=e.getSize(),r=e.getOrigin();this.imagePixelRatio_=e.getPixelRatio(this.pixelRatio),this.anchorX_=i[0],this.anchorY_=i[1],this.hitDetectionImage_=e.getHitDetectionImage(),this.image_=e.getImage(this.pixelRatio),this.height_=n[1],this.opacity_=e.getOpacity(),this.originX_=r[0],this.originY_=r[1],this.rotateWithView_=e.getRotateWithView(),this.rotation_=e.getRotation(),this.scale_=e.getScaleArray(),this.width_=n[0],this.declutterMode_=e.getDeclutterMode(),this.declutterImageWithText_=t}}class jt extends L5{constructor(e,t,i,n){super(e,t,i,n)}drawFlatCoordinates_(e,t,i,n){const r=this.coordinates.length,o=this.appendFlatLineCoordinates(e,t,i,n,!1,!1),a=[G.MOVE_TO_LINE_TO,r,o];return this.instructions.push(a),this.hitDetectionInstructions.push(a),i}drawLineString(e,t,i){const n=this.state,r=n.strokeStyle,o=n.lineWidth;if(r===void 0||o===void 0)return;this.updateStrokeStyle(n,this.applyStroke),this.beginGeometry(e,t,i),this.hitDetectionInstructions.push([G.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,x1,E1],i2);const a=e.getFlatCoordinates(),l=e.getStride();this.drawFlatCoordinates_(a,0,a.length,l),this.hitDetectionInstructions.push(O1),this.endGeometry(t)}drawMultiLineString(e,t,i){const n=this.state,r=n.strokeStyle,o=n.lineWidth;if(r===void 0||o===void 0)return;this.updateStrokeStyle(n,this.applyStroke),this.beginGeometry(e,t,i),this.hitDetectionInstructions.push([G.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,x1,E1],i2);const a=e.getEnds(),l=e.getFlatCoordinates(),h=e.getStride();let c=0;for(let u=0,d=a.length;u<d;++u)c=this.drawFlatCoordinates_(l,c,a[u],h);this.hitDetectionInstructions.push(O1),this.endGeometry(t)}finish(){const e=this.state;return e.lastStroke!=null&&e.lastStroke!=this.coordinates.length&&this.instructions.push(O1),this.reverseHitDetectionInstructions(),this.state=null,super.finish()}applyStroke(e){e.lastStroke!=null&&e.lastStroke!=this.coordinates.length&&(this.instructions.push(O1),e.lastStroke=this.coordinates.length),e.lastStroke=0,super.applyStroke(e),this.instructions.push(i2)}}class L8 extends L5{constructor(e,t,i,n){super(e,t,i,n)}drawFlatCoordinatess_(e,t,i,n){const r=this.state,o=r.fillStyle!==void 0,a=r.strokeStyle!==void 0,l=i.length;this.instructions.push(i2),this.hitDetectionInstructions.push(i2);for(let h=0;h<l;++h){const c=i[h],u=this.coordinates.length,d=this.appendFlatLineCoordinates(e,t,c,n,!0,!a),f=[G.MOVE_TO_LINE_TO,u,d];this.instructions.push(f),this.hitDetectionInstructions.push(f),a&&(this.instructions.push(M8),this.hitDetectionInstructions.push(M8)),t=c}return o&&(this.instructions.push(H5),this.hitDetectionInstructions.push(H5)),a&&(this.instructions.push(O1),this.hitDetectionInstructions.push(O1)),t}drawCircle(e,t,i){const n=this.state,r=n.fillStyle,o=n.strokeStyle;if(r===void 0&&o===void 0)return;this.setFillStrokeStyles_(),this.beginGeometry(e,t,i),n.fillStyle!==void 0&&this.hitDetectionInstructions.push([G.SET_FILL_STYLE,R3]),n.strokeStyle!==void 0&&this.hitDetectionInstructions.push([G.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,x1,E1]);const a=e.getFlatCoordinates(),l=e.getStride(),h=this.coordinates.length;this.appendFlatLineCoordinates(a,0,a.length,l,!1,!1);const c=[G.CIRCLE,h];this.instructions.push(i2,c),this.hitDetectionInstructions.push(i2,c),n.fillStyle!==void 0&&(this.instructions.push(H5),this.hitDetectionInstructions.push(H5)),n.strokeStyle!==void 0&&(this.instructions.push(O1),this.hitDetectionInstructions.push(O1)),this.endGeometry(t)}drawPolygon(e,t,i){const n=this.state,r=n.fillStyle,o=n.strokeStyle;if(r===void 0&&o===void 0)return;this.setFillStrokeStyles_(),this.beginGeometry(e,t,i),n.fillStyle!==void 0&&this.hitDetectionInstructions.push([G.SET_FILL_STYLE,R3]),n.strokeStyle!==void 0&&this.hitDetectionInstructions.push([G.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,x1,E1]);const a=e.getEnds(),l=e.getOrientedFlatCoordinates(),h=e.getStride();this.drawFlatCoordinatess_(l,0,a,h),this.endGeometry(t)}drawMultiPolygon(e,t,i){const n=this.state,r=n.fillStyle,o=n.strokeStyle;if(r===void 0&&o===void 0)return;this.setFillStrokeStyles_(),this.beginGeometry(e,t,i),n.fillStyle!==void 0&&this.hitDetectionInstructions.push([G.SET_FILL_STYLE,R3]),n.strokeStyle!==void 0&&this.hitDetectionInstructions.push([G.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,x1,E1]);const a=e.getEndss(),l=e.getOrientedFlatCoordinates(),h=e.getStride();let c=0;for(let u=0,d=a.length;u<d;++u)c=this.drawFlatCoordinatess_(l,c,a[u],h);this.endGeometry(t)}finish(){this.reverseHitDetectionInstructions(),this.state=null;const e=this.tolerance;if(e!==0){const t=this.coordinates;for(let i=0,n=t.length;i<n;++i)t[i]=J1(t[i],e)}return super.finish()}setFillStrokeStyles_(){const e=this.state;e.fillStyle!==void 0&&this.updateFillStyle(e,this.createFill),e.strokeStyle!==void 0&&this.updateStrokeStyle(e,this.applyStroke)}}function qt(s,e,t,i,n){const r=[];let o=t,a=0,l=e.slice(t,2);for(;a<s&&o+n<i;){const[h,c]=l.slice(-2),u=e[o+n],d=e[o+n+1],f=Math.sqrt((u-h)*(u-h)+(d-c)*(d-c));if(a+=f,a>=s){const g=(s-a+f)/f,_=L3(h,u,g),m=L3(c,d,g);l.push(_,m),r.push(l),l=[_,m],a==s&&(o+=n),a=0}else if(a<s)l.push(e[o+n],e[o+n+1]),o+=n;else{const g=f-a,_=L3(h,u,g/f),m=L3(c,d,g/f);l.push(_,m),r.push(l),l=[_,m],a=0,o+=n}}return a>0&&r.push(l),r}function $t(s,e,t,i,n){let r=t,o=t,a=0,l=0,h=t,c,u,d,f,g,_,m,p,y,w;for(u=t;u<i;u+=n){const x=e[u],E=e[u+1];g!==void 0&&(y=x-g,w=E-_,f=Math.sqrt(y*y+w*w),m!==void 0&&(l+=d,c=Math.acos((m*y+p*w)/(d*f)),c>s&&(l>a&&(a=l,r=h,o=u),l=0,h=u-n)),d=f,m=y,p=w),g=x,_=E}return l+=f,l>a?[h,u]:[r,o]}const _0={left:0,center:.5,right:1,top:0,middle:.5,hanging:.2,alphabetic:.8,ideographic:.8,bottom:1};class Jt extends L5{constructor(e,t,i,n){super(e,t,i,n),this.labels_=null,this.text_="",this.textOffsetX_=0,this.textOffsetY_=0,this.textRotateWithView_=void 0,this.textKeepUpright_=void 0,this.textRotation_=0,this.textFillState_=null,this.fillStates={},this.fillStates[R3]={fillStyle:R3},this.textStrokeState_=null,this.strokeStates={},this.textState_={},this.textStates={},this.textKey_="",this.fillKey_="",this.strokeKey_="",this.declutterMode_=void 0,this.declutterImageWithText_=void 0}finish(){const e=super.finish();return e.textStates=this.textStates,e.fillStates=this.fillStates,e.strokeStates=this.strokeStates,e}drawText(e,t,i){const n=this.textFillState_,r=this.textStrokeState_,o=this.textState_;if(this.text_===""||!o||!n&&!r)return;const a=this.coordinates;let l=a.length;const h=e.getType();let c=null,u=e.getStride();if(o.placement==="line"&&(h=="LineString"||h=="MultiLineString"||h=="Polygon"||h=="MultiPolygon")){if(!r3(this.maxExtent,e.getExtent()))return;let d;if(c=e.getFlatCoordinates(),h=="LineString")d=[c.length];else if(h=="MultiLineString")d=e.getEnds();else if(h=="Polygon")d=e.getEnds().slice(0,1);else if(h=="MultiPolygon"){const m=e.getEndss();d=[];for(let p=0,y=m.length;p<y;++p)d.push(m[p][0])}this.beginGeometry(e,t,i);const f=o.repeat,g=f?void 0:o.textAlign;let _=0;for(let m=0,p=d.length;m<p;++m){let y;f?y=qt(f*this.resolution,c,_,d[m],u):y=[c.slice(_,d[m])];for(let w=0,x=y.length;w<x;++w){const E=y[w];let T=0,R=E.length;if(g==null){const I=$t(o.maxAngle,E,0,E.length,2);T=I[0],R=I[1]}for(let I=T;I<R;I+=u)a.push(E[I],E[I+1]);const C=a.length;_=d[m],this.drawChars_(l,C),l=C}}this.endGeometry(t)}else{let d=o.overflow?null:[];switch(h){case"Point":case"MultiPoint":c=e.getFlatCoordinates();break;case"LineString":c=e.getFlatMidpoint();break;case"Circle":c=e.getCenter();break;case"MultiLineString":c=e.getFlatMidpoints(),u=2;break;case"Polygon":c=e.getFlatInteriorPoint(),o.overflow||d.push(c[2]/this.resolution),u=3;break;case"MultiPolygon":const x=e.getFlatInteriorPoints();c=[];for(let E=0,T=x.length;E<T;E+=3)o.overflow||d.push(x[E+2]/this.resolution),c.push(x[E],x[E+1]);if(c.length===0)return;u=2;break}const f=this.appendFlatPointCoordinates(c,u);if(f===l)return;if(d&&(f-l)/2!==c.length/u){let x=l/2;d=d.filter((E,T)=>{const R=a[(x+T)*2]===c[T*u]&&a[(x+T)*2+1]===c[T*u+1];return R||--x,R})}this.saveTextStates_();const g=o.backgroundFill?this.createFill(this.fillStyleToState(o.backgroundFill)):null,_=o.backgroundStroke?this.createStroke(this.strokeStyleToState(o.backgroundStroke)):null;this.beginGeometry(e,t,i);let m=o.padding;if(m!=e2&&(o.scale[0]<0||o.scale[1]<0)){let x=o.padding[0],E=o.padding[1],T=o.padding[2],R=o.padding[3];o.scale[0]<0&&(E=-E,R=-R),o.scale[1]<0&&(x=-x,T=-T),m=[x,E,T,R]}const p=this.pixelRatio;this.instructions.push([G.DRAW_IMAGE,l,f,null,NaN,NaN,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,[1,1],NaN,this.declutterMode_,this.declutterImageWithText_,m==e2?e2:m.map(function(x){return x*p}),g,_,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,d]);const y=1/p,w=g?g.slice(0):null;w&&(w[1]=R3),this.hitDetectionInstructions.push([G.DRAW_IMAGE,l,f,null,NaN,NaN,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,[y,y],NaN,this.declutterMode_,this.declutterImageWithText_,m,w,_,this.text_,this.textKey_,this.strokeKey_,this.fillKey_?R3:this.fillKey_,this.textOffsetX_,this.textOffsetY_,d]),this.endGeometry(t)}}saveTextStates_(){const e=this.textStrokeState_,t=this.textState_,i=this.textFillState_,n=this.strokeKey_;e&&(n in this.strokeStates||(this.strokeStates[n]={strokeStyle:e.strokeStyle,lineCap:e.lineCap,lineDashOffset:e.lineDashOffset,lineWidth:e.lineWidth,lineJoin:e.lineJoin,miterLimit:e.miterLimit,lineDash:e.lineDash}));const r=this.textKey_;r in this.textStates||(this.textStates[r]={font:t.font,textAlign:t.textAlign||y5,justify:t.justify,textBaseline:t.textBaseline||h0,scale:t.scale});const o=this.fillKey_;i&&(o in this.fillStates||(this.fillStates[o]={fillStyle:i.fillStyle}))}drawChars_(e,t){const i=this.textStrokeState_,n=this.textState_,r=this.strokeKey_,o=this.textKey_,a=this.fillKey_;this.saveTextStates_();const l=this.pixelRatio,h=_0[n.textBaseline],c=this.textOffsetY_*l,u=this.text_,d=i?i.lineWidth*Math.abs(n.scale[0])/2:0;this.instructions.push([G.DRAW_CHARS,e,t,h,n.overflow,a,n.maxAngle,l,c,r,d*l,u,o,1,this.declutterMode_,this.textKeepUpright_]),this.hitDetectionInstructions.push([G.DRAW_CHARS,e,t,h,n.overflow,a&&R3,n.maxAngle,l,c,r,d*l,u,o,1/l,this.declutterMode_,this.textKeepUpright_])}setTextStyle(e,t){let i,n,r;if(!e)this.text_="";else{const o=e.getFill();o?(n=this.textFillState_,n||(n={},this.textFillState_=n),n.fillStyle=J3(o.getColor()||R3)):(n=null,this.textFillState_=n);const a=e.getStroke();if(!a)r=null,this.textStrokeState_=r;else{r=this.textStrokeState_,r||(r={},this.textStrokeState_=r);const _=a.getLineDash(),m=a.getLineDashOffset(),p=a.getWidth(),y=a.getMiterLimit();r.lineCap=a.getLineCap()||W2,r.lineDash=_?_.slice():x1,r.lineDashOffset=m===void 0?E1:m,r.lineJoin=a.getLineJoin()||B2,r.lineWidth=p===void 0?x5:p,r.miterLimit=y===void 0?m5:y,r.strokeStyle=J3(a.getColor()||p5)}i=this.textState_;const l=e.getFont()||v6;qe(l);const h=e.getScaleArray();i.overflow=e.getOverflow(),i.font=l,i.maxAngle=e.getMaxAngle(),i.placement=e.getPlacement(),i.textAlign=e.getTextAlign(),i.repeat=e.getRepeat(),i.justify=e.getJustify(),i.textBaseline=e.getTextBaseline()||h0,i.backgroundFill=e.getBackgroundFill(),i.backgroundStroke=e.getBackgroundStroke(),i.padding=e.getPadding()||e2,i.scale=h===void 0?[1,1]:h;const c=e.getOffsetX(),u=e.getOffsetY(),d=e.getRotateWithView(),f=e.getKeepUpright(),g=e.getRotation();this.text_=e.getText()||"",this.textOffsetX_=c===void 0?0:c,this.textOffsetY_=u===void 0?0:u,this.textRotateWithView_=d===void 0?!1:d,this.textKeepUpright_=f===void 0?!0:f,this.textRotation_=g===void 0?0:g,this.strokeKey_=r?(typeof r.strokeStyle=="string"?r.strokeStyle:Z(r.strokeStyle))+r.lineCap+r.lineDashOffset+"|"+r.lineWidth+r.lineJoin+r.miterLimit+"["+r.lineDash.join()+"]":"",this.textKey_=i.font+i.scale+(i.textAlign||"?")+(i.repeat||"?")+(i.justify||"?")+(i.textBaseline||"?"),this.fillKey_=n&&n.fillStyle?typeof n.fillStyle=="string"?n.fillStyle:"|"+Z(n.fillStyle):""}this.declutterMode_=e.getDeclutterMode(),this.declutterImageWithText_=t}}const Qt={Circle:L8,Default:L5,Image:Ut,LineString:jt,Polygon:L8,Text:Jt};class Q6{constructor(e,t,i,n){this.tolerance_=e,this.maxExtent_=t,this.pixelRatio_=n,this.resolution_=i,this.buildersByZIndex_={}}finish(){const e={};for(const t in this.buildersByZIndex_){e[t]=e[t]||{};const i=this.buildersByZIndex_[t];for(const n in i){const r=i[n].finish();e[t][n]=r}}return e}getBuilder(e,t){const i=e!==void 0?e.toString():"0";let n=this.buildersByZIndex_[i];n===void 0&&(n={},this.buildersByZIndex_[i]=n);let r=n[t];if(r===void 0){const o=Qt[t];r=new o(this.tolerance_,this.maxExtent_,this.resolution_,this.pixelRatio_),n[t]=r}return r}}function ei(s,e,t,i,n,r,o,a,l,h,c,u,d=!0){let f=s[e],g=s[e+1],_=0,m=0,p=0,y=0;function w(){_=f,m=g,e+=i,f=s[e],g=s[e+1],y+=p,p=Math.sqrt((f-_)*(f-_)+(g-m)*(g-m))}do w();while(e<t-i&&y+p<r);let x=p===0?0:(r-y)/p;const E=L3(_,f,x),T=L3(m,g,x),R=e-i,C=y,I=r+a*l(h,n,c);for(;e<t-i&&y+p<I;)w();x=p===0?0:(I-y)/p;const A=L3(_,f,x),k=L3(m,g,x);let P=!1;if(d)if(u){const D=[E,T,A,k];_9(D,0,4,2,u,D,D),P=D[0]>D[2]}else P=E>A;const F=Math.PI,L=[],O=R+i===e;e=R,p=0,y=C,f=s[e],g=s[e+1];let b;if(O){w(),b=Math.atan2(g-m,f-_),P&&(b+=b>0?-F:F);const D=(A+E)/2,W=(k+T)/2;return L[0]=[D,W,(I-r)/2,b,n],L}n=n.replace(/\n/g," ");for(let D=0,W=n.length;D<W;){w();let B=Math.atan2(g-m,f-_);if(P&&(B+=B>0?-F:F),b!==void 0){let i3=B-b;if(i3+=i3>F?-2*F:i3<-F?2*F:0,Math.abs(i3)>o)return null}b=B;const K=D;let U=0;for(;D<W;++D){const i3=P?W-D-1:D,x3=a*l(h,n[i3],c);if(e+i<t&&y+p<r+U+x3/2)break;U+=x3}if(D===K)continue;const v=P?n.substring(W-K,W-D):n.substring(K,D);x=p===0?0:(r+U/2-y)/p;const f3=L3(_,f,x),S3=L3(m,g,x);L.push([f3,S3,U/2,B,v]),r+=U}return L}class I9{constructor(){j9(this,"pushMethodArgs_",(...e)=>(this.instructions_[this.zIndex+this.offset_].push(e),this));this.instructions_=[],this.zIndex=0,this.offset_=0,this.context_=new Proxy(a0(),{get:(e,t)=>{if(typeof a0()[t]=="function")return this.instructions_[this.zIndex+this.offset_]||(this.instructions_[this.zIndex+this.offset_]=[]),this.instructions_[this.zIndex+this.offset_].push(t),this.pushMethodArgs_},set:(e,t,i)=>(this.instructions_[this.zIndex+this.offset_]||(this.instructions_[this.zIndex+this.offset_]=[]),this.instructions_[this.zIndex+this.offset_].push(t,i),!0)})}pushFunction(e){this.instructions_[this.zIndex+this.offset_].push(e)}getContext(){return this.context_}draw(e){this.instructions_.forEach(t=>{for(let i=0,n=t.length;i<n;++i){const r=t[i];if(typeof r=="function"){r(e);continue}const o=t[++i];if(typeof e[r]=="function")e[r](...o);else{if(typeof o=="function"){e[r]=o(e);continue}e[r]=o}}})}clear(){this.instructions_.length=0,this.zIndex=0,this.offset_=0}offset(){this.offset_=this.instructions_.length,this.zIndex=0}}const g2=K3(),A1=[],u1=[],d1=[],M1=[];function P8(s){return s[3].declutterBox}const b8=new RegExp("[֑-ࣿיִ-﷿ﹰ-ﻼࠀ-࿿-]");function h4(s,e){return e==="start"?e=b8.test(s)?"right":"left":e==="end"&&(e=b8.test(s)?"left":"right"),_0[e]}function ti(s,e,t){return t>0&&s.push(`
`,""),s.push(e,""),s}class ii{constructor(e,t,i,n,r){this.overlaps=i,this.pixelRatio=t,this.resolution=e,this.alignAndScaleFill_,this.instructions=n.instructions,this.coordinates=n.coordinates,this.coordinateCache_={},this.renderedTransform_=B3(),this.hitDetectionInstructions=n.hitDetectionInstructions,this.pixelCoordinates_=null,this.viewRotation_=0,this.fillStates=n.fillStates||{},this.strokeStates=n.strokeStates||{},this.textStates=n.textStates||{},this.widths_={},this.labels_={},this.zIndexContext_=r?new I9:null}getZIndexContext(){return this.zIndexContext_}createLabel(e,t,i,n){const r=e+t+i+n;if(this.labels_[r])return this.labels_[r];const o=n?this.strokeStates[n]:null,a=i?this.fillStates[i]:null,l=this.textStates[t],h=this.pixelRatio,c=[l.scale[0]*h,l.scale[1]*h],u=l.justify?_0[l.justify]:h4(Array.isArray(e)?e[0]:e,l.textAlign||y5),d=n&&o.lineWidth?o.lineWidth:0,f=Array.isArray(e)?e:String(e).split(`
`).reduce(ti,[]),{width:g,height:_,widths:m,heights:p,lineWidths:y}=Je(l,f),w=g+d,x=[],E=(w+2)*c[0],T=(_+d)*c[1],R={width:E<0?Math.floor(E):Math.ceil(E),height:T<0?Math.floor(T):Math.ceil(T),contextInstructions:x};(c[0]!=1||c[1]!=1)&&x.push("scale",c),n&&(x.push("strokeStyle",o.strokeStyle),x.push("lineWidth",d),x.push("lineCap",o.lineCap),x.push("lineJoin",o.lineJoin),x.push("miterLimit",o.miterLimit),x.push("setLineDash",[o.lineDash]),x.push("lineDashOffset",o.lineDashOffset)),i&&x.push("fillStyle",a.fillStyle),x.push("textBaseline","middle"),x.push("textAlign","center");const C=.5-u;let I=u*w+C*d;const A=[],k=[];let P=0,F=0,L=0,O=0,b;for(let D=0,W=f.length;D<W;D+=2){const B=f[D];if(B===`
`){F+=P,P=0,I=u*w+C*d,++O;continue}const K=f[D+1]||l.font;K!==b&&(n&&A.push("font",K),i&&k.push("font",K),b=K),P=Math.max(P,p[L]);const U=[B,I+C*m[L]+u*(m[L]-y[O]),.5*(d+P)+F];I+=m[L],n&&A.push("strokeText",U),i&&k.push("fillText",U),++L}return Array.prototype.push.apply(x,A),Array.prototype.push.apply(x,k),this.labels_[r]=R,R}replayTextBackground_(e,t,i,n,r,o,a){e.beginPath(),e.moveTo.apply(e,t),e.lineTo.apply(e,i),e.lineTo.apply(e,n),e.lineTo.apply(e,r),e.lineTo.apply(e,t),o&&(this.alignAndScaleFill_=o[2],e.fillStyle=o[1],this.fill_(e)),a&&(this.setStrokeStyle_(e,a),e.stroke())}calculateImageOrLabelDimensions_(e,t,i,n,r,o,a,l,h,c,u,d,f,g,_,m){a*=d[0],l*=d[1];let p=i-a,y=n-l;const w=r+h>e?e-h:r,x=o+c>t?t-c:o,E=g[3]+w*d[0]+g[1],T=g[0]+x*d[1]+g[2],R=p-g[3],C=y-g[0];(_||u!==0)&&(A1[0]=R,M1[0]=R,A1[1]=C,u1[1]=C,u1[0]=R+E,d1[0]=u1[0],d1[1]=C+T,M1[1]=d1[1]);let I;return u!==0?(I=T1(B3(),i,n,1,1,u,-i,-n),l3(I,A1),l3(I,u1),l3(I,d1),l3(I,M1),w1(Math.min(A1[0],u1[0],d1[0],M1[0]),Math.min(A1[1],u1[1],d1[1],M1[1]),Math.max(A1[0],u1[0],d1[0],M1[0]),Math.max(A1[1],u1[1],d1[1],M1[1]),g2)):w1(Math.min(R,R+E),Math.min(C,C+T),Math.max(R,R+E),Math.max(C,C+T),g2),f&&(p=Math.round(p),y=Math.round(y)),{drawImageX:p,drawImageY:y,drawImageW:w,drawImageH:x,originX:h,originY:c,declutterBox:{minX:g2[0],minY:g2[1],maxX:g2[2],maxY:g2[3],value:m},canvasTransform:I,scale:d}}replayImageOrLabel_(e,t,i,n,r,o,a){const l=!!(o||a),h=n.declutterBox,c=a?a[2]*n.scale[0]/2:0;return h.minX-c<=t[0]&&h.maxX+c>=0&&h.minY-c<=t[1]&&h.maxY+c>=0&&(l&&this.replayTextBackground_(e,A1,u1,d1,M1,o,a),Qe(e,n.canvasTransform,r,i,n.originX,n.originY,n.drawImageW,n.drawImageH,n.drawImageX,n.drawImageY,n.scale)),!0}fill_(e){const t=this.alignAndScaleFill_;if(t){const i=l3(this.renderedTransform_,[0,0]),n=512*this.pixelRatio;e.save(),e.translate(i[0]%n,i[1]%n),t!==1&&e.scale(t,t),e.rotate(this.viewRotation_)}e.fill(),t&&e.restore()}setStrokeStyle_(e,t){e.strokeStyle=t[1],e.lineWidth=t[2],e.lineCap=t[3],e.lineJoin=t[4],e.miterLimit=t[5],e.lineDashOffset=t[7],e.setLineDash(t[6])}drawLabelWithPointPlacement_(e,t,i,n){const r=this.textStates[t],o=this.createLabel(e,t,n,i),a=this.strokeStates[i],l=this.pixelRatio,h=h4(Array.isArray(e)?e[0]:e,r.textAlign||y5),c=_0[r.textBaseline||h0],u=a&&a.lineWidth?a.lineWidth:0,d=o.width/l-2*r.scale[0],f=h*d+2*(.5-h)*u,g=c*o.height/l+2*(.5-c)*u;return{label:o,anchorX:f,anchorY:g}}execute_(e,t,i,n,r,o,a,l){const h=this.zIndexContext_;let c;this.pixelCoordinates_&&V1(i,this.renderedTransform_)?c=this.pixelCoordinates_:(this.pixelCoordinates_||(this.pixelCoordinates_=[]),c=W1(this.coordinates,0,this.coordinates.length,2,i,this.pixelCoordinates_),ot(this.renderedTransform_,i));let u=0;const d=n.length;let f=0,g,_,m,p,y,w,x,E,T,R,C,I,A,k=0,P=0;const F=this.coordinateCache_,L=this.viewRotation_,O=Math.round(Math.atan2(-i[1],i[0])*1e12)/1e12,b={context:e,pixelRatio:this.pixelRatio,resolution:this.resolution,rotation:L},D=this.instructions!=n||this.overlaps?0:200;let W,B,K,U;for(;u<d;){const v=n[u];switch(v[0]){case G.BEGIN_GEOMETRY:W=v[1],U=v[3],W.getGeometry()?a!==void 0&&!r3(a,U.getExtent())?u=v[2]+1:++u:u=v[2],h&&(h.zIndex=v[4]);break;case G.BEGIN_PATH:k>D&&(this.fill_(e),k=0),P>D&&(e.stroke(),P=0),!k&&!P&&(e.beginPath(),y=NaN,w=NaN),++u;break;case G.CIRCLE:f=v[1];const S3=c[f],i3=c[f+1],x3=c[f+2],T3=c[f+3],M3=x3-S3,Z1=T3-i3,g3=Math.sqrt(M3*M3+Z1*Z1);e.moveTo(S3+g3,i3),e.arc(S3,i3,g3,0,2*Math.PI,!0),++u;break;case G.CLOSE_PATH:e.closePath(),++u;break;case G.CUSTOM:f=v[1],g=v[2];const k5=v[3],O5=v[4],G5=v[5];b.geometry=k5,b.feature=W,u in F||(F[u]=[]);const I1=F[u];G5?G5(c,f,g,2,I1):(I1[0]=c[f],I1[1]=c[f+1],I1.length=2),h&&(h.zIndex=v[6]),O5(I1,b),++u;break;case G.DRAW_IMAGE:f=v[1],g=v[2],T=v[3],_=v[4],m=v[5];let j2=v[6];const U3=v[7],j3=v[8],c2=v[9],H1=v[10];let u2=v[11];const q2=v[12];let a1=v[13];p=v[14]||"declutter";const U1=v[15];if(!T&&v.length>=20){R=v[19],C=v[20],I=v[21],A=v[22];const D3=this.drawLabelWithPointPlacement_(R,C,I,A);T=D3.label,v[3]=T;const j1=v[23];_=(D3.anchorX-j1)*this.pixelRatio,v[4]=_;const k3=v[24];m=(D3.anchorY-k3)*this.pixelRatio,v[5]=m,j2=T.height,v[6]=j2,a1=T.width,v[13]=a1}let _3;v.length>25&&(_3=v[25]);let U0,N5,z5;v.length>17?(U0=v[16],N5=v[17],z5=v[18]):(U0=e2,N5=null,z5=null),H1&&O?u2+=L:!H1&&!O&&(u2-=L);let F7=0;for(;f<g;f+=2){if(_3&&_3[F7++]<a1/this.pixelRatio)continue;const D3=this.calculateImageOrLabelDimensions_(T.width,T.height,c[f],c[f+1],a1,j2,_,m,j3,c2,u2,q2,r,U0,!!N5||!!z5,W),j1=[e,t,T,D3,U3,N5,z5];if(l){let k3,q3,O3;if(U1){const n3=g-f;if(!U1[n3]){U1[n3]={args:j1,declutterMode:p};continue}const E3=U1[n3];k3=E3.args,q3=E3.declutterMode,delete U1[n3],O3=P8(k3)}let l1,h1;if(k3&&(q3!=="declutter"||!l.collides(O3))&&(l1=!0),(p!=="declutter"||!l.collides(D3.declutterBox))&&(h1=!0),q3==="declutter"&&p==="declutter"){const n3=l1&&h1;l1=n3,h1=n3}l1&&(q3!=="none"&&l.insert(O3),this.replayImageOrLabel_.apply(this,k3)),h1&&(p!=="none"&&l.insert(D3.declutterBox),this.replayImageOrLabel_.apply(this,j1))}else this.replayImageOrLabel_.apply(this,j1)}++u;break;case G.DRAW_CHARS:const K9=v[1],X9=v[2],j0=v[3],D7=v[4];A=v[5];const k7=v[6],V9=v[7],Y9=v[8];I=v[9];const q0=v[10];R=v[11],C=v[12];const Z9=[v[13],v[13]];p=v[14]||"declutter";const O7=v[15],$0=this.textStates[C],$2=$0.font,J2=[$0.scale[0]*V9,$0.scale[1]*V9];let Q2;$2 in this.widths_?Q2=this.widths_[$2]:(Q2={},this.widths_[$2]=Q2);const H9=X6(c,K9,X9,2),U9=Math.abs(J2[0])*f8($2,R,Q2);if(D7||U9<=H9){const D3=this.textStates[C].textAlign,j1=(H9-U9)*h4(R,D3),k3=ei(c,K9,X9,2,R,j1,k7,Math.abs(J2[0]),f8,$2,Q2,O?0:this.viewRotation_,O7);e:if(k3){const q3=[];let O3,l1,h1,n3,E3;if(I)for(O3=0,l1=k3.length;O3<l1;++O3){E3=k3[O3],h1=E3[4],n3=this.createLabel(h1,C,"",I),_=E3[2]+(J2[0]<0?-q0:q0),m=j0*n3.height+(.5-j0)*2*q0*J2[1]/J2[0]-Y9;const c1=this.calculateImageOrLabelDimensions_(n3.width,n3.height,E3[0],E3[1],n3.width,n3.height,_,m,0,0,E3[3],Z9,!1,e2,!1,W);if(l&&p==="declutter"&&l.collides(c1.declutterBox))break e;q3.push([e,t,n3,c1,1,null,null])}if(A)for(O3=0,l1=k3.length;O3<l1;++O3){E3=k3[O3],h1=E3[4],n3=this.createLabel(h1,C,A,""),_=E3[2],m=j0*n3.height-Y9;const c1=this.calculateImageOrLabelDimensions_(n3.width,n3.height,E3[0],E3[1],n3.width,n3.height,_,m,0,0,E3[3],Z9,!1,e2,!1,W);if(l&&p==="declutter"&&l.collides(c1.declutterBox))break e;q3.push([e,t,n3,c1,1,null,null])}l&&p!=="none"&&l.load(q3.map(P8));for(let c1=0,G7=q3.length;c1<G7;++c1)this.replayImageOrLabel_.apply(this,q3[c1])}}++u;break;case G.END_GEOMETRY:if(o!==void 0){W=v[1];const D3=o(W,U,p);if(D3)return D3}++u;break;case G.FILL:D?k++:this.fill_(e),++u;break;case G.MOVE_TO_LINE_TO:for(f=v[1],g=v[2],B=c[f],K=c[f+1],e.moveTo(B,K),y=B+.5|0,w=K+.5|0,f+=2;f<g;f+=2)B=c[f],K=c[f+1],x=B+.5|0,E=K+.5|0,(f==g-2||x!==y||E!==w)&&(e.lineTo(B,K),y=x,w=E);++u;break;case G.SET_FILL_STYLE:this.alignAndScaleFill_=v[2],k&&(this.fill_(e),k=0,P&&(e.stroke(),P=0)),e.fillStyle=v[1],++u;break;case G.SET_STROKE_STYLE:P&&(e.stroke(),P=0),this.setStrokeStyle_(e,v),++u;break;case G.STROKE:D?P++:e.stroke(),++u;break;default:++u;break}}k&&this.fill_(e),P&&e.stroke()}execute(e,t,i,n,r,o){this.viewRotation_=n,this.execute_(e,t,i,this.instructions,r,void 0,void 0,o)}executeHitDetection(e,t,i,n,r){return this.viewRotation_=i,this.execute_(e,[e.canvas.width,e.canvas.height],t,this.hitDetectionInstructions,!0,n,r)}}const I2=["Polygon","Circle","LineString","Image","Text","Default"],m0=["Image","Text"],ni=I2.filter(s=>!m0.includes(s));class e7{constructor(e,t,i,n,r,o,a){this.maxExtent_=e,this.overlaps_=n,this.pixelRatio_=i,this.resolution_=t,this.renderBuffer_=o,this.executorsByZIndex_={},this.hitDetectionContext_=null,this.hitDetectionTransform_=B3(),this.renderedContext_=null,this.deferredZIndexContexts_={},this.createExecutors_(r,a)}clip(e,t){const i=this.getClipCoords(t);e.beginPath(),e.moveTo(i[0],i[1]),e.lineTo(i[2],i[3]),e.lineTo(i[4],i[5]),e.lineTo(i[6],i[7]),e.clip()}createExecutors_(e,t){for(const i in e){let n=this.executorsByZIndex_[i];n===void 0&&(n={},this.executorsByZIndex_[i]=n);const r=e[i];for(const o in r){const a=r[o];n[o]=new ii(this.resolution_,this.pixelRatio_,this.overlaps_,a,t)}}}hasExecutors(e){for(const t in this.executorsByZIndex_){const i=this.executorsByZIndex_[t];for(let n=0,r=e.length;n<r;++n)if(e[n]in i)return!0}return!1}forEachFeatureAtCoordinate(e,t,i,n,r,o){n=Math.round(n);const a=n*2+1,l=T1(this.hitDetectionTransform_,n+.5,n+.5,1/t,-1/t,-i,-e[0],-e[1]),h=!this.hitDetectionContext_;h&&(this.hitDetectionContext_=h3(a,a,void 0,{willReadFrequently:!0}));const c=this.hitDetectionContext_;c.canvas.width!==a||c.canvas.height!==a?(c.canvas.width=a,c.canvas.height=a):h||c.clearRect(0,0,a,a);let u;this.renderBuffer_!==void 0&&(u=K3(),u5(u,e),N1(u,t*(this.renderBuffer_+n),u));const d=si(n);let f;function g(E,T,R){const C=c.getImageData(0,0,a,a).data;for(let I=0,A=d.length;I<A;I++)if(C[d[I]]>0){if(!o||R==="none"||f!=="Image"&&f!=="Text"||o.includes(E)){const k=(d[I]-3)/4,P=n-k%a,F=n-(k/a|0),L=r(E,T,P*P+F*F);if(L)return L}c.clearRect(0,0,a,a);break}}const _=Object.keys(this.executorsByZIndex_).map(Number);_.sort(e1);let m,p,y,w,x;for(m=_.length-1;m>=0;--m){const E=_[m].toString();for(y=this.executorsByZIndex_[E],p=I2.length-1;p>=0;--p)if(f=I2[p],w=y[f],w!==void 0&&(x=w.executeHitDetection(c,l,i,g,u),x))return x}}getClipCoords(e){const t=this.maxExtent_;if(!t)return null;const i=t[0],n=t[1],r=t[2],o=t[3],a=[i,n,i,o,r,o,r,n];return W1(a,0,8,2,e,a),a}isEmpty(){return r2(this.executorsByZIndex_)}execute(e,t,i,n,r,o,a){const l=Object.keys(this.executorsByZIndex_).map(Number);l.sort(a?Ne:e1),o=o||I2;const h=I2.length;for(let c=0,u=l.length;c<u;++c){const d=l[c].toString(),f=this.executorsByZIndex_[d];for(let g=0,_=o.length;g<_;++g){const m=o[g],p=f[m];if(p!==void 0){const y=a===null?void 0:p.getZIndexContext(),w=y?y.getContext():e,x=this.maxExtent_&&m!=="Image"&&m!=="Text";if(x&&(w.save(),this.clip(w,i)),!y||m==="Text"||m==="Image"?p.execute(w,t,i,n,r,a):y.pushFunction(E=>p.execute(E,t,i,n,r,a)),x&&w.restore(),y){y.offset();const E=l[c]*h+g;this.deferredZIndexContexts_[E]||(this.deferredZIndexContexts_[E]=[]),this.deferredZIndexContexts_[E].push(y)}}}}this.renderedContext_=e}getDeferredZIndexContexts(){return this.deferredZIndexContexts_}getRenderedContext(){return this.renderedContext_}renderDeferred(){const e=this.deferredZIndexContexts_,t=Object.keys(e).map(Number).sort(e1);for(let i=0,n=t.length;i<n;++i)e[t[i]].forEach(r=>{r.draw(this.renderedContext_),r.clear()}),e[t[i]].length=0}}const c4={};function si(s){if(c4[s]!==void 0)return c4[s];const e=s*2+1,t=s*s,i=new Array(t+1);for(let r=0;r<=s;++r)for(let o=0;o<=s;++o){const a=r*r+o*o;if(a>t)break;let l=i[a];l||(l=[],i[a]=l),l.push(((s+r)*e+(s+o))*4+3),r>0&&l.push(((s-r)*e+(s+o))*4+3),o>0&&(l.push(((s+r)*e+(s-o))*4+3),r>0&&l.push(((s-r)*e+(s-o))*4+3))}const n=[];for(let r=0,o=i.length;r<o;++r)i[r]&&n.push(...i[r]);return c4[s]=n,n}const b3=.5;function t7(s,e,t,i,n,r,o,a,l){const h=l?s9(n):n,c=s[0]*b3,u=s[1]*b3,d=h3(c,u);d.imageSmoothingEnabled=!1;const f=d.canvas,g=new At(d,b3,n,null,o,a,l?P0(Te(),l):null),_=t.length,m=Math.floor((256*256*256-1)/_),p={};for(let w=1;w<=_;++w){const x=t[w-1],E=x.getStyleFunction()||i;if(!E)continue;let T=E(x,r);if(!T)continue;Array.isArray(T)||(T=[T]);const C=(w*m).toString(16).padStart(7,"#00000");for(let I=0,A=T.length;I<A;++I){const k=T[I],P=k.getGeometryFunction()(x);if(!P||!r3(h,P.getExtent()))continue;const F=k.clone(),L=F.getFill();L&&L.setColor(C);const O=F.getStroke();O&&(O.setColor(C),O.setLineDash(null)),F.setText(void 0);const b=k.getImage();if(b){const K=b.getImageSize();if(!K)continue;const U=h3(K[0],K[1],void 0,{alpha:!1}),v=U.canvas;U.fillStyle=C,U.fillRect(0,0,v.width,v.height),F.setImage(new N0({img:v,anchor:b.getAnchor(),anchorXUnits:"pixels",anchorYUnits:"pixels",offset:b.getOrigin(),opacity:1,size:b.getSize(),scale:b.getScale(),rotation:b.getRotation(),rotateWithView:b.getRotateWithView()}))}const D=F.getZIndex()||0;let W=p[D];W||(W={},p[D]=W,W.Polygon=[],W.Circle=[],W.LineString=[],W.Point=[]);const B=P.getType();if(B==="GeometryCollection"){const K=P.getGeometriesArrayRecursive();for(let U=0,v=K.length;U<v;++U){const f3=K[U];W[f3.getType().replace("Multi","")].push(f3,F)}}else W[B.replace("Multi","")].push(P,F)}}const y=Object.keys(p).map(Number).sort(e1);for(let w=0,x=y.length;w<x;++w){const E=p[y[w]];for(const T in E){const R=E[T];for(let C=0,I=R.length;C<I;C+=2){g.setStyle(R[C+1]);for(let A=0,k=e.length;A<k;++A)g.setTransform(e[A]),g.drawGeometry(R[C])}}}return d.getImageData(0,0,f.width,f.height)}function i7(s,e,t){const i=[];if(t){const n=Math.floor(Math.round(s[0])*b3),r=Math.floor(Math.round(s[1])*b3),o=(o3(n,0,t.width-1)+o3(r,0,t.height-1)*t.width)*4,a=t.data[o],l=t.data[o+1],c=t.data[o+2]+256*(l+256*a),u=Math.floor((256*256*256-1)/e.length);c&&c%u===0&&i.push(e[c/u-1])}return i}class n7 extends r1{constructor(e,t,i,n){super(e),this.inversePixelTransform=t,this.frameState=i,this.context=n}}const ri=5;class oi extends A5{constructor(e){super(),this.ready=!0,this.boundHandleImageChange_=this.handleImageChange_.bind(this),this.layer_=e,this.staleKeys_=new Array,this.maxStaleKeys=ri}getStaleKeys(){return this.staleKeys_}prependStaleKey(e){this.staleKeys_.unshift(e),this.staleKeys_.length>this.maxStaleKeys&&(this.staleKeys_.length=this.maxStaleKeys)}getFeatures(e){return Y()}getData(e){return null}prepareFrame(e){return Y()}renderFrame(e,t){return Y()}forEachFeatureAtCoordinate(e,t,i,n,r){}getLayer(){return this.layer_}handleFontsChanged(){}handleImageChange_(e){const t=e.target;(t.getState()===V.LOADED||t.getState()===V.ERROR)&&this.renderIfReadyAndVisible()}loadImage(e){let t=e.getState();return t!=V.LOADED&&t!=V.ERROR&&e.addEventListener(z.CHANGE,this.boundHandleImageChange_),t==V.IDLE&&(e.load(),t=e.getState()),t==V.LOADED}renderIfReadyAndVisible(){const e=this.getLayer();e&&e.getVisible()&&e.getSourceState()==="ready"&&e.changed()}renderDeferred(e){}disposeInternal(){delete this.layer_,super.disposeInternal()}}const F8=[];let C2=null;function ai(){C2=h3(1,1,void 0,{willReadFrequently:!0})}class s7 extends oi{constructor(e){super(e),this.container=null,this.renderedResolution,this.tempTransform=B3(),this.pixelTransform=B3(),this.inversePixelTransform=B3(),this.context=null,this.deferredContext_=null,this.containerReused=!1,this.frameState=null}getImageData(e,t,i){C2||ai(),C2.clearRect(0,0,1,1);let n;try{C2.drawImage(e,t,i,1,1,0,0,1,1),n=C2.getImageData(0,0,1,1).data}catch{return C2=null,null}return n}getBackground(e){let i=this.getLayer().getBackground();return typeof i=="function"&&(i=i(e.viewState.resolution)),i||void 0}useContainer(e,t,i){const n=this.getLayer().getClassName();let r,o;if(e&&e.className===n&&(!i||e&&e.style.backgroundColor&&V1(O2(e.style.backgroundColor),O2(i)))){const a=e.firstElementChild;a instanceof HTMLCanvasElement&&(o=a.getContext("2d"))}if(o&&o.canvas.style.transform===t?(this.container=e,this.context=o,this.containerReused=!0):this.containerReused?(this.container=null,this.context=null,this.containerReused=!1):this.container&&(this.container.style.backgroundColor=null),!this.container){r=document.createElement("div"),r.className=n;let a=r.style;a.position="absolute",a.width="100%",a.height="100%",o=h3();const l=o.canvas;r.appendChild(l),a=l.style,a.position="absolute",a.left="0",a.transformOrigin="top left",this.container=r,this.context=o}!this.containerReused&&i&&!this.container.style.backgroundColor&&(this.container.style.backgroundColor=i)}clipUnrotated(e,t,i){const n=X1(i),r=T0(i),o=S0(i),a=C0(i);l3(t.coordinateToPixelTransform,n),l3(t.coordinateToPixelTransform,r),l3(t.coordinateToPixelTransform,o),l3(t.coordinateToPixelTransform,a);const l=this.inversePixelTransform;l3(l,n),l3(l,r),l3(l,o),l3(l,a),e.save(),e.beginPath(),e.moveTo(Math.round(n[0]),Math.round(n[1])),e.lineTo(Math.round(r[0]),Math.round(r[1])),e.lineTo(Math.round(o[0]),Math.round(o[1])),e.lineTo(Math.round(a[0]),Math.round(a[1])),e.clip()}prepareContainer(e,t){const i=e.extent,n=e.viewState.resolution,r=e.viewState.rotation,o=e.pixelRatio,a=Math.round(e3(i)/n*o),l=Math.round(C3(i)/n*o);T1(this.pixelTransform,e.size[0]/2,e.size[1]/2,1/o,1/o,r,-a/2,-l/2),P6(this.inversePixelTransform,this.pixelTransform);const h=ht(this.pixelTransform);if(this.useContainer(t,h,this.getBackground(e)),!this.containerReused){const c=this.context.canvas;c.width!=a||c.height!=l?(c.width=a,c.height=l):this.context.clearRect(0,0,a,l),h!==c.style.transform&&(c.style.transform=h)}}dispatchRenderEvent_(e,t,i){const n=this.getLayer();if(n.hasListener(e)){const r=new n7(e,this.inversePixelTransform,i,t);n.dispatchEvent(r)}}preRender(e,t){this.frameState=t,!t.declutter&&this.dispatchRenderEvent_(z3.PRERENDER,e,t)}postRender(e,t){t.declutter||this.dispatchRenderEvent_(z3.POSTRENDER,e,t)}renderDeferredInternal(e){}getRenderContext(e){return e.declutter&&!this.deferredContext_&&(this.deferredContext_=new I9),e.declutter?this.deferredContext_.getContext():this.context}renderDeferred(e){e.declutter&&(this.dispatchRenderEvent_(z3.PRERENDER,this.context,e),e.declutter&&this.deferredContext_&&(this.deferredContext_.draw(this.context),this.deferredContext_.clear()),this.renderDeferredInternal(e),this.dispatchRenderEvent_(z3.POSTRENDER,this.context,e))}getRenderTransform(e,t,i,n,r,o,a){const l=r/2,h=o/2,c=n/t,u=-c,d=-e[0]+a,f=-e[1];return T1(this.tempTransform,l,h,c,u,-i,d,f)}disposeInternal(){delete this.frameState,super.disposeInternal()}}class li extends s7{constructor(e){super(e),this.boundHandleStyleImageChange_=this.handleStyleImageChange_.bind(this),this.animatingOrInteracting_,this.hitDetectionImageData_=null,this.clipped_=!1,this.renderedFeatures_=null,this.renderedRevision_=-1,this.renderedResolution_=NaN,this.renderedExtent_=K3(),this.wrappedRenderedExtent_=K3(),this.renderedRotation_,this.renderedCenter_=null,this.renderedProjection_=null,this.renderedPixelRatio_=1,this.renderedRenderOrder_=null,this.renderedFrameDeclutter_,this.replayGroup_=null,this.replayGroupChanged=!0,this.clipping=!0,this.targetContext_=null,this.opacity_=1}renderWorlds(e,t,i){const n=t.extent,r=t.viewState,o=r.center,a=r.resolution,l=r.projection,h=r.rotation,c=l.getExtent(),u=this.getLayer().getSource(),d=this.getLayer().getDeclutter(),f=t.pixelRatio,g=t.viewHints,_=!(g[s3.ANIMATING]||g[s3.INTERACTING]),m=this.context,p=Math.round(e3(n)/a*f),y=Math.round(C3(n)/a*f),w=u.getWrapX()&&l.canWrapX(),x=w?e3(c):null,E=w?Math.ceil((n[2]-c[2])/x)+1:1;let T=w?Math.floor((n[0]-c[0])/x):0;do{let R=this.getRenderTransform(o,a,0,f,p,y,T*x);t.declutter&&(R=R.slice(0)),e.execute(m,[m.canvas.width,m.canvas.height],R,h,_,i===void 0?I2:i?m0:ni,i?d&&t.declutter[d]:void 0)}while(++T<E)}setDrawContext_(){this.opacity_!==1&&(this.targetContext_=this.context,this.context=h3(this.context.canvas.width,this.context.canvas.height,F8))}resetDrawContext_(){if(this.opacity_!==1){const e=this.targetContext_.globalAlpha;this.targetContext_.globalAlpha=this.opacity_,this.targetContext_.drawImage(this.context.canvas,0,0),this.targetContext_.globalAlpha=e,v5(this.context),F8.push(this.context.canvas),this.context=this.targetContext_,this.targetContext_=null}}renderDeclutter(e){!this.replayGroup_||!this.getLayer().getDeclutter()||this.renderWorlds(this.replayGroup_,e,!0)}renderDeferredInternal(e){this.replayGroup_&&(this.replayGroup_.renderDeferred(),this.clipped_&&this.context.restore(),this.resetDrawContext_())}renderFrame(e,t){const i=e.layerStatesArray[e.layerIndex];this.opacity_=i.opacity;const n=e.viewState;this.prepareContainer(e,t);const r=this.context,o=this.replayGroup_;let a=o&&!o.isEmpty();if(!a&&!(this.getLayer().hasListener(z3.PRERENDER)||this.getLayer().hasListener(z3.POSTRENDER)))return null;if(this.setDrawContext_(),this.preRender(r,e),n.projection,this.clipped_=!1,a&&i.extent&&this.clipping){const l=D1(i.extent);a=r3(l,e.extent),this.clipped_=a&&!T2(l,e.extent),this.clipped_&&this.clipUnrotated(r,e,l)}return a&&this.renderWorlds(o,e,this.getLayer().getDeclutter()?!1:void 0),!e.declutter&&this.clipped_&&r.restore(),this.postRender(r,e),this.renderedRotation_!==n.rotation&&(this.renderedRotation_=n.rotation,this.hitDetectionImageData_=null),e.declutter||this.resetDrawContext_(),this.container}getFeatures(e){return new Promise(t=>{if(this.frameState&&!this.hitDetectionImageData_&&!this.animatingOrInteracting_){const i=this.frameState.size.slice(),n=this.renderedCenter_,r=this.renderedResolution_,o=this.renderedRotation_,a=this.renderedProjection_,l=this.wrappedRenderedExtent_,h=this.getLayer(),c=[],u=i[0]*b3,d=i[1]*b3;c.push(this.getRenderTransform(n,r,o,b3,u,d,0).slice());const f=h.getSource(),g=a.getExtent();if(f.getWrapX()&&a.canWrapX()&&!T2(g,l)){let _=l[0];const m=e3(g);let p=0,y;for(;_<g[0];)--p,y=m*p,c.push(this.getRenderTransform(n,r,o,b3,u,d,y).slice()),_+=m;for(p=0,_=l[2];_>g[2];)++p,y=m*p,c.push(this.getRenderTransform(n,r,o,b3,u,d,y).slice()),_-=m}this.hitDetectionImageData_=t7(i,c,this.renderedFeatures_,h.getStyleFunction(),l,r,o,z4(r,this.renderedPixelRatio_),null)}t(i7(e,this.renderedFeatures_,this.hitDetectionImageData_))})}forEachFeatureAtCoordinate(e,t,i,n,r){var d,f;if(!this.replayGroup_)return;const o=t.viewState.resolution,a=t.viewState.rotation,l=this.getLayer(),h={},c=function(g,_,m){const p=Z(g),y=h[p];if(y){if(y!==!0&&m<y.distanceSq){if(m===0)return h[p]=!0,r.splice(r.lastIndexOf(y),1),n(g,l,_);y.geometry=_,y.distanceSq=m}}else{if(m===0)return h[p]=!0,n(g,l,_);r.push(h[p]={feature:g,layer:l,geometry:_,distanceSq:m,callback:n})}},u=this.getLayer().getDeclutter();return this.replayGroup_.forEachFeatureAtCoordinate(e,o,a,i,c,u?(f=(d=t.declutter)==null?void 0:d[u])==null?void 0:f.all().map(g=>g.value):null)}handleFontsChanged(){const e=this.getLayer();e.getVisible()&&this.replayGroup_&&e.changed()}handleStyleImageChange_(e){this.renderIfReadyAndVisible()}prepareFrame(e){const t=this.getLayer(),i=t.getSource();if(!i)return!1;const n=e.viewHints[s3.ANIMATING],r=e.viewHints[s3.INTERACTING],o=t.getUpdateWhileAnimating(),a=t.getUpdateWhileInteracting();if(this.ready&&!o&&n||!a&&r)return this.animatingOrInteracting_=!0,!0;this.animatingOrInteracting_=!1;const l=e.extent,h=e.viewState,c=h.projection,u=h.resolution,d=e.pixelRatio,f=t.getRevision(),g=t.getRenderBuffer();let _=t.getRenderOrder();_===void 0&&(_=Lt);const m=h.center.slice(),p=N1(l,g*u),y=p.slice(),w=[p.slice()],x=c.getExtent();if(i.getWrapX()&&c.canWrapX()&&!T2(x,e.extent)){const L=e3(x),O=Math.max(e3(p)/2,L);p[0]=x[0]-O,p[2]=x[2]+O,J4(m,c);const b=a6(w[0],c);b[0]<x[0]&&b[2]<x[2]?w.push([b[0]+L,b[1],b[2]+L,b[3]]):b[0]>x[0]&&b[2]>x[2]&&w.push([b[0]-L,b[1],b[2]-L,b[3]])}if(this.ready&&this.renderedResolution_==u&&this.renderedRevision_==f&&this.renderedRenderOrder_==_&&this.renderedFrameDeclutter_===!!e.declutter&&T2(this.wrappedRenderedExtent_,p))return V1(this.renderedExtent_,y)||(this.hitDetectionImageData_=null,this.renderedExtent_=y),this.renderedCenter_=m,this.replayGroupChanged=!1,!0;this.replayGroup_=null;const E=new Q6(Z6(u,d),p,u,d);let T;for(let L=0,O=w.length;L<O;++L)i.loadFeatures(w[L],u,c);const R=z4(u,d);let C=!0;const I=(L,O)=>{let b;const D=L.getStyleFunction()||t.getStyleFunction();if(D&&(b=D(L,u)),b){const W=this.renderFeature(L,R,b,E,T,this.getLayer().getDeclutter(),O);C=C&&!W}},A=s9(p),k=i.getFeaturesInExtent(A);_&&k.sort(_);for(let L=0,O=k.length;L<O;++L)I(k[L],L);this.renderedFeatures_=k,this.ready=C;const P=E.finish(),F=new e7(p,u,d,i.getOverlaps(),P,t.getRenderBuffer(),!!e.declutter);return this.renderedResolution_=u,this.renderedRevision_=f,this.renderedRenderOrder_=_,this.renderedFrameDeclutter_=!!e.declutter,this.renderedExtent_=y,this.wrappedRenderedExtent_=p,this.renderedCenter_=m,this.renderedProjection_=c,this.renderedPixelRatio_=d,this.replayGroup_=F,this.hitDetectionImageData_=null,this.replayGroupChanged=!0,!0}renderFeature(e,t,i,n,r,o,a){if(!i)return!1;let l=!1;if(Array.isArray(i))for(let h=0,c=i.length;h<c;++h)l=f0(n,e,i[h],t,this.boundHandleStyleImageChange_,r,o,a)||l;else l=f0(n,e,i,t,this.boundHandleStyleImageChange_,r,o,a);return l}}let h2=0;const w3=1<<h2++,H=1<<h2++,v3=1<<h2++,Y3=1<<h2++,o2=1<<h2++,a5=1<<h2++,U5=Math.pow(2,h2)-1,v9={[w3]:"boolean",[H]:"number",[v3]:"string",[Y3]:"color",[o2]:"number[]",[a5]:"size"},hi=Object.keys(v9).map(Number).sort(e1);function ci(s){return s in v9}function l5(s){const e=[];for(const t of hi)h5(s,t)&&e.push(v9[t]);return e.length===0?"untyped":e.length<3?e.join(" or "):e.slice(0,-1).join(", ")+", or "+e[e.length-1]}function h5(s,e){return(s&e)===e}function L1(s,e){return s===e}class a3{constructor(e,t){if(!ci(e))throw new Error(`literal expressions must have a specific type, got ${l5(e)}`);this.type=e,this.value=t}}class ui{constructor(e,t,...i){this.type=e,this.operator=t,this.args=i}}function r7(){return{variables:new Set,properties:new Set,featureId:!1,geometryType:!1,mapState:!1}}function d3(s,e,t){switch(typeof s){case"boolean":{if(L1(e,v3))return new a3(v3,s?"true":"false");if(!h5(e,w3))throw new Error(`got a boolean, but expected ${l5(e)}`);return new a3(w3,s)}case"number":{if(L1(e,a5))return new a3(a5,y3(s));if(L1(e,w3))return new a3(w3,!!s);if(L1(e,v3))return new a3(v3,s.toString());if(!h5(e,H))throw new Error(`got a number, but expected ${l5(e)}`);return new a3(H,s)}case"string":{if(L1(e,Y3))return new a3(Y3,a9(s));if(L1(e,w3))return new a3(w3,!!s);if(!h5(e,v3))throw new Error(`got a string, but expected ${l5(e)}`);return new a3(v3,s)}}if(!Array.isArray(s))throw new Error("expression must be an array or a primitive value");if(s.length===0)throw new Error("empty expression");if(typeof s[0]=="string")return Ci(s,e,t);for(const i of s)if(typeof i!="number")throw new Error("expected an array of numbers");if(L1(e,a5)){if(s.length!==2)throw new Error(`expected an array of two values for a size, got ${s.length}`);return new a3(a5,s)}if(L1(e,Y3)){if(s.length===3)return new a3(Y3,[...s,1]);if(s.length===4)return new a3(Y3,s);throw new Error(`expected an array of 3 or 4 values for a color, got ${s.length}`)}if(!h5(e,o2))throw new Error(`got an array of numbers, but expected ${l5(e)}`);return new a3(o2,s)}const S={Get:"get",Var:"var",Concat:"concat",GeometryType:"geometry-type",LineMetric:"line-metric",Any:"any",All:"all",Not:"!",Resolution:"resolution",Zoom:"zoom",Time:"time",Equal:"==",NotEqual:"!=",GreaterThan:">",GreaterThanOrEqualTo:">=",LessThan:"<",LessThanOrEqualTo:"<=",Multiply:"*",Divide:"/",Add:"+",Subtract:"-",Clamp:"clamp",Mod:"%",Pow:"^",Abs:"abs",Floor:"floor",Ceil:"ceil",Round:"round",Sin:"sin",Cos:"cos",Atan:"atan",Sqrt:"sqrt",Match:"match",Between:"between",Interpolate:"interpolate",Coalesce:"coalesce",Case:"case",In:"in",Number:"number",String:"string",Array:"array",Color:"color",Id:"id",Band:"band",Palette:"palette",ToString:"to-string",Has:"has"},di={[S.Get]:N(X(1,1/0),D8),[S.Var]:N(X(1,1),fi),[S.Has]:N(X(1,1/0),D8),[S.Id]:N(gi,_2),[S.Concat]:N(X(2,1/0),$(v3)),[S.GeometryType]:N(_i,_2),[S.LineMetric]:N(_2),[S.Resolution]:N(u4,_2),[S.Zoom]:N(u4,_2),[S.Time]:N(u4,_2),[S.Any]:N(X(2,1/0),$(w3)),[S.All]:N(X(2,1/0),$(w3)),[S.Not]:N(X(1,1),$(w3)),[S.Equal]:N(X(2,2),$(U5)),[S.NotEqual]:N(X(2,2),$(U5)),[S.GreaterThan]:N(X(2,2),$(H)),[S.GreaterThanOrEqualTo]:N(X(2,2),$(H)),[S.LessThan]:N(X(2,2),$(H)),[S.LessThanOrEqualTo]:N(X(2,2),$(H)),[S.Multiply]:N(X(2,1/0),k8),[S.Coalesce]:N(X(2,1/0),k8),[S.Divide]:N(X(2,2),$(H)),[S.Add]:N(X(2,1/0),$(H)),[S.Subtract]:N(X(2,2),$(H)),[S.Clamp]:N(X(3,3),$(H)),[S.Mod]:N(X(2,2),$(H)),[S.Pow]:N(X(2,2),$(H)),[S.Abs]:N(X(1,1),$(H)),[S.Floor]:N(X(1,1),$(H)),[S.Ceil]:N(X(1,1),$(H)),[S.Round]:N(X(1,1),$(H)),[S.Sin]:N(X(1,1),$(H)),[S.Cos]:N(X(1,1),$(H)),[S.Atan]:N(X(1,2),$(H)),[S.Sqrt]:N(X(1,1),$(H)),[S.Match]:N(X(4,1/0),O8,pi),[S.Between]:N(X(3,3),$(H)),[S.Interpolate]:N(X(6,1/0),O8,yi),[S.Case]:N(X(3,1/0),mi,xi),[S.In]:N(X(2,2),Ei),[S.Number]:N(X(1,1/0),$(U5)),[S.String]:N(X(1,1/0),$(U5)),[S.Array]:N(X(1,1/0),$(H)),[S.Color]:N(X(1,4),$(H)),[S.Band]:N(X(1,3),$(H)),[S.Palette]:N(X(2,2),wi),[S.ToString]:N(X(1,1),$(w3|H|v3|Y3))};function D8(s,e,t){const i=s.length-1,n=new Array(i);for(let r=0;r<i;++r){const o=s[r+1];switch(typeof o){case"number":{n[r]=new a3(H,o);break}case"string":{n[r]=new a3(v3,o);break}default:throw new Error(`expected a string key or numeric array index for a get operation, got ${o}`)}r===0&&t.properties.add(String(o))}return n}function fi(s,e,t){const i=s[1];if(typeof i!="string")throw new Error("expected a string argument for var operation");return t.variables.add(i),[new a3(v3,i)]}function gi(s,e,t){t.featureId=!0}function _i(s,e,t){t.geometryType=!0}function u4(s,e,t){t.mapState=!0}function _2(s,e,t){const i=s[0];if(s.length!==1)throw new Error(`expected no arguments for ${i} operation`);return[]}function X(s,e){return function(t,i,n){const r=t[0],o=t.length-1;if(s===e){if(o!==s){const a=s===1?"":"s";throw new Error(`expected ${s} argument${a} for ${r}, got ${o}`)}}else if(o<s||o>e){const a=e===1/0?`${s} or more`:`${s} to ${e}`;throw new Error(`expected ${a} arguments for ${r}, got ${o}`)}}}function k8(s,e,t){const i=s.length-1,n=new Array(i);for(let r=0;r<i;++r){const o=d3(s[r+1],e,t);n[r]=o}return n}function $(s){return function(e,t,i){const n=e.length-1,r=new Array(n);for(let o=0;o<n;++o){const a=d3(e[o+1],s,i);r[o]=a}return r}}function mi(s,e,t){const i=s[0],n=s.length-1;if(n%2===0)throw new Error(`expected an odd number of arguments for ${i}, got ${n} instead`)}function O8(s,e,t){const i=s[0],n=s.length-1;if(n%2===1)throw new Error(`expected an even number of arguments for operation ${i}, got ${n} instead`)}function pi(s,e,t){const i=s.length-1,n=v3|H|w3,r=d3(s[1],n,t),o=d3(s[s.length-1],e,t),a=new Array(i-2);for(let l=0;l<i-2;l+=2){try{const h=d3(s[l+2],r.type,t);a[l]=h}catch(h){throw new Error(`failed to parse argument ${l+1} of match expression: ${h.message}`)}try{const h=d3(s[l+3],o.type,t);a[l+1]=h}catch(h){throw new Error(`failed to parse argument ${l+2} of match expression: ${h.message}`)}}return[r,...a,o]}function yi(s,e,t){const i=s[1];let n;switch(i[0]){case"linear":n=1;break;case"exponential":const l=i[1];if(typeof l!="number"||l<=0)throw new Error(`expected a number base for exponential interpolation, got ${JSON.stringify(l)} instead`);n=l;break;default:throw new Error(`invalid interpolation type: ${JSON.stringify(i)}`)}const r=new a3(H,n);let o;try{o=d3(s[2],H,t)}catch(l){throw new Error(`failed to parse argument 1 in interpolate expression: ${l.message}`)}const a=new Array(s.length-3);for(let l=0;l<a.length;l+=2){try{const h=d3(s[l+3],H,t);a[l]=h}catch(h){throw new Error(`failed to parse argument ${l+2} for interpolate expression: ${h.message}`)}try{const h=d3(s[l+4],e,t);a[l+1]=h}catch(h){throw new Error(`failed to parse argument ${l+3} for interpolate expression: ${h.message}`)}}return[r,o,...a]}function xi(s,e,t){const i=d3(s[s.length-1],e,t),n=new Array(s.length-1);for(let r=0;r<n.length-1;r+=2){try{const o=d3(s[r+1],w3,t);n[r]=o}catch(o){throw new Error(`failed to parse argument ${r} of case expression: ${o.message}`)}try{const o=d3(s[r+2],i.type,t);n[r+1]=o}catch(o){throw new Error(`failed to parse argument ${r+1} of case expression: ${o.message}`)}}return n[n.length-1]=i,n}function Ei(s,e,t){let i=s[2];if(!Array.isArray(i))throw new Error('the second argument for the "in" operator must be an array');let n;if(typeof i[0]=="string"){if(i[0]!=="literal")throw new Error('for the "in" operator, a string array should be wrapped in a "literal" operator to disambiguate from expressions');if(!Array.isArray(i[1]))throw new Error('failed to parse "in" expression: the literal operator must be followed by an array');i=i[1],n=v3}else n=H;const r=new Array(i.length);for(let a=0;a<r.length;a++)try{const l=d3(i[a],n,t);r[a]=l}catch(l){throw new Error(`failed to parse haystack item ${a} for "in" expression: ${l.message}`)}return[d3(s[1],n,t),...r]}function wi(s,e,t){let i;try{i=d3(s[1],H,t)}catch(o){throw new Error(`failed to parse first argument in palette expression: ${o.message}`)}const n=s[2];if(!Array.isArray(n))throw new Error("the second argument of palette must be an array");const r=new Array(n.length);for(let o=0;o<r.length;o++){let a;try{a=d3(n[o],Y3,t)}catch(l){throw new Error(`failed to parse color at index ${o} in palette expression: ${l.message}`)}if(!(a instanceof a3))throw new Error(`the palette color at index ${o} must be a literal value`);r[o]=a}return[i,...r]}function N(...s){return function(e,t,i){const n=e[0];let r;for(let o=0;o<s.length;o++){const a=s[o](e,t,i);if(o==s.length-1){if(!a)throw new Error("expected last argument validator to return the parsed args");r=a}}return new ui(t,n,...r)}}function Ci(s,e,t){const i=s[0],n=di[i];if(!n)throw new Error(`unknown operator: ${i}`);return n(s,e,t)}function o7(s){if(!s)return"";const e=s.getType();switch(e){case"Point":case"LineString":case"Polygon":return e;case"MultiPoint":case"MultiLineString":case"MultiPolygon":return e.substring(5);case"Circle":return"Polygon";case"GeometryCollection":return o7(s.getGeometries()[0]);default:return""}}function a7(){return{variables:{},properties:{},resolution:NaN,featureId:null,geometryType:""}}function R1(s,e,t){const i=d3(s,e,t);return H3(i)}function H3(s,e){if(s instanceof a3){if(s.type===Y3&&typeof s.value=="string"){const i=a9(s.value);return function(){return i}}return function(){return s.value}}const t=s.operator;switch(t){case S.Number:case S.String:case S.Coalesce:return Si(s);case S.Get:case S.Var:case S.Has:return Ti(s);case S.Id:return i=>i.featureId;case S.GeometryType:return i=>i.geometryType;case S.Concat:{const i=s.args.map(n=>H3(n));return n=>"".concat(...i.map(r=>r(n).toString()))}case S.Resolution:return i=>i.resolution;case S.Any:case S.All:case S.Between:case S.In:case S.Not:return Ii(s);case S.Equal:case S.NotEqual:case S.LessThan:case S.LessThanOrEqualTo:case S.GreaterThan:case S.GreaterThanOrEqualTo:return Ri(s);case S.Multiply:case S.Divide:case S.Add:case S.Subtract:case S.Clamp:case S.Mod:case S.Pow:case S.Abs:case S.Floor:case S.Ceil:case S.Round:case S.Sin:case S.Cos:case S.Atan:case S.Sqrt:return vi(s);case S.Case:return Ai(s);case S.Match:return Mi(s);case S.Interpolate:return Li(s);case S.ToString:return Pi(s);default:throw new Error(`Unsupported operator ${t}`)}}function Si(s,e){const t=s.operator,i=s.args.length,n=new Array(i);for(let r=0;r<i;++r)n[r]=H3(s.args[r]);switch(t){case S.Coalesce:return r=>{for(let o=0;o<i;++o){const a=n[o](r);if(typeof a<"u"&&a!==null)return a}throw new Error("Expected one of the values to be non-null")};case S.Number:case S.String:return r=>{for(let o=0;o<i;++o){const a=n[o](r);if(typeof a===t)return a}throw new Error(`Expected one of the values to be a ${t}`)};default:throw new Error(`Unsupported assertion operator ${t}`)}}function Ti(s,e){const i=s.args[0].value;switch(s.operator){case S.Get:return n=>{const r=s.args;let o=n.properties[i];for(let a=1,l=r.length;a<l;++a){const c=r[a].value;o=o[c]}return o};case S.Var:return n=>n.variables[i];case S.Has:return n=>{const r=s.args;if(!(i in n.properties))return!1;let o=n.properties[i];for(let a=1,l=r.length;a<l;++a){const c=r[a].value;if(!o||!Object.hasOwn(o,c))return!1;o=o[c]}return!0};default:throw new Error(`Unsupported accessor operator ${s.operator}`)}}function Ri(s,e){const t=s.operator,i=H3(s.args[0]),n=H3(s.args[1]);switch(t){case S.Equal:return r=>i(r)===n(r);case S.NotEqual:return r=>i(r)!==n(r);case S.LessThan:return r=>i(r)<n(r);case S.LessThanOrEqualTo:return r=>i(r)<=n(r);case S.GreaterThan:return r=>i(r)>n(r);case S.GreaterThanOrEqualTo:return r=>i(r)>=n(r);default:throw new Error(`Unsupported comparison operator ${t}`)}}function Ii(s,e){const t=s.operator,i=s.args.length,n=new Array(i);for(let r=0;r<i;++r)n[r]=H3(s.args[r]);switch(t){case S.Any:return r=>{for(let o=0;o<i;++o)if(n[o](r))return!0;return!1};case S.All:return r=>{for(let o=0;o<i;++o)if(!n[o](r))return!1;return!0};case S.Between:return r=>{const o=n[0](r),a=n[1](r),l=n[2](r);return o>=a&&o<=l};case S.In:return r=>{const o=n[0](r);for(let a=1;a<i;++a)if(o===n[a](r))return!0;return!1};case S.Not:return r=>!n[0](r);default:throw new Error(`Unsupported logical operator ${t}`)}}function vi(s,e){const t=s.operator,i=s.args.length,n=new Array(i);for(let r=0;r<i;++r)n[r]=H3(s.args[r]);switch(t){case S.Multiply:return r=>{let o=1;for(let a=0;a<i;++a)o*=n[a](r);return o};case S.Divide:return r=>n[0](r)/n[1](r);case S.Add:return r=>{let o=0;for(let a=0;a<i;++a)o+=n[a](r);return o};case S.Subtract:return r=>n[0](r)-n[1](r);case S.Clamp:return r=>{const o=n[0](r),a=n[1](r);if(o<a)return a;const l=n[2](r);return o>l?l:o};case S.Mod:return r=>n[0](r)%n[1](r);case S.Pow:return r=>Math.pow(n[0](r),n[1](r));case S.Abs:return r=>Math.abs(n[0](r));case S.Floor:return r=>Math.floor(n[0](r));case S.Ceil:return r=>Math.ceil(n[0](r));case S.Round:return r=>Math.round(n[0](r));case S.Sin:return r=>Math.sin(n[0](r));case S.Cos:return r=>Math.cos(n[0](r));case S.Atan:return i===2?r=>Math.atan2(n[0](r),n[1](r)):r=>Math.atan(n[0](r));case S.Sqrt:return r=>Math.sqrt(n[0](r));default:throw new Error(`Unsupported numeric operator ${t}`)}}function Ai(s,e){const t=s.args.length,i=new Array(t);for(let n=0;n<t;++n)i[n]=H3(s.args[n]);return n=>{for(let r=0;r<t-1;r+=2)if(i[r](n))return i[r+1](n);return i[t-1](n)}}function Mi(s,e){const t=s.args.length,i=new Array(t);for(let n=0;n<t;++n)i[n]=H3(s.args[n]);return n=>{const r=i[0](n);for(let o=1;o<t;o+=2)if(r===i[o](n))return i[o+1](n);return i[t-1](n)}}function Li(s,e){const t=s.args.length,i=new Array(t);for(let n=0;n<t;++n)i[n]=H3(s.args[n]);return n=>{const r=i[0](n),o=i[1](n);let a,l;for(let h=2;h<t;h+=2){const c=i[h](n);let u=i[h+1](n);const d=Array.isArray(u);if(d&&(u=Le(u)),c>=o)return h===2?u:d?bi(r,o,a,l,c,u):c5(r,o,a,l,c,u);a=c,l=u}return l}}function Pi(s,e){const t=s.operator,i=s.args.length,n=new Array(i);for(let r=0;r<i;++r)n[r]=H3(s.args[r]);switch(t){case S.ToString:return r=>{const o=n[0](r);return s.args[0].type===Y3?l9(o):o.toString()};default:throw new Error(`Unsupported convert operator ${t}`)}}function c5(s,e,t,i,n,r){const o=n-t;if(o===0)return i;const a=e-t,l=s===1?a/o:(Math.pow(s,a)-1)/(Math.pow(s,o)-1);return i+l*(r-i)}function bi(s,e,t,i,n,r){if(n-t===0)return i;const a=l8(i),l=l8(r);let h=l[2]-a[2];h>180?h-=360:h<-180&&(h+=360);const c=[c5(s,e,t,a[0],n,l[0]),c5(s,e,t,a[1],n,l[1]),a[2]+c5(s,e,t,0,n,h),c5(s,e,t,i[3],n,r[3])];return y6(Pe(c))}function Fi(s){return!0}function Di(s){const e=r7(),t=ki(s,e),i=a7();return function(n,r){if(i.properties=n.getPropertiesInternal(),i.resolution=r,e.featureId){const o=n.getId();o!==void 0?i.featureId=o:i.featureId=null}return e.geometryType&&(i.geometryType=o7(n.getGeometry())),t(i)}}function G8(s){const e=r7(),t=s.length,i=new Array(t);for(let o=0;o<t;++o)i[o]=W4(s[o],e);const n=a7(),r=new Array(t);return function(o,a){if(n.properties=o.getPropertiesInternal(),n.resolution=a,e.featureId){const h=o.getId();h!==void 0?n.featureId=h:n.featureId=null}let l=0;for(let h=0;h<t;++h){const c=i[h](n);c&&(r[l]=c,l+=1)}return r.length=l,r}}function ki(s,e){const t=s.length,i=new Array(t);for(let n=0;n<t;++n){const r=s[n],o="filter"in r?R1(r.filter,w3,e):Fi;let a;if(Array.isArray(r.style)){const l=r.style.length;a=new Array(l);for(let h=0;h<l;++h)a[h]=W4(r.style[h],e)}else a=[W4(r.style,e)];i[n]={filter:o,styles:a}}return function(n){const r=[];let o=!1;for(let a=0;a<t;++a){const l=i[a].filter;if(l(n)&&!(s[a].else&&o)){o=!0;for(const h of i[a].styles){const c=h(n);c&&r.push(c)}}}return r}}function W4(s,e){const t=C5(s,"",e),i=S5(s,"",e),n=Oi(s,e),r=Gi(s,e),o=A3(s,"z-index",e);if(!t&&!i&&!n&&!r&&!r2(s))throw new Error("No fill, stroke, point, or text symbolizer properties in style: "+JSON.stringify(s));const a=new F3;return function(l){let h=!0;if(t){const c=t(l);c&&(h=!1),a.setFill(c)}if(i){const c=i(l);c&&(h=!1),a.setStroke(c)}if(n){const c=n(l);c&&(h=!1),a.setText(c)}if(r){const c=r(l);c&&(h=!1),a.setImage(c)}return o&&a.setZIndex(o(l)),h?null:a}}function C5(s,e,t){let i;if(e+"fill-pattern-src"in s)i=Bi(s,e+"fill-",t);else{if(s[e+"fill-color"]==="none")return r=>null;i=A9(s,e+"fill-color",t)}if(!i)return null;const n=new S1;return function(r){const o=i(r);return o===o9?null:(n.setColor(o),n)}}function S5(s,e,t){const i=A3(s,e+"stroke-width",t),n=A9(s,e+"stroke-color",t);if(!i&&!n)return null;const r=_1(s,e+"stroke-line-cap",t),o=_1(s,e+"stroke-line-join",t),a=l7(s,e+"stroke-line-dash",t),l=A3(s,e+"stroke-line-dash-offset",t),h=A3(s,e+"stroke-miter-limit",t),c=new n2;return function(u){if(n){const d=n(u);if(d===o9)return null;c.setColor(d)}if(i&&c.setWidth(i(u)),r){const d=r(u);if(d!=="butt"&&d!=="round"&&d!=="square")throw new Error("Expected butt, round, or square line cap");c.setLineCap(d)}if(o){const d=o(u);if(d!=="bevel"&&d!=="round"&&d!=="miter")throw new Error("Expected bevel, round, or miter line join");c.setLineJoin(d)}return a&&c.setLineDash(a(u)),l&&c.setLineDashOffset(l(u)),h&&c.setMiterLimit(h(u)),c}}function Oi(s,e){const t="text-",i=_1(s,t+"value",e);if(!i)return null;const n=C5(s,t,e),r=C5(s,t+"background-",e),o=S5(s,t,e),a=S5(s,t+"background-",e),l=_1(s,t+"font",e),h=A3(s,t+"max-angle",e),c=A3(s,t+"offset-x",e),u=A3(s,t+"offset-y",e),d=P2(s,t+"overflow",e),f=_1(s,t+"placement",e),g=A3(s,t+"repeat",e),_=X0(s,t+"scale",e),m=P2(s,t+"rotate-with-view",e),p=A3(s,t+"rotation",e),y=_1(s,t+"align",e),w=_1(s,t+"justify",e),x=_1(s,t+"baseline",e),E=P2(s,t+"keep-upright",e),T=l7(s,t+"padding",e),R=V0(s,t+"declutter-mode"),C=new d9({declutterMode:R});return function(I){if(C.setText(i(I)),n&&C.setFill(n(I)),r&&C.setBackgroundFill(r(I)),o&&C.setStroke(o(I)),a&&C.setBackgroundStroke(a(I)),l&&C.setFont(l(I)),h&&C.setMaxAngle(h(I)),c&&C.setOffsetX(c(I)),u&&C.setOffsetY(u(I)),d&&C.setOverflow(d(I)),f){const A=f(I);if(A!=="point"&&A!=="line")throw new Error("Expected point or line for text-placement");C.setPlacement(A)}if(g&&C.setRepeat(g(I)),_&&C.setScale(_(I)),m&&C.setRotateWithView(m(I)),p&&C.setRotation(p(I)),y){const A=y(I);if(A!=="left"&&A!=="center"&&A!=="right"&&A!=="end"&&A!=="start")throw new Error("Expected left, right, center, start, or end for text-align");C.setTextAlign(A)}if(w){const A=w(I);if(A!=="left"&&A!=="right"&&A!=="center")throw new Error("Expected left, right, or center for text-justify");C.setJustify(A)}if(x){const A=x(I);if(A!=="bottom"&&A!=="top"&&A!=="middle"&&A!=="alphabetic"&&A!=="hanging")throw new Error("Expected bottom, top, middle, alphabetic, or hanging for text-baseline");C.setTextBaseline(A)}return T&&C.setPadding(T(I)),E&&C.setKeepUpright(E(I)),C}}function Gi(s,e){return"icon-src"in s?Ni(s,e):"shape-points"in s?zi(s,e):"circle-radius"in s?Wi(s,e):null}function Ni(s,e){const t="icon-",i=t+"src",n=h7(s[i],i),r=p0(s,t+"anchor",e),o=X0(s,t+"scale",e),a=A3(s,t+"opacity",e),l=p0(s,t+"displacement",e),h=A3(s,t+"rotation",e),c=P2(s,t+"rotate-with-view",e),u=z8(s,t+"anchor-origin"),d=W8(s,t+"anchor-x-units"),f=W8(s,t+"anchor-y-units"),g=Yi(s,t+"color"),_=Xi(s,t+"cross-origin"),m=Vi(s,t+"offset"),p=z8(s,t+"offset-origin"),y=y0(s,t+"width"),w=y0(s,t+"height"),x=Ki(s,t+"size"),E=V0(s,t+"declutter-mode"),T=new N0({src:n,anchorOrigin:u,anchorXUnits:d,anchorYUnits:f,color:g,crossOrigin:_,offset:m,offsetOrigin:p,height:w,width:y,size:x,declutterMode:E});return function(R){return a&&T.setOpacity(a(R)),l&&T.setDisplacement(l(R)),h&&T.setRotation(h(R)),c&&T.setRotateWithView(c(R)),o&&T.setScale(o(R)),r&&T.setAnchor(r(R)),T}}function zi(s,e){const t="shape-",i=t+"points",n=t+"radius",r=B4(s[i],i),o=B4(s[n],n),a=C5(s,t,e),l=S5(s,t,e),h=X0(s,t+"scale",e),c=p0(s,t+"displacement",e),u=A3(s,t+"rotation",e),d=P2(s,t+"rotate-with-view",e),f=y0(s,t+"radius2"),g=y0(s,t+"angle"),_=V0(s,t+"declutter-mode"),m=new G0({points:r,radius:o,radius2:f,angle:g,declutterMode:_});return function(p){return a&&m.setFill(a(p)),l&&m.setStroke(l(p)),c&&m.setDisplacement(c(p)),u&&m.setRotation(u(p)),d&&m.setRotateWithView(d(p)),h&&m.setScale(h(p)),m}}function Wi(s,e){const t="circle-",i=C5(s,t,e),n=S5(s,t,e),r=A3(s,t+"radius",e),o=X0(s,t+"scale",e),a=p0(s,t+"displacement",e),l=A3(s,t+"rotation",e),h=P2(s,t+"rotate-with-view",e),c=V0(s,t+"declutter-mode"),u=new l2({radius:5,declutterMode:c});return function(d){return r&&u.setRadius(r(d)),i&&u.setFill(i(d)),n&&u.setStroke(n(d)),a&&u.setDisplacement(a(d)),l&&u.setRotation(l(d)),h&&u.setRotateWithView(h(d)),o&&u.setScale(o(d)),u}}function A3(s,e,t){if(!(e in s))return;const i=R1(s[e],H,t);return function(n){return B4(i(n),e)}}function _1(s,e,t){if(!(e in s))return null;const i=R1(s[e],v3,t);return function(n){return h7(i(n),e)}}function Bi(s,e,t){const i=_1(s,e+"pattern-src",t),n=N8(s,e+"pattern-offset",t),r=N8(s,e+"pattern-size",t),o=A9(s,e+"color",t);return function(a){return{src:i(a),offset:n&&n(a),size:r&&r(a),color:o&&o(a)}}}function P2(s,e,t){if(!(e in s))return null;const i=R1(s[e],w3,t);return function(n){const r=i(n);if(typeof r!="boolean")throw new Error(`Expected a boolean for ${e}`);return r}}function A9(s,e,t){if(!(e in s))return null;const i=R1(s[e],Y3,t);return function(n){return c7(i(n),e)}}function l7(s,e,t){if(!(e in s))return null;const i=R1(s[e],o2,t);return function(n){return P5(i(n),e)}}function p0(s,e,t){if(!(e in s))return null;const i=R1(s[e],o2,t);return function(n){const r=P5(i(n),e);if(r.length!==2)throw new Error(`Expected two numbers for ${e}`);return r}}function N8(s,e,t){if(!(e in s))return null;const i=R1(s[e],o2,t);return function(n){return u7(i(n),e)}}function X0(s,e,t){if(!(e in s))return null;const i=R1(s[e],o2|H,t);return function(n){return Zi(i(n),e)}}function y0(s,e){const t=s[e];if(t!==void 0){if(typeof t!="number")throw new Error(`Expected a number for ${e}`);return t}}function Ki(s,e){const t=s[e];if(t!==void 0){if(typeof t=="number")return y3(t);if(!Array.isArray(t))throw new Error(`Expected a number or size array for ${e}`);if(t.length!==2||typeof t[0]!="number"||typeof t[1]!="number")throw new Error(`Expected a number or size array for ${e}`);return t}}function Xi(s,e){const t=s[e];if(t!==void 0){if(typeof t!="string")throw new Error(`Expected a string for ${e}`);return t}}function z8(s,e){const t=s[e];if(t!==void 0){if(t!=="bottom-left"&&t!=="bottom-right"&&t!=="top-left"&&t!=="top-right")throw new Error(`Expected bottom-left, bottom-right, top-left, or top-right for ${e}`);return t}}function W8(s,e){const t=s[e];if(t!==void 0){if(t!=="pixels"&&t!=="fraction")throw new Error(`Expected pixels or fraction for ${e}`);return t}}function Vi(s,e){const t=s[e];if(t!==void 0)return P5(t,e)}function V0(s,e){const t=s[e];if(t!==void 0){if(typeof t!="string")throw new Error(`Expected a string for ${e}`);if(t!=="declutter"&&t!=="obstacle"&&t!=="none")throw new Error(`Expected declutter, obstacle, or none for ${e}`);return t}}function Yi(s,e){const t=s[e];if(t!==void 0)return c7(t,e)}function P5(s,e){if(!Array.isArray(s))throw new Error(`Expected an array for ${e}`);const t=s.length;for(let i=0;i<t;++i)if(typeof s[i]!="number")throw new Error(`Expected an array of numbers for ${e}`);return s}function h7(s,e){if(typeof s!="string")throw new Error(`Expected a string for ${e}`);return s}function B4(s,e){if(typeof s!="number")throw new Error(`Expected a number for ${e}`);return s}function c7(s,e){if(typeof s=="string")return s;const t=P5(s,e),i=t.length;if(i<3||i>4)throw new Error(`Expected a color with 3 or 4 values for ${e}`);return t}function u7(s,e){const t=P5(s,e);if(t.length!==2)throw new Error(`Expected an array of two numbers for ${e}`);return t}function Zi(s,e){return typeof s=="number"?s:u7(s,e)}const X3={CENTER:"center",RESOLUTION:"resolution",ROTATION:"rotation"};function B8(s,e,t){return function(i,n,r,o,a){if(!i)return;if(!n&&!e)return i;const l=e?0:r[0]*n,h=e?0:r[1]*n,c=a?a[0]:0,u=a?a[1]:0;let d=s[0]+l/2+c,f=s[2]-l/2+c,g=s[1]+h/2+u,_=s[3]-h/2+u;d>f&&(d=(f+d)/2,f=d),g>_&&(g=(_+g)/2,_=g);let m=o3(i[0],d,f),p=o3(i[1],g,_);if(o&&t&&n){const y=30*n;m+=-y*Math.log(1+Math.max(0,d-i[0])/y)+y*Math.log(1+Math.max(0,i[0]-f)/y),p+=-y*Math.log(1+Math.max(0,g-i[1])/y)+y*Math.log(1+Math.max(0,i[1]-_)/y)}return[m,p]}}function Hi(s){return s}function d7(s){return Math.pow(s,3)}function Z2(s){return 1-d7(1-s)}function Ui(s){return 3*s*s-2*s*s*s}function ji(s){return s}function M9(s,e,t,i){const n=e3(e)/t[0],r=C3(e)/t[1];return i?Math.min(s,Math.max(n,r)):Math.min(s,Math.min(n,r))}function L9(s,e,t){let i=Math.min(s,e);const n=50;return i*=Math.log(1+n*Math.max(0,s/e-1))/n+1,t&&(i=Math.max(i,t),i/=Math.log(1+n*Math.max(0,t/s-1))/n+1),o3(i,t/2,e*2)}function qi(s,e,t,i){return e=e!==void 0?e:!0,function(n,r,o,a){if(n!==void 0){const l=s[0],h=s[s.length-1],c=t?M9(l,t,o,i):l;if(a)return e?L9(n,c,h):o3(n,h,c);const u=Math.min(c,n),d=Math.floor(h9(s,u,r));return s[d]>c&&d<s.length-1?s[d+1]:s[d]}}}function $i(s,e,t,i,n,r){return i=i!==void 0?i:!0,t=t!==void 0?t:0,function(o,a,l,h){if(o!==void 0){const c=n?M9(e,n,l,r):e;if(h)return i?L9(o,c,t):o3(o,t,c);const u=1e-9,d=Math.ceil(Math.log(e/c)/Math.log(s)-u),f=-a*(.5-u)+.5,g=Math.min(c,o),_=Math.floor(Math.log(e/g)/Math.log(s)+f),m=Math.max(d,_),p=e/Math.pow(s,m);return o3(p,t,c)}}}function K8(s,e,t,i,n){return t=t!==void 0?t:!0,function(r,o,a,l){if(r!==void 0){const h=i?M9(s,i,a,n):s;return!t||!l?o3(r,e,h):L9(r,h,e)}}}function P9(s){if(s!==void 0)return 0}function X8(s){if(s!==void 0)return s}function Ji(s){const e=2*Math.PI/s;return function(t,i){if(i)return t;if(t!==void 0)return t=Math.floor(t/e+.5)*e,t}}function Qi(s){const e=z1(5);return function(t,i){return i||t===void 0?t:Math.abs(t)<=e?0:t}}const f7=42,b9=256,d4=0;class Z3 extends o1{constructor(e){super(),this.on,this.once,this.un,e=Object.assign({},e),this.hints_=[0,0],this.animations_=[],this.updateAnimationKey_,this.projection_=n9(e.projection,"EPSG:3857"),this.viewportSize_=[100,100],this.targetCenter_=null,this.targetResolution_,this.targetRotation_,this.nextCenter_=null,this.nextResolution_,this.nextRotation_,this.cancelAnchor_=void 0,e.projection&&m6(),e.center&&(e.center=V3(e.center,this.projection_)),e.extent&&(e.extent=D1(e.extent,this.projection_)),this.applyOptions_(e)}applyOptions_(e){const t=Object.assign({},e);for(const a in X3)delete t[a];this.setProperties(t,!0);const i=tn(e);this.maxResolution_=i.maxResolution,this.minResolution_=i.minResolution,this.zoomFactor_=i.zoomFactor,this.resolutions_=e.resolutions,this.padding_=e.padding,this.minZoom_=i.minZoom;const n=en(e),r=i.constraint,o=nn(e);this.constraints_={center:n,resolution:r,rotation:o},this.setRotation(e.rotation!==void 0?e.rotation:0),this.setCenterInternal(e.center!==void 0?e.center:null),e.resolution!==void 0?this.setResolution(e.resolution):e.zoom!==void 0&&this.setZoom(e.zoom)}get padding(){return this.padding_}set padding(e){let t=this.padding_;this.padding_=e;const i=this.getCenterInternal();if(i){const n=e||[0,0,0,0];t=t||[0,0,0,0];const r=this.getResolution(),o=r/2*(n[3]-t[3]+t[1]-n[1]),a=r/2*(n[0]-t[0]+t[2]-n[2]);this.setCenterInternal([i[0]+o,i[1]-a])}}getUpdatedOptions_(e){const t=this.getProperties();return t.resolution!==void 0?t.resolution=this.getResolution():t.zoom=this.getZoom(),t.center=this.getCenterInternal(),t.rotation=this.getRotation(),Object.assign({},t,e)}animate(e){this.isDef()&&!this.getAnimating()&&this.resolveConstraints(0);const t=new Array(arguments.length);for(let i=0;i<t.length;++i){let n=arguments[i];n.center&&(n=Object.assign({},n),n.center=V3(n.center,this.getProjection())),n.anchor&&(n=Object.assign({},n),n.anchor=V3(n.anchor,this.getProjection())),t[i]=n}this.animateInternal.apply(this,t)}animateInternal(e){let t=arguments.length,i;t>1&&typeof arguments[t-1]=="function"&&(i=arguments[t-1],--t);let n=0;for(;n<t&&!this.isDef();++n){const c=arguments[n];c.center&&this.setCenterInternal(c.center),c.zoom!==void 0?this.setZoom(c.zoom):c.resolution&&this.setResolution(c.resolution),c.rotation!==void 0&&this.setRotation(c.rotation)}if(n===t){i&&j5(i,!0);return}let r=Date.now(),o=this.targetCenter_.slice(),a=this.targetResolution_,l=this.targetRotation_;const h=[];for(;n<t;++n){const c=arguments[n],u={start:r,complete:!1,anchor:c.anchor,duration:c.duration!==void 0?c.duration:1e3,easing:c.easing||Ui,callback:i};if(c.center&&(u.sourceCenter=o,u.targetCenter=c.center.slice(),o=u.targetCenter),c.zoom!==void 0?(u.sourceResolution=a,u.targetResolution=this.getResolutionForZoom(c.zoom),a=u.targetResolution):c.resolution&&(u.sourceResolution=a,u.targetResolution=c.resolution,a=u.targetResolution),c.rotation!==void 0){u.sourceRotation=l;const d=M2(c.rotation-l+Math.PI,2*Math.PI)-Math.PI;u.targetRotation=l+d,l=u.targetRotation}sn(u)?u.complete=!0:r+=u.duration,h.push(u)}this.animations_.push(h),this.setHint(s3.ANIMATING,1),this.updateAnimations_()}getAnimating(){return this.hints_[s3.ANIMATING]>0}getInteracting(){return this.hints_[s3.INTERACTING]>0}cancelAnimations(){this.setHint(s3.ANIMATING,-this.hints_[s3.ANIMATING]);let e;for(let t=0,i=this.animations_.length;t<i;++t){const n=this.animations_[t];if(n[0].callback&&j5(n[0].callback,!1),!e)for(let r=0,o=n.length;r<o;++r){const a=n[r];if(!a.complete){e=a.anchor;break}}}this.animations_.length=0,this.cancelAnchor_=e,this.nextCenter_=null,this.nextResolution_=NaN,this.nextRotation_=NaN}updateAnimations_(){if(this.updateAnimationKey_!==void 0&&(cancelAnimationFrame(this.updateAnimationKey_),this.updateAnimationKey_=void 0),!this.getAnimating())return;const e=Date.now();let t=!1;for(let i=this.animations_.length-1;i>=0;--i){const n=this.animations_[i];let r=!0;for(let o=0,a=n.length;o<a;++o){const l=n[o];if(l.complete)continue;const h=e-l.start;let c=l.duration>0?h/l.duration:1;c>=1?(l.complete=!0,c=1):r=!1;const u=l.easing(c);if(l.sourceCenter){const d=l.sourceCenter[0],f=l.sourceCenter[1],g=l.targetCenter[0],_=l.targetCenter[1];this.nextCenter_=l.targetCenter;const m=d+u*(g-d),p=f+u*(_-f);this.targetCenter_=[m,p]}if(l.sourceResolution&&l.targetResolution){const d=u===1?l.targetResolution:l.sourceResolution+u*(l.targetResolution-l.sourceResolution);if(l.anchor){const f=this.getViewportSize_(this.getRotation()),g=this.constraints_.resolution(d,0,f,!0);this.targetCenter_=this.calculateCenterZoom(g,l.anchor)}this.nextResolution_=l.targetResolution,this.targetResolution_=d,this.applyTargetState_(!0)}if(l.sourceRotation!==void 0&&l.targetRotation!==void 0){const d=u===1?M2(l.targetRotation+Math.PI,2*Math.PI)-Math.PI:l.sourceRotation+u*(l.targetRotation-l.sourceRotation);if(l.anchor){const f=this.constraints_.rotation(d,!0);this.targetCenter_=this.calculateCenterRotate(f,l.anchor)}this.nextRotation_=l.targetRotation,this.targetRotation_=d}if(this.applyTargetState_(!0),t=!0,!l.complete)break}if(r){this.animations_[i]=null,this.setHint(s3.ANIMATING,-1),this.nextCenter_=null,this.nextResolution_=NaN,this.nextRotation_=NaN;const o=n[0].callback;o&&j5(o,!0)}}this.animations_=this.animations_.filter(Boolean),t&&this.updateAnimationKey_===void 0&&(this.updateAnimationKey_=requestAnimationFrame(this.updateAnimations_.bind(this)))}calculateCenterRotate(e,t){let i;const n=this.getCenterInternal();return n!==void 0&&(i=[n[0]-t[0],n[1]-t[1]],$4(i,e-this.getRotation()),Z7(i,t)),i}calculateCenterZoom(e,t){let i;const n=this.getCenterInternal(),r=this.getResolution();if(n!==void 0&&r!==void 0){const o=t[0]-e*(t[0]-n[0])/r,a=t[1]-e*(t[1]-n[1])/r;i=[o,a]}return i}getViewportSize_(e){const t=this.viewportSize_;if(e){const i=t[0],n=t[1];return[Math.abs(i*Math.cos(e))+Math.abs(n*Math.sin(e)),Math.abs(i*Math.sin(e))+Math.abs(n*Math.cos(e))]}return t}setViewportSize(e){this.viewportSize_=Array.isArray(e)?e.slice():[100,100],this.getAnimating()||this.resolveConstraints(0)}getCenter(){const e=this.getCenterInternal();return e&&F4(e,this.getProjection())}getCenterInternal(){return this.get(X3.CENTER)}getConstraints(){return this.constraints_}getConstrainResolution(){return this.get("constrainResolution")}getHints(e){return e!==void 0?(e[0]=this.hints_[0],e[1]=this.hints_[1],e):this.hints_.slice()}calculateExtent(e){const t=this.calculateExtentInternal(e);return s9(t,this.getProjection())}calculateExtentInternal(e){e=e||this.getViewportSizeMinusPadding_();const t=this.getCenterInternal();q(t,"The view center is not defined");const i=this.getResolution();q(i!==void 0,"The view resolution is not defined");const n=this.getRotation();return q(n!==void 0,"The view rotation is not defined"),v4(t,i,n,e)}getMaxResolution(){return this.maxResolution_}getMinResolution(){return this.minResolution_}getMaxZoom(){return this.getZoomForResolution(this.minResolution_)}setMaxZoom(e){this.applyOptions_(this.getUpdatedOptions_({maxZoom:e}))}getMinZoom(){return this.getZoomForResolution(this.maxResolution_)}setMinZoom(e){this.applyOptions_(this.getUpdatedOptions_({minZoom:e}))}setConstrainResolution(e){this.applyOptions_(this.getUpdatedOptions_({constrainResolution:e}))}getProjection(){return this.projection_}getResolution(){return this.get(X3.RESOLUTION)}getResolutions(){return this.resolutions_}getResolutionForExtent(e,t){return this.getResolutionForExtentInternal(D1(e,this.getProjection()),t)}getResolutionForExtentInternal(e,t){t=t||this.getViewportSizeMinusPadding_();const i=e3(e)/t[0],n=C3(e)/t[1];return Math.max(i,n)}getResolutionForValueFunction(e){e=e||2;const t=this.getConstrainedResolution(this.maxResolution_),i=this.minResolution_,n=Math.log(t/i)/Math.log(e);return function(r){return t/Math.pow(e,r*n)}}getRotation(){return this.get(X3.ROTATION)}getValueForResolutionFunction(e){const t=Math.log(e||2),i=this.getConstrainedResolution(this.maxResolution_),n=this.minResolution_,r=Math.log(i/n)/t;return function(o){return Math.log(i/o)/t/r}}getViewportSizeMinusPadding_(e){let t=this.getViewportSize_(e);const i=this.padding_;return i&&(t=[t[0]-i[1]-i[3],t[1]-i[0]-i[2]]),t}getState(){const e=this.getProjection(),t=this.getResolution(),i=this.getRotation();let n=this.getCenterInternal();const r=this.padding_;if(r){const o=this.getViewportSizeMinusPadding_();n=f4(n,this.getViewportSize_(),[o[0]/2+r[3],o[1]/2+r[0]],t,i)}return{center:n.slice(0),projection:e!==void 0?e:null,resolution:t,nextCenter:this.nextCenter_,nextResolution:this.nextResolution_,nextRotation:this.nextRotation_,rotation:i,zoom:this.getZoom()}}getViewStateAndExtent(){return{viewState:this.getState(),extent:this.calculateExtent()}}getZoom(){let e;const t=this.getResolution();return t!==void 0&&(e=this.getZoomForResolution(t)),e}getZoomForResolution(e){let t=this.minZoom_||0,i,n;if(this.resolutions_){const r=h9(this.resolutions_,e,1);t=r,i=this.resolutions_[r],r==this.resolutions_.length-1?n=2:n=i/this.resolutions_[r+1]}else i=this.maxResolution_,n=this.zoomFactor_;return t+Math.log(i/e)/Math.log(n)}getResolutionForZoom(e){var t;if((t=this.resolutions_)!=null&&t.length){if(this.resolutions_.length===1)return this.resolutions_[0];const i=o3(Math.floor(e),0,this.resolutions_.length-2),n=this.resolutions_[i]/this.resolutions_[i+1];return this.resolutions_[i]/Math.pow(n,o3(e-i,0,1))}return this.maxResolution_/Math.pow(this.zoomFactor_,e-this.minZoom_)}fit(e,t){let i;if(q(Array.isArray(e)||typeof e.getSimplifiedGeometry=="function","Invalid extent or geometry provided as `geometry`"),Array.isArray(e)){q(!R0(e),"Cannot fit empty extent provided as `geometry`");const n=D1(e,this.getProjection());i=S8(n)}else if(e.getType()==="Circle"){const n=D1(e.getExtent(),this.getProjection());i=S8(n),i.rotate(this.getRotation(),C1(n))}else i=e;this.fitInternal(i,t)}rotatedExtentForGeometry(e){const t=this.getRotation(),i=Math.cos(t),n=Math.sin(-t),r=e.getFlatCoordinates(),o=e.getStride();let a=1/0,l=1/0,h=-1/0,c=-1/0;for(let u=0,d=r.length;u<d;u+=o){const f=r[u]*i-r[u+1]*n,g=r[u]*n+r[u+1]*i;a=Math.min(a,f),l=Math.min(l,g),h=Math.max(h,f),c=Math.max(c,g)}return[a,l,h,c]}fitInternal(e,t){t=t||{};let i=t.size;i||(i=this.getViewportSizeMinusPadding_());const n=t.padding!==void 0?t.padding:[0,0,0,0],r=t.nearest!==void 0?t.nearest:!1;let o;t.minResolution!==void 0?o=t.minResolution:t.maxZoom!==void 0?o=this.getResolutionForZoom(t.maxZoom):o=0;const a=this.rotatedExtentForGeometry(e);let l=this.getResolutionForExtentInternal(a,[i[0]-n[1]-n[3],i[1]-n[0]-n[2]]);l=isNaN(l)?o:Math.max(l,o),l=this.getConstrainedResolution(l,r?0:1);const h=this.getRotation(),c=Math.sin(h),u=Math.cos(h),d=C1(a);d[0]+=(n[1]-n[3])/2*l,d[1]+=(n[0]-n[2])/2*l;const f=d[0]*u-d[1]*c,g=d[1]*u+d[0]*c,_=this.getConstrainedCenter([f,g],l),m=t.callback?t.callback:N2;t.duration!==void 0?this.animateInternal({resolution:l,center:_,duration:t.duration,easing:t.easing},m):(this.targetResolution_=l,this.targetCenter_=_,this.applyTargetState_(!1,!0),j5(m,!0))}centerOn(e,t,i){this.centerOnInternal(V3(e,this.getProjection()),t,i)}centerOnInternal(e,t,i){this.setCenterInternal(f4(e,t,i,this.getResolution(),this.getRotation()))}calculateCenterShift(e,t,i,n){let r;const o=this.padding_;if(o&&e){const a=this.getViewportSizeMinusPadding_(-i),l=f4(e,n,[a[0]/2+o[3],a[1]/2+o[0]],t,i);r=[e[0]-l[0],e[1]-l[1]]}return r}isDef(){return!!this.getCenterInternal()&&this.getResolution()!==void 0}adjustCenter(e){const t=F4(this.targetCenter_,this.getProjection());this.setCenter([t[0]+e[0],t[1]+e[1]])}adjustCenterInternal(e){const t=this.targetCenter_;this.setCenterInternal([t[0]+e[0],t[1]+e[1]])}adjustResolution(e,t){t=t&&V3(t,this.getProjection()),this.adjustResolutionInternal(e,t)}adjustResolutionInternal(e,t){const i=this.getAnimating()||this.getInteracting(),n=this.getViewportSize_(this.getRotation()),r=this.constraints_.resolution(this.targetResolution_*e,0,n,i);t&&(this.targetCenter_=this.calculateCenterZoom(r,t)),this.targetResolution_*=e,this.applyTargetState_()}adjustZoom(e,t){this.adjustResolution(Math.pow(this.zoomFactor_,-e),t)}adjustRotation(e,t){t&&(t=V3(t,this.getProjection())),this.adjustRotationInternal(e,t)}adjustRotationInternal(e,t){const i=this.getAnimating()||this.getInteracting(),n=this.constraints_.rotation(this.targetRotation_+e,i);t&&(this.targetCenter_=this.calculateCenterRotate(n,t)),this.targetRotation_+=e,this.applyTargetState_()}setCenter(e){this.setCenterInternal(e&&V3(e,this.getProjection()))}setCenterInternal(e){this.targetCenter_=e,this.applyTargetState_()}setHint(e,t){return this.hints_[e]+=t,this.changed(),this.hints_[e]}setResolution(e){this.targetResolution_=e,this.applyTargetState_()}setRotation(e){this.targetRotation_=e,this.applyTargetState_()}setZoom(e){this.setResolution(this.getResolutionForZoom(e))}applyTargetState_(e,t){const i=this.getAnimating()||this.getInteracting()||t,n=this.constraints_.rotation(this.targetRotation_,i),r=this.getViewportSize_(n),o=this.constraints_.resolution(this.targetResolution_,0,r,i),a=this.constraints_.center(this.targetCenter_,o,r,i,this.calculateCenterShift(this.targetCenter_,o,n,r));this.get(X3.ROTATION)!==n&&this.set(X3.ROTATION,n),this.get(X3.RESOLUTION)!==o&&(this.set(X3.RESOLUTION,o),this.set("zoom",this.getZoom(),!0)),(!a||!this.get(X3.CENTER)||!s0(this.get(X3.CENTER),a))&&this.set(X3.CENTER,a),this.getAnimating()&&!e&&this.cancelAnimations(),this.cancelAnchor_=void 0}resolveConstraints(e,t,i){e=e!==void 0?e:200;const n=t||0,r=this.constraints_.rotation(this.targetRotation_),o=this.getViewportSize_(r),a=this.constraints_.resolution(this.targetResolution_,n,o),l=this.constraints_.center(this.targetCenter_,a,o,!1,this.calculateCenterShift(this.targetCenter_,a,r,o));if(e===0&&!this.cancelAnchor_){this.targetResolution_=a,this.targetRotation_=r,this.targetCenter_=l,this.applyTargetState_();return}i=i||(e===0?this.cancelAnchor_:void 0),this.cancelAnchor_=void 0,(this.getResolution()!==a||this.getRotation()!==r||!this.getCenterInternal()||!s0(this.getCenterInternal(),l))&&(this.getAnimating()&&this.cancelAnimations(),this.animateInternal({rotation:r,center:l,resolution:a,duration:e,easing:Z2,anchor:i}))}beginInteraction(){this.resolveConstraints(0),this.setHint(s3.INTERACTING,1)}endInteraction(e,t,i){i=i&&V3(i,this.getProjection()),this.endInteractionInternal(e,t,i)}endInteractionInternal(e,t,i){this.getInteracting()&&(this.setHint(s3.INTERACTING,-1),this.resolveConstraints(e,t,i))}getConstrainedCenter(e,t){const i=this.getViewportSize_(this.getRotation());return this.constraints_.center(e,t||this.getResolution(),i)}getConstrainedZoom(e,t){const i=this.getResolutionForZoom(e);return this.getZoomForResolution(this.getConstrainedResolution(i,t))}getConstrainedResolution(e,t){t=t||0;const i=this.getViewportSize_(this.getRotation());return this.constraints_.resolution(e,t,i)}}function j5(s,e){setTimeout(function(){s(e)},0)}function en(s){if(s.extent!==void 0){const t=s.smoothExtentConstraint!==void 0?s.smoothExtentConstraint:!0;return B8(s.extent,s.constrainOnlyCenter,t)}const e=n9(s.projection,"EPSG:3857");if(s.multiWorld!==!0&&e.isGlobal()){const t=e.getExtent().slice();return t[0]=-1/0,t[2]=1/0,B8(t,!1,!1)}return Hi}function tn(s){let e,t,i,o=s.minZoom!==void 0?s.minZoom:d4,a=s.maxZoom!==void 0?s.maxZoom:28;const l=s.zoomFactor!==void 0?s.zoomFactor:2,h=s.multiWorld!==void 0?s.multiWorld:!1,c=s.smoothResolutionConstraint!==void 0?s.smoothResolutionConstraint:!0,u=s.showFullExtent!==void 0?s.showFullExtent:!1,d=n9(s.projection,"EPSG:3857"),f=d.getExtent();let g=s.constrainOnlyCenter,_=s.extent;if(!h&&!_&&d.isGlobal()&&(g=!1,_=f),s.resolutions!==void 0){const m=s.resolutions;t=m[o],i=m[a]!==void 0?m[a]:m[m.length-1],s.constrainResolution?e=qi(m,c,!g&&_,u):e=K8(t,i,c,!g&&_,u)}else{const p=(f?Math.max(e3(f),C3(f)):360*Q4.degrees/d.getMetersPerUnit())/b9/Math.pow(2,d4),y=p/Math.pow(2,28-d4);t=s.maxResolution,t!==void 0?o=0:t=p/Math.pow(l,o),i=s.minResolution,i===void 0&&(s.maxZoom!==void 0?s.maxResolution!==void 0?i=t/Math.pow(l,a):i=p/Math.pow(l,a):i=y),a=o+Math.floor(Math.log(t/i)/Math.log(l)),i=t/Math.pow(l,a-o),s.constrainResolution?e=$i(l,t,i,c,!g&&_,u):e=K8(t,i,c,!g&&_,u)}return{constraint:e,maxResolution:t,minResolution:i,minZoom:o,zoomFactor:l}}function nn(s){if(s.enableRotation!==void 0?s.enableRotation:!0){const t=s.constrainRotation;return t===void 0||t===!0?Qi():t===!1?X8:typeof t=="number"?Ji(t):X8}return P9}function sn(s){return!(s.sourceCenter&&s.targetCenter&&!s0(s.sourceCenter,s.targetCenter)||s.sourceResolution!==s.targetResolution||s.sourceRotation!==s.targetRotation)}function f4(s,e,t,i,n){const r=Math.cos(-n);let o=Math.sin(-n),a=s[0]*r-s[1]*o,l=s[1]*r+s[0]*o;a+=(e[0]/2-t[0])*i,l+=(t[1]-e[1]/2)*i,o=-o;const h=a*r-l*o,c=l*r+a*o;return[h,c]}const Q={OPACITY:"opacity",VISIBLE:"visible",EXTENT:"extent",Z_INDEX:"zIndex",MAX_RESOLUTION:"maxResolution",MIN_RESOLUTION:"minResolution",MAX_ZOOM:"maxZoom",MIN_ZOOM:"minZoom",SOURCE:"source",MAP:"map"};class g7 extends o1{constructor(e){super(),this.on,this.once,this.un,this.background_=e.background;const t=Object.assign({},e);typeof e.properties=="object"&&(delete t.properties,Object.assign(t,e.properties)),t[Q.OPACITY]=e.opacity!==void 0?e.opacity:1,q(typeof t[Q.OPACITY]=="number","Layer opacity must be a number"),t[Q.VISIBLE]=e.visible!==void 0?e.visible:!0,t[Q.Z_INDEX]=e.zIndex,t[Q.MAX_RESOLUTION]=e.maxResolution!==void 0?e.maxResolution:1/0,t[Q.MIN_RESOLUTION]=e.minResolution!==void 0?e.minResolution:0,t[Q.MIN_ZOOM]=e.minZoom!==void 0?e.minZoom:-1/0,t[Q.MAX_ZOOM]=e.maxZoom!==void 0?e.maxZoom:1/0,this.className_=t.className!==void 0?t.className:"ol-layer",delete t.className,this.setProperties(t),this.state_=null}getBackground(){return this.background_}getClassName(){return this.className_}getLayerState(e){const t=this.state_||{layer:this,managed:e===void 0?!0:e},i=this.getZIndex();return t.opacity=o3(Math.round(this.getOpacity()*100)/100,0,1),t.visible=this.getVisible(),t.extent=this.getExtent(),t.zIndex=i===void 0&&!t.managed?1/0:i,t.maxResolution=this.getMaxResolution(),t.minResolution=Math.max(this.getMinResolution(),0),t.minZoom=this.getMinZoom(),t.maxZoom=this.getMaxZoom(),this.state_=t,t}getLayersArray(e){return Y()}getLayerStatesArray(e){return Y()}getExtent(){return this.get(Q.EXTENT)}getMaxResolution(){return this.get(Q.MAX_RESOLUTION)}getMinResolution(){return this.get(Q.MIN_RESOLUTION)}getMinZoom(){return this.get(Q.MIN_ZOOM)}getMaxZoom(){return this.get(Q.MAX_ZOOM)}getOpacity(){return this.get(Q.OPACITY)}getSourceState(){return Y()}getVisible(){return this.get(Q.VISIBLE)}getZIndex(){return this.get(Q.Z_INDEX)}setBackground(e){this.background_=e,this.changed()}setExtent(e){this.set(Q.EXTENT,e)}setMaxResolution(e){this.set(Q.MAX_RESOLUTION,e)}setMinResolution(e){this.set(Q.MIN_RESOLUTION,e)}setMaxZoom(e){this.set(Q.MAX_ZOOM,e)}setMinZoom(e){this.set(Q.MIN_ZOOM,e)}setOpacity(e){q(typeof e=="number","Layer opacity must be a number"),this.set(Q.OPACITY,e)}setVisible(e){this.set(Q.VISIBLE,e)}setZIndex(e){this.set(Q.Z_INDEX,e)}disposeInternal(){this.state_&&(this.state_.layer=null,this.state_=null),super.disposeInternal()}}class Y0 extends g7{constructor(e){const t=Object.assign({},e);delete t.source,super(t),this.on,this.once,this.un,this.mapPrecomposeKey_=null,this.mapRenderKey_=null,this.sourceChangeKey_=null,this.renderer_=null,this.sourceReady_=!1,this.rendered=!1,e.render&&(this.render=e.render),e.map&&this.setMap(e.map),this.addChangeListener(Q.SOURCE,this.handleSourcePropertyChange_);const i=e.source?e.source:null;this.setSource(i)}getLayersArray(e){return e=e||[],e.push(this),e}getLayerStatesArray(e){return e=e||[],e.push(this.getLayerState()),e}getSource(){return this.get(Q.SOURCE)||null}getRenderSource(){return this.getSource()}getSourceState(){const e=this.getSource();return e?e.getState():"undefined"}handleSourceChange_(){this.changed(),!(this.sourceReady_||this.getSource().getState()!=="ready")&&(this.sourceReady_=!0,this.dispatchEvent("sourceready"))}handleSourcePropertyChange_(){this.sourceChangeKey_&&(t3(this.sourceChangeKey_),this.sourceChangeKey_=null),this.sourceReady_=!1;const e=this.getSource();e&&(this.sourceChangeKey_=j(e,z.CHANGE,this.handleSourceChange_,this),e.getState()==="ready"&&(this.sourceReady_=!0,setTimeout(()=>{this.dispatchEvent("sourceready")},0)),this.clearRenderer()),this.changed()}getFeatures(e){return this.renderer_?this.renderer_.getFeatures(e):Promise.resolve([])}getData(e){return!this.renderer_||!this.rendered?null:this.renderer_.getData(e)}isVisible(e){let t;const i=this.getMapInternal();!e&&i&&(e=i.getView()),e instanceof Z3?t={viewState:e.getState(),extent:e.calculateExtent()}:t=e,!t.layerStatesArray&&i&&(t.layerStatesArray=i.getLayerGroup().getLayerStatesArray());let n;if(t.layerStatesArray){if(n=t.layerStatesArray.find(o=>o.layer===this),!n)return!1}else n=this.getLayerState();const r=this.getExtent();return F9(n,t.viewState)&&(!r||r3(r,t.extent))}getAttributions(e){var r;if(!this.isVisible(e))return[];const t=(r=this.getSource())==null?void 0:r.getAttributions();if(!t)return[];const i=e instanceof Z3?e.getViewStateAndExtent():e;let n=t(i);return Array.isArray(n)||(n=[n]),n}render(e,t){const i=this.getRenderer();return i.prepareFrame(e)?(this.rendered=!0,i.renderFrame(e,t)):null}unrender(){this.rendered=!1}getDeclutter(){}renderDeclutter(e,t){}renderDeferred(e){const t=this.getRenderer();t&&t.renderDeferred(e)}setMapInternal(e){e||this.unrender(),this.set(Q.MAP,e)}getMapInternal(){return this.get(Q.MAP)}setMap(e){this.mapPrecomposeKey_&&(t3(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),e||this.changed(),this.mapRenderKey_&&(t3(this.mapRenderKey_),this.mapRenderKey_=null),e&&(this.mapPrecomposeKey_=j(e,z3.PRECOMPOSE,this.handlePrecompose_,this),this.mapRenderKey_=j(this,z.CHANGE,e.render,e),this.changed())}handlePrecompose_(e){const t=e.frameState.layerStatesArray,i=this.getLayerState(!1);q(!t.some(n=>n.layer===i.layer),"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both."),t.push(i)}setSource(e){this.set(Q.SOURCE,e)}getRenderer(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_}hasRenderer(){return!!this.renderer_}createRenderer(){return null}clearRenderer(){this.renderer_&&(this.renderer_.dispose(),delete this.renderer_)}disposeInternal(){this.clearRenderer(),this.setSource(null),super.disposeInternal()}}function F9(s,e){if(!s.visible)return!1;const t=e.resolution;if(t<s.minResolution||t>=s.maxResolution)return!1;const i=e.zoom;return i>s.minZoom&&i<=s.maxZoom}const V8={RENDER_ORDER:"renderOrder"};class D9 extends Y0{constructor(e){e=e||{};const t=Object.assign({},e);delete t.style,delete t.renderBuffer,delete t.updateWhileAnimating,delete t.updateWhileInteracting,super(t),this.declutter_=e.declutter?String(e.declutter):void 0,this.renderBuffer_=e.renderBuffer!==void 0?e.renderBuffer:100,this.style_=null,this.styleFunction_=void 0,this.setStyle(e.style),this.updateWhileAnimating_=e.updateWhileAnimating!==void 0?e.updateWhileAnimating:!1,this.updateWhileInteracting_=e.updateWhileInteracting!==void 0?e.updateWhileInteracting:!1}getDeclutter(){return this.declutter_}getFeatures(e){return super.getFeatures(e)}getRenderBuffer(){return this.renderBuffer_}getRenderOrder(){return this.get(V8.RENDER_ORDER)}getStyle(){return this.style_}getStyleFunction(){return this.styleFunction_}getUpdateWhileAnimating(){return this.updateWhileAnimating_}getUpdateWhileInteracting(){return this.updateWhileInteracting_}renderDeclutter(e,t){const i=this.getDeclutter();i in e.declutter||(e.declutter[i]=new $6(9)),this.getRenderer().renderDeclutter(e,t)}setRenderOrder(e){this.set(V8.RENDER_ORDER,e)}setStyle(e){this.style_=e===void 0?M6:e;const t=rn(e);this.styleFunction_=e===null?void 0:it(t),this.changed()}setDeclutter(e){this.declutter_=e?String(e):void 0,this.changed()}}function rn(s){if(s===void 0)return M6;if(!s)return null;if(typeof s=="function"||s instanceof F3)return s;if(!Array.isArray(s))return G8([s]);if(s.length===0)return[];const e=s.length,t=s[0];if(t instanceof F3){const n=new Array(e);for(let r=0;r<e;++r){const o=s[r];if(!(o instanceof F3))throw new Error("Expected a list of style instances");n[r]=o}return n}if("style"in t){const n=new Array(e);for(let r=0;r<e;++r){const o=s[r];if(!("style"in o))throw new Error("Expected a list of rules with a style property");n[r]=o}return Di(n)}return G8(s)}class k9 extends D9{constructor(e){super(e)}createRenderer(){return new li(this)}}const M={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4};class b5 extends D0{constructor(e,t,i){super(),i=i||{},this.tileCoord=e,this.state=t,this.key="",this.transition_=i.transition===void 0?250:i.transition,this.transitionStarts_={},this.interpolate=!!i.interpolate}changed(){this.dispatchEvent(z.CHANGE)}release(){this.setState(M.EMPTY)}getKey(){return this.key+"/"+this.tileCoord}getTileCoord(){return this.tileCoord}getState(){return this.state}setState(e){if(this.state!==M.EMPTY){if(this.state!==M.ERROR&&this.state>e)throw new Error("Tile load sequence violation");this.state=e,this.changed()}}load(){Y()}getAlpha(e,t){if(!this.transition_)return 1;let i=this.transitionStarts_[e];if(!i)i=t,this.transitionStarts_[e]=i;else if(i===-1)return 1;const n=t-i+1e3/60;return n>=this.transition_?1:d7(n/this.transition_)}inTransition(e){return this.transition_?this.transitionStarts_[e]!==-1:!1}endTransition(e){this.transition_&&(this.transitionStarts_[e]=-1)}disposeInternal(){this.release(),super.disposeInternal()}}class _7 extends b5{constructor(e,t,i,n,r,o){super(e,t,o),this.crossOrigin_=n,this.src_=i,this.key=i,this.image_=new Image,n!==null&&(this.image_.crossOrigin=n),this.unlisten_=null,this.tileLoadFunction_=r}getImage(){return this.image_}setImage(e){this.image_=e,this.state=M.LOADED,this.unlistenImage_(),this.changed()}handleImageError_(){this.state=M.ERROR,this.unlistenImage_(),this.image_=on(),this.changed()}handleImageLoad_(){const e=this.image_;e.naturalWidth&&e.naturalHeight?this.state=M.LOADED:this.state=M.EMPTY,this.unlistenImage_(),this.changed()}load(){this.state==M.ERROR&&(this.state=M.IDLE,this.image_=new Image,this.crossOrigin_!==null&&(this.image_.crossOrigin=this.crossOrigin_)),this.state==M.IDLE&&(this.state=M.LOADING,this.changed(),this.tileLoadFunction_(this,this.src_),this.unlisten_=Ke(this.image_,this.handleImageLoad_.bind(this),this.handleImageError_.bind(this)))}unlistenImage_(){this.unlisten_&&(this.unlisten_(),this.unlisten_=null)}disposeInternal(){this.unlistenImage_(),this.image_=null,super.disposeInternal()}}function on(){const s=h3(1,1);return s.fillStyle="rgba(0,0,0,0)",s.fillRect(0,0,1,1),s.canvas}class an{constructor(e,t,i){this.decay_=e,this.minVelocity_=t,this.delay_=i,this.points_=[],this.angle_=0,this.initialVelocity_=0}begin(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0}update(e,t){this.points_.push(e,t,Date.now())}end(){if(this.points_.length<6)return!1;const e=Date.now()-this.delay_,t=this.points_.length-3;if(this.points_[t+2]<e)return!1;let i=t-3;for(;i>0&&this.points_[i+2]>e;)i-=3;const n=this.points_[t+2]-this.points_[i+2];if(n<1e3/60)return!1;const r=this.points_[t]-this.points_[i],o=this.points_[t+1]-this.points_[i+1];return this.angle_=Math.atan2(o,r),this.initialVelocity_=Math.sqrt(r*r+o*o)/n,this.initialVelocity_>this.minVelocity_}getDistance(){return(this.minVelocity_-this.initialVelocity_)/this.decay_}getAngle(){return this.angle_}}class S2 extends r1{constructor(e,t,i){super(e),this.map=t,this.frameState=i!==void 0?i:null}}class g1 extends S2{constructor(e,t,i,n,r,o){super(e,t,r),this.originalEvent=i,this.pixel_=null,this.coordinate_=null,this.dragging=n!==void 0?n:!1,this.activePointers=o}get pixel(){return this.pixel_||(this.pixel_=this.map.getEventPixel(this.originalEvent)),this.pixel_}set pixel(e){this.pixel_=e}get coordinate(){return this.coordinate_||(this.coordinate_=this.map.getCoordinateFromPixel(this.pixel)),this.coordinate_}set coordinate(e){this.coordinate_=e}preventDefault(){super.preventDefault(),"preventDefault"in this.originalEvent&&this.originalEvent.preventDefault()}stopPropagation(){super.stopPropagation(),"stopPropagation"in this.originalEvent&&this.originalEvent.stopPropagation()}}const J={SINGLECLICK:"singleclick",CLICK:z.CLICK,DBLCLICK:z.DBLCLICK,POINTERDRAG:"pointerdrag",POINTERMOVE:"pointermove",POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTEROVER:"pointerover",POINTEROUT:"pointerout",POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",POINTERCANCEL:"pointercancel"},K4={POINTERMOVE:"pointermove",POINTERDOWN:"pointerdown"};class ln extends D0{constructor(e,t){super(e),this.map_=e,this.clickTimeoutId_,this.emulateClicks_=!1,this.dragging_=!1,this.dragListenerKeys_=[],this.moveTolerance_=t===void 0?1:t,this.down_=null;const i=this.map_.getViewport();this.activePointers_=[],this.trackedTouches_={},this.element_=i,this.pointerdownListenerKey_=j(i,K4.POINTERDOWN,this.handlePointerDown_,this),this.originalPointerMoveEvent_,this.relayedListenerKey_=j(i,K4.POINTERMOVE,this.relayMoveEvent_,this),this.boundHandleTouchMove_=this.handleTouchMove_.bind(this),this.element_.addEventListener(z.TOUCHMOVE,this.boundHandleTouchMove_,S6?{passive:!1}:!1)}emulateClick_(e){let t=new g1(J.CLICK,this.map_,e);this.dispatchEvent(t),this.clickTimeoutId_!==void 0?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,t=new g1(J.DBLCLICK,this.map_,e),this.dispatchEvent(t)):this.clickTimeoutId_=setTimeout(()=>{this.clickTimeoutId_=void 0;const i=new g1(J.SINGLECLICK,this.map_,e);this.dispatchEvent(i)},250)}updateActivePointers_(e){const t=e,i=t.pointerId;if(t.type==J.POINTERUP||t.type==J.POINTERCANCEL){delete this.trackedTouches_[i];for(const n in this.trackedTouches_)if(this.trackedTouches_[n].target!==t.target){delete this.trackedTouches_[n];break}}else(t.type==J.POINTERDOWN||t.type==J.POINTERMOVE)&&(this.trackedTouches_[i]=t);this.activePointers_=Object.values(this.trackedTouches_)}handlePointerUp_(e){this.updateActivePointers_(e);const t=new g1(J.POINTERUP,this.map_,e,void 0,void 0,this.activePointers_);this.dispatchEvent(t),this.emulateClicks_&&!t.defaultPrevented&&!this.dragging_&&this.isMouseActionButton_(e)&&this.emulateClick_(this.down_),this.activePointers_.length===0&&(this.dragListenerKeys_.forEach(t3),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null)}isMouseActionButton_(e){return e.button===0}handlePointerDown_(e){this.emulateClicks_=this.activePointers_.length===0,this.updateActivePointers_(e);const t=new g1(J.POINTERDOWN,this.map_,e,void 0,void 0,this.activePointers_);if(this.dispatchEvent(t),this.down_=new PointerEvent(e.type,e),Object.defineProperty(this.down_,"target",{writable:!1,value:e.target}),this.dragListenerKeys_.length===0){const i=this.map_.getOwnerDocument();this.dragListenerKeys_.push(j(i,J.POINTERMOVE,this.handlePointerMove_,this),j(i,J.POINTERUP,this.handlePointerUp_,this),j(this.element_,J.POINTERCANCEL,this.handlePointerUp_,this)),this.element_.getRootNode&&this.element_.getRootNode()!==i&&this.dragListenerKeys_.push(j(this.element_.getRootNode(),J.POINTERUP,this.handlePointerUp_,this))}}handlePointerMove_(e){if(this.isMoving_(e)){this.updateActivePointers_(e),this.dragging_=!0;const t=new g1(J.POINTERDRAG,this.map_,e,this.dragging_,void 0,this.activePointers_);this.dispatchEvent(t)}}relayMoveEvent_(e){this.originalPointerMoveEvent_=e;const t=!!(this.down_&&this.isMoving_(e));this.dispatchEvent(new g1(J.POINTERMOVE,this.map_,e,t))}handleTouchMove_(e){const t=this.originalPointerMoveEvent_;(!t||t.defaultPrevented)&&(typeof e.cancelable!="boolean"||e.cancelable===!0)&&e.preventDefault()}isMoving_(e){return this.dragging_||Math.abs(e.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(e.clientY-this.down_.clientY)>this.moveTolerance_}disposeInternal(){this.relayedListenerKey_&&(t3(this.relayedListenerKey_),this.relayedListenerKey_=null),this.element_.removeEventListener(z.TOUCHMOVE,this.boundHandleTouchMove_),this.pointerdownListenerKey_&&(t3(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(t3),this.dragListenerKeys_.length=0,this.element_=null,super.disposeInternal()}}const b1={POSTRENDER:"postrender",MOVESTART:"movestart",MOVEEND:"moveend",LOADSTART:"loadstart",LOADEND:"loadend"},m3={LAYERGROUP:"layergroup",SIZE:"size",TARGET:"target",VIEW:"view"},x0=1/0;class hn{constructor(e,t){this.priorityFunction_=e,this.keyFunction_=t,this.elements_=[],this.priorities_=[],this.queuedElements_={}}clear(){this.elements_.length=0,this.priorities_.length=0,I5(this.queuedElements_)}dequeue(){const e=this.elements_,t=this.priorities_,i=e[0];e.length==1?(e.length=0,t.length=0):(e[0]=e.pop(),t[0]=t.pop(),this.siftUp_(0));const n=this.keyFunction_(i);return delete this.queuedElements_[n],i}enqueue(e){q(!(this.keyFunction_(e)in this.queuedElements_),"Tried to enqueue an `element` that was already added to the queue");const t=this.priorityFunction_(e);return t!=x0?(this.elements_.push(e),this.priorities_.push(t),this.queuedElements_[this.keyFunction_(e)]=!0,this.siftDown_(0,this.elements_.length-1),!0):!1}getCount(){return this.elements_.length}getLeftChildIndex_(e){return e*2+1}getRightChildIndex_(e){return e*2+2}getParentIndex_(e){return e-1>>1}heapify_(){let e;for(e=(this.elements_.length>>1)-1;e>=0;e--)this.siftUp_(e)}isEmpty(){return this.elements_.length===0}isKeyQueued(e){return e in this.queuedElements_}isQueued(e){return this.isKeyQueued(this.keyFunction_(e))}siftUp_(e){const t=this.elements_,i=this.priorities_,n=t.length,r=t[e],o=i[e],a=e;for(;e<n>>1;){const l=this.getLeftChildIndex_(e),h=this.getRightChildIndex_(e),c=h<n&&i[h]<i[l]?h:l;t[e]=t[c],i[e]=i[c],e=c}t[e]=r,i[e]=o,this.siftDown_(a,e)}siftDown_(e,t){const i=this.elements_,n=this.priorities_,r=i[t],o=n[t];for(;t>e;){const a=this.getParentIndex_(t);if(n[a]>o)i[t]=i[a],n[t]=n[a],t=a;else break}i[t]=r,n[t]=o}reprioritize(){const e=this.priorityFunction_,t=this.elements_,i=this.priorities_;let n=0;const r=t.length;let o,a,l;for(a=0;a<r;++a)o=t[a],l=e(o),l==x0?delete this.queuedElements_[this.keyFunction_(o)]:(i[n]=l,t[n++]=o);t.length=n,i.length=n,this.heapify_()}}class cn extends hn{constructor(e,t){super(i=>e.apply(null,i),i=>i[0].getKey()),this.boundHandleTileChange_=this.handleTileChange.bind(this),this.tileChangeCallback_=t,this.tilesLoading_=0,this.tilesLoadingKeys_={}}enqueue(e){const t=super.enqueue(e);return t&&e[0].addEventListener(z.CHANGE,this.boundHandleTileChange_),t}getTilesLoading(){return this.tilesLoading_}handleTileChange(e){const t=e.target,i=t.getState();if(i===M.LOADED||i===M.ERROR||i===M.EMPTY){i!==M.ERROR&&t.removeEventListener(z.CHANGE,this.boundHandleTileChange_);const n=t.getKey();n in this.tilesLoadingKeys_&&(delete this.tilesLoadingKeys_[n],--this.tilesLoading_),this.tileChangeCallback_()}}loadMoreTiles(e,t){let i=0;for(;this.tilesLoading_<e&&i<t&&this.getCount()>0;){const n=this.dequeue()[0],r=n.getKey();n.getState()===M.IDLE&&!(r in this.tilesLoadingKeys_)&&(this.tilesLoadingKeys_[r]=!0,++this.tilesLoading_,++i,n.load())}}}function un(s,e,t,i,n){if(!s||!(t in s.wantedTiles)||!s.wantedTiles[t][e.getKey()])return x0;const r=s.viewState.center,o=i[0]-r[0],a=i[1]-r[1];return 65536*Math.log(n)+Math.sqrt(o*o+a*a)/n}class O9 extends o1{constructor(e){super();const t=e.element;t&&!e.target&&!t.style.pointerEvents&&(t.style.pointerEvents="auto"),this.element=t||null,this.target_=null,this.map_=null,this.listenerKeys=[],e.render&&(this.render=e.render),e.target&&this.setTarget(e.target)}disposeInternal(){var e;(e=this.element)==null||e.remove(),super.disposeInternal()}getMap(){return this.map_}setMap(e){var t;this.map_&&((t=this.element)==null||t.remove());for(let i=0,n=this.listenerKeys.length;i<n;++i)t3(this.listenerKeys[i]);if(this.listenerKeys.length=0,this.map_=e,e){const i=this.target_??e.getOverlayContainerStopEvent();this.element&&i.appendChild(this.element),this.render!==N2&&this.listenerKeys.push(j(e,b1.POSTRENDER,this.render,this)),e.render()}}render(e){}setTarget(e){this.target_=typeof e=="string"?document.getElementById(e):e}}class dn extends O9{constructor(e){e=e||{},super({element:document.createElement("div"),render:e.render,target:e.target}),this.ulElement_=document.createElement("ul"),this.collapsed_=e.collapsed!==void 0?e.collapsed:!0,this.userCollapsed_=this.collapsed_,this.overrideCollapsible_=e.collapsible!==void 0,this.collapsible_=e.collapsible!==void 0?e.collapsible:!0,this.collapsible_||(this.collapsed_=!1),this.attributions_=e.attributions;const t=e.className!==void 0?e.className:"ol-attribution",i=e.tipLabel!==void 0?e.tipLabel:"Attributions",n=e.expandClassName!==void 0?e.expandClassName:t+"-expand",r=e.collapseLabel!==void 0?e.collapseLabel:"›",o=e.collapseClassName!==void 0?e.collapseClassName:t+"-collapse";typeof r=="string"?(this.collapseLabel_=document.createElement("span"),this.collapseLabel_.textContent=r,this.collapseLabel_.className=o):this.collapseLabel_=r;const a=e.label!==void 0?e.label:"i";typeof a=="string"?(this.label_=document.createElement("span"),this.label_.textContent=a,this.label_.className=n):this.label_=a;const l=this.collapsible_&&!this.collapsed_?this.collapseLabel_:this.label_;this.toggleButton_=document.createElement("button"),this.toggleButton_.setAttribute("type","button"),this.toggleButton_.setAttribute("aria-expanded",String(!this.collapsed_)),this.toggleButton_.title=i,this.toggleButton_.appendChild(l),this.toggleButton_.addEventListener(z.CLICK,this.handleClick_.bind(this),!1);const h=t+" "+k0+" "+u9+(this.collapsed_&&this.collapsible_?" "+u8:"")+(this.collapsible_?"":" ol-uncollapsible"),c=this.element;c.className=h,c.appendChild(this.toggleButton_),c.appendChild(this.ulElement_),this.renderedAttributions_=[],this.renderedVisible_=!0}collectSourceAttributions_(e){const t=this.getMap().getAllLayers(),i=new Set(t.flatMap(n=>n.getAttributions(e)));if(this.attributions_!==void 0&&(Array.isArray(this.attributions_)?this.attributions_.forEach(n=>i.add(n)):i.add(this.attributions_)),!this.overrideCollapsible_){const n=!t.some(r=>{var o;return((o=r.getSource())==null?void 0:o.getAttributionsCollapsible())===!1});this.setCollapsible(n)}return Array.from(i)}async updateElement_(e){if(!e){this.renderedVisible_&&(this.element.style.display="none",this.renderedVisible_=!1);return}const t=await Promise.all(this.collectSourceAttributions_(e).map(n=>Be(()=>n))),i=t.length>0;if(this.renderedVisible_!=i&&(this.element.style.display=i?"":"none",this.renderedVisible_=i),!V1(t,this.renderedAttributions_)){ke(this.ulElement_);for(let n=0,r=t.length;n<r;++n){const o=document.createElement("li");o.innerHTML=t[n],this.ulElement_.appendChild(o)}this.renderedAttributions_=t}}handleClick_(e){e.preventDefault(),this.handleToggle_(),this.userCollapsed_=this.collapsed_}handleToggle_(){this.element.classList.toggle(u8),this.collapsed_?h8(this.collapseLabel_,this.label_):h8(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_,this.toggleButton_.setAttribute("aria-expanded",String(!this.collapsed_))}getCollapsible(){return this.collapsible_}setCollapsible(e){this.collapsible_!==e&&(this.collapsible_=e,this.element.classList.toggle("ol-uncollapsible"),this.userCollapsed_&&this.handleToggle_())}setCollapsed(e){this.userCollapsed_=e,!(!this.collapsible_||this.collapsed_===e)&&this.handleToggle_()}getCollapsed(){return this.collapsed_}render(e){this.updateElement_(e.frameState)}}class fn extends O9{constructor(e){e=e||{},super({element:document.createElement("div"),render:e.render,target:e.target});const t=e.className!==void 0?e.className:"ol-rotate",i=e.label!==void 0?e.label:"⇧",n=e.compassClassName!==void 0?e.compassClassName:"ol-compass";this.label_=null,typeof i=="string"?(this.label_=document.createElement("span"),this.label_.className=n,this.label_.textContent=i):(this.label_=i,this.label_.classList.add(n));const r=e.tipLabel?e.tipLabel:"Reset rotation",o=document.createElement("button");o.className=t+"-reset",o.setAttribute("type","button"),o.title=r,o.appendChild(this.label_),o.addEventListener(z.CLICK,this.handleClick_.bind(this),!1);const a=t+" "+k0+" "+u9,l=this.element;l.className=a,l.appendChild(o),this.callResetNorth_=e.resetNorth?e.resetNorth:void 0,this.duration_=e.duration!==void 0?e.duration:250,this.autoHide_=e.autoHide!==void 0?e.autoHide:!0,this.rotation_=void 0,this.autoHide_&&this.element.classList.add(X5)}handleClick_(e){e.preventDefault(),this.callResetNorth_!==void 0?this.callResetNorth_():this.resetNorth_()}resetNorth_(){const t=this.getMap().getView();if(!t)return;const i=t.getRotation();i!==void 0&&(this.duration_>0&&i%(2*Math.PI)!==0?t.animate({rotation:0,duration:this.duration_,easing:Z2}):t.setRotation(0))}render(e){const t=e.frameState;if(!t)return;const i=t.viewState.rotation;if(i!=this.rotation_){const n="rotate("+i+"rad)";if(this.autoHide_){const r=this.element.classList.contains(X5);!r&&i===0?this.element.classList.add(X5):r&&i!==0&&this.element.classList.remove(X5)}this.label_.style.transform=n}this.rotation_=i}}class gn extends O9{constructor(e){e=e||{},super({element:document.createElement("div"),target:e.target});const t=e.className!==void 0?e.className:"ol-zoom",i=e.delta!==void 0?e.delta:1,n=e.zoomInClassName!==void 0?e.zoomInClassName:t+"-in",r=e.zoomOutClassName!==void 0?e.zoomOutClassName:t+"-out",o=e.zoomInLabel!==void 0?e.zoomInLabel:"+",a=e.zoomOutLabel!==void 0?e.zoomOutLabel:"–",l=e.zoomInTipLabel!==void 0?e.zoomInTipLabel:"Zoom in",h=e.zoomOutTipLabel!==void 0?e.zoomOutTipLabel:"Zoom out",c=document.createElement("button");c.className=n,c.setAttribute("type","button"),c.title=l,c.appendChild(typeof o=="string"?document.createTextNode(o):o),c.addEventListener(z.CLICK,this.handleClick_.bind(this,i),!1);const u=document.createElement("button");u.className=r,u.setAttribute("type","button"),u.title=h,u.appendChild(typeof a=="string"?document.createTextNode(a):a),u.addEventListener(z.CLICK,this.handleClick_.bind(this,-i),!1);const d=t+" "+k0+" "+u9,f=this.element;f.className=d,f.appendChild(c),f.appendChild(u),this.duration_=e.duration!==void 0?e.duration:250}handleClick_(e,t){t.preventDefault(),this.zoomByDelta_(e)}zoomByDelta_(e){const i=this.getMap().getView();if(!i)return;const n=i.getZoom();if(n!==void 0){const r=i.getConstrainedZoom(n+e);this.duration_>0?(i.getAnimating()&&i.cancelAnimations(),i.animate({zoom:r,duration:this.duration_,easing:Z2})):i.setZoom(r)}}}function _n(s){s=s||{};const e=new Q3;return(s.zoom!==void 0?s.zoom:!0)&&e.push(new gn(s.zoomOptions)),(s.rotate!==void 0?s.rotate:!0)&&e.push(new fn(s.rotateOptions)),(s.attribution!==void 0?s.attribution:!0)&&e.push(new dn(s.attributionOptions)),e}const X4={ACTIVE:"active"};class F5 extends o1{constructor(e){super(),this.on,this.once,this.un,e&&e.handleEvent&&(this.handleEvent=e.handleEvent),this.map_=null,this.setActive(!0)}getActive(){return this.get(X4.ACTIVE)}getMap(){return this.map_}handleEvent(e){return!0}setActive(e){this.set(X4.ACTIVE,e)}setMap(e){this.map_=e}}function mn(s,e,t){const i=s.getCenterInternal();if(i){const n=[i[0]+e[0],i[1]+e[1]];s.animateInternal({duration:t!==void 0?t:250,easing:ji,center:s.getConstrainedCenter(n)})}}function G9(s,e,t,i){const n=s.getZoom();if(n===void 0)return;const r=s.getConstrainedZoom(n+e),o=s.getResolutionForZoom(r);s.getAnimating()&&s.cancelAnimations(),s.animate({resolution:o,anchor:t,duration:i!==void 0?i:250,easing:Z2})}class pn extends F5{constructor(e){super(),e=e||{},this.delta_=e.delta?e.delta:1,this.duration_=e.duration!==void 0?e.duration:250}handleEvent(e){let t=!1;if(e.type==J.DBLCLICK){const i=e.originalEvent,n=e.map,r=e.coordinate,o=i.shiftKey?-this.delta_:this.delta_,a=n.getView();G9(a,o,r,this.duration_),i.preventDefault(),t=!0}return!t}}function V4(s){const e=arguments;return function(t){let i=!0;for(let n=0,r=e.length;n<r&&(i=i&&e[n](t),!!i);++n);return i}}const yn=function(s){const e=s.originalEvent;return e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},xn=function(s){const e=s.map.getTargetElement(),t=e.getRootNode(),i=s.map.getOwnerDocument().activeElement;return t instanceof ShadowRoot?t.host.contains(i):e.contains(i)},m7=function(s){const e=s.map.getTargetElement(),t=e.getRootNode();return(t instanceof ShadowRoot?t.host:e).hasAttribute("tabindex")?xn(s):!0},Y4=G2,p7=function(s){const e=s.originalEvent;return e.button==0&&!(De&&x6&&e.ctrlKey)},En=Y2,N9=function(s){const e=s.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&!e.shiftKey},wn=function(s){const e=s.originalEvent;return x6?e.metaKey:e.ctrlKey},y7=function(s){const e=s.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},x7=function(s){const e=s.originalEvent,t=e.target.tagName;return t!=="INPUT"&&t!=="SELECT"&&t!=="TEXTAREA"&&!e.target.isContentEditable},g4=function(s){const e=s.originalEvent;return q(e!==void 0,"mapBrowserEvent must originate from a pointer event"),e.pointerType=="mouse"},Cn=function(s){const e=s.originalEvent;return q(e!==void 0,"mapBrowserEvent must originate from a pointer event"),e.isPrimary&&e.button===0};class H2 extends F5{constructor(e){e=e||{},super(e),e.handleDownEvent&&(this.handleDownEvent=e.handleDownEvent),e.handleDragEvent&&(this.handleDragEvent=e.handleDragEvent),e.handleMoveEvent&&(this.handleMoveEvent=e.handleMoveEvent),e.handleUpEvent&&(this.handleUpEvent=e.handleUpEvent),e.stopDown&&(this.stopDown=e.stopDown),this.handlingDownUpSequence=!1,this.targetPointers=[]}getPointerCount(){return this.targetPointers.length}handleDownEvent(e){return!1}handleDragEvent(e){}handleEvent(e){if(!e.originalEvent)return!0;let t=!1;if(this.updateTrackedPointers_(e),this.handlingDownUpSequence){if(e.type==J.POINTERDRAG)this.handleDragEvent(e),e.originalEvent.preventDefault();else if(e.type==J.POINTERUP){const i=this.handleUpEvent(e);this.handlingDownUpSequence=i&&this.targetPointers.length>0}}else if(e.type==J.POINTERDOWN){const i=this.handleDownEvent(e);this.handlingDownUpSequence=i,t=this.stopDown(i)}else e.type==J.POINTERMOVE&&this.handleMoveEvent(e);return!t}handleMoveEvent(e){}handleUpEvent(e){return!1}stopDown(e){return e}updateTrackedPointers_(e){e.activePointers&&(this.targetPointers=e.activePointers)}}function z9(s){const e=s.length;let t=0,i=0;for(let n=0;n<e;n++)t+=s[n].clientX,i+=s[n].clientY;return{clientX:t/e,clientY:i/e}}class Sn extends H2{constructor(e){super({stopDown:Y2}),e=e||{},this.kinetic_=e.kinetic,this.lastCentroid=null,this.lastPointersCount_,this.panning_=!1;const t=e.condition?e.condition:V4(N9,Cn);this.condition_=e.onFocusOnly?V4(m7,t):t,this.noKinetic_=!1}handleDragEvent(e){const t=e.map;this.panning_||(this.panning_=!0,t.getView().beginInteraction());const i=this.targetPointers,n=t.getEventPixel(z9(i));if(i.length==this.lastPointersCount_){if(this.kinetic_&&this.kinetic_.update(n[0],n[1]),this.lastCentroid){const r=[this.lastCentroid[0]-n[0],n[1]-this.lastCentroid[1]],a=e.map.getView();H7(r,a.getResolution()),$4(r,a.getRotation()),a.adjustCenterInternal(r)}}else this.kinetic_&&this.kinetic_.begin();this.lastCentroid=n,this.lastPointersCount_=i.length,e.originalEvent.preventDefault()}handleUpEvent(e){const t=e.map,i=t.getView();if(this.targetPointers.length===0){if(!this.noKinetic_&&this.kinetic_&&this.kinetic_.end()){const n=this.kinetic_.getDistance(),r=this.kinetic_.getAngle(),o=i.getCenterInternal(),a=t.getPixelFromCoordinateInternal(o),l=t.getCoordinateFromPixelInternal([a[0]-n*Math.cos(r),a[1]-n*Math.sin(r)]);i.animateInternal({center:i.getConstrainedCenter(l),duration:500,easing:Z2})}return this.panning_&&(this.panning_=!1,i.endInteraction()),!1}return this.kinetic_&&this.kinetic_.begin(),this.lastCentroid=null,!0}handleDownEvent(e){if(this.targetPointers.length>0&&this.condition_(e)){const i=e.map.getView();return this.lastCentroid=null,i.getAnimating()&&i.cancelAnimations(),this.kinetic_&&this.kinetic_.begin(),this.noKinetic_=this.targetPointers.length>1,!0}return!1}}class Tn extends H2{constructor(e){e=e||{},super({stopDown:Y2}),this.condition_=e.condition?e.condition:yn,this.lastAngle_=void 0,this.duration_=e.duration!==void 0?e.duration:250}handleDragEvent(e){if(!g4(e))return;const t=e.map,i=t.getView();if(i.getConstraints().rotation===P9)return;const n=t.getSize(),r=e.pixel,o=Math.atan2(n[1]/2-r[1],r[0]-n[0]/2);if(this.lastAngle_!==void 0){const a=o-this.lastAngle_;i.adjustRotationInternal(-a)}this.lastAngle_=o}handleUpEvent(e){return g4(e)?(e.map.getView().endInteraction(this.duration_),!1):!0}handleDownEvent(e){return g4(e)&&p7(e)&&this.condition_(e)?(e.map.getView().beginInteraction(),this.lastAngle_=void 0,!0):!1}}class Rn extends F0{constructor(e){super(),this.geometry_=null,this.element_=document.createElement("div"),this.element_.style.position="absolute",this.element_.style.pointerEvents="auto",this.element_.className="ol-box "+e,this.map_=null,this.startPixel_=null,this.endPixel_=null}disposeInternal(){this.setMap(null)}render_(){const e=this.startPixel_,t=this.endPixel_,i="px",n=this.element_.style;n.left=Math.min(e[0],t[0])+i,n.top=Math.min(e[1],t[1])+i,n.width=Math.abs(t[0]-e[0])+i,n.height=Math.abs(t[1]-e[1])+i}setMap(e){if(this.map_){this.map_.getOverlayContainer().removeChild(this.element_);const t=this.element_.style;t.left="inherit",t.top="inherit",t.width="inherit",t.height="inherit"}this.map_=e,this.map_&&this.map_.getOverlayContainer().appendChild(this.element_)}setPixels(e,t){this.startPixel_=e,this.endPixel_=t,this.createOrUpdateGeometry(),this.render_()}createOrUpdateGeometry(){if(!this.map_)return;const e=this.startPixel_,t=this.endPixel_,n=[e,[e[0],t[1]],t,[t[0],e[1]]].map(this.map_.getCoordinateFromPixelInternal,this.map_);n[4]=n[0].slice(),this.geometry_?this.geometry_.setCoordinates([n]):this.geometry_=new s1([n])}getGeometry(){return this.geometry_}}const m2={BOXSTART:"boxstart",BOXDRAG:"boxdrag",BOXEND:"boxend",BOXCANCEL:"boxcancel"};class n5 extends r1{constructor(e,t,i){super(e),this.coordinate=t,this.mapBrowserEvent=i}}class In extends H2{constructor(e){super(),this.on,this.once,this.un,e=e??{},this.box_=new Rn(e.className||"ol-dragbox"),this.minArea_=e.minArea??64,e.onBoxEnd&&(this.onBoxEnd=e.onBoxEnd),this.startPixel_=null,this.condition_=e.condition??p7,this.boxEndCondition_=e.boxEndCondition??this.defaultBoxEndCondition}defaultBoxEndCondition(e,t,i){const n=i[0]-t[0],r=i[1]-t[1];return n*n+r*r>=this.minArea_}getGeometry(){return this.box_.getGeometry()}handleDragEvent(e){this.startPixel_&&(this.box_.setPixels(this.startPixel_,e.pixel),this.dispatchEvent(new n5(m2.BOXDRAG,e.coordinate,e)))}handleUpEvent(e){if(!this.startPixel_)return!1;const t=this.boxEndCondition_(e,this.startPixel_,e.pixel);return t&&this.onBoxEnd(e),this.dispatchEvent(new n5(t?m2.BOXEND:m2.BOXCANCEL,e.coordinate,e)),this.box_.setMap(null),this.startPixel_=null,!1}handleDownEvent(e){return this.condition_(e)?(this.startPixel_=e.pixel,this.box_.setMap(e.map),this.box_.setPixels(this.startPixel_,this.startPixel_),this.dispatchEvent(new n5(m2.BOXSTART,e.coordinate,e)),!0):!1}onBoxEnd(e){}setActive(e){e||(this.box_.setMap(null),this.startPixel_&&(this.dispatchEvent(new n5(m2.BOXCANCEL,this.startPixel_,null)),this.startPixel_=null)),super.setActive(e)}setMap(e){this.getMap()&&(this.box_.setMap(null),this.startPixel_&&(this.dispatchEvent(new n5(m2.BOXCANCEL,this.startPixel_,null)),this.startPixel_=null)),super.setMap(e)}}class vn extends In{constructor(e){e=e||{};const t=e.condition?e.condition:y7;super({condition:t,className:e.className||"ol-dragzoom",minArea:e.minArea}),this.duration_=e.duration!==void 0?e.duration:200,this.out_=e.out!==void 0?e.out:!1}onBoxEnd(e){const i=this.getMap().getView();let n=this.getGeometry();if(this.out_){const r=i.rotatedExtentForGeometry(n),o=i.getResolutionForExtentInternal(r),a=i.getResolution()/o;n=n.clone(),n.scale(a*a)}i.fitInternal(n,{duration:this.duration_,easing:Z2})}}const $1={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",DOWN:"ArrowDown"};class An extends F5{constructor(e){super(),e=e||{},this.defaultCondition_=function(t){return N9(t)&&x7(t)},this.condition_=e.condition!==void 0?e.condition:this.defaultCondition_,this.duration_=e.duration!==void 0?e.duration:100,this.pixelDelta_=e.pixelDelta!==void 0?e.pixelDelta:128}handleEvent(e){let t=!1;if(e.type==z.KEYDOWN){const i=e.originalEvent,n=i.key;if(this.condition_(e)&&(n==$1.DOWN||n==$1.LEFT||n==$1.RIGHT||n==$1.UP)){const o=e.map.getView(),a=o.getResolution()*this.pixelDelta_;let l=0,h=0;n==$1.DOWN?h=-a:n==$1.LEFT?l=-a:n==$1.RIGHT?l=a:h=a;const c=[l,h];$4(c,o.getRotation()),mn(o,c,this.duration_),i.preventDefault(),t=!0}}return!t}}class Mn extends F5{constructor(e){super(),e=e||{},this.condition_=e.condition?e.condition:function(t){return!wn(t)&&x7(t)},this.delta_=e.delta?e.delta:1,this.duration_=e.duration!==void 0?e.duration:100}handleEvent(e){let t=!1;if(e.type==z.KEYDOWN||e.type==z.KEYPRESS){const i=e.originalEvent,n=i.key;if(this.condition_(e)&&(n==="+"||n==="-")){const r=e.map,o=n==="+"?this.delta_:-this.delta_,a=r.getView();G9(a,o,void 0,this.duration_),i.preventDefault(),t=!0}}return!t}}class Ln extends F5{constructor(e){e=e||{},super(e),this.totalDelta_=0,this.lastDelta_=0,this.maxDelta_=e.maxDelta!==void 0?e.maxDelta:1,this.duration_=e.duration!==void 0?e.duration:250,this.timeout_=e.timeout!==void 0?e.timeout:80,this.useAnchor_=e.useAnchor!==void 0?e.useAnchor:!0,this.constrainResolution_=e.constrainResolution!==void 0?e.constrainResolution:!1;const t=e.condition?e.condition:Y4;this.condition_=e.onFocusOnly?V4(m7,t):t,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_,this.mode_=void 0,this.trackpadEventGap_=400,this.trackpadTimeoutId_,this.deltaPerZoom_=300}endInteraction_(){this.trackpadTimeoutId_=void 0;const e=this.getMap();if(!e)return;e.getView().endInteraction(void 0,this.lastDelta_?this.lastDelta_>0?1:-1:0,this.lastAnchor_?e.getCoordinateFromPixel(this.lastAnchor_):null)}handleEvent(e){if(!this.condition_(e)||e.type!==z.WHEEL)return!0;const i=e.map,n=e.originalEvent;n.preventDefault(),this.useAnchor_&&(this.lastAnchor_=e.pixel);let r;if(e.type==z.WHEEL&&(r=n.deltaY,be&&n.deltaMode===WheelEvent.DOM_DELTA_PIXEL&&(r/=E6),n.deltaMode===WheelEvent.DOM_DELTA_LINE&&(r*=40)),r===0)return!1;this.lastDelta_=r;const o=Date.now();this.startTime_===void 0&&(this.startTime_=o),(!this.mode_||o-this.startTime_>this.trackpadEventGap_)&&(this.mode_=Math.abs(r)<4?"trackpad":"wheel");const a=i.getView();if(this.mode_==="trackpad"&&!(a.getConstrainResolution()||this.constrainResolution_))return this.trackpadTimeoutId_?clearTimeout(this.trackpadTimeoutId_):(a.getAnimating()&&a.cancelAnimations(),a.beginInteraction()),this.trackpadTimeoutId_=setTimeout(this.endInteraction_.bind(this),this.timeout_),a.adjustZoom(-r/this.deltaPerZoom_,this.lastAnchor_?i.getCoordinateFromPixel(this.lastAnchor_):null),this.startTime_=o,!1;this.totalDelta_+=r;const l=Math.max(this.timeout_-(o-this.startTime_),0);return clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(this.handleWheelZoom_.bind(this,i),l),!1}handleWheelZoom_(e){const t=e.getView();t.getAnimating()&&t.cancelAnimations();let i=-o3(this.totalDelta_,-this.maxDelta_*this.deltaPerZoom_,this.maxDelta_*this.deltaPerZoom_)/this.deltaPerZoom_;(t.getConstrainResolution()||this.constrainResolution_)&&(i=i?i>0?1:-1:0),G9(t,i,this.lastAnchor_?e.getCoordinateFromPixel(this.lastAnchor_):null,this.duration_),this.mode_=void 0,this.totalDelta_=0,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_=void 0}setMouseAnchor(e){this.useAnchor_=e,e||(this.lastAnchor_=null)}}class Pn extends H2{constructor(e){e=e||{};const t=e;t.stopDown||(t.stopDown=Y2),super(t),this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.threshold_=e.threshold!==void 0?e.threshold:.3,this.duration_=e.duration!==void 0?e.duration:250}handleDragEvent(e){let t=0;const i=this.targetPointers[0],n=this.targetPointers[1],r=Math.atan2(n.clientY-i.clientY,n.clientX-i.clientX);if(this.lastAngle_!==void 0){const l=r-this.lastAngle_;this.rotationDelta_+=l,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),t=l}this.lastAngle_=r;const o=e.map,a=o.getView();a.getConstraints().rotation!==P9&&(this.anchor_=o.getCoordinateFromPixelInternal(o.getEventPixel(z9(this.targetPointers))),this.rotating_&&(o.render(),a.adjustRotationInternal(t,this.anchor_)))}handleUpEvent(e){return this.targetPointers.length<2?(e.map.getView().endInteraction(this.duration_),!1):!0}handleDownEvent(e){if(this.targetPointers.length>=2){const t=e.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||t.getView().beginInteraction(),!0}return!1}}class bn extends H2{constructor(e){e=e||{};const t=e;t.stopDown||(t.stopDown=Y2),super(t),this.anchor_=null,this.duration_=e.duration!==void 0?e.duration:400,this.lastDistance_=void 0,this.lastScaleDelta_=1}handleDragEvent(e){let t=1;const i=this.targetPointers[0],n=this.targetPointers[1],r=i.clientX-n.clientX,o=i.clientY-n.clientY,a=Math.sqrt(r*r+o*o);this.lastDistance_!==void 0&&(t=this.lastDistance_/a),this.lastDistance_=a;const l=e.map,h=l.getView();t!=1&&(this.lastScaleDelta_=t),this.anchor_=l.getCoordinateFromPixelInternal(l.getEventPixel(z9(this.targetPointers))),l.render(),h.adjustResolutionInternal(t,this.anchor_)}handleUpEvent(e){if(this.targetPointers.length<2){const i=e.map.getView(),n=this.lastScaleDelta_>1?1:-1;return i.endInteraction(this.duration_,n),!1}return!0}handleDownEvent(e){if(this.targetPointers.length>=2){const t=e.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.handlingDownUpSequence||t.getView().beginInteraction(),!0}return!1}}function Fn(s){s=s||{};const e=new Q3,t=new an(-.005,.05,100);return(s.altShiftDragRotate!==void 0?s.altShiftDragRotate:!0)&&e.push(new Tn),(s.doubleClickZoom!==void 0?s.doubleClickZoom:!0)&&e.push(new pn({delta:s.zoomDelta,duration:s.zoomDuration})),(s.dragPan!==void 0?s.dragPan:!0)&&e.push(new Sn({onFocusOnly:s.onFocusOnly,kinetic:t})),(s.pinchRotate!==void 0?s.pinchRotate:!0)&&e.push(new Pn),(s.pinchZoom!==void 0?s.pinchZoom:!0)&&e.push(new bn({duration:s.zoomDuration})),(s.keyboard!==void 0?s.keyboard:!0)&&(e.push(new An),e.push(new Mn({delta:s.zoomDelta,duration:s.zoomDuration}))),(s.mouseWheelZoom!==void 0?s.mouseWheelZoom:!0)&&e.push(new Ln({onFocusOnly:s.onFocusOnly,duration:s.zoomDuration})),(s.shiftDragZoom!==void 0?s.shiftDragZoom:!0)&&e.push(new vn({duration:s.zoomDuration})),e}class F1 extends r1{constructor(e,t){super(e),this.layer=t}}const _4={LAYERS:"layers"};class U2 extends g7{constructor(e){e=e||{};const t=Object.assign({},e);delete t.layers;let i=e.layers;super(t),this.on,this.once,this.un,this.layersListenerKeys_=[],this.listenerKeys_={},this.addChangeListener(_4.LAYERS,this.handleLayersChanged_),i?Array.isArray(i)?i=new Q3(i.slice(),{unique:!0}):q(typeof i.getArray=="function","Expected `layers` to be an array or a `Collection`"):i=new Q3(void 0,{unique:!0}),this.setLayers(i)}handleLayerChange_(){this.changed()}handleLayersChanged_(){this.layersListenerKeys_.forEach(t3),this.layersListenerKeys_.length=0;const e=this.getLayers();this.layersListenerKeys_.push(j(e,I3.ADD,this.handleLayersAdd_,this),j(e,I3.REMOVE,this.handleLayersRemove_,this));for(const i in this.listenerKeys_)this.listenerKeys_[i].forEach(t3);I5(this.listenerKeys_);const t=e.getArray();for(let i=0,n=t.length;i<n;i++){const r=t[i];this.registerLayerListeners_(r),this.dispatchEvent(new F1("addlayer",r))}this.changed()}registerLayerListeners_(e){const t=[j(e,z2.PROPERTYCHANGE,this.handleLayerChange_,this),j(e,z.CHANGE,this.handleLayerChange_,this)];e instanceof U2&&t.push(j(e,"addlayer",this.handleLayerGroupAdd_,this),j(e,"removelayer",this.handleLayerGroupRemove_,this)),this.listenerKeys_[Z(e)]=t}handleLayerGroupAdd_(e){this.dispatchEvent(new F1("addlayer",e.layer))}handleLayerGroupRemove_(e){this.dispatchEvent(new F1("removelayer",e.layer))}handleLayersAdd_(e){const t=e.element;this.registerLayerListeners_(t),this.dispatchEvent(new F1("addlayer",t)),this.changed()}handleLayersRemove_(e){const t=e.element,i=Z(t);this.listenerKeys_[i].forEach(t3),delete this.listenerKeys_[i],this.dispatchEvent(new F1("removelayer",t)),this.changed()}getLayers(){return this.get(_4.LAYERS)}setLayers(e){const t=this.getLayers();if(t){const i=t.getArray();for(let n=0,r=i.length;n<r;++n)this.dispatchEvent(new F1("removelayer",i[n]))}this.set(_4.LAYERS,e)}getLayersArray(e){return e=e!==void 0?e:[],this.getLayers().forEach(function(t){t.getLayersArray(e)}),e}getLayerStatesArray(e){const t=e!==void 0?e:[],i=t.length;this.getLayers().forEach(function(o){o.getLayerStatesArray(t)});const n=this.getLayerState();let r=n.zIndex;!e&&n.zIndex===void 0&&(r=0);for(let o=i,a=t.length;o<a;o++){const l=t[o];l.opacity*=n.opacity,l.visible=l.visible&&n.visible,l.maxResolution=Math.min(l.maxResolution,n.maxResolution),l.minResolution=Math.max(l.minResolution,n.minResolution),l.minZoom=Math.max(l.minZoom,n.minZoom),l.maxZoom=Math.min(l.maxZoom,n.maxZoom),n.extent!==void 0&&(l.extent!==void 0?l.extent=p1(l.extent,n.extent):l.extent=n.extent),l.zIndex===void 0&&(l.zIndex=r)}return t}getSourceState(){return"ready"}}class Dn extends F0{constructor(e){super(),this.map_=e}dispatchRenderEvent(e,t){Y()}calculateMatrices2D(e){const t=e.viewState,i=e.coordinateToPixelTransform,n=e.pixelToCoordinateTransform;T1(i,e.size[0]/2,e.size[1]/2,1/t.resolution,-1/t.resolution,-t.rotation,-t.center[0],-t.center[1]),P6(n,i)}forEachFeatureAtCoordinate(e,t,i,n,r,o,a,l){let h;const c=t.viewState;function u(x,E,T,R){return r.call(o,E,x?T:null,R)}const d=c.projection,f=J4(e.slice(),d),g=[[0,0]];if(d.canWrapX()&&n){const x=d.getExtent(),E=e3(x);g.push([-E,0],[E,0])}const _=t.layerStatesArray,m=_.length,p=[],y=[];for(let x=0;x<g.length;x++)for(let E=m-1;E>=0;--E){const T=_[E],R=T.layer;if(R.hasRenderer()&&F9(T,c)&&a.call(l,R)){const C=R.getRenderer(),I=R.getSource();if(C&&I){const A=I.getWrapX()?f:e,k=u.bind(null,T.managed);y[0]=A[0]+g[x][0],y[1]=A[1]+g[x][1],h=C.forEachFeatureAtCoordinate(y,t,i,k,p)}if(h)return h}}if(p.length===0)return;const w=1/p.length;return p.forEach((x,E)=>x.distanceSq+=E*w),p.sort((x,E)=>x.distanceSq-E.distanceSq),p.some(x=>h=x.callback(x.feature,x.layer,x.geometry)),h}hasFeatureAtCoordinate(e,t,i,n,r,o){return this.forEachFeatureAtCoordinate(e,t,i,n,G2,this,r,o)!==void 0}getMap(){return this.map_}renderFrame(e){Y()}scheduleExpireIconCache(e){N3.canExpireCache()&&e.postRenderFunctions.push(kn)}}function kn(s,e){N3.expire()}class On extends Dn{constructor(e){super(e),this.fontChangeListenerKey_=j(f1,z2.PROPERTYCHANGE,e.redrawText,e),this.element_=document.createElement("div");const t=this.element_.style;t.position="absolute",t.width="100%",t.height="100%",t.zIndex="0",this.element_.className=k0+" ol-layers";const i=e.getViewport();i.insertBefore(this.element_,i.firstChild||null),this.children_=[],this.renderedVisible_=!0}dispatchRenderEvent(e,t){const i=this.getMap();if(i.hasListener(e)){const n=new n7(e,void 0,t);i.dispatchEvent(n)}}disposeInternal(){t3(this.fontChangeListenerKey_),this.element_.remove(),super.disposeInternal()}renderFrame(e){if(!e){this.renderedVisible_&&(this.element_.style.display="none",this.renderedVisible_=!1);return}this.calculateMatrices2D(e),this.dispatchRenderEvent(z3.PRECOMPOSE,e);const t=e.layerStatesArray.sort((a,l)=>a.zIndex-l.zIndex);t.some(a=>a.layer instanceof D9&&a.layer.getDeclutter())&&(e.declutter={});const n=e.viewState;this.children_.length=0;const r=[];let o=null;for(let a=0,l=t.length;a<l;++a){const h=t[a];e.layerIndex=a;const c=h.layer,u=c.getSourceState();if(!F9(h,n)||u!="ready"&&u!="undefined"){c.unrender();continue}const d=c.render(e,o);d&&(d!==o&&(this.children_.push(d),o=d),r.push(h))}this.declutter(e,r),Oe(this.element_,this.children_),this.dispatchRenderEvent(z3.POSTCOMPOSE,e),this.renderedVisible_||(this.element_.style.display="",this.renderedVisible_=!0),this.scheduleExpireIconCache(e)}declutter(e,t){if(e.declutter){for(let i=t.length-1;i>=0;--i){const n=t[i],r=n.layer;r.getDeclutter()&&r.renderDeclutter(e,n)}t.forEach(i=>i.layer.renderDeferred(e))}}}function E7(s){if(s instanceof Y0){s.setMapInternal(null);return}s instanceof U2&&s.getLayers().forEach(E7)}function w7(s,e){if(s instanceof Y0){s.setMapInternal(e);return}if(s instanceof U2){const t=s.getLayers().getArray();for(let i=0,n=t.length;i<n;++i)w7(t[i],e)}}class Gn extends o1{constructor(e){super(),e=e||{},this.on,this.once,this.un;const t=Nn(e);this.renderComplete_=!1,this.loaded_=!0,this.boundHandleBrowserEvent_=this.handleBrowserEvent.bind(this),this.maxTilesLoading_=e.maxTilesLoading!==void 0?e.maxTilesLoading:16,this.pixelRatio_=e.pixelRatio!==void 0?e.pixelRatio:E6,this.postRenderTimeoutHandle_,this.animationDelayKey_,this.animationDelay_=this.animationDelay_.bind(this),this.coordinateToPixelTransform_=B3(),this.pixelToCoordinateTransform_=B3(),this.frameIndex_=0,this.frameState_=null,this.previousExtent_=null,this.viewPropertyListenerKey_=null,this.viewChangeListenerKey_=null,this.layerGroupPropertyListenerKeys_=null,this.viewport_=document.createElement("div"),this.viewport_.className="ol-viewport"+("ontouchstart"in window?" ol-touch":""),this.viewport_.style.position="relative",this.viewport_.style.overflow="hidden",this.viewport_.style.width="100%",this.viewport_.style.height="100%",this.overlayContainer_=document.createElement("div"),this.overlayContainer_.style.position="absolute",this.overlayContainer_.style.zIndex="0",this.overlayContainer_.style.width="100%",this.overlayContainer_.style.height="100%",this.overlayContainer_.style.pointerEvents="none",this.overlayContainer_.className="ol-overlaycontainer",this.viewport_.appendChild(this.overlayContainer_),this.overlayContainerStopEvent_=document.createElement("div"),this.overlayContainerStopEvent_.style.position="absolute",this.overlayContainerStopEvent_.style.zIndex="0",this.overlayContainerStopEvent_.style.width="100%",this.overlayContainerStopEvent_.style.height="100%",this.overlayContainerStopEvent_.style.pointerEvents="none",this.overlayContainerStopEvent_.className="ol-overlaycontainer-stopevent",this.viewport_.appendChild(this.overlayContainerStopEvent_),this.mapBrowserEventHandler_=null,this.moveTolerance_=e.moveTolerance,this.keyboardEventTarget_=t.keyboardEventTarget,this.targetChangeHandlerKeys_=null,this.targetElement_=null,this.resizeObserver_=new ResizeObserver(()=>this.updateSize()),this.controls=t.controls||_n(),this.interactions=t.interactions||Fn({onFocusOnly:!0}),this.overlays_=t.overlays,this.overlayIdIndex_={},this.renderer_=null,this.postRenderFunctions_=[],this.tileQueue_=new cn(this.getTilePriority.bind(this),this.handleTileChange_.bind(this)),this.addChangeListener(m3.LAYERGROUP,this.handleLayerGroupChanged_),this.addChangeListener(m3.VIEW,this.handleViewChanged_),this.addChangeListener(m3.SIZE,this.handleSizeChanged_),this.addChangeListener(m3.TARGET,this.handleTargetChanged_),this.setProperties(t.values);const i=this;e.view&&!(e.view instanceof Z3)&&e.view.then(function(n){i.setView(new Z3(n))}),this.controls.addEventListener(I3.ADD,n=>{n.element.setMap(this)}),this.controls.addEventListener(I3.REMOVE,n=>{n.element.setMap(null)}),this.interactions.addEventListener(I3.ADD,n=>{n.element.setMap(this)}),this.interactions.addEventListener(I3.REMOVE,n=>{n.element.setMap(null)}),this.overlays_.addEventListener(I3.ADD,n=>{this.addOverlayInternal_(n.element)}),this.overlays_.addEventListener(I3.REMOVE,n=>{const r=n.element.getId();r!==void 0&&delete this.overlayIdIndex_[r.toString()],n.element.setMap(null)}),this.controls.forEach(n=>{n.setMap(this)}),this.interactions.forEach(n=>{n.setMap(this)}),this.overlays_.forEach(this.addOverlayInternal_.bind(this))}addControl(e){this.getControls().push(e)}addInteraction(e){this.getInteractions().push(e)}addLayer(e){this.getLayerGroup().getLayers().push(e)}handleLayerAdd_(e){w7(e.layer,this)}addOverlay(e){this.getOverlays().push(e)}addOverlayInternal_(e){const t=e.getId();t!==void 0&&(this.overlayIdIndex_[t.toString()]=e),e.setMap(this)}disposeInternal(){this.controls.clear(),this.interactions.clear(),this.overlays_.clear(),this.resizeObserver_.disconnect(),this.setTarget(null),super.disposeInternal()}forEachFeatureAtPixel(e,t,i){if(!this.frameState_||!this.renderer_)return;const n=this.getCoordinateFromPixelInternal(e);i=i!==void 0?i:{};const r=i.hitTolerance!==void 0?i.hitTolerance:0,o=i.layerFilter!==void 0?i.layerFilter:G2,a=i.checkWrapped!==!1;return this.renderer_.forEachFeatureAtCoordinate(n,this.frameState_,r,a,t,null,o,null)}getFeaturesAtPixel(e,t){const i=[];return this.forEachFeatureAtPixel(e,function(n){i.push(n)},t),i}getAllLayers(){const e=[];function t(i){i.forEach(function(n){n instanceof U2?t(n.getLayers()):e.push(n)})}return t(this.getLayers()),e}hasFeatureAtPixel(e,t){if(!this.frameState_||!this.renderer_)return!1;const i=this.getCoordinateFromPixelInternal(e);t=t!==void 0?t:{};const n=t.layerFilter!==void 0?t.layerFilter:G2,r=t.hitTolerance!==void 0?t.hitTolerance:0,o=t.checkWrapped!==!1;return this.renderer_.hasFeatureAtCoordinate(i,this.frameState_,r,o,n,null)}getEventCoordinate(e){return this.getCoordinateFromPixel(this.getEventPixel(e))}getEventCoordinateInternal(e){return this.getCoordinateFromPixelInternal(this.getEventPixel(e))}getEventPixel(e){const i=this.viewport_.getBoundingClientRect(),n=this.getSize(),r=i.width/n[0],o=i.height/n[1],a="changedTouches"in e?e.changedTouches[0]:e;return[(a.clientX-i.left)/r,(a.clientY-i.top)/o]}getTarget(){return this.get(m3.TARGET)}getTargetElement(){return this.targetElement_}getCoordinateFromPixel(e){return F4(this.getCoordinateFromPixelInternal(e),this.getView().getProjection())}getCoordinateFromPixelInternal(e){const t=this.frameState_;return t?l3(t.pixelToCoordinateTransform,e.slice()):null}getControls(){return this.controls}getOverlays(){return this.overlays_}getOverlayById(e){const t=this.overlayIdIndex_[e.toString()];return t!==void 0?t:null}getInteractions(){return this.interactions}getLayerGroup(){return this.get(m3.LAYERGROUP)}setLayers(e){const t=this.getLayerGroup();if(e instanceof Q3){t.setLayers(e);return}const i=t.getLayers();i.clear(),i.extend(e)}getLayers(){return this.getLayerGroup().getLayers()}getLoadingOrNotReady(){const e=this.getLayerGroup().getLayerStatesArray();for(let t=0,i=e.length;t<i;++t){const n=e[t];if(!n.visible)continue;const r=n.layer.getRenderer();if(r&&!r.ready)return!0;const o=n.layer.getSource();if(o&&o.loading)return!0}return!1}getPixelFromCoordinate(e){const t=V3(e,this.getView().getProjection());return this.getPixelFromCoordinateInternal(t)}getPixelFromCoordinateInternal(e){const t=this.frameState_;return t?l3(t.coordinateToPixelTransform,e.slice(0,2)):null}getRenderer(){return this.renderer_}getSize(){return this.get(m3.SIZE)}getView(){return this.get(m3.VIEW)}getViewport(){return this.viewport_}getOverlayContainer(){return this.overlayContainer_}getOverlayContainerStopEvent(){return this.overlayContainerStopEvent_}getOwnerDocument(){const e=this.getTargetElement();return e?e.ownerDocument:document}getTilePriority(e,t,i,n){return un(this.frameState_,e,t,i,n)}handleBrowserEvent(e,t){t=t||e.type;const i=new g1(t,this,e);this.handleMapBrowserEvent(i)}handleMapBrowserEvent(e){if(!this.frameState_)return;const t=e.originalEvent,i=t.type;if(i===K4.POINTERDOWN||i===z.WHEEL||i===z.KEYDOWN){const n=this.getOwnerDocument(),r=this.viewport_.getRootNode?this.viewport_.getRootNode():n,o=t.target,a=r instanceof ShadowRoot?r.host===o?r.host.ownerDocument:r:r===n?n.documentElement:r;if(this.overlayContainerStopEvent_.contains(o)||!a.contains(o))return}if(e.frameState=this.frameState_,this.dispatchEvent(e)!==!1){const n=this.getInteractions().getArray().slice();for(let r=n.length-1;r>=0;r--){const o=n[r];if(o.getMap()!==this||!o.getActive()||!this.getTargetElement())continue;if(!o.handleEvent(e)||e.propagationStopped)break}}}handlePostRender(){const e=this.frameState_,t=this.tileQueue_;if(!t.isEmpty()){let n=this.maxTilesLoading_,r=n;if(e){const o=e.viewHints;if(o[s3.ANIMATING]||o[s3.INTERACTING]){const a=Date.now()-e.time>8;n=a?0:8,r=a?0:2}}t.getTilesLoading()<n&&(t.reprioritize(),t.loadMoreTiles(n,r))}e&&this.renderer_&&!e.animate&&(this.renderComplete_?(this.hasListener(z3.RENDERCOMPLETE)&&this.renderer_.dispatchRenderEvent(z3.RENDERCOMPLETE,e),this.loaded_===!1&&(this.loaded_=!0,this.dispatchEvent(new S2(b1.LOADEND,this,e)))):this.loaded_===!0&&(this.loaded_=!1,this.dispatchEvent(new S2(b1.LOADSTART,this,e))));const i=this.postRenderFunctions_;if(e)for(let n=0,r=i.length;n<r;++n)i[n](this,e);i.length=0}handleSizeChanged_(){this.getView()&&!this.getView().getAnimating()&&this.getView().resolveConstraints(0),this.render()}handleTargetChanged_(){if(this.mapBrowserEventHandler_){for(let i=0,n=this.targetChangeHandlerKeys_.length;i<n;++i)t3(this.targetChangeHandlerKeys_[i]);this.targetChangeHandlerKeys_=null,this.viewport_.removeEventListener(z.CONTEXTMENU,this.boundHandleBrowserEvent_),this.viewport_.removeEventListener(z.WHEEL,this.boundHandleBrowserEvent_),this.mapBrowserEventHandler_.dispose(),this.mapBrowserEventHandler_=null,this.viewport_.remove()}if(this.targetElement_){this.resizeObserver_.unobserve(this.targetElement_);const i=this.targetElement_.getRootNode();i instanceof ShadowRoot&&this.resizeObserver_.unobserve(i.host),this.setSize(void 0)}const e=this.getTarget(),t=typeof e=="string"?document.getElementById(e):e;if(this.targetElement_=t,!t)this.renderer_&&(clearTimeout(this.postRenderTimeoutHandle_),this.postRenderTimeoutHandle_=void 0,this.postRenderFunctions_.length=0,this.renderer_.dispose(),this.renderer_=null),this.animationDelayKey_&&(cancelAnimationFrame(this.animationDelayKey_),this.animationDelayKey_=void 0);else{t.appendChild(this.viewport_),this.renderer_||(this.renderer_=new On(this)),this.mapBrowserEventHandler_=new ln(this,this.moveTolerance_);for(const r in J)this.mapBrowserEventHandler_.addEventListener(J[r],this.handleMapBrowserEvent.bind(this));this.viewport_.addEventListener(z.CONTEXTMENU,this.boundHandleBrowserEvent_,!1),this.viewport_.addEventListener(z.WHEEL,this.boundHandleBrowserEvent_,S6?{passive:!1}:!1);let i;if(this.keyboardEventTarget_)i=this.keyboardEventTarget_;else{const r=t.getRootNode();i=r instanceof ShadowRoot?r.host:t}this.targetChangeHandlerKeys_=[j(i,z.KEYDOWN,this.handleBrowserEvent,this),j(i,z.KEYPRESS,this.handleBrowserEvent,this)];const n=t.getRootNode();n instanceof ShadowRoot&&this.resizeObserver_.observe(n.host),this.resizeObserver_.observe(t)}this.updateSize()}handleTileChange_(){this.render()}handleViewPropertyChanged_(){this.render()}handleViewChanged_(){this.viewPropertyListenerKey_&&(t3(this.viewPropertyListenerKey_),this.viewPropertyListenerKey_=null),this.viewChangeListenerKey_&&(t3(this.viewChangeListenerKey_),this.viewChangeListenerKey_=null);const e=this.getView();e&&(this.updateViewportSize_(this.getSize()),this.viewPropertyListenerKey_=j(e,z2.PROPERTYCHANGE,this.handleViewPropertyChanged_,this),this.viewChangeListenerKey_=j(e,z.CHANGE,this.handleViewPropertyChanged_,this),e.resolveConstraints(0)),this.render()}handleLayerGroupChanged_(){this.layerGroupPropertyListenerKeys_&&(this.layerGroupPropertyListenerKeys_.forEach(t3),this.layerGroupPropertyListenerKeys_=null);const e=this.getLayerGroup();e&&(this.handleLayerAdd_(new F1("addlayer",e)),this.layerGroupPropertyListenerKeys_=[j(e,z2.PROPERTYCHANGE,this.render,this),j(e,z.CHANGE,this.render,this),j(e,"addlayer",this.handleLayerAdd_,this),j(e,"removelayer",this.handleLayerRemove_,this)]),this.render()}isRendered(){return!!this.frameState_}animationDelay_(){this.animationDelayKey_=void 0,this.renderFrame_(Date.now())}renderSync(){this.animationDelayKey_&&cancelAnimationFrame(this.animationDelayKey_),this.animationDelay_()}redrawText(){const e=this.getLayerGroup().getLayerStatesArray();for(let t=0,i=e.length;t<i;++t){const n=e[t].layer;n.hasRenderer()&&n.getRenderer().handleFontsChanged()}}render(){this.renderer_&&this.animationDelayKey_===void 0&&(this.animationDelayKey_=requestAnimationFrame(this.animationDelay_))}removeControl(e){return this.getControls().remove(e)}removeInteraction(e){return this.getInteractions().remove(e)}removeLayer(e){return this.getLayerGroup().getLayers().remove(e)}handleLayerRemove_(e){E7(e.layer)}removeOverlay(e){return this.getOverlays().remove(e)}renderFrame_(e){const t=this.getSize(),i=this.getView(),n=this.frameState_;let r=null;if(t!==void 0&&g8(t)&&i&&i.isDef()){const o=i.getHints(this.frameState_?this.frameState_.viewHints:void 0),a=i.getState();if(r={animate:!1,coordinateToPixelTransform:this.coordinateToPixelTransform_,declutter:null,extent:v4(a.center,a.resolution,a.rotation,t),index:this.frameIndex_++,layerIndex:0,layerStatesArray:this.getLayerGroup().getLayerStatesArray(),pixelRatio:this.pixelRatio_,pixelToCoordinateTransform:this.pixelToCoordinateTransform_,postRenderFunctions:[],size:t,tileQueue:this.tileQueue_,time:e,usedTiles:{},viewState:a,viewHints:o,wantedTiles:{},mapId:Z(this),renderTargets:{}},a.nextCenter&&a.nextResolution){const l=isNaN(a.nextRotation)?a.rotation:a.nextRotation;r.nextExtent=v4(a.nextCenter,a.nextResolution,l,t)}}this.frameState_=r,this.renderer_.renderFrame(r),r&&(r.animate&&this.render(),Array.prototype.push.apply(this.postRenderFunctions_,r.postRenderFunctions),n&&(!this.previousExtent_||!R0(this.previousExtent_)&&!D2(r.extent,this.previousExtent_))&&(this.dispatchEvent(new S2(b1.MOVESTART,this,n)),this.previousExtent_=T5(this.previousExtent_)),this.previousExtent_&&!r.viewHints[s3.ANIMATING]&&!r.viewHints[s3.INTERACTING]&&!D2(r.extent,this.previousExtent_)&&(this.dispatchEvent(new S2(b1.MOVEEND,this,r)),i6(r.extent,this.previousExtent_))),this.dispatchEvent(new S2(b1.POSTRENDER,this,r)),this.renderComplete_=(this.hasListener(b1.LOADSTART)||this.hasListener(b1.LOADEND)||this.hasListener(z3.RENDERCOMPLETE))&&!this.tileQueue_.getTilesLoading()&&!this.tileQueue_.getCount()&&!this.getLoadingOrNotReady(),this.postRenderTimeoutHandle_||(this.postRenderTimeoutHandle_=setTimeout(()=>{this.postRenderTimeoutHandle_=void 0,this.handlePostRender()},0))}setLayerGroup(e){const t=this.getLayerGroup();t&&this.handleLayerRemove_(new F1("removelayer",t)),this.set(m3.LAYERGROUP,e)}setSize(e){this.set(m3.SIZE,e)}setTarget(e){this.set(m3.TARGET,e)}setView(e){if(!e||e instanceof Z3){this.set(m3.VIEW,e);return}this.set(m3.VIEW,new Z3);const t=this;e.then(function(i){t.setView(new Z3(i))})}updateSize(){const e=this.getTargetElement();let t;if(e){const n=getComputedStyle(e),r=e.offsetWidth-parseFloat(n.borderLeftWidth)-parseFloat(n.paddingLeft)-parseFloat(n.paddingRight)-parseFloat(n.borderRightWidth),o=e.offsetHeight-parseFloat(n.borderTopWidth)-parseFloat(n.paddingTop)-parseFloat(n.paddingBottom)-parseFloat(n.borderBottomWidth);!isNaN(r)&&!isNaN(o)&&(t=[Math.max(0,r),Math.max(0,o)],!g8(t)&&(e.offsetWidth||e.offsetHeight||e.getClientRects().length)&&t6("No map visible because the map container's width or height are 0."))}const i=this.getSize();t&&(!i||!V1(t,i))&&(this.setSize(t),this.updateViewportSize_(t))}updateViewportSize_(e){const t=this.getView();t&&t.setViewportSize(e)}}function Nn(s){let e=null;s.keyboardEventTarget!==void 0&&(e=typeof s.keyboardEventTarget=="string"?document.getElementById(s.keyboardEventTarget):s.keyboardEventTarget);const t={},i=s.layers&&typeof s.layers.getLayers=="function"?s.layers:new U2({layers:s.layers});t[m3.LAYERGROUP]=i,t[m3.TARGET]=s.target,t[m3.VIEW]=s.view instanceof Z3?s.view:new Z3;let n;s.controls!==void 0&&(Array.isArray(s.controls)?n=new Q3(s.controls.slice()):(q(typeof s.controls.getArray=="function","Expected `controls` to be an array or an `ol/Collection.js`"),n=s.controls));let r;s.interactions!==void 0&&(Array.isArray(s.interactions)?r=new Q3(s.interactions.slice()):(q(typeof s.interactions.getArray=="function","Expected `interactions` to be an array or an `ol/Collection.js`"),r=s.interactions));let o;return s.overlays!==void 0?Array.isArray(s.overlays)?o=new Q3(s.overlays.slice()):(q(typeof s.overlays.getArray=="function","Expected `overlays` to be an array or an `ol/Collection.js`"),o=s.overlays):o=new Q3,{controls:n,interactions:r,keyboardEventTarget:e,overlays:o,values:t}}class W9{constructor(e,t,i,n){this.minX=e,this.maxX=t,this.minY=i,this.maxY=n}contains(e){return this.containsXY(e[1],e[2])}containsTileRange(e){return this.minX<=e.minX&&e.maxX<=this.maxX&&this.minY<=e.minY&&e.maxY<=this.maxY}containsXY(e,t){return this.minX<=e&&e<=this.maxX&&this.minY<=t&&t<=this.maxY}equals(e){return this.minX==e.minX&&this.minY==e.minY&&this.maxX==e.maxX&&this.maxY==e.maxY}extend(e){e.minX<this.minX&&(this.minX=e.minX),e.maxX>this.maxX&&(this.maxX=e.maxX),e.minY<this.minY&&(this.minY=e.minY),e.maxY>this.maxY&&(this.maxY=e.maxY)}getHeight(){return this.maxY-this.minY+1}getSize(){return[this.getWidth(),this.getHeight()]}getWidth(){return this.maxX-this.minX+1}intersects(e){return this.minX<=e.maxX&&this.maxX>=e.minX&&this.minY<=e.maxY&&this.maxY>=e.minY}}function p2(s,e,t,i,n){return n!==void 0?(n.minX=s,n.maxX=e,n.minY=t,n.maxY=i,n):new W9(s,e,t,i)}const Y8=[];class zn extends b5{constructor(e,t,i,n,r){super(e,t,{transition:0}),this.context_=null,this.executorGroups={},this.loadingSourceTiles=0,this.hitDetectionImageData={},this.replayState_={},this.sourceTiles=[],this.errorTileKeys={},this.wantedResolution,this.getSourceTiles=n.bind(void 0,this),this.removeSourceTiles_=r,this.wrappedTileCoord=i}getContext(){return this.context_||(this.context_=h3(1,1,Y8)),this.context_}hasContext(){return!!this.context_}getImage(){return this.hasContext()?this.getContext().canvas:null}getReplayState(e){const t=Z(e);return t in this.replayState_||(this.replayState_[t]={dirty:!1,renderedRenderOrder:null,renderedResolution:NaN,renderedRevision:-1,renderedTileResolution:NaN,renderedTileRevision:-1,renderedTileZ:-1}),this.replayState_[t]}load(){this.getSourceTiles()}release(){this.context_&&(v5(this.context_),Y8.push(this.context_.canvas),this.context_=null),this.removeSourceTiles_(this),this.sourceTiles.length=0,super.release()}}let Wn=class extends b5{constructor(e,t,i,n,r,o){super(e,t,o),this.extent=null,this.format_=n,this.features_=null,this.loader_,this.projection=null,this.resolution,this.tileLoadFunction_=r,this.url_=i,this.key=i}getTileUrl(){return this.url_}getFormat(){return this.format_}getFeatures(){return this.features_}load(){this.state==M.IDLE&&(this.setState(M.LOADING),this.tileLoadFunction_(this,this.url_),this.loader_&&this.loader_(this.extent,this.resolution,this.projection))}onLoad(e,t){this.setFeatures(e)}onError(){this.setState(M.ERROR)}setFeatures(e){this.features_=e,this.setState(M.LOADED)}setLoader(e){this.loader_=e}};function Z4(s){return s instanceof Image||s instanceof HTMLCanvasElement||s instanceof HTMLVideoElement||s instanceof ImageBitmap?s:null}const Bn=new Error("disposed"),Kn=[256,256];class Z8 extends b5{constructor(e){const t=M.IDLE;super(e.tileCoord,t,{transition:e.transition,interpolate:e.interpolate}),this.loader_=e.loader,this.data_=null,this.error_=null,this.size_=e.size||null,this.controller_=e.controller||null}getSize(){if(this.size_)return this.size_;const e=Z4(this.data_);return e?[e.width,e.height]:Kn}getData(){return this.data_}getError(){return this.error_}load(){if(this.state!==M.IDLE&&this.state!==M.ERROR)return;this.state=M.LOADING,this.changed();const e=this;this.loader_().then(function(t){e.data_=t,e.state=M.LOADED,e.changed()}).catch(function(t){e.error_=t,e.state=M.ERROR,e.changed()})}disposeInternal(){this.controller_&&(this.controller_.abort(Bn),this.controller_=null),super.disposeInternal()}}let m4;const b2=[];function H8(s,e,t,i,n){s.beginPath(),s.moveTo(0,0),s.lineTo(e,t),s.lineTo(i,n),s.closePath(),s.save(),s.clip(),s.fillRect(0,0,Math.max(e,i)+1,Math.max(t,n)),s.restore()}function p4(s,e){return Math.abs(s[e*4]-210)>2||Math.abs(s[e*4+3]-.75*255)>2}function Xn(){if(m4===void 0){const s=h3(6,6,b2);s.globalCompositeOperation="lighter",s.fillStyle="rgba(210, 0, 0, 0.75)",H8(s,4,5,4,0),H8(s,4,5,0,5);const e=s.getImageData(0,0,3,3).data;m4=p4(e,0)||p4(e,4)||p4(e,8),v5(s),b2.push(s.canvas)}return m4}function U8(s,e,t,i){const n=b0(t,e,s);let r=s8(e,i,t);const o=e.getMetersPerUnit();o!==void 0&&(r*=o);const a=s.getMetersPerUnit();a!==void 0&&(r/=a);const l=s.getExtent();if(!l||F2(l,n)){const h=s8(s,r,n)/r;isFinite(h)&&h>0&&(r/=h)}return r}function Vn(s,e,t,i){const n=C1(t);let r=U8(s,e,n,i);return(!isFinite(r)||r<=0)&&q4(t,function(o){return r=U8(s,e,o,i),isFinite(r)&&r>0}),r}function Yn(s,e,t,i,n,r,o,a,l,h,c,u,d,f){const g=h3(Math.round(t*s),Math.round(t*e),b2);if(u||(g.imageSmoothingEnabled=!1),l.length===0)return g.canvas;g.scale(t,t);function _(E){return Math.round(E*t)/t}g.globalCompositeOperation="lighter";const m=K3();l.forEach(function(E,T,R){s6(m,E.extent)});let p;const y=t/i,w=(u?1:1+Math.pow(2,-24))/y;p=h3(Math.round(e3(m)*y),Math.round(C3(m)*y),b2),u||(p.imageSmoothingEnabled=!1),l.forEach(function(E,T,R){if(E.image.width>0&&E.image.height>0){if(E.clipExtent){p.save();const P=(E.clipExtent[0]-m[0])*y,F=-(E.clipExtent[3]-m[3])*y,L=e3(E.clipExtent)*y,O=C3(E.clipExtent)*y;p.rect(u?P:Math.round(P),u?F:Math.round(F),u?L:Math.round(P+L)-Math.round(P),u?O:Math.round(F+O)-Math.round(F)),p.clip()}const C=(E.extent[0]-m[0])*y,I=-(E.extent[3]-m[3])*y,A=e3(E.extent)*y,k=C3(E.extent)*y;p.drawImage(E.image,h,h,E.image.width-2*h,E.image.height-2*h,u?C:Math.round(C),u?I:Math.round(I),u?A:Math.round(C+A)-Math.round(C),u?k:Math.round(I+k)-Math.round(I)),E.clipExtent&&p.restore()}});const x=X1(o);return a.getTriangles().forEach(function(E,T,R){const C=E.source,I=E.target;let A=C[0][0],k=C[0][1],P=C[1][0],F=C[1][1],L=C[2][0],O=C[2][1];const b=_((I[0][0]-x[0])/r),D=_(-(I[0][1]-x[1])/r),W=_((I[1][0]-x[0])/r),B=_(-(I[1][1]-x[1])/r),K=_((I[2][0]-x[0])/r),U=_(-(I[2][1]-x[1])/r),v=A,f3=k;A=0,k=0,P-=v,F-=f3,L-=v,O-=f3;const S3=[[P,F,0,0,W-b],[L,O,0,0,K-b],[0,0,P,F,B-D],[0,0,L,O,U-D]],i3=Y7(S3);if(!i3)return;if(g.save(),g.beginPath(),Xn()||!u){g.moveTo(W,B);const T3=4,M3=b-W,Z1=D-B;for(let g3=0;g3<T3;g3++)g.lineTo(W+_((g3+1)*M3/T3),B+_(g3*Z1/(T3-1))),g3!=T3-1&&g.lineTo(W+_((g3+1)*M3/T3),B+_((g3+1)*Z1/(T3-1)));g.lineTo(K,U)}else g.moveTo(W,B),g.lineTo(b,D),g.lineTo(K,U);g.clip(),g.transform(i3[0],i3[2],i3[1],i3[3],b,D),g.translate(m[0]-v,m[3]-f3);let x3;if(p)x3=p.canvas,g.scale(w,-w);else{const T3=l[0],M3=T3.extent;x3=T3.image,g.scale(e3(M3)/x3.width,-C3(M3)/x3.height)}g.drawImage(x3,0,0),g.restore()}),p&&(v5(p),b2.push(p.canvas)),c&&(g.save(),g.globalCompositeOperation="source-over",g.strokeStyle="black",g.lineWidth=1,a.getTriangles().forEach(function(E,T,R){const C=E.target,I=(C[0][0]-x[0])/r,A=-(C[0][1]-x[1])/r,k=(C[1][0]-x[0])/r,P=-(C[1][1]-x[1])/r,F=(C[2][0]-x[0])/r,L=-(C[2][1]-x[1])/r;g.beginPath(),g.moveTo(k,P),g.lineTo(I,A),g.lineTo(F,L),g.closePath(),g.stroke()}),g.restore()),g.canvas}const Zn=10,j8=.25;class Hn{constructor(e,t,i,n,r,o,a){this.sourceProj_=e,this.targetProj_=t;let l={};const h=a?Ce(w=>l3(a,b0(w,this.targetProj_,this.sourceProj_))):g5(this.targetProj_,this.sourceProj_);this.transformInv_=function(w){const x=w[0]+"/"+w[1];return l[x]||(l[x]=h(w)),l[x]},this.maxSourceExtent_=n,this.errorThresholdSquared_=r*r,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!n&&!!this.sourceProj_.getExtent()&&e3(n)>=e3(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?e3(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?e3(this.targetProj_.getExtent()):null;const c=X1(i),u=T0(i),d=S0(i),f=C0(i),g=this.transformInv_(c),_=this.transformInv_(u),m=this.transformInv_(d),p=this.transformInv_(f),y=Zn+(o?Math.max(0,Math.ceil(Math.log2(I4(i)/(o*o*256*256)))):0);if(this.addQuad_(c,u,d,f,g,_,m,p,y),this.wrapsXInSource_){let w=1/0;this.triangles_.forEach(function(x,E,T){w=Math.min(w,x.source[0][0],x.source[1][0],x.source[2][0])}),this.triangles_.forEach(x=>{if(Math.max(x.source[0][0],x.source[1][0],x.source[2][0])-w>this.sourceWorldWidth_/2){const E=[[x.source[0][0],x.source[0][1]],[x.source[1][0],x.source[1][1]],[x.source[2][0],x.source[2][1]]];E[0][0]-w>this.sourceWorldWidth_/2&&(E[0][0]-=this.sourceWorldWidth_),E[1][0]-w>this.sourceWorldWidth_/2&&(E[1][0]-=this.sourceWorldWidth_),E[2][0]-w>this.sourceWorldWidth_/2&&(E[2][0]-=this.sourceWorldWidth_);const T=Math.min(E[0][0],E[1][0],E[2][0]);Math.max(E[0][0],E[1][0],E[2][0])-T<this.sourceWorldWidth_/2&&(x.source=E)}})}l={}}addTriangle_(e,t,i,n,r,o){this.triangles_.push({source:[n,r,o],target:[e,t,i]})}addQuad_(e,t,i,n,r,o,a,l,h){const c=d5([r,o,a,l]),u=this.sourceWorldWidth_?e3(c)/this.sourceWorldWidth_:null,d=this.sourceWorldWidth_,f=this.sourceProj_.canWrapX()&&u>.5&&u<1;let g=!1;if(h>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_){const m=d5([e,t,i,n]);g=e3(m)/this.targetWorldWidth_>j8||g}!f&&this.sourceProj_.isGlobal()&&u&&(g=u>j8||g)}if(!g&&this.maxSourceExtent_&&isFinite(c[0])&&isFinite(c[1])&&isFinite(c[2])&&isFinite(c[3])&&!r3(c,this.maxSourceExtent_))return;let _=0;if(!g&&(!isFinite(r[0])||!isFinite(r[1])||!isFinite(o[0])||!isFinite(o[1])||!isFinite(a[0])||!isFinite(a[1])||!isFinite(l[0])||!isFinite(l[1]))){if(h>0)g=!0;else if(_=(!isFinite(r[0])||!isFinite(r[1])?8:0)+(!isFinite(o[0])||!isFinite(o[1])?4:0)+(!isFinite(a[0])||!isFinite(a[1])?2:0)+(!isFinite(l[0])||!isFinite(l[1])?1:0),_!=1&&_!=2&&_!=4&&_!=8)return}if(h>0){if(!g){const m=[(e[0]+i[0])/2,(e[1]+i[1])/2],p=this.transformInv_(m);let y;f?y=(M2(r[0],d)+M2(a[0],d))/2-M2(p[0],d):y=(r[0]+a[0])/2-p[0];const w=(r[1]+a[1])/2-p[1];g=y*y+w*w>this.errorThresholdSquared_}if(g){if(Math.abs(e[0]-i[0])<=Math.abs(e[1]-i[1])){const m=[(t[0]+i[0])/2,(t[1]+i[1])/2],p=this.transformInv_(m),y=[(n[0]+e[0])/2,(n[1]+e[1])/2],w=this.transformInv_(y);this.addQuad_(e,t,m,y,r,o,p,w,h-1),this.addQuad_(y,m,i,n,w,p,a,l,h-1)}else{const m=[(e[0]+t[0])/2,(e[1]+t[1])/2],p=this.transformInv_(m),y=[(i[0]+n[0])/2,(i[1]+n[1])/2],w=this.transformInv_(y);this.addQuad_(e,m,y,n,r,p,w,l,h-1),this.addQuad_(m,t,i,y,p,o,a,w,h-1)}return}}if(f){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}(_&11)==0&&this.addTriangle_(e,i,n,r,a,l),(_&14)==0&&this.addTriangle_(e,i,t,r,a,o),_&&((_&13)==0&&this.addTriangle_(t,n,e,o,l,r),(_&7)==0&&this.addTriangle_(t,n,i,o,l,a))}calculateSourceExtent(){const e=K3();return this.triangles_.forEach(function(t,i,n){const r=t.source;u5(e,r[0]),u5(e,r[1]),u5(e,r[2])}),e}getTriangles(){return this.triangles_}}const Un=.5;class C7 extends b5{constructor(e,t,i,n,r,o,a,l,h,c,u,d){super(r,M.IDLE,d),this.renderEdges_=u!==void 0?u:!1,this.pixelRatio_=a,this.gutter_=l,this.canvas_=null,this.sourceTileGrid_=t,this.targetTileGrid_=n,this.wrappedTileCoord_=o||r,this.sourceTiles_=[],this.sourcesListenerKeys_=null,this.sourceZ_=0,this.clipExtent_=e.canWrapX()?e.getExtent():void 0;const f=n.getTileCoordExtent(this.wrappedTileCoord_),g=this.targetTileGrid_.getExtent();let _=this.sourceTileGrid_.getExtent();const m=g?p1(f,g):f;if(I4(m)===0){this.state=M.EMPTY;return}const p=e.getExtent();p&&(_?_=p1(_,p):_=p);const y=n.getResolution(this.wrappedTileCoord_[0]),w=Vn(e,i,m,y);if(!isFinite(w)||w<=0){this.state=M.EMPTY;return}const x=c!==void 0?c:Un;if(this.triangulation_=new Hn(e,i,m,_,w*x,y),this.triangulation_.getTriangles().length===0){this.state=M.EMPTY;return}this.sourceZ_=t.getZForResolution(w);let E=this.triangulation_.calculateSourceExtent();if(_&&(e.canWrapX()?(E[1]=o3(E[1],_[1],_[3]),E[3]=o3(E[3],_[1],_[3])):E=p1(E,_)),!I4(E))this.state=M.EMPTY;else{let T=0,R=0;e.canWrapX()&&(T=e3(p),R=Math.floor((E[0]-p[0])/T)),l6(E.slice(),e,!0).forEach(I=>{const A=t.getTileRangeForExtentAndZ(I,this.sourceZ_);for(let k=A.minX;k<=A.maxX;k++)for(let P=A.minY;P<=A.maxY;P++){const F=h(this.sourceZ_,k,P,a);if(F){const L=R*T;this.sourceTiles_.push({tile:F,offset:L})}}++R}),this.sourceTiles_.length===0&&(this.state=M.EMPTY)}}getImage(){return this.canvas_}reproject_(){const e=[];if(this.sourceTiles_.forEach(t=>{var n;const i=t.tile;if(i&&i.getState()==M.LOADED){const r=this.sourceTileGrid_.getTileCoordExtent(i.tileCoord);r[0]+=t.offset,r[2]+=t.offset;const o=(n=this.clipExtent_)==null?void 0:n.slice();o&&(o[0]+=t.offset,o[2]+=t.offset),e.push({extent:r,clipExtent:o,image:i.getImage()})}}),this.sourceTiles_.length=0,e.length===0)this.state=M.ERROR;else{const t=this.wrappedTileCoord_[0],i=this.targetTileGrid_.getTileSize(t),n=typeof i=="number"?i:i[0],r=typeof i=="number"?i:i[1],o=this.targetTileGrid_.getResolution(t),a=this.sourceTileGrid_.getResolution(this.sourceZ_),l=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);this.canvas_=Yn(n,r,this.pixelRatio_,a,this.sourceTileGrid_.getExtent(),o,l,this.triangulation_,e,this.gutter_,this.renderEdges_,this.interpolate),this.state=M.LOADED}this.changed()}load(){if(this.state==M.IDLE){this.state=M.LOADING,this.changed();let e=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(({tile:t})=>{const i=t.getState();if(i==M.IDLE||i==M.LOADING){e++;const n=j(t,z.CHANGE,r=>{const o=t.getState();(o==M.LOADED||o==M.ERROR||o==M.EMPTY)&&(t3(n),e--,e===0&&(this.unlistenSources_(),this.reproject_()))});this.sourcesListenerKeys_.push(n)}}),e===0?setTimeout(this.reproject_.bind(this),0):this.sourceTiles_.forEach(function({tile:t},i,n){t.getState()==M.IDLE&&t.load()})}}unlistenSources_(){this.sourcesListenerKeys_.forEach(t3),this.sourcesListenerKeys_=null}release(){this.canvas_&&(v5(this.canvas_.getContext("2d")),b2.push(this.canvas_),this.canvas_=null),super.release()}}class jn{constructor(e){this.highWaterMark=e!==void 0?e:2048,this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null}deleteOldest(){const e=this.pop();e instanceof F0&&e.dispose()}canExpireCache(){return this.highWaterMark>0&&this.getCount()>this.highWaterMark}expireCache(e){for(;this.canExpireCache();)this.deleteOldest()}clear(){for(;this.oldest_;)this.deleteOldest()}containsKey(e){return this.entries_.hasOwnProperty(e)}forEach(e){let t=this.oldest_;for(;t;)e(t.value_,t.key_,this),t=t.newer}get(e,t){const i=this.entries_[e];return q(i!==void 0,"Tried to get a value for a key that does not exist in the cache"),i===this.newest_||(i===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(i.newer.older=i.older,i.older.newer=i.newer),i.newer=null,i.older=this.newest_,this.newest_.newer=i,this.newest_=i),i.value_}remove(e){const t=this.entries_[e];return q(t!==void 0,"Tried to get a value for a key that does not exist in the cache"),t===this.newest_?(this.newest_=t.older,this.newest_&&(this.newest_.newer=null)):t===this.oldest_?(this.oldest_=t.newer,this.oldest_&&(this.oldest_.older=null)):(t.newer.older=t.older,t.older.newer=t.newer),delete this.entries_[e],--this.count_,t.value_}getCount(){return this.count_}getKeys(){const e=new Array(this.count_);let t=0,i;for(i=this.newest_;i;i=i.older)e[t++]=i.key_;return e}getValues(){const e=new Array(this.count_);let t=0,i;for(i=this.newest_;i;i=i.older)e[t++]=i.value_;return e}peekLast(){return this.oldest_.value_}peekLastKey(){return this.oldest_.key_}peekFirstKey(){return this.newest_.key_}peek(e){var t;return(t=this.entries_[e])==null?void 0:t.value_}pop(){const e=this.oldest_;return delete this.entries_[e.key_],e.newer&&(e.newer.older=null),this.oldest_=e.newer,this.oldest_||(this.newest_=null),--this.count_,e.value_}replace(e,t){this.get(e),this.entries_[e].value_=t}set(e,t){q(!(e in this.entries_),"Tried to set a value for a key that is used already");const i={key_:e,newer:null,older:this.newest_,value_:t};this.newest_?this.newest_.newer=i:this.oldest_=i,this.newest_=i,this.entries_[e]=i,++this.count_}setSize(e){this.highWaterMark=e}}function E0(s,e,t,i){return i!==void 0?(i[0]=s,i[1]=e,i[2]=t,i):[s,e,t]}function qn(s,e,t){return s+"/"+e+"/"+t}function $n(s){return Jn(s[0],s[1],s[2])}function Jn(s,e,t){return(e<<s)+t}function Qn(s,e){const t=s[0],i=s[1],n=s[2];if(e.getMinZoom()>t||t>e.getMaxZoom())return!1;const r=e.getFullTileRange(t);return r?r.containsXY(i,n):!0}function y4(s,e,t,i){return`${s},${qn(e,t,i)}`}function x4(s,e,t){if(!(t in s))return s[t]=new Set([e]),!0;const i=s[t],n=i.has(e);return n||i.add(e),!n}function es(s,e,t){const i=s[t];return i?i.delete(e):!1}function q8(s,e){const t=s.layerStatesArray[s.layerIndex];t.extent&&(e=p1(e,D1(t.extent,s.viewState.projection)));const i=t.layer.getRenderSource();if(!i.getWrapX()){const n=i.getTileGridForProjection(s.viewState.projection).getExtent();n&&(e=p1(e,n))}return e}class S7 extends s7{constructor(e,t){super(e),t=t||{},this.extentChanged=!0,this.renderComplete=!1,this.renderedExtent_=null,this.renderedPixelRatio,this.renderedProjection=null,this.renderedRevision_,this.renderedTiles=[],this.renderedSourceKey_,this.renderedSourceRevision_,this.tempExtent=K3(),this.tempTileRange_=new W9(0,0,0,0),this.tempTileCoord_=E0(0,0,0);const i=t.cacheSize!==void 0?t.cacheSize:512;this.tileCache_=new jn(i),this.maxStaleKeys=i*.5}getTileCache(){return this.tileCache_}getOrCreateTile(e,t,i,n){const r=this.tileCache_,a=this.getLayer().getSource(),l=y4(a.getKey(),e,t,i);let h;if(r.containsKey(l))h=r.get(l);else{if(h=a.getTile(e,t,i,n.pixelRatio,n.viewState.projection),!h)return null;r.set(l,h)}return h}getTile(e,t,i,n){const r=this.getOrCreateTile(e,t,i,n);return r||null}getData(e){const t=this.frameState;if(!t)return null;const i=this.getLayer(),n=l3(t.pixelToCoordinateTransform,e.slice()),r=i.getExtent();if(r&&!F2(r,n))return null;const o=t.viewState,a=i.getRenderSource(),l=a.getTileGridForProjection(o.projection),h=a.getTilePixelRatio(t.pixelRatio);for(let c=l.getZForResolution(o.resolution);c>=l.getMinZoom();--c){const u=l.getTileCoordForCoordAndZ(n,c),d=this.getTile(c,u[1],u[2],t);if(!d||d.getState()!==M.LOADED)continue;const f=l.getOrigin(c),g=y3(l.getTileSize(c)),_=l.getResolution(c);let m;if(d instanceof _7||d instanceof C7)m=d.getImage();else if(d instanceof Z8){if(m=Z4(d.getData()),!m)continue}else continue;const p=Math.floor(h*((n[0]-f[0])/_-u[1]*g[0])),y=Math.floor(h*((f[1]-n[1])/_-u[2]*g[1])),w=Math.round(h*a.getGutterForProjection(o.projection));return this.getImageData(m,p+w,y+w)}return null}prepareFrame(e){this.renderedProjection?e.viewState.projection!==this.renderedProjection&&(this.tileCache_.clear(),this.renderedProjection=e.viewState.projection):this.renderedProjection=e.viewState.projection;const t=this.getLayer().getSource();if(!t)return!1;const i=t.getRevision();return this.renderedRevision_?this.renderedRevision_!==i&&(this.renderedRevision_=i,this.renderedSourceKey_===t.getKey()&&this.tileCache_.clear()):this.renderedRevision_=i,!0}enqueueTiles(e,t,i,n,r){const o=e.viewState,a=this.getLayer(),l=a.getRenderSource(),h=l.getTileGridForProjection(o.projection),c=Z(l);c in e.wantedTiles||(e.wantedTiles[c]={});const u=e.wantedTiles[c],d=a.getMapInternal(),f=Math.max(i-r,h.getMinZoom(),h.getZForResolution(Math.min(a.getMaxResolution(),d?d.getView().getResolutionForZoom(Math.max(a.getMinZoom(),0)):h.getResolution(0)),l.zDirection)),g=o.rotation,_=g?o6(o.center,o.resolution,g,e.size):void 0;for(let m=i;m>=f;--m){const p=h.getTileRangeForExtentAndZ(t,m,this.tempTileRange_),y=h.getResolution(m);for(let w=p.minX;w<=p.maxX;++w)for(let x=p.minY;x<=p.maxY;++x){if(g&&!h.tileCoordIntersectsViewport([m,w,x],_))continue;const E=this.getTile(m,w,x,e);if(!E||!x4(n,E,m))continue;const R=E.getKey();if(u[R]=!0,E.getState()===M.IDLE&&!e.tileQueue.isKeyQueued(R)){const C=E0(m,w,x,this.tempTileCoord_);e.tileQueue.enqueue([E,c,h.getTileCoordCenter(C),y])}}}}findStaleTile_(e,t){const i=this.tileCache_,n=e[0],r=e[1],o=e[2],a=this.getStaleKeys();for(let l=0;l<a.length;++l){const h=y4(a[l],n,r,o);if(i.containsKey(h)){const c=i.peek(h);if(c.getState()===M.LOADED)return c.endTransition(Z(this)),x4(t,c,n),!0}}return!1}findAltTiles_(e,t,i,n){const r=e.getTileRangeForTileCoordAndZ(t,i,this.tempTileRange_);if(!r)return!1;let o=!0;const a=this.tileCache_,h=this.getLayer().getRenderSource().getKey();for(let c=r.minX;c<=r.maxX;++c)for(let u=r.minY;u<=r.maxY;++u){const d=y4(h,i,c,u);let f=!1;if(a.containsKey(d)){const g=a.peek(d);g.getState()===M.LOADED&&(x4(n,g,i),f=!0)}f||(o=!1)}return o}renderFrame(e,t){let i=!0;this.renderComplete=!0;const n=e.layerStatesArray[e.layerIndex],r=e.viewState,o=r.projection,a=r.resolution,l=r.center,h=e.pixelRatio,c=this.getLayer(),u=c.getSource(),d=u.getTileGridForProjection(o),f=d.getZForResolution(a,u.zDirection),g=d.getResolution(f),_=u.getKey();this.renderedSourceKey_?this.renderedSourceKey_!==_&&(this.prependStaleKey(this.renderedSourceKey_),this.renderedSourceKey_=_):this.renderedSourceKey_=_;let m=e.extent;const p=u.getTilePixelRatio(h);this.prepareContainer(e,t);const y=this.context.canvas.width,w=this.context.canvas.height,x=n.extent&&D1(n.extent);x&&(m=p1(m,D1(n.extent)));const E=g*y/2/p,T=g*w/2/p,R=[l[0]-E,l[1]-T,l[0]+E,l[1]+T],C={};this.renderedTiles.length=0;const I=c.getPreload();if(e.nextExtent){const B=d.getZForResolution(r.nextResolution,u.zDirection),K=q8(e,e.nextExtent);this.enqueueTiles(e,K,B,C,I)}const A=q8(e,m);if(this.enqueueTiles(e,A,f,C,0),I>0&&setTimeout(()=>{this.enqueueTiles(e,A,f-1,C,I-1)},0),!(f in C))return this.container;const k=Z(this),P=e.time;for(const B of C[f]){const K=B.getState();if(K===M.EMPTY)continue;const U=B.tileCoord;if(K===M.LOADED&&B.getAlpha(k,P)===1){B.endTransition(k);continue}if(K!==M.IDLE&&(i=!1),K!==M.ERROR&&(this.renderComplete=!1),this.findStaleTile_(U,C)){es(C,B,f),e.animate=!0;continue}if(this.findAltTiles_(d,U,f+1,C))continue;const S3=d.getMinZoom();for(let i3=f-1;i3>=S3&&!this.findAltTiles_(d,U,i3,C);--i3);}const F=g/a*h/p,L=this.getRenderContext(e);T1(this.tempTransform,y/2,w/2,F,F,0,-y/2,-w/2),n.extent&&this.clipUnrotated(L,e,x),u.getInterpolate()||(L.imageSmoothingEnabled=!1),this.preRender(L,e);const O=Object.keys(C).map(Number);O.sort(e1);let b;const D=[],W=[];for(let B=O.length-1;B>=0;--B){const K=O[B],U=u.getTilePixelSize(K,h,o),f3=d.getResolution(K)/g,S3=U[0]*f3*F,i3=U[1]*f3*F,x3=d.getTileCoordForCoordAndZ(X1(R),K),T3=d.getTileCoordExtent(x3),M3=l3(this.tempTransform,[p*(T3[0]-R[0])/g,p*(R[3]-T3[3])/g]),Z1=p*u.getGutterForProjection(o);for(const g3 of C[K]){if(g3.getState()!==M.LOADED)continue;const k5=g3.tileCoord,O5=x3[1]-k5[1],G5=Math.round(M3[0]-(O5-1)*S3),I1=x3[2]-k5[2],j2=Math.round(M3[1]-(I1-1)*i3),U3=Math.round(M3[0]-O5*S3),j3=Math.round(M3[1]-I1*i3),c2=G5-U3,H1=j2-j3,u2=O.length===1;let q2=!1;b=[U3,j3,U3+c2,j3,U3+c2,j3+H1,U3,j3+H1];for(let a1=0,U1=D.length;a1<U1;++a1)if(!u2&&K<W[a1]){const _3=D[a1];r3([U3,j3,U3+c2,j3+H1],[_3[0],_3[3],_3[4],_3[7]])&&(q2||(L.save(),q2=!0),L.beginPath(),L.moveTo(b[0],b[1]),L.lineTo(b[2],b[3]),L.lineTo(b[4],b[5]),L.lineTo(b[6],b[7]),L.moveTo(_3[6],_3[7]),L.lineTo(_3[4],_3[5]),L.lineTo(_3[2],_3[3]),L.lineTo(_3[0],_3[1]),L.clip())}D.push(b),W.push(K),this.drawTile(g3,e,U3,j3,c2,H1,Z1,u2),q2&&L.restore(),this.renderedTiles.unshift(g3),this.updateUsedTiles(e.usedTiles,u,g3)}}if(this.renderedResolution=g,this.extentChanged=!this.renderedExtent_||!D2(this.renderedExtent_,R),this.renderedExtent_=R,this.renderedPixelRatio=h,this.postRender(this.context,e),n.extent&&L.restore(),L.imageSmoothingEnabled=!0,this.renderComplete){const B=(K,U)=>{const v=Z(u),f3=U.wantedTiles[v],S3=f3?Object.keys(f3).length:0;this.updateCacheSize(S3),this.tileCache_.expireCache()};e.postRenderFunctions.push(B)}return!this.renderComplete&&!i&&(e.animate=!0),this.container}updateCacheSize(e){this.tileCache_.highWaterMark=Math.max(this.tileCache_.highWaterMark,e*2)}drawTile(e,t,i,n,r,o,a,l){let h;if(e instanceof Z8){if(h=Z4(e.getData()),!h)throw new Error("Rendering array data is not yet supported")}else h=this.getTileImage(e);if(!h)return;const c=this.getRenderContext(t),u=Z(this),d=t.layerStatesArray[t.layerIndex],f=d.opacity*(l?e.getAlpha(u,t.time):1),g=f!==c.globalAlpha;g&&(c.save(),c.globalAlpha=f),c.drawImage(h,a,a,h.width-2*a,h.height-2*a,i,n,r,o),g&&c.restore(),f!==d.opacity?t.animate=!0:l&&e.endTransition(u)}getImage(){const e=this.context;return e?e.canvas:null}getTileImage(e){return e.getImage()}updateUsedTiles(e,t,i){const n=Z(t);n in e||(e[n]={}),e[n][i.getKey()]=!0}}const G1={PRELOAD:"preload",USE_INTERIM_TILES_ON_ERROR:"useInterimTilesOnError"};class ts extends Y0{constructor(e){e=e||{};const t=Object.assign({},e),i=e.cacheSize;delete e.cacheSize,delete t.preload,delete t.useInterimTilesOnError,super(t),this.on,this.once,this.un,this.cacheSize_=i,this.setPreload(e.preload!==void 0?e.preload:0),this.setUseInterimTilesOnError(e.useInterimTilesOnError!==void 0?e.useInterimTilesOnError:!0)}getCacheSize(){return this.cacheSize_}getPreload(){return this.get(G1.PRELOAD)}setPreload(e){this.set(G1.PRELOAD,e)}getUseInterimTilesOnError(){return this.get(G1.USE_INTERIM_TILES_ON_ERROR)}setUseInterimTilesOnError(e){this.set(G1.USE_INTERIM_TILES_ON_ERROR,e)}getData(e){return super.getData(e)}}class is extends ts{constructor(e){super(e)}createRenderer(){return new S7(this,{cacheSize:this.getCacheSize()})}}const ns={image:["Polygon","Circle","LineString","Image","Text"],hybrid:["Polygon","LineString"],vector:[]},$8={hybrid:["Image","Text","Default"],vector:["Polygon","Circle","LineString","Image","Text","Default"]};class ss extends S7{constructor(e,t){super(e,t),this.boundHandleStyleImageChange_=this.handleStyleImageChange_.bind(this),this.renderedLayerRevision_,this.renderedPixelToCoordinateTransform_=null,this.renderedRotation_,this.renderedOpacity_=1,this.tmpTransform_=B3(),this.tileClipContexts_=null}drawTile(e,t,i,n,r,o,a,l){this.updateExecutorGroup_(e,t.pixelRatio,t.viewState.projection),this.tileImageNeedsRender_(e)&&this.renderTileImage_(e,t),super.drawTile(e,t,i,n,r,o,a,l)}getTile(e,t,i,n){const r=this.getOrCreateTile(e,t,i,n);if(!r)return null;const a=n.viewState.resolution,l=n.viewHints;return(!(l[s3.ANIMATING]||l[s3.INTERACTING])||!r.wantedResolution)&&(r.wantedResolution=a),r}prepareFrame(e){const t=this.getLayer().getRevision();return this.renderedLayerRevision_!==t&&(this.renderedLayerRevision_=t,this.renderedTiles.length=0),super.prepareFrame(e)}updateExecutorGroup_(e,t,i){const n=this.getLayer(),r=n.getRevision(),o=n.getRenderOrder()||null,a=e.wantedResolution,l=e.getReplayState(n);if(!l.dirty&&l.renderedResolution===a&&l.renderedRevision==r&&l.renderedRenderOrder==o)return;const h=n.getSource(),c=!!n.getDeclutter(),u=h.getTileGrid(),f=h.getTileGridForProjection(i).getTileCoordExtent(e.wrappedTileCoord),g=h.getSourceTiles(t,i,e),_=Z(n);delete e.hitDetectionImageData[_],e.executorGroups[_]=[],l.dirty=!1;for(let m=0,p=g.length;m<p;++m){const y=g[m];if(y.getState()!=M.LOADED)continue;const w=y.tileCoord,x=u.getTileCoordExtent(w),E=p1(f,x),T=N1(E,n.getRenderBuffer()*a,this.tempExtent),R=D2(x,E)?null:T,C=new Q6(0,E,a,t),I=z4(a,t),A=function(O,b){let D;const W=O.getStyleFunction()||n.getStyleFunction();if(W&&(D=W(O,a)),D){const B=this.renderFeature(O,I,D,C,c,b);l.dirty=l.dirty||B}},k=y.getFeatures();o&&o!==l.renderedRenderOrder&&k.sort(o);for(let O=0,b=k.length;O<b;++O){const D=k[O];(!R||r3(R,D.getGeometry().getExtent()))&&A.call(this,D,O)}const P=C.finish(),F=n.getRenderMode()!=="vector"&&c&&g.length===1?null:E,L=new e7(F,a,t,h.getOverlaps(),P,n.getRenderBuffer(),!0);e.executorGroups[_].push(L)}l.renderedRevision=r,l.renderedRenderOrder=o,l.renderedResolution=a}forEachFeatureAtCoordinate(e,t,i,n,r){var w,x;const o=t.viewState.resolution,a=t.viewState.rotation;i=i??0;const l=this.getLayer(),c=l.getSource().getTileGridForProjection(t.viewState.projection),u=d5([e]);N1(u,o*i,u);const d={},f=function(E,T,R){let C=E.getId();C===void 0&&(C=Z(E));const I=d[C];if(I){if(I!==!0&&R<I.distanceSq){if(R===0)return d[C]=!0,r.splice(r.lastIndexOf(I),1),n(E,l,T);I.geometry=T,I.distanceSq=R}}else{if(R===0)return d[C]=!0,n(E,l,T);r.push(d[C]={feature:E,layer:l,geometry:T,distanceSq:R,callback:n})}},g=this.renderedTiles,_=Z(l),m=l.getDeclutter(),p=m?(x=(w=t.declutter)==null?void 0:w[m])==null?void 0:x.all().map(E=>E.value):null;let y;e:for(let E=0,T=g.length;E<T;++E){const R=g[E],C=c.getTileCoordExtent(R.wrappedTileCoord);if(!r3(C,u))continue;const I=R.executorGroups[_];for(let A=0,k=I.length;A<k;++A)if(y=I[A].forEachFeatureAtCoordinate(e,o,a,i,f,p),y)break e}return y}getFeatures(e){return this.renderedTiles.length===0?Promise.resolve([]):new Promise((t,i)=>{const n=this.getLayer(),r=n.getSource(),o=this.renderedProjection,a=o.getExtent(),l=this.renderedResolution,h=r.getTileGridForProjection(o),c=l3(this.renderedPixelToCoordinateTransform_,e.slice()),u=h.getTileCoordForCoordAndResolution(c,l).toString(),d=this.renderedTiles.find(w=>w.tileCoord.toString()===u&&w.getState()===M.LOADED);if(!d||d.loadingSourceTiles>0){t([]);return}r.getWrapX()&&o.canWrapX()&&!T2(a,h.getTileCoordExtent(d.tileCoord))&&J4(c,o);const f=Z(n),g=h.getTileCoordExtent(d.wrappedTileCoord),_=X1(g),m=[(c[0]-_[0])/l,(_[1]-c[1])/l],p=d.getSourceTiles().reduce((w,x)=>w.concat(x.getFeatures()),[]);let y=d.hitDetectionImageData[f];if(!y){const w=y3(h.getTileSize(h.getZForResolution(l,r.zDirection))),x=this.renderedRotation_,E=[this.getRenderTransform(h.getTileCoordCenter(d.wrappedTileCoord),l,0,b3,w[0]*b3,w[1]*b3,0)];y=t7(w,E,p,n.getStyleFunction(),h.getTileCoordExtent(d.wrappedTileCoord),d.getReplayState(n).renderedResolution,x),d.hitDetectionImageData[f]=y}t(i7(m,p,y))})}getFeaturesInExtent(e){const t=[],i=this.getTileCache();if(i.getCount()===0)return t;const r=this.getLayer().getSource().getTileGridForProjection(this.frameState.viewState.projection),o=r.getZForResolution(this.renderedResolution),a={};return i.forEach(l=>{if(l.tileCoord[0]!==o||l.getState()!==M.LOADED)return;const h=l.getSourceTiles();for(let c=0,u=h.length;c<u;++c){const d=h[c],f=d.getKey();if(f in a)continue;a[f]=!0;const g=d.tileCoord;if(r3(e,r.getTileCoordExtent(g))){const _=d.getFeatures();if(_)for(let m=0,p=_.length;m<p;++m){const y=_[m],w=y.getGeometry();r3(e,w.getExtent())&&t.push(y)}}}}),t}handleFontsChanged(){const e=this.getLayer();e.getVisible()&&this.renderedLayerRevision_!==void 0&&e.changed()}handleStyleImageChange_(e){this.renderIfReadyAndVisible()}renderDeclutter(e,t){var d;const i=this.context,n=i.globalAlpha;i.globalAlpha=t.opacity;const r=e.viewHints,o=!(r[s3.ANIMATING]||r[s3.INTERACTING]),a=[this.context.canvas.width,this.context.canvas.height],l=this.getLayer().getDeclutter(),h=l?(d=e.declutter)==null?void 0:d[l]:void 0,c=Z(this.getLayer()),u=this.renderedTiles;for(let f=0,g=u.length;f<g;++f){const _=u[f],m=_.executorGroups[c];if(m)for(let p=m.length-1;p>=0;--p)m[p].execute(this.context,a,this.getTileRenderTransform(_,e),e.viewState.rotation,o,m0,h)}i.globalAlpha=n}renderDeferredInternal(e){const t=this.renderedTiles,i=Z(this.getLayer()),n=t.reduce((l,h,c)=>(h.executorGroups[i].forEach(u=>l.push({executorGroup:u,index:c})),l),[]),r=n.map(({executorGroup:l})=>l.getDeferredZIndexContexts()),o={};for(let l=0,h=n.length;l<h;++l){const c=n[l].executorGroup.getDeferredZIndexContexts();for(const u in c)o[u]=!0}Object.keys(o).map(Number).sort(e1).forEach(l=>{r.forEach((h,c)=>{h[l]&&(h[l].forEach(u=>{const{executorGroup:d,index:f}=n[c],g=d.getRenderedContext(),_=g.globalAlpha;g.globalAlpha=this.renderedOpacity_;const m=this.tileClipContexts_[f];m&&m.draw(g),u.draw(g),m&&g.restore(),g.globalAlpha=_,u.clear()}),h[l].length=0)})})}getTileRenderTransform(e,t){const i=t.pixelRatio,n=t.viewState,r=n.center,o=n.resolution,a=n.rotation,l=t.size,h=Math.round(l[0]*i),c=Math.round(l[1]*i),d=this.getLayer().getSource().getTileGridForProjection(t.viewState.projection),f=e.tileCoord,g=d.getTileCoordExtent(e.wrappedTileCoord),_=d.getTileCoordExtent(f,this.tempExtent)[0]-g[0];return f9(r4(this.inversePixelTransform.slice(),1/i,1/i),this.getRenderTransform(r,o,a,i,h,c,_))}postRender(e,t){var E;const i=t.viewHints,n=!(i[s3.ANIMATING]||i[s3.INTERACTING]);this.renderedPixelToCoordinateTransform_=t.pixelToCoordinateTransform.slice(),this.renderedRotation_=t.viewState.rotation,this.renderedOpacity_=t.layerStatesArray[t.layerIndex].opacity;const r=this.getLayer(),o=r.getRenderMode(),a=e.globalAlpha;e.globalAlpha=this.renderedOpacity_;const l=r.getDeclutter(),h=l?$8[o].filter(T=>!m0.includes(T)):$8[o],c=t.viewState,u=c.rotation,d=r.getSource(),g=d.getTileGridForProjection(c.projection).getZForResolution(c.resolution,d.zDirection),_=this.renderedTiles,m=[],p=[],y=[],w=Z(r);let x=!0;for(let T=_.length-1;T>=0;--T){const R=_[T];x=x&&!R.getReplayState(r).dirty;const C=R.executorGroups[w].filter(O=>O.hasExecutors(h));if(C.length===0)continue;const I=this.getTileRenderTransform(R,t),A=R.tileCoord[0];let k=!1;const P=C[0].getClipCoords(I);let F=e,L;if(P){L=new I9,F=L.getContext();for(let O=0,b=m.length;O<b;++O)if(g!==A&&A<p[O]){const D=m[O];r3([P[0],P[3],P[4],P[7]],[D[0],D[3],D[4],D[7]])&&(k||(F.save(),k=!0),F.beginPath(),F.moveTo(P[0],P[1]),F.lineTo(P[2],P[3]),F.lineTo(P[4],P[5]),F.lineTo(P[6],P[7]),F.moveTo(D[6],D[7]),F.lineTo(D[4],D[5]),F.lineTo(D[2],D[3]),F.lineTo(D[0],D[1]),F.clip())}m.push(P),p.push(A)}for(let O=0,b=C.length;O<b;++O)C[O].execute(e,[e.canvas.width,e.canvas.height],I,u,n,h,(E=t.declutter)==null?void 0:E[l]);k&&(F===e?F.restore():y[T]=L)}e.globalAlpha=a,this.ready=x,this.tileClipContexts_=y,t.declutter||this.renderDeferredInternal(t),super.postRender(e,t)}renderFeature(e,t,i,n,r,o){if(!i)return!1;let a=!1;if(Array.isArray(i))for(let l=0,h=i.length;l<h;++l)a=f0(n,e,i[l],t,this.boundHandleStyleImageChange_,void 0,r,o)||a;else a=f0(n,e,i,t,this.boundHandleStyleImageChange_,void 0,r,o);return a}tileImageNeedsRender_(e){const t=this.getLayer();if(t.getRenderMode()==="vector")return!1;const i=e.getReplayState(t),n=t.getRevision(),r=e.wantedResolution;return i.renderedTileResolution!==r||i.renderedTileRevision!==n}renderTileImage_(e,t){const i=this.getLayer(),n=e.getReplayState(i),r=i.getRevision(),o=e.executorGroups[Z(i)];n.renderedTileRevision=r;const a=e.wrappedTileCoord,l=a[0],h=i.getSource();let c=t.pixelRatio;const d=t.viewState.projection,f=h.getTileGridForProjection(d),g=f.getResolution(e.tileCoord[0]),_=t.pixelRatio/e.wantedResolution*g,m=f.getResolution(l),p=e.getContext();c=Math.round(Math.max(c,_/c));const y=h.getTilePixelSize(l,c,d);p.canvas.width=y[0],p.canvas.height=y[1];const w=c/_;if(w!==1){const R=y8(this.tmpTransform_);r4(R,w,w),p.setTransform.apply(p,R)}const x=f.getTileCoordExtent(a,this.tempExtent),E=_/m,T=y8(this.tmpTransform_);r4(T,E,-E),at(T,-x[0],-x[3]);for(let R=0,C=o.length;R<C;++R)o[R].execute(p,[p.canvas.width*w,p.canvas.height*w],T,0,!0,ns[i.getRenderMode()],null);n.renderedTileResolution=e.wantedResolution}}class rs extends D9{constructor(e){e=e||{};const t=Object.assign({},e);delete t.preload;const i=e.cacheSize===void 0?0:e.cacheSize;delete e.cacheSize,delete t.useInterimTilesOnError,super(t),this.on,this.once,this.un,this.cacheSize_=i;const n=e.renderMode||"hybrid";q(n=="hybrid"||n=="vector","`renderMode` must be `'hybrid'` or `'vector'`"),this.renderMode_=n,this.setPreload(e.preload?e.preload:0),this.setUseInterimTilesOnError(e.useInterimTilesOnError!==void 0?e.useInterimTilesOnError:!0),this.getBackground,this.setBackground}createRenderer(){return new ss(this,{cacheSize:this.cacheSize_})}getFeatures(e){return super.getFeatures(e)}getFeaturesInExtent(e){return this.getRenderer().getFeaturesInExtent(e)}getRenderMode(){return this.renderMode_}getPreload(){return this.get(G1.PRELOAD)}getUseInterimTilesOnError(){return this.get(G1.USE_INTERIM_TILES_ON_ERROR)}setPreload(e){this.set(G1.PRELOAD,e)}setUseInterimTilesOnError(e){this.set(G1.USE_INTERIM_TILES_ON_ERROR,e)}}const y2=[0,0,0],P1=5;class B9{constructor(e){this.minZoom=e.minZoom!==void 0?e.minZoom:0,this.resolutions_=e.resolutions,q(We(this.resolutions_,(n,r)=>r-n),"`resolutions` must be sorted in descending order");let t;if(!e.origins){for(let n=0,r=this.resolutions_.length-1;n<r;++n)if(!t)t=this.resolutions_[n]/this.resolutions_[n+1];else if(this.resolutions_[n]/this.resolutions_[n+1]!==t){t=void 0;break}}this.zoomFactor_=t,this.maxZoom=this.resolutions_.length-1,this.origin_=e.origin!==void 0?e.origin:null,this.origins_=null,e.origins!==void 0&&(this.origins_=e.origins,q(this.origins_.length==this.resolutions_.length,"Number of `origins` and `resolutions` must be equal"));const i=e.extent;i!==void 0&&!this.origin_&&!this.origins_&&(this.origin_=X1(i)),q(!this.origin_&&this.origins_||this.origin_&&!this.origins_,"Either `origin` or `origins` must be configured, never both"),this.tileSizes_=null,e.tileSizes!==void 0&&(this.tileSizes_=e.tileSizes,q(this.tileSizes_.length==this.resolutions_.length,"Number of `tileSizes` and `resolutions` must be equal")),this.tileSize_=e.tileSize!==void 0?e.tileSize:this.tileSizes_?null:b9,q(!this.tileSize_&&this.tileSizes_||this.tileSize_&&!this.tileSizes_,"Either `tileSize` or `tileSizes` must be configured, never both"),this.extent_=i!==void 0?i:null,this.fullTileRanges_=null,this.tmpSize_=[0,0],this.tmpExtent_=[0,0,0,0],e.sizes!==void 0?this.fullTileRanges_=e.sizes.map((n,r)=>{const o=new W9(Math.min(0,n[0]),Math.max(n[0]-1,-1),Math.min(0,n[1]),Math.max(n[1]-1,-1));if(i){const a=this.getTileRangeForExtentAndZ(i,r);o.minX=Math.max(a.minX,o.minX),o.maxX=Math.min(a.maxX,o.maxX),o.minY=Math.max(a.minY,o.minY),o.maxY=Math.min(a.maxY,o.maxY)}return o}):i&&this.calculateTileRanges_(i)}forEachTileCoord(e,t,i){const n=this.getTileRangeForExtentAndZ(e,t);for(let r=n.minX,o=n.maxX;r<=o;++r)for(let a=n.minY,l=n.maxY;a<=l;++a)i([t,r,a])}forEachTileCoordParentTileRange(e,t,i,n){let r,o,a,l=null,h=e[0]-1;for(this.zoomFactor_===2?(o=e[1],a=e[2]):l=this.getTileCoordExtent(e,n);h>=this.minZoom;){if(o!==void 0&&a!==void 0?(o=Math.floor(o/2),a=Math.floor(a/2),r=p2(o,o,a,a,i)):r=this.getTileRangeForExtentAndZ(l,h,i),t(h,r))return!0;--h}return!1}getExtent(){return this.extent_}getMaxZoom(){return this.maxZoom}getMinZoom(){return this.minZoom}getOrigin(e){return this.origin_?this.origin_:this.origins_[e]}getResolution(e){return this.resolutions_[e]}getResolutions(){return this.resolutions_}getTileCoordChildTileRange(e,t,i){if(e[0]<this.maxZoom){if(this.zoomFactor_===2){const r=e[1]*2,o=e[2]*2;return p2(r,r+1,o,o+1,t)}const n=this.getTileCoordExtent(e,i||this.tmpExtent_);return this.getTileRangeForExtentAndZ(n,e[0]+1,t)}return null}getTileRangeForTileCoordAndZ(e,t,i){if(t>this.maxZoom||t<this.minZoom)return null;const n=e[0],r=e[1],o=e[2];if(t===n)return p2(r,o,r,o,i);if(this.zoomFactor_){const l=Math.pow(this.zoomFactor_,t-n),h=Math.floor(r*l),c=Math.floor(o*l);if(t<n)return p2(h,h,c,c,i);const u=Math.floor(l*(r+1))-1,d=Math.floor(l*(o+1))-1;return p2(h,u,c,d,i)}const a=this.getTileCoordExtent(e,this.tmpExtent_);return this.getTileRangeForExtentAndZ(a,t,i)}getTileRangeForExtentAndZ(e,t,i){this.getTileCoordForXYAndZ_(e[0],e[3],t,!1,y2);const n=y2[1],r=y2[2];this.getTileCoordForXYAndZ_(e[2],e[1],t,!0,y2);const o=y2[1],a=y2[2];return p2(n,o,r,a,i)}getTileCoordCenter(e){const t=this.getOrigin(e[0]),i=this.getResolution(e[0]),n=y3(this.getTileSize(e[0]),this.tmpSize_);return[t[0]+(e[1]+.5)*n[0]*i,t[1]-(e[2]+.5)*n[1]*i]}getTileCoordExtent(e,t){const i=this.getOrigin(e[0]),n=this.getResolution(e[0]),r=y3(this.getTileSize(e[0]),this.tmpSize_),o=i[0]+e[1]*r[0]*n,a=i[1]-(e[2]+1)*r[1]*n,l=o+r[0]*n,h=a+r[1]*n;return w1(o,a,l,h,t)}getTileCoordForCoordAndResolution(e,t,i){return this.getTileCoordForXYAndResolution_(e[0],e[1],t,!1,i)}getTileCoordForXYAndResolution_(e,t,i,n,r){const o=this.getZForResolution(i),a=i/this.getResolution(o),l=this.getOrigin(o),h=y3(this.getTileSize(o),this.tmpSize_);let c=a*(e-l[0])/i/h[0],u=a*(l[1]-t)/i/h[1];return n?(c=B5(c,P1)-1,u=B5(u,P1)-1):(c=W5(c,P1),u=W5(u,P1)),E0(o,c,u,r)}getTileCoordForXYAndZ_(e,t,i,n,r){const o=this.getOrigin(i),a=this.getResolution(i),l=y3(this.getTileSize(i),this.tmpSize_);let h=(e-o[0])/a/l[0],c=(o[1]-t)/a/l[1];return n?(h=B5(h,P1)-1,c=B5(c,P1)-1):(h=W5(h,P1),c=W5(c,P1)),E0(i,h,c,r)}getTileCoordForCoordAndZ(e,t,i){return this.getTileCoordForXYAndZ_(e[0],e[1],t,!1,i)}getTileCoordResolution(e){return this.resolutions_[e[0]]}getTileSize(e){return this.tileSize_?this.tileSize_:this.tileSizes_[e]}getFullTileRange(e){return this.fullTileRanges_?this.fullTileRanges_[e]:this.extent_?this.getTileRangeForExtentAndZ(this.extent_,e):null}getZForResolution(e,t){const i=h9(this.resolutions_,e,t||0);return o3(i,this.minZoom,this.maxZoom)}tileCoordIntersectsViewport(e,t){return z6(t,0,t.length,2,this.getTileCoordExtent(e))}calculateTileRanges_(e){const t=this.resolutions_.length,i=new Array(t);for(let n=this.minZoom;n<t;++n)i[n]=this.getTileRangeForExtentAndZ(e,n);this.fullTileRanges_=i}}function T7(s){let e=s.getDefaultTileGrid();return e||(e=ls(s),s.setDefaultTileGrid(e)),e}function os(s,e,t){const i=e[0],n=s.getTileCoordCenter(e),r=Z0(t);if(!F2(r,n)){const o=e3(r),a=Math.ceil((r[0]-n[0])/o);return n[0]+=o*a,s.getTileCoordForCoordAndZ(n,i)}return e}function as(s,e,t,i){i=i!==void 0?i:"top-left";const n=I7(s,e,t);return new B9({extent:s,origin:B7(s,i),resolutions:n,tileSize:t})}function R7(s){const e=s||{},t=e.extent||c3("EPSG:3857").getExtent(),i={extent:t,minZoom:e.minZoom,tileSize:e.tileSize,resolutions:I7(t,e.maxZoom,e.tileSize,e.maxResolution)};return new B9(i)}function I7(s,e,t,i){e=e!==void 0?e:f7,t=y3(t!==void 0?t:b9);const n=C3(s),r=e3(s);i=i>0?i:Math.max(r/t[0],n/t[1]);const o=e+1,a=new Array(o);for(let l=0;l<o;++l)a[l]=i/Math.pow(2,l);return a}function ls(s,e,t,i){const n=Z0(s);return as(n,e,t,i)}function Z0(s){s=c3(s);let e=s.getExtent();if(!e){const t=180*Q4.degrees/s.getMetersPerUnit();e=w1(-t,-t,t,t)}return e}const hs=/\{z\}/g,cs=/\{x\}/g,us=/\{y\}/g,ds=/\{-y\}/g;function fs(s,e,t,i,n){return s.replace(hs,e.toString()).replace(cs,t.toString()).replace(us,i.toString()).replace(ds,function(){if(n===void 0)throw new Error("If the URL template has a {-y} placeholder, the grid extent must be known");return(n-i).toString()})}function gs(s){const e=[];let t=/\{([a-z])-([a-z])\}/.exec(s);if(t){const i=t[1].charCodeAt(0),n=t[2].charCodeAt(0);let r;for(r=i;r<=n;++r)e.push(s.replace(t[0],String.fromCharCode(r)));return e}if(t=/\{(\d+)-(\d+)\}/.exec(s),t){const i=parseInt(t[2],10);for(let n=parseInt(t[1],10);n<=i;n++)e.push(s.replace(t[0],n.toString()));return e}return e.push(s),e}function _s(s,e){return function(t,i,n){if(!t)return;let r;const o=t[0];if(e){const a=e.getFullTileRange(o);a&&(r=a.getHeight()-1)}return fs(s,o,t[1],t[2],r)}}function ms(s,e){const t=s.length,i=new Array(t);for(let n=0;n<t;++n)i[n]=_s(s[n],e);return ps(i)}function ps(s){return s.length===1?s[0]:function(e,t,i){if(!e)return;const n=$n(e),r=M2(n,s.length);return s[r](e,t,i)}}class ys extends J6{constructor(e){super({attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:e.projection,state:e.state,wrapX:e.wrapX,interpolate:e.interpolate}),this.on,this.once,this.un,this.tilePixelRatio_=e.tilePixelRatio!==void 0?e.tilePixelRatio:1,this.tileGrid=e.tileGrid!==void 0?e.tileGrid:null;const t=[256,256];this.tileGrid&&y3(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()),t),this.tmpSize=[0,0],this.key_=e.key||Z(this),this.tileOptions={transition:e.transition,interpolate:e.interpolate},this.zDirection=e.zDirection?e.zDirection:0}getGutterForProjection(e){return 0}getKey(){return this.key_}setKey(e){this.key_!==e&&(this.key_=e,this.changed())}getResolutions(e){const t=e?this.getTileGridForProjection(e):this.tileGrid;return t?t.getResolutions():null}getTile(e,t,i,n,r){return Y()}getTileGrid(){return this.tileGrid}getTileGridForProjection(e){return this.tileGrid?this.tileGrid:T7(e)}getTilePixelRatio(e){return this.tilePixelRatio_}getTilePixelSize(e,t,i){const n=this.getTileGridForProjection(i),r=this.getTilePixelRatio(t),o=y3(n.getTileSize(e),this.tmpSize);return r==1?o:tt(o,r,this.tmpSize)}getTileCoordForTileUrlFunction(e,t){const i=t!==void 0?t:this.getProjection(),n=t!==void 0?this.getTileGridForProjection(i):this.tileGrid||this.getTileGridForProjection(i);return this.getWrapX()&&i.isGlobal()&&(e=os(n,e,i)),Qn(e,n)?e:null}clear(){}refresh(){this.clear(),super.refresh()}}class xs extends r1{constructor(e,t){super(e),this.tile=t}}const E4={TILELOADSTART:"tileloadstart",TILELOADEND:"tileloadend",TILELOADERROR:"tileloaderror"};class H0 extends ys{constructor(e){super({attributions:e.attributions,cacheSize:e.cacheSize,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate,key:e.key,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection}),this.generateTileUrlFunction_=this.tileUrlFunction===H0.prototype.tileUrlFunction,this.tileLoadFunction=e.tileLoadFunction,e.tileUrlFunction&&(this.tileUrlFunction=e.tileUrlFunction),this.urls=null,e.urls?this.setUrls(e.urls):e.url&&this.setUrl(e.url),this.tileLoadingKeys_={}}getTileLoadFunction(){return this.tileLoadFunction}getTileUrlFunction(){return Object.getPrototypeOf(this).tileUrlFunction===this.tileUrlFunction?this.tileUrlFunction.bind(this):this.tileUrlFunction}getUrls(){return this.urls}handleTileChange(e){const t=e.target,i=Z(t),n=t.getState();let r;n==M.LOADING?(this.tileLoadingKeys_[i]=!0,r=E4.TILELOADSTART):i in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[i],r=n==M.ERROR?E4.TILELOADERROR:n==M.LOADED?E4.TILELOADEND:void 0),r!=null&&this.dispatchEvent(new xs(r,t))}setTileLoadFunction(e){this.tileLoadFunction=e,this.changed()}setTileUrlFunction(e,t){this.tileUrlFunction=e,typeof t<"u"?this.setKey(t):this.changed()}setUrl(e){const t=gs(e);this.urls=t,this.setUrls(t)}setUrls(e){this.urls=e;const t=e.join(`
`);this.generateTileUrlFunction_?this.setTileUrlFunction(ms(e,this.tileGrid),t):this.setKey(t)}tileUrlFunction(e,t,i){}}class Es extends H0{constructor(e){super({attributions:e.attributions,cacheSize:e.cacheSize,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction?e.tileLoadFunction:ws,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate!==void 0?e.interpolate:!0,key:e.key,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection}),this.crossOrigin=e.crossOrigin!==void 0?e.crossOrigin:null,this.tileClass=e.tileClass!==void 0?e.tileClass:_7,this.tileGridForProjection={},this.reprojectionErrorThreshold_=e.reprojectionErrorThreshold,this.renderReprojectionEdges_=!1}getGutterForProjection(e){return this.getProjection()&&e&&!n0(this.getProjection(),e)?0:this.getGutter()}getGutter(){return 0}getKey(){let e=super.getKey();return this.getInterpolate()||(e+=":disable-interpolation"),e}getTileGridForProjection(e){const t=this.getProjection();if(this.tileGrid&&(!t||n0(t,e)))return this.tileGrid;const i=Z(e);return i in this.tileGridForProjection||(this.tileGridForProjection[i]=T7(e)),this.tileGridForProjection[i]}createTile_(e,t,i,n,r,o){const a=[e,t,i],l=this.getTileCoordForTileUrlFunction(a,r),h=l?this.tileUrlFunction(l,n,r):void 0,c=new this.tileClass(a,h!==void 0?M.IDLE:M.EMPTY,h!==void 0?h:"",this.crossOrigin,this.tileLoadFunction,this.tileOptions);return c.key=o,c.addEventListener(z.CHANGE,this.handleTileChange.bind(this)),c}getTile(e,t,i,n,r){const o=this.getProjection();if(!o||!r||n0(o,r))return this.getTileInternal(e,t,i,n,o||r);const a=[e,t,i],l=this.getKey(),h=this.getTileGridForProjection(o),c=this.getTileGridForProjection(r),u=this.getTileCoordForTileUrlFunction(a,r),d=new C7(o,h,r,c,a,u,this.getTilePixelRatio(n),this.getGutter(),(f,g,_,m)=>this.getTileInternal(f,g,_,m,o),this.reprojectionErrorThreshold_,this.renderReprojectionEdges_,this.tileOptions);return d.key=l,d}getTileInternal(e,t,i,n,r){const o=this.getKey();return this.createTile_(e,t,i,n,r,o)}setRenderReprojectionEdges(e){this.renderReprojectionEdges_!=e&&(this.renderReprojectionEdges_=e,this.changed())}setTileGridForProjection(e,t){const i=c3(e);if(i){const n=Z(i);n in this.tileGridForProjection||(this.tileGridForProjection[n]=t)}}}function ws(s,e){s.getImage().src=e}class Cs extends Es{constructor(e){e=e||{};const t=e.projection!==void 0?e.projection:"EPSG:3857",i=e.tileGrid!==void 0?e.tileGrid:R7({extent:Z0(t),maxResolution:e.maxResolution,maxZoom:e.maxZoom,minZoom:e.minZoom,tileSize:e.tileSize});super({attributions:e.attributions,cacheSize:e.cacheSize,crossOrigin:e.crossOrigin,interpolate:e.interpolate,projection:t,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileGrid:i,tileLoadFunction:e.tileLoadFunction,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX!==void 0?e.wrapX:!0,transition:e.transition,attributionsCollapsible:e.attributionsCollapsible,zDirection:e.zDirection}),this.gutter_=e.gutter!==void 0?e.gutter:0}getGutter(){return this.gutter_}}class Ss extends H0{constructor(e){const t=e.projection||"EPSG:3857",i=e.extent||Z0(t),n=e.tileGrid||R7({extent:i,maxResolution:e.maxResolution,maxZoom:e.maxZoom!==void 0?e.maxZoom:22,minZoom:e.minZoom,tileSize:e.tileSize||512});super({attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,cacheSize:e.cacheSize,interpolate:!0,projection:t,state:e.state,tileGrid:n,tileLoadFunction:e.tileLoadFunction?e.tileLoadFunction:Ts,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX===void 0?!0:e.wrapX,transition:e.transition,zDirection:e.zDirection===void 0?1:e.zDirection}),this.format_=e.format?e.format:null,this.tileKeysBySourceTileUrl_={},this.sourceTiles_={},this.overlaps_=e.overlaps==null?!0:e.overlaps,this.tileClass=e.tileClass?e.tileClass:Wn,this.tileGrids_={}}getOverlaps(){return this.overlaps_}getSourceTiles(e,t,i){if(i.getState()===M.IDLE){i.setState(M.LOADING);const n=i.wrappedTileCoord,r=this.getTileGridForProjection(t),o=r.getTileCoordExtent(n),a=n[0],l=r.getResolution(a);N1(o,-l,o);const h=this.tileGrid,c=h.getExtent();c&&p1(o,c,o);const u=h.getZForResolution(l,this.zDirection);h.forEachTileCoord(o,u,d=>{const f=this.tileUrlFunction(d,e,t);this.sourceTiles_[f]||(this.sourceTiles_[f]=new this.tileClass(d,f?M.IDLE:M.EMPTY,f,this.format_,this.tileLoadFunction));const g=this.sourceTiles_[f];i.sourceTiles.push(g),this.tileKeysBySourceTileUrl_[f]||(this.tileKeysBySourceTileUrl_[f]=[]),this.tileKeysBySourceTileUrl_[f].push(i.getKey());const _=g.getState();if(_<M.LOADED){const m=p=>{this.handleTileChange(p);const y=g.getState();if(y===M.LOADED||y===M.ERROR){const w=g.getKey();w in i.errorTileKeys?g.getState()===M.LOADED&&delete i.errorTileKeys[w]:i.loadingSourceTiles--,y===M.ERROR?i.errorTileKeys[w]=!0:g.removeEventListener(z.CHANGE,m),i.loadingSourceTiles===0&&i.setState(r2(i.errorTileKeys)?M.LOADED:M.ERROR)}};g.addEventListener(z.CHANGE,m),i.loadingSourceTiles++}_===M.IDLE&&(g.extent=h.getTileCoordExtent(d),g.projection=t,g.resolution=h.getResolution(d[0]),g.load())}),i.loadingSourceTiles||i.setState(i.sourceTiles.some(d=>d.getState()===M.ERROR)?M.ERROR:M.LOADED)}return i.sourceTiles}removeSourceTiles(e){const t=e.getKey(),i=e.sourceTiles;for(let n=0,r=i.length;n<r;++n){const o=i[n].getTileUrl();if(!this.tileKeysBySourceTileUrl_[o])return;const a=this.tileKeysBySourceTileUrl_[o].indexOf(t);a!==-1&&(this.tileKeysBySourceTileUrl_[o].splice(a,1),this.tileKeysBySourceTileUrl_[o].length===0&&(delete this.tileKeysBySourceTileUrl_[o],delete this.sourceTiles_[o]))}}getTile(e,t,i,n,r){const o=[e,t,i];let a=this.getTileCoordForTileUrlFunction(o,r);const l=this.getTileGrid().getExtent(),h=this.getTileGridForProjection(r);if(a&&l){const d=h.getTileCoordExtent(a);N1(d,-h.getResolution(e),d),r3(l,d)||(a=null)}let c=!0;if(a!==null){const d=this.tileGrid,f=h.getResolution(e),g=d.getZForResolution(f,1),_=h.getTileCoordExtent(a);N1(_,-f,_),d.forEachTileCoord(_,g,m=>{c=c&&!this.tileUrlFunction(m,n,r)})}const u=new zn(o,c?M.EMPTY:M.IDLE,a,this.getSourceTiles.bind(this,n,r),this.removeSourceTiles.bind(this));return u.key=this.getKey(),u}getTileGridForProjection(e){const t=e.getCode();let i=this.tileGrids_[t];if(!i){const n=this.tileGrid,r=n.getResolutions().slice(),o=r.map(function(h,c){return n.getOrigin(c)}),a=r.map(function(h,c){return n.getTileSize(c)}),l=f7+1;for(let h=r.length;h<l;++h)r.push(r[h-1]/2),o.push(o[h-1]),a.push(a[h-1]);i=new B9({extent:n.getExtent(),origins:o,resolutions:r,tileSizes:a}),this.tileGrids_[t]=i}return i}getTilePixelRatio(e){return e}getTilePixelSize(e,t,i){const n=this.getTileGridForProjection(i),r=y3(n.getTileSize(e),this.tmpSize);return[Math.round(r[0]*t),Math.round(r[1]*t)]}setOverlaps(e){this.overlaps_=e,this.changed()}}function Ts(s,e){s.setLoader(function(t,i,n){U6(e,s.getFormat(),t,i,n,s.onLoad.bind(s),s.onError.bind(s))})}const Rs='&#169; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> contributors.';class Is extends Cs{constructor(e){e=e||{};let t;e.attributions!==void 0?t=e.attributions:t=[Rs];const i=e.crossOrigin!==void 0?e.crossOrigin:"anonymous",n=e.url!==void 0?e.url:"https://tile.openstreetmap.org/{z}/{x}/{y}.png";super({attributions:t,attributionsCollapsible:!1,cacheSize:e.cacheSize,crossOrigin:i,interpolate:e.interpolate,maxZoom:e.maxZoom!==void 0?e.maxZoom:19,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileLoadFunction:e.tileLoadFunction,transition:e.transition,url:n,wrapX:e.wrapX,zDirection:e.zDirection})}}class vs{constructor(){this.dataProjection=void 0,this.defaultFeatureProjection=void 0,this.featureClass=m1,this.supportedMediaTypes=null}getReadOptions(e,t){if(t){let i=t.dataProjection?c3(t.dataProjection):this.readProjection(e);t.extent&&i&&i.getUnits()==="tile-pixels"&&(i=c3(i),i.setWorldExtent(t.extent)),t={dataProjection:i,featureProjection:t.featureProjection}}return this.adaptOptions(t)}adaptOptions(e){return Object.assign({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection,featureClass:this.featureClass},e)}getType(){return Y()}readFeature(e,t){return Y()}readFeatures(e,t){return Y()}readGeometry(e,t){return Y()}readProjection(e){return Y()}writeFeature(e,t){return Y()}writeFeatures(e,t){return Y()}writeGeometry(e,t){return Y()}}function As(s,e,t){const i=t?c3(t.featureProjection):null,n=t?c3(t.dataProjection):null;let r=s;if(i&&n&&!n0(i,n)){const o=n,a=i;o.getUnits()==="tile-pixels"?r.transform(o,a):r.applyTransform(g5(o,a))}return r}const H4=65536*65536,J8=1/H4,Ms=12,Q8=typeof TextDecoder>"u"?null:new TextDecoder("utf-8"),w4=0,q5=1,s5=2,$5=5;class Ls{constructor(e=new Uint8Array(16)){this.buf=ArrayBuffer.isView(e)?e:new Uint8Array(e),this.dataView=new DataView(this.buf.buffer),this.pos=0,this.type=0,this.length=this.buf.length}readFields(e,t,i=this.length){for(;this.pos<i;){const n=this.readVarint(),r=n>>3,o=this.pos;this.type=n&7,e(r,t,this),this.pos===o&&this.skip(n)}return t}readMessage(e,t){return this.readFields(e,t,this.readVarint()+this.pos)}readFixed32(){const e=this.dataView.getUint32(this.pos,!0);return this.pos+=4,e}readSFixed32(){const e=this.dataView.getInt32(this.pos,!0);return this.pos+=4,e}readFixed64(){const e=this.dataView.getUint32(this.pos,!0)+this.dataView.getUint32(this.pos+4,!0)*H4;return this.pos+=8,e}readSFixed64(){const e=this.dataView.getUint32(this.pos,!0)+this.dataView.getInt32(this.pos+4,!0)*H4;return this.pos+=8,e}readFloat(){const e=this.dataView.getFloat32(this.pos,!0);return this.pos+=4,e}readDouble(){const e=this.dataView.getFloat64(this.pos,!0);return this.pos+=8,e}readVarint(e){const t=this.buf;let i,n;return n=t[this.pos++],i=n&127,n<128||(n=t[this.pos++],i|=(n&127)<<7,n<128)||(n=t[this.pos++],i|=(n&127)<<14,n<128)||(n=t[this.pos++],i|=(n&127)<<21,n<128)?i:(n=t[this.pos],i|=(n&15)<<28,Ps(i,e,this))}readVarint64(){return this.readVarint(!0)}readSVarint(){const e=this.readVarint();return e%2===1?(e+1)/-2:e/2}readBoolean(){return!!this.readVarint()}readString(){const e=this.readVarint()+this.pos,t=this.pos;return this.pos=e,e-t>=Ms&&Q8?Q8.decode(this.buf.subarray(t,e)):Vs(this.buf,t,e)}readBytes(){const e=this.readVarint()+this.pos,t=this.buf.subarray(this.pos,e);return this.pos=e,t}readPackedVarint(e=[],t){const i=this.readPackedEnd();for(;this.pos<i;)e.push(this.readVarint(t));return e}readPackedSVarint(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readSVarint());return e}readPackedBoolean(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readBoolean());return e}readPackedFloat(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readFloat());return e}readPackedDouble(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readDouble());return e}readPackedFixed32(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readFixed32());return e}readPackedSFixed32(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readSFixed32());return e}readPackedFixed64(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readFixed64());return e}readPackedSFixed64(e=[]){const t=this.readPackedEnd();for(;this.pos<t;)e.push(this.readSFixed64());return e}readPackedEnd(){return this.type===s5?this.readVarint()+this.pos:this.pos+1}skip(e){const t=e&7;if(t===w4)for(;this.buf[this.pos++]>127;);else if(t===s5)this.pos=this.readVarint()+this.pos;else if(t===$5)this.pos+=4;else if(t===q5)this.pos+=8;else throw new Error(`Unimplemented type: ${t}`)}writeTag(e,t){this.writeVarint(e<<3|t)}realloc(e){let t=this.length||16;for(;t<this.pos+e;)t*=2;if(t!==this.length){const i=new Uint8Array(t);i.set(this.buf),this.buf=i,this.dataView=new DataView(i.buffer),this.length=t}}finish(){return this.length=this.pos,this.pos=0,this.buf.subarray(0,this.length)}writeFixed32(e){this.realloc(4),this.dataView.setInt32(this.pos,e,!0),this.pos+=4}writeSFixed32(e){this.realloc(4),this.dataView.setInt32(this.pos,e,!0),this.pos+=4}writeFixed64(e){this.realloc(8),this.dataView.setInt32(this.pos,e&-1,!0),this.dataView.setInt32(this.pos+4,Math.floor(e*J8),!0),this.pos+=8}writeSFixed64(e){this.realloc(8),this.dataView.setInt32(this.pos,e&-1,!0),this.dataView.setInt32(this.pos+4,Math.floor(e*J8),!0),this.pos+=8}writeVarint(e){if(e=+e||0,e>268435455||e<0){bs(e,this);return}this.realloc(4),this.buf[this.pos++]=e&127|(e>127?128:0),!(e<=127)&&(this.buf[this.pos++]=(e>>>=7)&127|(e>127?128:0),!(e<=127)&&(this.buf[this.pos++]=(e>>>=7)&127|(e>127?128:0),!(e<=127)&&(this.buf[this.pos++]=e>>>7&127)))}writeSVarint(e){this.writeVarint(e<0?-e*2-1:e*2)}writeBoolean(e){this.writeVarint(+e)}writeString(e){e=String(e),this.realloc(e.length*4),this.pos++;const t=this.pos;this.pos=Ys(this.buf,e,this.pos);const i=this.pos-t;i>=128&&e6(t,i,this),this.pos=t-1,this.writeVarint(i),this.pos+=i}writeFloat(e){this.realloc(4),this.dataView.setFloat32(this.pos,e,!0),this.pos+=4}writeDouble(e){this.realloc(8),this.dataView.setFloat64(this.pos,e,!0),this.pos+=8}writeBytes(e){const t=e.length;this.writeVarint(t),this.realloc(t);for(let i=0;i<t;i++)this.buf[this.pos++]=e[i]}writeRawMessage(e,t){this.pos++;const i=this.pos;e(t,this);const n=this.pos-i;n>=128&&e6(i,n,this),this.pos=i-1,this.writeVarint(n),this.pos+=n}writeMessage(e,t,i){this.writeTag(e,s5),this.writeRawMessage(t,i)}writePackedVarint(e,t){t.length&&this.writeMessage(e,ks,t)}writePackedSVarint(e,t){t.length&&this.writeMessage(e,Os,t)}writePackedBoolean(e,t){t.length&&this.writeMessage(e,zs,t)}writePackedFloat(e,t){t.length&&this.writeMessage(e,Gs,t)}writePackedDouble(e,t){t.length&&this.writeMessage(e,Ns,t)}writePackedFixed32(e,t){t.length&&this.writeMessage(e,Ws,t)}writePackedSFixed32(e,t){t.length&&this.writeMessage(e,Bs,t)}writePackedFixed64(e,t){t.length&&this.writeMessage(e,Ks,t)}writePackedSFixed64(e,t){t.length&&this.writeMessage(e,Xs,t)}writeBytesField(e,t){this.writeTag(e,s5),this.writeBytes(t)}writeFixed32Field(e,t){this.writeTag(e,$5),this.writeFixed32(t)}writeSFixed32Field(e,t){this.writeTag(e,$5),this.writeSFixed32(t)}writeFixed64Field(e,t){this.writeTag(e,q5),this.writeFixed64(t)}writeSFixed64Field(e,t){this.writeTag(e,q5),this.writeSFixed64(t)}writeVarintField(e,t){this.writeTag(e,w4),this.writeVarint(t)}writeSVarintField(e,t){this.writeTag(e,w4),this.writeSVarint(t)}writeStringField(e,t){this.writeTag(e,s5),this.writeString(t)}writeFloatField(e,t){this.writeTag(e,$5),this.writeFloat(t)}writeDoubleField(e,t){this.writeTag(e,q5),this.writeDouble(t)}writeBooleanField(e,t){this.writeVarintField(e,+t)}}function Ps(s,e,t){const i=t.buf;let n,r;if(r=i[t.pos++],n=(r&112)>>4,r<128||(r=i[t.pos++],n|=(r&127)<<3,r<128)||(r=i[t.pos++],n|=(r&127)<<10,r<128)||(r=i[t.pos++],n|=(r&127)<<17,r<128)||(r=i[t.pos++],n|=(r&127)<<24,r<128)||(r=i[t.pos++],n|=(r&1)<<31,r<128))return x2(s,n,e);throw new Error("Expected varint not more than 10 bytes")}function x2(s,e,t){return t?e*4294967296+(s>>>0):(e>>>0)*4294967296+(s>>>0)}function bs(s,e){let t,i;if(s>=0?(t=s%4294967296|0,i=s/4294967296|0):(t=~(-s%4294967296),i=~(-s/4294967296),t^4294967295?t=t+1|0:(t=0,i=i+1|0)),s>=18446744073709552e3||s<-18446744073709552e3)throw new Error("Given varint doesn't fit into 10 bytes");e.realloc(10),Fs(t,i,e),Ds(i,e)}function Fs(s,e,t){t.buf[t.pos++]=s&127|128,s>>>=7,t.buf[t.pos++]=s&127|128,s>>>=7,t.buf[t.pos++]=s&127|128,s>>>=7,t.buf[t.pos++]=s&127|128,s>>>=7,t.buf[t.pos]=s&127}function Ds(s,e){const t=(s&7)<<4;e.buf[e.pos++]|=t|((s>>>=3)?128:0),s&&(e.buf[e.pos++]=s&127|((s>>>=7)?128:0),s&&(e.buf[e.pos++]=s&127|((s>>>=7)?128:0),s&&(e.buf[e.pos++]=s&127|((s>>>=7)?128:0),s&&(e.buf[e.pos++]=s&127|((s>>>=7)?128:0),s&&(e.buf[e.pos++]=s&127)))))}function e6(s,e,t){const i=e<=16383?1:e<=2097151?2:e<=268435455?3:Math.floor(Math.log(e)/(Math.LN2*7));t.realloc(i);for(let n=t.pos-1;n>=s;n--)t.buf[n+i]=t.buf[n]}function ks(s,e){for(let t=0;t<s.length;t++)e.writeVarint(s[t])}function Os(s,e){for(let t=0;t<s.length;t++)e.writeSVarint(s[t])}function Gs(s,e){for(let t=0;t<s.length;t++)e.writeFloat(s[t])}function Ns(s,e){for(let t=0;t<s.length;t++)e.writeDouble(s[t])}function zs(s,e){for(let t=0;t<s.length;t++)e.writeBoolean(s[t])}function Ws(s,e){for(let t=0;t<s.length;t++)e.writeFixed32(s[t])}function Bs(s,e){for(let t=0;t<s.length;t++)e.writeSFixed32(s[t])}function Ks(s,e){for(let t=0;t<s.length;t++)e.writeFixed64(s[t])}function Xs(s,e){for(let t=0;t<s.length;t++)e.writeSFixed64(s[t])}function Vs(s,e,t){let i="",n=e;for(;n<t;){const r=s[n];let o=null,a=r>239?4:r>223?3:r>191?2:1;if(n+a>t)break;let l,h,c;a===1?r<128&&(o=r):a===2?(l=s[n+1],(l&192)===128&&(o=(r&31)<<6|l&63,o<=127&&(o=null))):a===3?(l=s[n+1],h=s[n+2],(l&192)===128&&(h&192)===128&&(o=(r&15)<<12|(l&63)<<6|h&63,(o<=2047||o>=55296&&o<=57343)&&(o=null))):a===4&&(l=s[n+1],h=s[n+2],c=s[n+3],(l&192)===128&&(h&192)===128&&(c&192)===128&&(o=(r&15)<<18|(l&63)<<12|(h&63)<<6|c&63,(o<=65535||o>=1114112)&&(o=null))),o===null?(o=65533,a=1):o>65535&&(o-=65536,i+=String.fromCharCode(o>>>10&1023|55296),o=56320|o&1023),i+=String.fromCharCode(o),n+=a}return i}function Ys(s,e,t){for(let i=0,n,r;i<e.length;i++){if(n=e.charCodeAt(i),n>55295&&n<57344)if(r)if(n<56320){s[t++]=239,s[t++]=191,s[t++]=189,r=n;continue}else n=r-55296<<10|n-56320|65536,r=null;else{n>56319||i+1===e.length?(s[t++]=239,s[t++]=191,s[t++]=189):r=n;continue}else r&&(s[t++]=239,s[t++]=191,s[t++]=189,r=null);n<128?s[t++]=n:(n<2048?s[t++]=n>>6|192:(n<65536?s[t++]=n>>12|224:(s[t++]=n>>18|240,s[t++]=n>>12&63|128),s[t++]=n>>6&63|128),s[t++]=n&63|128)}return t}class Zs extends vs{constructor(e){super(),e=e||{},this.dataProjection=new v0({code:"",units:"tile-pixels"}),this.featureClass=e.featureClass?e.featureClass:P3,this.geometryName_=e.geometryName,this.layerName_=e.layerName?e.layerName:"layer",this.layers_=e.layers?e.layers:null,this.idProperty_=e.idProperty,this.supportedMediaTypes=["application/vnd.mapbox-vector-tile","application/x-protobuf"]}readRawGeometry_(e,t,i,n){e.pos=t.geometry;const r=e.readVarint()+e.pos;let o=1,a=0,l=0,h=0,c=0,u=0;for(;e.pos<r;){if(!a){const d=e.readVarint();o=d&7,a=d>>3}if(a--,o===1||o===2)l+=e.readSVarint(),h+=e.readSVarint(),o===1&&c>u&&(n.push(c),u=c),i.push(l,h),c+=2;else if(o===7)c>u&&(i.push(i[u],i[u+1]),c+=2);else throw new Error("Invalid command found in the PBF")}c>u&&(n.push(c),u=c)}createFeature_(e,t,i){const n=t.type;if(n===0)return null;let r;const o=t.properties;let a;this.idProperty_?(a=o[this.idProperty_],delete o[this.idProperty_]):a=t.id,o[this.layerName_]=t.layer.name;const l=[],h=[];this.readRawGeometry_(e,t,l,h);const c=$s(n,h.length);if(this.featureClass===P3)r=new this.featureClass(c,l,h,2,o,a),r.transform(i.dataProjection);else{let u;if(c=="Polygon"){const g=K6(l,h);u=g.length>1?new X2(l,"XY",g):new s1(l,"XY",h)}else u=c==="Point"?new i1(l,"XY"):c==="LineString"?new n1(l,"XY"):c==="MultiPoint"?new M5(l,"XY"):c==="MultiLineString"?new K2(l,"XY",h):null;const d=this.featureClass;r=new d,this.geometryName_&&r.setGeometryName(this.geometryName_);const f=As(u,!1,i);r.setGeometry(f),a!==void 0&&r.setId(a),r.setProperties(o,!0)}return r}getType(){return"arraybuffer"}readFeatures(e,t){const i=this.layers_;t=this.adaptOptions(t);const n=c3(t.dataProjection);n.setWorldExtent(t.extent),t.dataProjection=n;const r=new Ls(e),o=r.readFields(Hs,{}),a=[];for(const l in o){if(i&&!i.includes(l))continue;const h=o[l],c=h?[0,0,h.extent,h.extent]:null;n.setExtent(c);for(let u=0,d=h.length;u<d;++u){const f=qs(r,h,u),g=this.createFeature_(r,f,t);g!==null&&a.push(g)}}return a}readProjection(e){return this.dataProjection}setLayers(e){this.layers_=e}}function Hs(s,e,t){if(s===3){const i={keys:[],values:[],features:[]},n=t.readVarint()+t.pos;t.readFields(Us,i,n),i.length=i.features.length,i.length&&(e[i.name]=i)}}function Us(s,e,t){if(s===15)e.version=t.readVarint();else if(s===1)e.name=t.readString();else if(s===5)e.extent=t.readVarint();else if(s===2)e.features.push(t.pos);else if(s===3)e.keys.push(t.readString());else if(s===4){let i=null;const n=t.readVarint()+t.pos;for(;t.pos<n;)s=t.readVarint()>>3,i=s===1?t.readString():s===2?t.readFloat():s===3?t.readDouble():s===4?t.readVarint64():s===5?t.readVarint():s===6?t.readSVarint():s===7?t.readBoolean():null;e.values.push(i)}}function js(s,e,t){if(s==1)e.id=t.readVarint();else if(s==2){const i=t.readVarint()+t.pos;for(;t.pos<i;){const n=e.layer.keys[t.readVarint()],r=e.layer.values[t.readVarint()];e.properties[n]=r}}else s==3?e.type=t.readVarint():s==4&&(e.geometry=t.pos)}function qs(s,e,t){s.pos=e.features[t];const i=s.readVarint()+s.pos,n={layer:e,type:0,properties:{}};return s.readFields(js,n,i),n}function $s(s,e){let t;return s===1?t=e===1?"Point":"MultiPoint":s===2?t=e===1?"LineString":"MultiLineString":s===3&&(t="Polygon"),t}const J5={DRAWSTART:"drawstart",DRAWEND:"drawend",DRAWABORT:"drawabort"};class Q5 extends r1{constructor(e,t){super(e),this.feature=t}}function Js(s,e){const t=[];for(let i=0;i<e.length;++i){const r=e[i].getGeometry();v7(s,r,t)}return t}function e0(s,e){return y1(s[0],s[1],e[0],e[1])}function v2(s,e){const t=s.length;return e<0?s[e+t]:e>=t?s[e-t]:s[e]}function t0(s,e,t){let i,n;e<t?(i=e,n=t):(i=t,n=e);const r=Math.ceil(i),o=Math.floor(n);if(r>o){const l=A2(s,i),h=A2(s,n);return e0(l,h)}let a=0;if(i<r){const l=A2(s,i),h=v2(s,r);a+=e0(l,h)}if(o<n){const l=v2(s,o),h=A2(s,n);a+=e0(l,h)}for(let l=r;l<o-1;++l){const h=v2(s,l),c=v2(s,l+1);a+=e0(h,c)}return a}function v7(s,e,t){if(e instanceof n1){i0(s,e.getCoordinates(),!1,t);return}if(e instanceof K2){const i=e.getCoordinates();for(let n=0,r=i.length;n<r;++n)i0(s,i[n],!1,t);return}if(e instanceof s1){const i=e.getCoordinates();for(let n=0,r=i.length;n<r;++n)i0(s,i[n],!0,t);return}if(e instanceof X2){const i=e.getCoordinates();for(let n=0,r=i.length;n<r;++n){const o=i[n];for(let a=0,l=o.length;a<l;++a)i0(s,o[a],!0,t)}return}if(e instanceof g0){const i=e.getGeometries();for(let n=0;n<i.length;++n)v7(s,i[n],t);return}}const C4={index:-1,endIndex:NaN};function Qs(s,e,t,i){const n=s[0],r=s[1];let o=1/0,a=-1,l=NaN;for(let u=0;u<e.targets.length;++u){const d=e.targets[u],f=d.coordinates;let g=1/0,_;for(let m=0;m<f.length-1;++m){const p=f[m],y=f[m+1],w=A7(n,r,p,y);w.squaredDistance<g&&(g=w.squaredDistance,_=m+w.along)}g<o&&(o=g,d.ring&&e.targetIndex===u&&(d.endIndex>d.startIndex?_<d.startIndex&&(_+=f.length):d.endIndex<d.startIndex&&_>d.startIndex&&(_-=f.length)),l=_,a=u)}const h=e.targets[a];let c=h.ring;if(e.targetIndex===a&&c){const u=A2(h.coordinates,l),d=t.getPixelFromCoordinate(u);c6(d,e.startPx)>i&&(c=!1)}if(c){const u=h.coordinates,d=u.length,f=h.startIndex,g=l;if(f<g){const _=t0(u,f,g);t0(u,f,g-d)<_&&(l-=d)}else{const _=t0(u,f,g);t0(u,f,g+d)<_&&(l+=d)}}return C4.index=a,C4.endIndex=l,C4}function i0(s,e,t,i){const n=s[0],r=s[1];for(let o=0,a=e.length-1;o<a;++o){const l=e[o],h=e[o+1],c=A7(n,r,l,h);if(c.squaredDistance===0){const u=o+c.along;i.push({coordinates:e,ring:t,startIndex:u,endIndex:u});return}}}const S4={along:0,squaredDistance:0};function A7(s,e,t,i){const n=t[0],r=t[1],o=i[0],a=i[1],l=o-n,h=a-r;let c=0,u=n,d=r;return(l!==0||h!==0)&&(c=o3(((s-n)*l+(e-r)*h)/(l*l+h*h),0,1),u+=l*c,d+=h*c),S4.along=c,S4.squaredDistance=I0(y1(s,e,u,d),10),S4}function A2(s,e){const t=s.length;let i=Math.floor(e);const n=e-i;i>=t?i-=t:i<0&&(i+=t);let r=i+1;r>=t&&(r-=t);const o=s[i],a=o[0],l=o[1],h=s[r],c=h[0]-a,u=h[1]-l;return[a+c*n,l+u*n]}class er extends H2{constructor(e){const t=e;t.stopDown||(t.stopDown=Y2),super(t),this.on,this.once,this.un,this.shouldHandle_=!1,this.downPx_=null,this.downTimeout_,this.lastDragTime_,this.pointerType_,this.freehand_=!1,this.source_=e.source?e.source:null,this.features_=e.features?e.features:null,this.snapTolerance_=e.snapTolerance?e.snapTolerance:12,this.type_=e.type,this.mode_=ir(this.type_),this.stopClick_=!!e.stopClick,this.minPoints_=e.minPoints?e.minPoints:this.mode_==="Polygon"?3:2,this.maxPoints_=this.mode_==="Circle"?2:e.maxPoints?e.maxPoints:1/0,this.finishCondition_=e.finishCondition?e.finishCondition:G2,this.geometryLayout_=e.geometryLayout?e.geometryLayout:"XY";let i=e.geometryFunction;if(!i){const n=this.mode_;if(n==="Circle")i=(r,o,a)=>{const l=o||new K0([NaN,NaN]),h=V3(r[0]),c=h6(h,V3(r[r.length-1]));return l.setCenterAndRadius(h,Math.sqrt(c),this.geometryLayout_),l};else{let r;n==="Point"?r=i1:n==="LineString"?r=n1:n==="Polygon"&&(r=s1),i=(o,a,l)=>(a?n==="Polygon"?o[0].length?a.setCoordinates([o[0].concat([o[0][0]])],this.geometryLayout_):a.setCoordinates([],this.geometryLayout_):a.setCoordinates(o,this.geometryLayout_):a=new r(o,this.geometryLayout_),a)}}this.geometryFunction_=i,this.dragVertexDelay_=e.dragVertexDelay!==void 0?e.dragVertexDelay:500,this.finishCoordinate_=null,this.sketchFeature_=null,this.sketchPoint_=null,this.sketchCoords_=null,this.sketchLine_=null,this.sketchLineCoords_=null,this.squaredClickTolerance_=e.clickTolerance?e.clickTolerance*e.clickTolerance:36,this.overlay_=new k9({source:new R9({useSpatialIndex:!1,wrapX:e.wrapX?e.wrapX:!1}),style:e.style?e.style:tr(),updateWhileInteracting:!0}),this.geometryName_=e.geometryName,this.condition_=e.condition?e.condition:N9,this.freehandCondition_,e.freehand?this.freehandCondition_=Y4:this.freehandCondition_=e.freehandCondition?e.freehandCondition:y7,this.traceCondition_,this.setTrace(e.trace||!1),this.traceState_={active:!1},this.traceSource_=e.traceSource||e.source||null,this.addChangeListener(X4.ACTIVE,this.updateState_)}setTrace(e){let t;e?e===!0?t=Y4:t=e:t=En,this.traceCondition_=t}setMap(e){super.setMap(e),this.updateState_()}getOverlay(){return this.overlay_}handleEvent(e){e.originalEvent.type===z.CONTEXTMENU&&e.originalEvent.preventDefault(),this.freehand_=this.mode_!=="Point"&&this.freehandCondition_(e);let t=e.type===J.POINTERMOVE,i=!0;return!this.freehand_&&this.lastDragTime_&&e.type===J.POINTERDRAG&&(Date.now()-this.lastDragTime_>=this.dragVertexDelay_?(this.downPx_=e.pixel,this.shouldHandle_=!this.freehand_,t=!0):this.lastDragTime_=void 0,this.shouldHandle_&&this.downTimeout_!==void 0&&(clearTimeout(this.downTimeout_),this.downTimeout_=void 0)),this.freehand_&&e.type===J.POINTERDRAG&&this.sketchFeature_!==null?(this.addToDrawing_(e.coordinate),i=!1):this.freehand_&&e.type===J.POINTERDOWN?i=!1:t&&this.getPointerCount()<2?(i=e.type===J.POINTERMOVE,i&&this.freehand_?(this.handlePointerMove_(e),this.shouldHandle_&&e.originalEvent.preventDefault()):(e.originalEvent.pointerType==="mouse"||e.type===J.POINTERDRAG&&this.downTimeout_===void 0)&&this.handlePointerMove_(e)):e.type===J.DBLCLICK&&(i=!1),super.handleEvent(e)&&i}handleDownEvent(e){return this.shouldHandle_=!this.freehand_,this.freehand_?(this.downPx_=e.pixel,this.finishCoordinate_||this.startDrawing_(e.coordinate),!0):this.condition_(e)?(this.lastDragTime_=Date.now(),this.downTimeout_=setTimeout(()=>{this.handlePointerMove_(new g1(J.POINTERMOVE,e.map,e.originalEvent,!1,e.frameState))},this.dragVertexDelay_),this.downPx_=e.pixel,!0):(this.lastDragTime_=void 0,!1)}deactivateTrace_(){this.traceState_={active:!1}}toggleTraceState_(e){if(!this.traceSource_||!this.traceCondition_(e))return;if(this.traceState_.active){this.deactivateTrace_();return}const t=this.getMap(),i=t.getCoordinateFromPixel([e.pixel[0]-this.snapTolerance_,e.pixel[1]+this.snapTolerance_]),n=t.getCoordinateFromPixel([e.pixel[0]+this.snapTolerance_,e.pixel[1]-this.snapTolerance_]),r=d5([i,n]),o=this.traceSource_.getFeaturesInExtent(r);if(o.length===0)return;const a=Js(e.coordinate,o);a.length&&(this.traceState_={active:!0,startPx:e.pixel.slice(),targets:a,targetIndex:-1})}addOrRemoveTracedCoordinates_(e,t){const i=e.startIndex<=e.endIndex,n=e.startIndex<=t;i===n?i&&t>e.endIndex||!i&&t<e.endIndex?this.addTracedCoordinates_(e,e.endIndex,t):(i&&t<e.endIndex||!i&&t>e.endIndex)&&this.removeTracedCoordinates_(t,e.endIndex):(this.removeTracedCoordinates_(e.startIndex,e.endIndex),this.addTracedCoordinates_(e,e.startIndex,t))}removeTracedCoordinates_(e,t){if(e===t)return;let i=0;if(e<t){const n=Math.ceil(e);let r=Math.floor(t);r===t&&(r-=1),i=r-n+1}else{const n=Math.floor(e);let r=Math.ceil(t);r===t&&(r+=1),i=n-r+1}i>0&&this.removeLastPoints_(i)}addTracedCoordinates_(e,t,i){if(t===i)return;const n=[];if(t<i){const r=Math.ceil(t);let o=Math.floor(i);o===i&&(o-=1);for(let a=r;a<=o;++a)n.push(v2(e.coordinates,a))}else{const r=Math.floor(t);let o=Math.ceil(i);o===i&&(o+=1);for(let a=r;a>=o;--a)n.push(v2(e.coordinates,a))}n.length&&this.appendCoordinates(n)}updateTrace_(e){const t=this.traceState_;if(!t.active||t.targetIndex===-1&&c6(t.startPx,e.pixel)<this.snapTolerance_)return;const i=Qs(e.coordinate,t,this.getMap(),this.snapTolerance_);if(t.targetIndex!==i.index){if(t.targetIndex!==-1){const l=t.targets[t.targetIndex];this.removeTracedCoordinates_(l.startIndex,l.endIndex)}const a=t.targets[i.index];this.addTracedCoordinates_(a,a.startIndex,i.endIndex)}else{const a=t.targets[t.targetIndex];this.addOrRemoveTracedCoordinates_(a,i.endIndex)}t.targetIndex=i.index;const n=t.targets[t.targetIndex];n.endIndex=i.endIndex;const r=A2(n.coordinates,n.endIndex),o=this.getMap().getPixelFromCoordinate(r);e.coordinate=r,e.pixel=[Math.round(o[0]),Math.round(o[1])]}handleUpEvent(e){let t=!0;if(this.getPointerCount()===0){this.downTimeout_&&(clearTimeout(this.downTimeout_),this.downTimeout_=void 0),this.handlePointerMove_(e);const i=this.traceState_.active;if(this.toggleTraceState_(e),this.shouldHandle_){const n=!this.finishCoordinate_;n&&this.startDrawing_(e.coordinate),!n&&this.freehand_?this.finishDrawing():!this.freehand_&&(!n||this.mode_==="Point")&&(this.atFinish_(e.pixel,i)?this.finishCondition_(e)&&this.finishDrawing():this.addToDrawing_(e.coordinate)),t=!1}else this.freehand_&&this.abortDrawing()}return!t&&this.stopClick_&&e.preventDefault(),t}handlePointerMove_(e){if(this.pointerType_=e.originalEvent.pointerType,this.downPx_&&(!this.freehand_&&this.shouldHandle_||this.freehand_&&!this.shouldHandle_)){const t=this.downPx_,i=e.pixel,n=t[0]-i[0],r=t[1]-i[1],o=n*n+r*r;if(this.shouldHandle_=this.freehand_?o>this.squaredClickTolerance_:o<=this.squaredClickTolerance_,!this.shouldHandle_)return}if(!this.finishCoordinate_){this.createOrUpdateSketchPoint_(e.coordinate.slice());return}this.updateTrace_(e),this.modifyDrawing_(e.coordinate)}atFinish_(e,t){let i=!1;if(this.sketchFeature_){let n=!1,r=[this.finishCoordinate_];const o=this.mode_;if(o==="Point")i=!0;else if(o==="Circle")i=this.sketchCoords_.length===2;else if(o==="LineString")n=!t&&this.sketchCoords_.length>this.minPoints_;else if(o==="Polygon"){const a=this.sketchCoords_;n=a[0].length>this.minPoints_,r=[a[0][0],a[0][a[0].length-2]],t?r=[a[0][0]]:r=[a[0][0],a[0][a[0].length-2]]}if(n){const a=this.getMap();for(let l=0,h=r.length;l<h;l++){const c=r[l],u=a.getPixelFromCoordinate(c),d=e[0]-u[0],f=e[1]-u[1],g=this.freehand_?1:this.snapTolerance_;if(i=Math.sqrt(d*d+f*f)<=g,i){this.finishCoordinate_=c;break}}}}return i}createOrUpdateSketchPoint_(e){this.sketchPoint_?this.sketchPoint_.getGeometry().setCoordinates(e):(this.sketchPoint_=new m1(new i1(e)),this.updateSketchFeatures_())}createOrUpdateCustomSketchLine_(e){this.sketchLine_||(this.sketchLine_=new m1);const t=e.getLinearRing(0);let i=this.sketchLine_.getGeometry();i?(i.setFlatCoordinates(t.getLayout(),t.getFlatCoordinates()),i.changed()):(i=new n1(t.getFlatCoordinates(),t.getLayout()),this.sketchLine_.setGeometry(i))}startDrawing_(e){const t=this.getMap().getView().getProjection(),i=u0(this.geometryLayout_);for(;e.length<i;)e.push(0);this.finishCoordinate_=e,this.mode_==="Point"?this.sketchCoords_=e.slice():this.mode_==="Polygon"?(this.sketchCoords_=[[e.slice(),e.slice()]],this.sketchLineCoords_=this.sketchCoords_[0]):this.sketchCoords_=[e.slice(),e.slice()],this.sketchLineCoords_&&(this.sketchLine_=new m1(new n1(this.sketchLineCoords_)));const n=this.geometryFunction_(this.sketchCoords_,void 0,t);this.sketchFeature_=new m1,this.geometryName_&&this.sketchFeature_.setGeometryName(this.geometryName_),this.sketchFeature_.setGeometry(n),this.updateSketchFeatures_(),this.dispatchEvent(new Q5(J5.DRAWSTART,this.sketchFeature_))}modifyDrawing_(e){const t=this.getMap(),i=this.sketchFeature_.getGeometry(),n=t.getView().getProjection(),r=u0(this.geometryLayout_);let o,a;for(;e.length<r;)e.push(0);this.mode_==="Point"?a=this.sketchCoords_:this.mode_==="Polygon"?(o=this.sketchCoords_[0],a=o[o.length-1],this.atFinish_(t.getPixelFromCoordinate(e))&&(e=this.finishCoordinate_.slice())):(o=this.sketchCoords_,a=o[o.length-1]),a[0]=e[0],a[1]=e[1],this.geometryFunction_(this.sketchCoords_,i,n),this.sketchPoint_&&this.sketchPoint_.getGeometry().setCoordinates(e),i.getType()==="Polygon"&&this.mode_!=="Polygon"?this.createOrUpdateCustomSketchLine_(i):this.sketchLineCoords_&&this.sketchLine_.getGeometry().setCoordinates(this.sketchLineCoords_),this.updateSketchFeatures_()}addToDrawing_(e){const t=this.sketchFeature_.getGeometry(),i=this.getMap().getView().getProjection();let n,r;const o=this.mode_;return o==="LineString"||o==="Circle"?(this.finishCoordinate_=e.slice(),r=this.sketchCoords_,r.length>=this.maxPoints_&&(this.freehand_?r.pop():n=!0),r.push(e.slice()),this.geometryFunction_(r,t,i)):o==="Polygon"&&(r=this.sketchCoords_[0],r.length>=this.maxPoints_&&(this.freehand_?r.pop():n=!0),r.push(e.slice()),n&&(this.finishCoordinate_=r[0]),this.geometryFunction_(this.sketchCoords_,t,i)),this.createOrUpdateSketchPoint_(e.slice()),this.updateSketchFeatures_(),n?this.finishDrawing():this.sketchFeature_}removeLastPoints_(e){if(!this.sketchFeature_)return;const t=this.sketchFeature_.getGeometry(),i=this.getMap().getView().getProjection(),n=this.mode_;for(let r=0;r<e;++r){let o;if(n==="LineString"||n==="Circle"){if(o=this.sketchCoords_,o.splice(-2,1),o.length>=2){this.finishCoordinate_=o[o.length-2].slice();const a=this.finishCoordinate_.slice();o[o.length-1]=a,this.createOrUpdateSketchPoint_(a)}this.geometryFunction_(o,t,i),t.getType()==="Polygon"&&this.sketchLine_&&this.createOrUpdateCustomSketchLine_(t)}else if(n==="Polygon"){o=this.sketchCoords_[0],o.splice(-2,1);const a=this.sketchLine_.getGeometry();if(o.length>=2){const l=o[o.length-2].slice();o[o.length-1]=l,this.createOrUpdateSketchPoint_(l)}a.setCoordinates(o),this.geometryFunction_(this.sketchCoords_,t,i)}if(o.length===1){this.abortDrawing();break}}this.updateSketchFeatures_()}removeLastPoint(){this.removeLastPoints_(1)}finishDrawing(){const e=this.abortDrawing_();if(!e)return null;let t=this.sketchCoords_;const i=e.getGeometry(),n=this.getMap().getView().getProjection();return this.mode_==="LineString"?(t.pop(),this.geometryFunction_(t,i,n)):this.mode_==="Polygon"&&(t[0].pop(),this.geometryFunction_(t,i,n),t=i.getCoordinates()),this.type_==="MultiPoint"?e.setGeometry(new M5([t])):this.type_==="MultiLineString"?e.setGeometry(new K2([t])):this.type_==="MultiPolygon"&&e.setGeometry(new X2([t])),this.dispatchEvent(new Q5(J5.DRAWEND,e)),this.features_&&this.features_.push(e),this.source_&&this.source_.addFeature(e),e}abortDrawing_(){this.finishCoordinate_=null;const e=this.sketchFeature_;return this.sketchFeature_=null,this.sketchPoint_=null,this.sketchLine_=null,this.overlay_.getSource().clear(!0),this.deactivateTrace_(),e}abortDrawing(){const e=this.abortDrawing_();e&&this.dispatchEvent(new Q5(J5.DRAWABORT,e))}appendCoordinates(e){const t=this.mode_,i=!this.sketchFeature_;i&&this.startDrawing_(e[0]);let n;if(t==="LineString"||t==="Circle")n=this.sketchCoords_;else if(t==="Polygon")n=this.sketchCoords_&&this.sketchCoords_.length?this.sketchCoords_[0]:[];else return;i&&n.shift(),n.pop();for(let o=0;o<e.length;o++)this.addToDrawing_(e[o]);const r=e[e.length-1];this.sketchFeature_=this.addToDrawing_(r),this.modifyDrawing_(r)}extend(e){const i=e.getGeometry();this.sketchFeature_=e,this.sketchCoords_=i.getCoordinates();const n=this.sketchCoords_[this.sketchCoords_.length-1];this.finishCoordinate_=n.slice(),this.sketchCoords_.push(n.slice()),this.sketchPoint_=new m1(new i1(n)),this.updateSketchFeatures_(),this.dispatchEvent(new Q5(J5.DRAWSTART,this.sketchFeature_))}updateSketchFeatures_(){const e=[];this.sketchFeature_&&e.push(this.sketchFeature_),this.sketchLine_&&e.push(this.sketchLine_),this.sketchPoint_&&e.push(this.sketchPoint_);const t=this.overlay_.getSource();t.clear(!0),t.addFeatures(e)}updateState_(){const e=this.getMap(),t=this.getActive();(!e||!t)&&this.abortDrawing(),this.overlay_.setMap(t?e:null)}}function tr(){const s=nt();return function(e,t){return s[e.getGeometry().getType()]}}function ir(s){switch(s){case"Point":case"MultiPoint":return"Point";case"LineString":case"MultiLineString":return"LineString";case"Polygon":case"MultiPolygon":return"Polygon";case"Circle":return"Circle";default:throw new Error("Invalid type: "+s)}}const nr=[[13.1013423,52.4686467],[13.0989632,52.4688319],[13.1002527,52.4686945],[13.0983143,52.4688588],[13.0997003,52.4688032],[13.1007012,52.4687652],[13.0984935,52.468852],[13.0998784,52.4687965],[13.1008803,52.4687585],[13.0991424,52.4688252],[13.0978814,52.4687819],[13.0984042,52.4688554],[13.0997895,52.4687998],[13.1007911,52.4687618],[13.0985824,52.4688487],[13.0990531,52.4688285],[13.1009692,52.4687552],[13.0996103,52.4688066],[13.0978857,52.4688352],[13.0995231,52.4688232],[13.0986703,52.4688454],[13.1013371,52.4685907],[13.1010571,52.4687519],[13.0993192,52.4688185],[13.1013474,52.4687012],[13.0988759,52.4688485],[13.1002527,52.4686945],[13.098227,52.4688754],[13.1002582,52.4687458],[13.1006139,52.4687819],[13.0978542,52.4687286],[13.0999663,52.4687932]],sr=[[12.9705696,52.407529],[12.9698701,52.406797],[12.9701535,52.4067993],[12.9697592,52.4069939],[12.9704206,52.4069646],[12.9705692,52.4073516],[12.970207,52.4071322],[12.9697247,52.4059015],[12.9702909,52.4087073],[12.9709342,52.4084083],[12.9709854,52.4084571],[12.9708187,52.4089416],[12.9692697,52.4066685],[12.9705366,52.408055],[12.9692193,52.4081386],[12.9706297,52.4096065],[12.9707572,52.4081877],[12.9707175,52.4082566],[12.9707035,52.4092557],[12.9705764,52.4092703],[12.9706149,52.4091825],[12.9707283,52.4091685]],rr=[[13.0588736,52.3897054],[13.0584873,52.3897773],[13.0589581,52.3898741],[13.0585347,52.3899484],[13.0597694,52.3896598],[13.0599508,52.3895895]],or=[[12.9503944,52.4697484],[12.9530606,52.4721755],[12.9505267,52.4706458],[12.9508433,52.4695389]],ar=[[13.009563,52.4248265],[13.0096287,52.4253976],[13.0092064,52.4247483],[13.0094816,52.4252149],[13.0104196,52.4249649],[13.010095,52.4253788],[13.0098209,52.4251019],[13.0092548,52.4249626],[13.0085981,52.4250165],[13.0101337,52.4247812],[13.0104908,52.4250419],[13.0086161,52.4247092],[13.0082561,52.4248466],[13.0083632,52.4248099],[13.0095254,52.4245118]],lr=[[13.0376895,52.4212362],[13.0375903,52.4212757],[13.0373586,52.421371],[13.0370676,52.4214812],[13.0367717,52.4215913],[13.0365008,52.4217045],[13.03623,52.4218391],[13.0358538,52.4215209],[13.0358989,52.4219002],[13.035598,52.4216005],[13.0355579,52.4219553],[13.0353271,52.4221664],[13.0351165,52.4222184],[13.0348105,52.4222704],[13.0344493,52.4222428],[13.0345396,52.4226038],[13.0351114,52.4226252],[13.0353171,52.422509],[13.0355077,52.4223897],[13.0356833,52.4223315],[13.035904,52.4222642],[13.0367165,52.4219216],[13.0370024,52.4221847],[13.0362099,52.4220562],[13.0362751,52.4220226],[13.0369974,52.4217779],[13.0372181,52.4217442],[13.0373535,52.4217014],[13.0376194,52.4215546],[13.0378902,52.4214506],[13.0382035,52.4217909]],hr=[],cr=[[13.0970823,52.383822],[13.0976322,52.3835598],[13.0980606,52.3837938],[13.0980432,52.3833812],[13.0992322,52.3835886],[13.0985291,52.383527],[13.098679,52.3832555],[13.0994191,52.3833842],[13.0996349,52.3834625],[13.099142,52.3835467],[13.0984533,52.3838405],[13.0984818,52.3838764],[13.0999226,52.3833278],[13.0979722,52.3832925],[13.0993386,52.3834983]],ur=[[12.99251,52.4128277],[12.994821,52.4092885],[12.9942844,52.4087223],[12.9938081,52.4122566],[12.9950509,52.4088247],[12.9943884,52.4102348],[12.9945188,52.409878],[12.9939579,52.4119714],[12.9946995,52.409531],[12.992728,52.4127797],[12.9943349,52.4104047],[12.9944459,52.4100874],[12.988728,52.4135169],[12.988456,52.4126577],[12.9890276,52.4128997],[12.9884762,52.4124629],[12.9886473,52.4133323],[12.9887351,52.4129612],[12.9886847,52.4128915],[12.9871122,52.4110638],[12.9871872,52.4113198],[12.9873783,52.4101486],[12.994321,52.4093468],[12.9942363,52.4095178],[12.9947918,52.4093467],[12.994274,52.4094025],[12.9943429,52.4092501],[12.9947483,52.4094249],[12.9943744,52.4091271],[12.9954324,52.4084648],[12.9953433,52.4084794],[12.9947111,52.4089633],[12.9947546,52.4090098],[12.9948683,52.4091015],[12.9948837,52.4091568],[12.9943862,52.4091851],[12.9948041,52.4087483],[12.9948804,52.4087177],[12.9951304,52.4085172],[12.9950478,52.4085347],[12.9943652,52.4096265],[12.9943415,52.4096842],[12.9939363,52.4100945],[12.9939238,52.410153],[12.9940979,52.4102294],[12.9940876,52.4102874],[12.9937942,52.4106376],[12.9937796,52.4106948],[12.9939514,52.4109029],[12.9939403,52.410971],[12.9937484,52.4110599],[12.9937261,52.4111158],[12.9943181,52.4104668],[12.9943044,52.4105211],[12.9937141,52.411257],[12.9936819,52.411312],[12.9936668,52.4114308],[12.9936209,52.4114859],[12.9941975,52.4110166],[12.9941841,52.4110726],[12.994164,52.4112057],[12.9941501,52.4112596],[12.9941331,52.4113644],[12.9941192,52.4114268],[12.9940684,52.4115705],[12.9940416,52.4116252],[12.9942867,52.4106491],[12.9942736,52.4107032],[12.9942502,52.4108185],[12.9942399,52.4108758],[12.9935489,52.4119834],[12.9934815,52.4120393],[12.9934131,52.4120949],[12.9932179,52.4122802],[12.9931446,52.4123172],[12.9937576,52.4123112],[12.9936926,52.4123588],[12.9935787,52.4124478],[12.9935025,52.4124893],[12.9933768,52.4125607],[12.9932901,52.4125938],[12.9931292,52.4126625],[12.9930494,52.4126826],[12.9883387,52.4118114],[12.9880937,52.4113859],[12.9884064,52.4119823],[12.9882168,52.4115461],[12.9920717,52.4129101],[12.991906,52.4129467],[12.9918115,52.4129609],[12.9916317,52.4129779],[12.9915481,52.4129809],[12.9902442,52.4128883],[12.9901392,52.4128947],[12.9928272,52.4124591],[12.9927467,52.4124808],[12.992549,52.4125365],[12.9924672,52.4125571],[12.9922602,52.412599],[12.9921712,52.4126158],[12.9918552,52.4126725],[12.9917687,52.4126845],[12.9914865,52.4127231],[12.9913858,52.412719],[12.9911431,52.4127052],[12.991046,52.4127019],[12.9924196,52.412851],[12.9923325,52.4128668],[12.9921537,52.412897],[12.9899164,52.4129422],[12.9898302,52.4129614],[12.9896391,52.4130216],[12.9895509,52.4130486],[12.9893827,52.4131062],[12.9892839,52.4131344],[12.989118,52.4131908],[12.9890339,52.4132113],[12.9887681,52.4136846],[12.9887881,52.4137382],[12.9906275,52.4126333],[12.9905318,52.4126326],[12.990298,52.4126286],[12.990215,52.4126286],[12.9899665,52.412633],[12.9898883,52.412643],[12.9894949,52.4127602],[12.9894058,52.4127828],[12.987502,52.4107101],[12.9874049,52.4103749],[12.9886243,52.4138833],[12.9886063,52.4138289],[12.9885636,52.4137077],[12.98854,52.4136534],[12.9884863,52.4135354],[12.9884695,52.4134852],[12.9884258,52.4133672],[12.9884022,52.4133098],[12.9883618,52.4131951],[12.9883419,52.4131484],[12.9883014,52.4130248],[12.9882812,52.4129664],[12.9870666,52.4107335],[12.9870484,52.410675],[12.9870176,52.4106042],[12.9869981,52.4105452],[12.9869368,52.4103654],[12.986925,52.4103089],[12.9869047,52.4100853],[12.9882504,52.4127602],[12.9882706,52.4128186],[12.9882217,52.4126464],[12.9882015,52.412588],[12.9881439,52.4124756],[12.9881237,52.4124172],[12.9880705,52.4123129],[12.9880503,52.4122545],[12.9879837,52.4120783],[12.9880039,52.4121367],[12.9878614,52.4119007],[12.9878816,52.4119591],[12.9878061,52.4117951],[12.9877859,52.4117367],[12.9877038,52.4116094],[12.9876836,52.411551],[12.9876016,52.4114616],[12.9875814,52.4114032],[12.99406,52.4104462],[12.9940412,52.410494]],dr=[[12.9903336,52.4051971],[12.9907134,52.405517],[12.9907928,52.4086956],[12.9906268,52.4089306],[12.9920905,52.4086718],[12.9917571,52.4088777],[12.9919376,52.4090185],[12.9912805,52.4088144],[12.9912359,52.4075851],[12.9913623,52.4077935],[12.9907145,52.40806],[12.9904662,52.4073956],[12.9913664,52.408167],[12.9907208,52.4067503],[12.990593,52.4065496],[12.990083,52.4067544],[12.9903675,52.4073278],[12.990738,52.4071281],[12.9900819,52.406589],[12.9900943,52.4063329],[12.9900796,52.4059461],[12.9900066,52.4061441],[12.9906783,52.4062852],[12.9910825,52.4076137],[12.9912018,52.4078233],[12.9910993,52.4056816],[12.9911882,52.4054675],[12.9896452,52.4071091],[12.9903774,52.4068801],[12.9907939,52.4053027],[12.990071,52.4071308],[12.9907152,52.4053238]],fr=[[13.1083845,52.3816686],[13.1078731,52.3804393],[13.108567,52.3812252],[13.1081938,52.3811729],[13.1081965,52.3803547]],gr=[[13.0663276,52.4265605],[13.0661159,52.4266036],[13.0647548,52.4282315],[13.0651578,52.4261474],[13.0652862,52.4267333],[13.0656503,52.4267333],[13.0641723,52.4268139],[13.0640238,52.4269934],[13.0638099,52.4267077],[13.0649711,52.4278913],[13.0644671,52.4283597],[13.0642678,52.42849],[13.0649073,52.4263758],[13.0646236,52.4266284],[13.0654663,52.4263626],[13.0634285,52.4265838],[13.0632155,52.4267384],[13.0631448,52.4269754],[13.0645744,52.426918],[13.0637186,52.4288944],[13.0636334,52.4270069]],_r=[[13.0989797,52.3748518],[13.0991485,52.3748467],[13.1007056,52.3747996],[13.0994942,52.3748362],[13.1005321,52.3748048],[13.0996452,52.3748316],[13.1003553,52.3748102],[13.099822,52.3748263],[13.1001766,52.3748156],[13.0999988,52.374821],[13.0993153,52.3748416],[13.0989547,52.3747628],[13.0988979,52.3740474],[13.0989084,52.3741792],[13.098917,52.3742885],[13.0989256,52.374397],[13.0989343,52.3745056],[13.0989445,52.3746342],[13.1005036,52.3744802],[13.1003276,52.3744854],[13.1001579,52.3744904],[13.0999478,52.3742991],[13.0999378,52.374169],[13.0999278,52.3740384]],mr=[[13.1067122,52.3817346],[13.1070443,52.3816831],[13.1071156,52.3816652],[13.1074355,52.3816096],[13.1073897,52.3814372],[13.1071456,52.3814297],[13.1068161,52.3814903],[13.1066001,52.3815435],[13.1064012,52.3815946]],pr=[[13.0534708,52.4272863],[13.0531652,52.427294],[13.0525649,52.4273004],[13.0519721,52.4273112],[13.0528603,52.4272985],[13.0532835,52.4272233],[13.0532812,52.4271693],[13.0532793,52.4271236],[13.0532773,52.4270765],[13.0529257,52.4272303],[13.0529234,52.4271763],[13.0529215,52.4271306],[13.0529195,52.4270835],[13.0518294,52.4272418],[13.0525765,52.4272334],[13.0518271,52.4271878],[13.0525742,52.4271794],[13.0518252,52.4271421],[13.0525723,52.4271337],[13.0518232,52.427095],[13.0525703,52.4270866],[13.0522172,52.4272397],[13.0522149,52.4271857],[13.052213,52.42714],[13.052211,52.4270929]],yr=[[13.0920529,52.37668],[13.0920579,52.3768165],[13.0920673,52.3770722],[13.0914653,52.3774532],[13.0912771,52.3774594],[13.0918481,52.3774406],[13.091664,52.3774467],[13.0927527,52.3772052],[13.0926873,52.3763923],[13.0927317,52.3769439],[13.0927208,52.3768092],[13.0927122,52.3767012],[13.0926606,52.3760596],[13.0927037,52.3765965],[13.0926771,52.3762647],[13.0927423,52.3770768],[13.0924073,52.3759482],[13.0915199,52.3759843],[13.0925487,52.3759423],[13.0922468,52.3759555],[13.0918394,52.3759774],[13.0920574,52.3759599],[13.0913276,52.3759839],[13.0916811,52.3759779],[13.0927902,52.3776482],[13.09278,52.377521],[13.0927693,52.3773889],[13.0926954,52.3764931],[13.0926687,52.3761599]],xr=[[13.0840435,52.383284],[13.0841498,52.3831703],[13.0844148,52.3832653],[13.0845316,52.3832587],[13.0847791,52.3832451],[13.0848992,52.3832385],[13.0844968,52.3830001],[13.0843776,52.3830053],[13.0852083,52.3833454],[13.0852173,52.3834075],[13.0851829,52.3831253],[13.0851894,52.3831875],[13.0851513,52.3829098],[13.085159,52.3829719],[13.0851235,52.3826915],[13.0851309,52.3827537],[13.0851002,52.3825373],[13.0850898,52.3824753],[13.0848266,52.3826974],[13.0847036,52.3827034],[13.0844583,52.3827174],[13.0843353,52.3827234],[13.0840947,52.3827355],[13.0839717,52.3827415],[13.0837272,52.3827541],[13.084862,52.3829806],[13.0847428,52.3829857],[13.0841286,52.3830206],[13.0840093,52.3830257],[13.0837656,52.3830388],[13.0836464,52.3830439]],Er=[[13.0996189,52.4694367],[13.1009693,52.4694174],[13.1008322,52.469422],[13.100695,52.4694265],[13.0997198,52.468986],[13.0997217,52.4690341],[13.0999001,52.4691754],[13.0998951,52.4691126],[13.0998862,52.4690023]],wr=[[13.0368822,52.4232385],[13.0369641,52.4229738],[13.0374009,52.423011],[13.0380204,52.422724],[13.03829,52.4226101],[13.0385752,52.4225848],[13.0396461,52.4224349],[13.0388512,52.4224675],[13.0392403,52.4223268],[13.0393956,52.4225308],[13.0393046,52.4225751],[13.0391205,52.4226967],[13.0388827,52.422753],[13.0385154,52.4229028],[13.0380663,52.423153],[13.037769,52.4232628],[13.0374388,52.4233072],[13.0383259,52.4231394],[13.0367423,52.423013],[13.0376868,52.4229145]],Cr=[[13.0994653,52.3731232],[13.0989484,52.3724761],[13.0995573,52.3719204],[13.1003557,52.3724009],[13.101276,52.376101],[13.1015175,52.3762454],[13.100623,52.3725738],[13.1015603,52.3744406],[13.1015517,52.3743298],[13.1015438,52.3742276],[13.1015351,52.3741155],[13.101527,52.3740112],[13.1015191,52.3739102],[13.1015117,52.3738144],[13.1017903,52.3746189],[13.10211,52.3746102],[13.1019382,52.3746148],[13.1019198,52.3748762],[13.1010253,52.3739623],[13.1010666,52.3745337],[13.1010318,52.3740523],[13.1010573,52.3744061],[13.1010394,52.3741584],[13.101048,52.3742774],[13.1011558,52.3753741],[13.0998864,52.375411],[13.1000677,52.3754057],[13.100249,52.3754004],[13.1004304,52.3753952],[13.1006117,52.3753899],[13.1007931,52.3753846],[13.1009744,52.3753793],[13.0998275,52.3754607],[13.0998408,52.3756328],[13.0998341,52.3755468],[13.0998977,52.3757412],[13.0999214,52.3760575],[13.0999135,52.375952],[13.0999056,52.3758466],[13.1005432,52.3759694],[13.1009129,52.3759557],[13.1018084,52.3750712],[13.1033166,52.3759146],[13.1034452,52.3758119]],Sr=[[12.9683761,52.4599949],[12.9691215,52.4595835],[12.9687027,52.4600876],[12.9692873,52.4592667],[12.9687148,52.459495],[12.9688498,52.4591741],[12.9687269,52.4590079],[12.9688732,52.4598658],[12.9684119,52.4598008],[12.9689885,52.4594614],[12.9686281,52.4593189],[13.1091072,52.3894003],[13.1090032,52.389624],[13.1091804,52.3893057],[13.1085443,52.3892177],[13.1089299,52.3897186],[13.1085478,52.3880693],[13.108405,52.3885703],[13.1081882,52.3884094],[13.1089663,52.3887523],[13.1083965,52.3889437],[13.1083317,52.388665],[13.108863,52.3888485],[13.1084698,52.3888491],[13.1092452,52.389652],[13.1082615,52.3883147],[13.109118,52.3890206],[13.1093185,52.3895574],[13.1088498,52.3893702],[13.1084973,52.3883444],[13.108638,52.3885968],[13.1090146,52.3891168],[13.1087765,52.3894648],[13.1087413,52.3885006],[13.1086006,52.3882482],[13.1086476,52.3891215],[13.1083162,52.3879186],[13.1082493,52.3878031],[13.1081823,52.3876876]],Tr=[[13.0598941,52.3858598],[13.0581649,52.3848833],[13.0586256,52.3851646],[13.0587006,52.3852579],[13.0558779,52.3830736],[13.0557795,52.382786],[13.0553991,52.3824439],[13.0640451,52.3900652],[13.0644545,52.3876273],[13.0646204,52.3878822],[13.0646961,52.3879941],[13.0647692,52.3881021],[13.0648279,52.3881887],[13.0651172,52.3882847],[13.0643504,52.3874741],[13.0645248,52.3872308],[13.0643029,52.3872685],[13.0640461,52.3867788],[13.0640452,52.3869868],[13.0641254,52.3871057],[13.0637408,52.3866942]],Rr=[[13.1098324,52.4573099],[13.1088762,52.4574202],[13.1093761,52.4575221],[13.1086937,52.4575442],[13.1099254,52.4575739],[13.108008,52.4570978],[13.1100019,52.4586247],[13.1089469,52.4576829],[13.1094781,52.4577159],[13.1094397,52.4566317],[13.1083387,52.4570109],[13.1097443,52.4571356],[13.1098304,52.4565763],[13.1102291,52.4565627],[13.1086998,52.4564914],[13.1097633,52.4580867],[13.1090691,52.4568515],[13.1095901,52.4578462]],Ir=[[13.0488479,52.4067711],[13.0484903,52.4068714],[13.0481021,52.4069773],[13.0492185,52.4063376],[13.0504182,52.4058393],[13.0489899,52.4063894],[13.0490813,52.4062058],[13.0488569,52.4057132],[13.0489495,52.4057253],[13.047223,52.4069203],[13.0488928,52.4059265],[13.0495923,52.4062834],[13.0480658,52.4065483],[13.0482772,52.4064914],[13.0484766,52.4064378],[13.0486676,52.4063865],[13.0500501,52.4060567],[13.0498608,52.4060663]],vr=[[12.988377,52.4096777],[12.9877489,52.4096738],[12.9881243,52.4095],[12.9884463,52.4096429]],Ar=[[13.0971908,52.3628696],[13.0977948,52.3630974],[13.0977755,52.3625915],[13.0981618,52.3627085],[13.0983251,52.3632959],[13.0986467,52.36293],[13.0993038,52.3631267],[13.098974,52.3634831],[13.1003977,52.3635018],[13.0972554,52.3623261],[13.0971489,52.3624428],[13.0969187,52.3626949],[13.0970294,52.3625737],[13.1001489,52.363315],[13.0999649,52.3635159],[13.0998072,52.363688]],Mr=[],Lr=[[13.0256803,52.4182073],[13.0259968,52.418204],[13.0256544,52.4181598],[13.0257062,52.4182547],[13.0258899,52.4180163],[13.0259166,52.4180632],[13.0259434,52.4181101],[13.0259701,52.418157]],Pr=[],br=[[13.1025749,52.4647558],[13.1034044,52.4647761],[13.1031175,52.4636779],[13.1032906,52.4640524],[13.1031624,52.4654259],[13.1033743,52.4654289],[13.1030712,52.4656616],[13.1034096,52.4644163],[13.1026418,52.4638642],[13.1026507,52.4642432],[13.1024265,52.4636804],[13.1025716,52.464584],[13.1032646,52.4642354],[13.1025845,52.4640622],[13.1025823,52.4651949],[13.1026497,52.4644165],[13.1025348,52.4653853],[13.1026356,52.4620402],[13.1024629,52.4623069],[13.1026291,52.4626562],[13.1026492,52.4624925],[13.1026343,52.4618645],[13.1027527,52.4614386],[13.1027503,52.4616623],[13.1027044,52.4630162],[13.1026912,52.4660201],[13.1031177,52.463912],[13.1031863,52.4634855],[13.1034451,52.4644879],[13.102632,52.4649027],[13.103175,52.4624172],[13.1034008,52.4618315],[13.1032066,52.4616608],[13.1032987,52.4622369],[13.1035383,52.4627992],[13.1034131,52.4626292],[13.1031764,52.4631031],[13.1032325,52.4620307],[13.1027929,52.4655476],[13.1025547,52.4627962],[13.1031425,52.4648705],[13.1031202,52.4649702],[13.1034393,52.4651385],[13.1031945,52.4651401]],Fr=[[13.098757,52.398811],[13.0985223,52.3987573],[13.0983818,52.3987767]],Dr=[[13.0831893,52.3759566],[13.0830113,52.3758869],[13.0826597,52.3757411],[13.082428,52.3756417],[13.0835715,52.3763238],[13.0831946,52.3762558],[13.0829518,52.3764777],[13.08226,52.3762884],[13.0812573,52.3753322],[13.0807213,52.3752541],[13.0803116,52.3751968],[13.0799335,52.3751188],[13.0790972,52.3752548],[13.0792871,52.3753562],[13.0794951,52.375587],[13.080677,52.3754963],[13.0803949,52.3755007],[13.0802677,52.3755047],[13.0800347,52.3753122],[13.0814053,52.3755886],[13.0812233,52.3755712],[13.0791947,52.3749269],[13.0833235,52.3756404],[13.0796457,52.3750947],[13.082735,52.3759575],[13.0828454,52.3760046]],kr=[[13.1005246,52.4631808]],Or=[[12.9689234,52.4562198],[12.9692719,52.4562142],[12.969283,52.4564419],[12.9687285,52.4560134],[12.9686333,52.4563862],[12.9684313,52.4563158],[12.9697282,52.4562034],[12.9677313,52.4561703],[12.9682151,52.4562443],[12.9694335,52.4559915],[12.9698289,52.455957],[12.9674581,52.4563287],[12.9684562,52.4560913]],Gr=[[12.9526044,52.4726519]],Nr=[[13.1005156,52.4690349],[13.1006527,52.4690304],[13.1006752,52.4691963],[13.1003413,52.4690193],[13.1003516,52.469146],[13.1003867,52.4693323],[13.1003924,52.4694009]],zr=[[12.9926685,52.404366],[12.9908064,52.4038674],[12.9905768,52.4038449],[12.9931404,52.4042537],[12.9911144,52.4043717],[12.9923806,52.4043153],[12.9900054,52.403515],[12.9905126,52.4035868],[12.9900054,52.403515],[12.9908122,52.4035337],[12.9929842,52.4040068],[12.9923597,52.4039301],[12.9923806,52.4043153]],Wr=[[13.0825989,52.3921646],[13.0825444,52.3935024],[13.0819847,52.3929942],[13.0816924,52.3930257],[13.0825522,52.3931171],[13.0821633,52.3923241],[13.0820042,52.3923977],[13.0814071,52.3926758],[13.0817474,52.3926965],[13.0818424,52.3927718],[13.0819309,52.392842],[13.082465,52.3927695],[13.0827051,52.3930248],[13.0820129,52.3931423],[13.0811955,52.3928875],[13.0815232,52.3931441]],Br=[[13.0361373,52.4371905],[13.0363944,52.4371597]],Kr=[[13.0264297,52.4094343],[13.0250736,52.4093496],[13.0286553,52.4095019],[13.0253511,52.4093707],[13.0224669,52.4090607],[13.0288803,52.4095334],[13.0268836,52.4094652],[13.0260522,52.409408],[13.0219961,52.4091248],[13.0216373,52.4090105],[13.020552,52.4089315],[13.0177541,52.4087229],[13.0201274,52.4090533],[13.019595,52.4089583],[13.0239193,52.4092167],[13.0228846,52.4091664],[13.0243682,52.4092888],[13.0230537,52.4091788],[13.0242163,52.4092793],[13.0191542,52.4088286],[13.0190494,52.4088204],[13.0186822,52.4087948],[13.0185601,52.4087852],[13.0181887,52.4087527],[13.018076,52.4087438]],Xr=[[12.9901138,52.4117954],[12.9912971,52.411765],[12.993361,52.4110765],[12.9924202,52.411742],[12.9921473,52.4118976],[12.9888961,52.4104531],[12.9918756,52.4116287],[12.9911158,52.4117852],[12.9896177,52.4119701],[12.9900005,52.4120712],[12.9934263,52.4108762],[12.9888649,52.4111803],[12.993024,52.4092473],[12.988476,52.4102721],[12.9936065,52.4094287],[12.993574,52.4097316],[12.9940598,52.409961],[12.9936752,52.4099314],[12.99308,52.4098053],[12.9930705,52.4098595],[12.9931957,52.4099871],[12.9931819,52.4100427],[12.9929689,52.4101396],[12.992953,52.4101897],[12.9934534,52.4100643],[12.9930974,52.4103481],[12.9935357,52.4100549],[12.9930979,52.4094919],[12.9930997,52.4095444],[12.9931083,52.409648],[12.9930997,52.4097008],[12.9928056,52.4106807],[12.9927881,52.4107367],[12.9935887,52.4103847],[12.9927473,52.410857],[12.9934949,52.4103946],[12.9927311,52.410914],[12.9935348,52.4106207],[12.9927005,52.4110199],[12.9934416,52.4106305],[12.9926835,52.4110715],[12.9931968,52.4113603],[12.9932398,52.4113066],[12.9893196,52.4115518],[12.9889697,52.411495],[12.988412,52.4115098],[12.9887817,52.4118514],[12.9895468,52.4097298],[12.9884684,52.4093084],[12.9882626,52.4091608],[12.9889998,52.4096946],[12.9886565,52.4094937],[12.988416,52.4106194],[12.9890083,52.4093053],[12.9890669,52.4093454],[12.9891358,52.4093929],[12.989189,52.4094296],[12.9892422,52.4094663],[12.9937008,52.4098233],[12.9940859,52.4098478],[12.9886501,52.4088976],[12.9887135,52.4089426],[12.9887787,52.408989],[12.9888264,52.4090229],[12.9886915,52.4090935],[12.9884071,52.4092645],[12.9882019,52.4091172]],Vr=[[12.9766386,52.4098981],[12.976898,52.410067],[12.9769225,52.4101604],[12.976951,52.4102692],[12.9769768,52.4103677],[12.9770012,52.4104607],[12.9770284,52.4105644],[12.9771227,52.4109104],[12.9773605,52.4108863],[12.9775885,52.4108635],[12.9778232,52.4108402],[12.9766848,52.410102],[12.9780599,52.4108168],[12.9778617,52.4103974],[12.9777228,52.4101218],[12.9778423,52.4101118],[12.9777684,52.4099712],[12.9777045,52.4098339],[12.9767069,52.4103138],[12.9767668,52.4105178],[12.9768462,52.4107261],[12.9768943,52.410931],[12.9768198,52.4097686],[12.9768465,52.4098705],[12.9768717,52.4099666],[13.106754,52.3871347],[13.1069088,52.3874485],[13.1068673,52.3873801],[13.1067887,52.3872088]],Yr=[[13.0444904,52.4076903]],Zr=[[12.9933015,52.3685183],[12.9834822,52.3735761],[12.9830517,52.3734705]],Hr=[[13.0954287,52.37695],[13.0956781,52.3770569],[13.0960063,52.3769096],[13.0934548,52.3766399],[13.0946346,52.3771203],[13.0941325,52.3771318],[13.0947594,52.3771143],[13.0942774,52.3766033],[13.0944942,52.3765943],[13.0959921,52.3761349],[13.0959954,52.3762505],[13.0957091,52.3765588],[13.0941293,52.3766077],[13.0961798,52.3747717],[13.0956728,52.3748578],[13.0966733,52.3766379],[13.0948393,52.3765851],[13.0957015,52.3751833],[13.0954558,52.3765652],[13.0956829,52.3749725],[13.0966586,52.3764954],[13.0961876,52.3748786],[13.0939453,52.3766133],[13.0946525,52.376591],[13.0961635,52.3745474],[13.0956942,52.3751],[13.0951796,52.3765766],[13.0949987,52.3765813],[13.0961713,52.374654],[13.0937798,52.3766197],[13.0966376,52.3763427],[13.0952432,52.3747538],[13.0941461,52.3747802],[13.095395,52.3747471],[13.0943178,52.3747774],[13.0950463,52.3747593],[13.0946661,52.3747701],[13.0948756,52.3747646],[13.0945123,52.3747712],[13.0968313,52.3768041],[13.0969806,52.3767997],[13.0971327,52.3767958],[13.0959716,52.375915],[13.0959836,52.3760306],[13.0972982,52.3767928]],Ur=[[12.9675118,52.4568238],[12.9689393,52.4570279],[12.9682233,52.4567625],[12.9682917,52.4567551],[12.968669,52.4567731],[12.9710007,52.4572411],[12.9709888,52.4571702],[12.9702368,52.4573776],[12.9704399,52.4568502],[12.9705442,52.4573296],[12.9701453,52.4568201],[12.9705332,52.4570197],[12.9699551,52.4565481],[12.9694017,52.4570245],[12.969257,52.4566803],[12.9675647,52.4577324],[12.9675819,52.4575095],[12.9670021,52.4576572],[12.970209,52.4570165],[12.9699039,52.4573416],[12.9678282,52.4570361],[12.9707942,52.4575831],[12.9668143,52.4572069],[12.9693065,52.4571251]],jr=[[13.1145615,52.3964402],[13.1141153,52.3962777],[13.1145668,52.396355],[13.1141196,52.3964434],[13.1145756,52.3966106],[13.1141302,52.3966678],[13.1145438,52.3967692],[13.1141047,52.3959008],[13.115638,52.3953694],[13.1139997,52.3968373],[13.1154235,52.3957505]],qr=[[13.0534344,52.4205108]],$r=[[13.1361704,52.3769381],[13.135939,52.3768105],[13.137341,52.3776466],[13.1358297,52.3766349],[13.1356186,52.3766306],[13.1373524,52.3772359],[13.1352837,52.3768115],[13.1369321,52.3772618],[13.1365017,52.3775505],[13.1356052,52.3770468],[13.1362331,52.3773853],[13.1366976,52.3776551],[13.1358801,52.3771721],[13.1367635,52.3778739],[13.1365271,52.3768537],[13.1366493,52.3769027],[13.1371267,52.377918],[13.1352897,52.3770008],[13.1356215,52.3764382],[13.1352588,52.3765416],[13.1366586,52.3771859],[13.1367159,52.3772201],[13.1353283,52.3765841]],Jr=[[13.0933006,52.3802461],[13.0952385,52.3804201],[13.0946926,52.3786859],[13.0947036,52.3789021],[13.0948038,52.3795425],[13.0946667,52.3784674],[13.094671,52.3785776],[13.0947156,52.3790033],[13.0947832,52.3793421],[13.0947276,52.3792084],[13.0947257,52.3791139],[13.0948067,52.3796531],[13.0946883,52.3787833],[13.0947932,52.3794454],[13.0907341,52.3809902],[13.0914286,52.3805959],[13.0918531,52.3809589],[13.0916441,52.3805896],[13.0920483,52.3809533],[13.0922436,52.3809476],[13.0924388,52.380942],[13.0905702,52.3806211],[13.0909551,52.3809831],[13.0907792,52.380615],[13.0911761,52.380976],[13.0909845,52.380609],[13.0914625,52.3809701],[13.0912327,52.3806017],[13.0916578,52.3809645],[13.0933881,52.3803435]],Qr=[[13.0086618,52.4230178],[13.0088596,52.4229206],[13.0086966,52.4227056],[13.0089405,52.4233335],[13.009078,52.423158],[13.0072446,52.423954],[13.0071261,52.4238037],[13.0078419,52.4237587],[13.0077044,52.4235851],[13.0074326,52.4237378],[13.0070141,52.4234363],[13.0074176,52.4233015],[13.0067899,52.4232545],[13.0071051,52.4231637],[13.0073679,52.4230664],[13.0078188,52.4231596],[13.0076462,52.4229728],[13.0079171,52.4228787],[13.0082182,52.4227638],[13.008213,52.4230277],[13.0080157,52.4233379],[13.008135,52.4234647],[13.0082423,52.4235866],[13.0088726,52.4230856],[13.0085689,52.4231478],[13.0086829,52.4232741],[13.0088029,52.4233993],[13.009287,52.4231834],[13.0084069,52.4230894],[13.0079897,52.4232292],[13.0075865,52.4233724],[13.0071891,52.4235044],[13.0075053,52.423576]],eo=[[12.964921,52.4490604],[12.9649274,52.4493511],[12.9648798,52.4492174],[13.022598,52.3917301],[13.0213543,52.3921817],[13.0220356,52.3920897],[12.9592611,52.4491417],[12.9636696,52.4499059],[12.9629008,52.4492624],[12.9634009,52.4493282],[12.9640677,52.4490585],[12.9637401,52.4490086],[12.9641457,52.4492272],[12.9640638,52.4493425],[13.0210509,52.3921959],[13.0233682,52.3919954],[13.0237921,52.3919954],[13.0241756,52.3920352]],to=[[13.124626,52.376432],[13.123963,52.3758917],[13.1250475,52.3761763],[13.1229158,52.3753952],[13.1235789,52.37573],[13.1244238,52.3766983],[13.1234351,52.3755615],[13.1234105,52.3753126],[13.1246846,52.3760317],[13.1239508,52.3760708],[13.1242313,52.3765178],[13.1242441,52.3757583],[13.1222948,52.3756],[13.1248115,52.3764131],[13.1242246,52.3759841],[13.1225063,52.3755795],[13.1235722,52.3760712],[13.1231721,52.3755051],[13.1244394,52.3762974],[13.1238709,52.3758267],[13.1241574,52.3762511],[13.1238247,52.3754441],[13.1232219,52.3759572],[13.1217575,52.3747591],[13.1228222,52.3757841],[13.1229935,52.3758358],[13.123611,52.3753642],[13.1236944,52.3758137],[13.1207907,52.3747523],[13.1211831,52.3748667]],io=[[13.0567226,52.3847607],[13.0576132,52.3849316],[13.0594341,52.3862257],[13.0598861,52.3864509],[13.060225,52.3863283],[13.0595692,52.3865686],[13.0591635,52.3867455],[13.0587943,52.3865412],[13.0590159,52.3861029],[13.0579228,52.3861134],[13.0580657,52.3858369],[13.0586839,52.3857809],[13.0583576,52.3856371],[13.0570437,52.385394],[13.0576612,52.3858045],[13.0577301,52.3852887],[13.0579802,52.3853845],[13.057489,52.3856784],[13.0605233,52.3862002],[12.9523217,52.4716673],[12.9528233,52.4720816],[12.9520463,52.4720875],[12.9525789,52.472462],[13.0574316,52.3855596]],no=[[13.0305786,52.4157259],[13.0304869,52.4154505],[13.0301493,52.4152245],[13.0298232,52.4154247],[13.0292863,52.4159983],[13.0290136,52.4157384],[13.0296089,52.4157721],[13.029964,52.4156276],[13.0293197,52.4155456],[13.0295544,52.4162471],[13.0299091,52.4160608],[13.01837,52.3863344],[13.0306548,52.4150923],[13.0307301,52.4146286],[13.0309867,52.4148951],[13.0315285,52.4147248]],so=[[13.0980264,52.4572106],[13.0978781,52.4582081],[13.0976897,52.4561933],[13.0973324,52.457287],[13.0989083,52.4603678],[13.098425,52.4601021],[13.0981137,52.4590183],[13.0977236,52.4578691],[13.0975041,52.4570616],[13.0979643,52.4586369],[13.0972961,52.4566577],[13.097251,52.4565034],[13.0971668,52.4563559],[13.0985705,52.4586956],[13.0972015,52.4561269],[13.0984111,52.4573759],[13.0981525,52.4577626],[13.0981848,52.4569903],[13.0973918,52.4567788],[13.0984852,52.457571],[13.0980428,52.4568677],[13.098202,52.4578991],[13.0994584,52.4601694],[13.0980587,52.4588439],[13.0991557,52.4595213],[13.0984544,52.4598543],[13.0970018,52.4559378],[13.0975584,52.4574249],[13.0981808,52.4592161],[13.0989068,52.4591994],[13.0978397,52.4566676],[13.0974479,52.455656],[13.0980262,52.4594043],[13.0975311,52.4575853],[13.0978756,52.455956],[13.0990818,52.4590608],[13.0985613,52.4602651],[13.0980065,52.4562605],[13.0978691,52.4564231],[13.0977715,52.456454],[13.0989175,52.4588816],[13.0991629,52.4604075],[13.0995029,52.4605482],[13.0989271,52.459404],[13.0990513,52.4598949],[13.098336,52.4596047]],ro=[[13.063479,52.3798163],[13.0624466,52.379504],[13.0650549,52.379171],[13.0652409,52.3793651],[13.0627518,52.3788204]],oo=[[13.0728535,52.3889383],[13.0733936,52.3887822],[13.0730035,52.3885715]],ao=[[13.0038764,52.4241079],[13.0041367,52.4243361],[13.0036946,52.4244861],[13.0039171,52.4241694],[13.0042343,52.4245296],[13.0027935,52.4235909],[13.0031634,52.4231772],[13.0029466,52.4236999],[13.002591,52.4233911],[13.0034594,52.4238524],[13.0024851,52.4230017],[13.0031447,52.4235276],[13.0031477,52.4239668],[13.003539,52.4243682]],lo=[[13.0898939,52.3667179],[13.0900573,52.3667627],[13.0902367,52.3668118],[13.0903911,52.3668541],[13.0906369,52.3666785],[13.0903277,52.3665944],[13.09055,52.3670821],[13.0904749,52.3671842],[13.0903084,52.3674111],[13.0901606,52.3676123],[13.0902342,52.3675121]],ho=[[12.9827717,52.4782787],[12.9810368,52.4781162],[12.9812229,52.4783859],[12.9821696,52.4780799],[12.982404,52.478028],[12.9842461,52.4773405],[12.9833132,52.4781115],[12.9833146,52.4777781],[12.9841793,52.4777689],[12.9830902,52.4778524],[12.9837975,52.4777916],[12.9843447,52.4771559],[12.9837936,52.4775512],[12.9828627,52.4779273],[12.9836207,52.4780124],[12.9826304,52.4779837],[12.9840178,52.4773324],[12.9843929,52.4775161]],co=[[13.0418944,52.4288961],[13.0419683,52.4289831]],uo=[[13.0925445,52.3804019],[13.0925078,52.3799408],[13.0924994,52.3798371],[13.092028,52.3796739],[13.0918712,52.3803024],[13.09249,52.3797214],[13.0918786,52.3796785],[13.0925154,52.3800346],[13.0918799,52.3804121],[13.0925332,52.3802393],[13.0918625,52.3801913],[13.0925389,52.3803218],[13.092176,52.3796695]],fo=[[13.0271975,52.4156937],[13.0280598,52.4165879],[13.0283802,52.4169174],[13.0274385,52.4159405],[13.0280593,52.4163142],[13.0289657,52.4170747],[13.0277095,52.4164625],[13.0282501,52.4164957],[13.0271922,52.4156553],[13.0282755,52.416793],[13.0273944,52.4158955],[12.9865107,52.4121162],[12.9861895,52.4115694],[12.9868352,52.4126677],[12.987017,52.4128992],[12.9865986,52.4122634],[12.9870851,52.4130741],[12.9867051,52.4124267],[12.9865996,52.4131507],[12.9863412,52.4118403],[12.9862162,52.4120169],[12.9867745,52.4125794],[12.986208,52.4122642],[12.9864271,52.4119822],[12.9861488,52.4122104],[12.986535,52.4129641],[13.0277863,52.4165583],[13.0274465,52.4156884],[13.0276719,52.4156088],[13.0278418,52.4161573],[13.0279624,52.4154916],[13.0281909,52.415878],[13.028072,52.4160671],[13.0278834,52.4157654],[13.0282176,52.4153917],[13.0276848,52.4158806],[13.0286994,52.4158749],[13.0284839,52.4157834],[13.0284511,52.4155737],[13.0281617,52.415711],[13.0284444,52.4151681],[13.028607,52.4153523],[12.9862781,52.4117193],[12.9858742,52.4117157],[12.9861036,52.4118375],[12.9863075,52.4124323],[12.986331,52.4124976],[12.9864676,52.4127767],[13.0269286,52.4155813],[13.0285838,52.4170605],[13.0277199,52.4163194],[13.027624,52.4162349]],go=[[13.020114,52.4139762],[13.0199719,52.4138108],[13.020726,52.4138365],[13.0199616,52.4142815],[13.0200635,52.4145016],[13.0200689,52.4146046],[13.0204631,52.4146341],[13.0203558,52.4144476],[13.0203089,52.4142267],[13.0217345,52.4140615],[13.0199185,52.4135865]],_o=[[13.0996278,52.4692482],[13.0995494,52.4692504],[13.0994811,52.4692524],[13.0994039,52.4692546],[13.0993281,52.4692568],[13.0992543,52.4692589],[13.0991831,52.469261]],mo=[[13.1120756,52.3576455],[13.1119536,52.3576475],[13.1112694,52.357699],[13.1094826,52.3588318],[13.1060401,52.3601846],[13.1115186,52.3581766]],po=[[12.9648038,52.4606219],[12.9655535,52.4601841],[12.9652228,52.4607188],[12.9649739,52.4603589],[12.9655217,52.4609849],[12.9647574,52.4620243],[12.9643287,52.4619632],[12.9650537,52.461176],[12.9647534,52.4613884],[12.964915,52.4620756],[12.9646039,52.4611065],[12.9656273,52.4607088],[12.9646818,52.4617284],[12.9647848,52.4607545],[12.9642886,52.4615668],[12.965591,52.4604185],[12.9650323,52.4618144],[12.9651099,52.4615689],[12.9646004,52.4613597],[12.9644524,52.4616875],[12.96497,52.4608961],[12.965446,52.4611786],[12.9654821,52.461084],[12.96518,52.4621243]],yo=[[13.0114334,52.4223179],[13.0091499,52.4223271],[13.0103413,52.4211202],[13.0114912,52.4225375],[13.0110418,52.4223375],[13.0100831,52.4233584],[13.0105594,52.421267],[13.0103279,52.4215625],[13.009909,52.4222154],[13.0106017,52.4214224],[13.0087017,52.4218826],[13.0107656,52.4225881],[13.0100647,52.4215807],[13.010847,52.4221313],[13.0111155,52.4226705],[13.0101065,52.4224119],[13.0098298,52.423075],[13.0088308,52.4220198],[13.011213,52.4220686],[13.0106694,52.4222017],[13.0093123,52.4218038],[13.0106677,52.421945],[13.0091048,52.4218683],[13.0109583,52.4218011],[13.0102746,52.4230873],[13.0118643,52.4227675],[13.0113093,52.4221952],[13.0104891,52.4220072],[13.0113707,52.4226538],[13.0111359,52.4219446],[13.0116117,52.4226825],[13.0095565,52.4227969],[13.0102819,52.4220754],[13.009503,52.4223075],[13.0114514,52.4227771],[13.0098989,52.4227342],[13.009795,52.4216603],[13.0112199,52.4225232],[13.0108106,52.4224119],[13.0094645,52.4226951],[13.0103624,52.4227828],[13.0105666,52.4225019],[13.0092971,52.4225039],[13.0096837,52.4229178],[13.0096544,52.4223828],[13.009488,52.4218565],[13.0098344,52.4226033],[13.0104272,52.4223925],[13.0100743,52.4222504],[13.0102631,52.4224441],[13.0084943,52.4218534],[13.0096527,52.4226614],[13.0099897,52.4226711],[13.0101679,52.4226238],[13.0100305,52.4230379],[13.0089801,52.4217257]],xo=[[13.0826027,52.3690201],[13.0830756,52.3691685],[13.0827824,52.3691002],[13.0832344,52.3688867],[13.0830322,52.3687838],[13.0826005,52.3686652],[13.0823897,52.3686372],[13.0832796,52.3684288],[13.0829289,52.3682827],[13.0835975,52.3688004],[13.0840049,52.3691857],[13.0835349,52.3691693],[13.0836951,52.3693606],[13.0838972,52.3694286],[13.0834453,52.3697068],[13.0837971,52.3699305],[13.084017,52.36988],[13.0843533,52.3696121],[13.0841047,52.3695109],[13.0846283,52.3698992],[13.0854765,52.3699727],[13.0853729,52.3697563],[13.0851343,52.3696487],[13.0855281,52.3698153],[13.0858276,52.3699247],[13.0842905,52.3688197],[13.0846019,52.3689646],[13.0845993,52.3694222],[13.0846843,52.3694447],[13.0849356,52.3695532],[13.0854005,52.3692938],[13.0863035,52.3697644],[13.0838998,52.3686372],[13.0852695,52.3700146],[13.0847301,52.3696725],[13.0863075,52.3696362],[13.0847845,52.3691448],[13.0847169,52.3700307],[13.0859639,52.3695095],[13.0825372,52.3680694],[13.0858981,52.3705125],[13.0859616,52.3704625],[13.0867392,52.369834],[13.0866819,52.3698807],[13.0864799,52.37004],[13.0864096,52.3700939],[13.0861527,52.3703045],[13.0862186,52.3702519]],Eo=[[13.0154934,52.4757244],[13.0157438,52.4757693],[13.0153278,52.4755592],[13.0157393,52.4755358],[13.0149563,52.4757293],[13.0154877,52.475067],[13.0153154,52.475326],[13.0156808,52.4753889],[13.0161364,52.475463],[13.0161549,52.475974],[13.0161609,52.4758034],[13.0161542,52.4752675],[13.0161385,52.475633],[13.0161489,52.4761447],[13.0165386,52.475097],[13.0157693,52.4753882],[13.0157554,52.4750649],[13.0153143,52.4752722],[13.0150449,52.4757286],[13.01566,52.4759554],[13.0153302,52.4756715],[13.015743,52.4757153],[13.016538,52.4750335],[13.0155789,52.4750663],[13.0156671,52.4750656],[13.0157405,52.4755896],[13.0153267,52.4755053],[13.015661,52.4760094],[13.0163184,52.476031],[13.0161366,52.4755265],[13.0165374,52.474973],[13.0165674,52.4753378],[13.0161612,52.4758658],[13.0163191,52.4756884],[13.0163156,52.4762098],[13.0161298,52.4752001]],wo=[[13.0314562,52.3889808],[13.0312228,52.3889022],[13.0309841,52.3888408],[13.0307025,52.3888007],[13.0304088,52.3887123],[13.0301942,52.388583]],Co=[[13.1005374,52.4659691],[13.1001862,52.4657254],[13.10074,52.4659723],[13.1004877,52.4655413],[13.1034187,52.4656584],[13.1037705,52.4656208],[13.099739,52.4658543],[13.1045228,52.4655432],[13.1061825,52.4653951],[13.1051006,52.4655186],[13.1057495,52.4653234],[13.0992424,52.4655308],[13.0997426,52.465547],[13.1046248,52.4658643],[13.1048892,52.4657844],[13.1055945,52.4656767],[13.1008297,52.4655481],[13.1053812,52.4657228],[13.1043643,52.4657717],[13.1061034,52.465685],[13.105368,52.4654854],[13.1054847,52.4654709],[13.1029838,52.4666145],[13.1025021,52.4658749]],So=[[13.0561667,52.4030333],[13.0557863,52.402962],[13.0557863,52.402962],[13.0570994,52.4032105],[13.0567256,52.4031381],[13.0565391,52.4031031],[13.0563513,52.4030679],[13.0545893,52.4027349],[13.0547713,52.4027688],[13.0547015,52.4026463],[13.0573358,52.4031457],[13.0565546,52.4026812],[13.0573052,52.403753],[13.0570763,52.4037109],[13.0563923,52.4037075],[13.0558752,52.4034446],[13.0530633,52.4023371],[13.049689,52.4017608],[13.0499039,52.4017963],[13.0501116,52.4018306],[13.0503195,52.4018649],[13.0507367,52.4019338],[13.0511722,52.4020057],[13.0513731,52.4020401],[13.0517494,52.4021006],[13.0519314,52.4021309],[13.0516028,52.4019682],[13.0484305,52.4025478],[13.0518825,52.4028616],[13.052102,52.4030783],[13.0492413,52.4022593],[13.0505579,52.4025261],[13.0511778,52.4026558],[13.0500845,52.4024305],[13.048178,52.4015211],[13.0519498,52.402732],[13.0472419,52.4020103],[13.0489315,52.4022078],[13.0464984,52.4022875],[13.0469273,52.4025083],[13.0487102,52.4022135],[13.0498137,52.4031658],[13.0505841,52.403235],[13.048168,52.4020041],[13.0484545,52.4022119],[13.0544095,52.4027015],[13.0533735,52.4025081],[13.0505267,52.4018991],[13.0509598,52.4019707],[13.0515594,52.4020697],[13.0508607,52.4026352],[13.0516085,52.4027788],[13.055989,52.403],[13.0576226,52.4039069],[13.0485506,52.4015651],[13.0487285,52.4015945],[13.0489335,52.4016284],[13.0530933,52.4024326],[13.0486539,52.4021099],[13.0560278,52.403491],[13.0504254,52.4025433],[13.0466845,52.4018168],[13.0532996,52.4024945],[13.0516146,52.4020785],[13.0488085,52.4021653],[13.0521009,52.4027584],[13.0549401,52.4037087],[13.0575393,52.4038794],[13.057192,52.4037501],[13.0559595,52.4035341],[13.0559521,52.4036327],[13.0560788,52.4035963],[13.0506755,52.4026152],[13.0482052,52.4022503],[13.0483514,52.4022675],[13.0484989,52.4021186],[13.0482066,52.4023837],[13.0483789,52.4022171],[13.048334,52.4023714],[13.0481181,52.4023289],[13.0481556,52.4022871],[13.0504073,52.4017958],[13.0503872,52.4018297],[13.0505045,52.4018453],[13.0498789,52.4017381],[13.049769,52.4017209],[13.051731,52.4020425],[13.0533832,52.4024287],[13.0544709,52.4026529],[13.0546546,52.4026922],[13.0548343,52.4027208],[13.055757,52.4028984],[13.0556779,52.4028795],[13.0499178,52.4024565],[13.056335,52.4030072],[13.0562411,52.4029908],[13.0564651,52.4030293],[13.0565174,52.4028223],[13.0565724,52.402765],[13.0566341,52.4028075],[13.0566166,52.4030489],[13.0569573,52.4028419],[13.0568138,52.4031037],[13.0569975,52.4031348],[13.0574354,52.4032485],[13.0574468,52.4032105],[13.0573817,52.4031925],[13.0573609,52.4032293],[13.0510591,52.402657],[13.0478066,52.4019396]],To=[[13.0819871,52.3701266],[13.0820335,52.3701486],[13.0824377,52.3699988],[13.0819598,52.3698606],[13.0821881,52.3695986],[13.0818826,52.3698492],[13.0833217,52.3705558],[13.0843411,52.3709287],[13.0839148,52.3708821],[13.0835871,52.3706017],[13.0838024,52.370662],[13.0828927,52.3698527],[13.0832034,52.3702365],[13.0829451,52.370149],[13.0835109,52.3700031],[13.0834443,52.3703319],[13.0837113,52.3704245],[13.0839625,52.3705261],[13.0843707,52.3706426],[13.0836415,52.3711443],[13.0834205,52.3710429],[13.0826327,52.3700514]],Ro=[[13.0855258,52.3707328],[13.0857348,52.3701987],[13.08217,52.3754951],[13.0821421,52.375803],[13.0818515,52.3760386],[13.0812751,52.3764512],[13.0811116,52.3766764],[13.0813329,52.3761522],[13.0808109,52.3763624],[13.0816851,52.3757129],[13.0815176,52.376026],[13.0811535,52.3762927],[13.0806934,52.3767333],[13.0808544,52.3765974],[13.0805197,52.3768547],[13.0824077,52.3750221],[13.082506,52.3748897],[13.082331,52.3751513],[13.082582,52.374621],[13.0821604,52.3745007],[13.0820911,52.3747119],[13.082112,52.3749405],[13.0822464,52.3743416],[13.0822595,52.3741665],[13.082508,52.3740207],[13.0826487,52.3738653],[13.0826545,52.3736897],[13.0827379,52.3743269],[13.0829473,52.3740018],[13.0828155,52.3728952],[13.084316,52.3726914],[13.0832385,52.37258],[13.0836934,52.3727707],[13.0832,52.3726509],[13.0833905,52.3723289],[13.0847954,52.3716465],[13.0842458,52.3728416],[13.0844742,52.3720963],[13.0847671,52.3722009],[13.0841601,52.3724282],[13.0838291,52.3725195],[13.0849863,52.3710742],[13.0840953,52.3723312],[13.0848211,52.3714726],[13.085163,52.3712227],[13.0844375,52.3719055],[13.085514,52.3708387],[13.0845974,52.3717705],[13.0854568,52.3713281],[13.0852374,52.370884],[13.0849569,52.3713488],[13.0840687,52.3715869],[13.0836059,52.3720652],[13.0838968,52.3719858],[13.0842184,52.3714644],[13.0838958,52.371759],[13.0846671,52.3710746],[13.0844547,52.3713526],[13.0838036,52.3718451],[13.0848476,52.3705078],[13.0846554,52.3708463],[13.0852049,52.3703876],[13.0834931,52.371655],[13.0829848,52.3723179],[13.083332,52.3722309],[13.0819079,52.3749878],[13.0814782,52.3747704],[13.0818228,52.3754037],[13.0815142,52.3763344],[13.081592,52.3762656]],Io=[[13.1018982,52.3890596],[13.1015846,52.3893774],[13.1015866,52.3892615],[13.1033029,52.3886055],[13.1017884,52.3894528],[13.1045335,52.3879949],[13.1050438,52.3878963],[13.1047984,52.3879441],[13.1052582,52.3877573],[13.1055837,52.3880282],[13.1045173,52.3882575],[13.1058092,52.3879055],[13.1059643,52.3879585],[13.1061503,52.387812],[13.104883,52.388196],[13.1047376,52.3881454],[13.1050712,52.3880578],[13.1054347,52.3879811],[13.1052216,52.3881049],[13.1033636,52.3882901],[13.1016949,52.389595],[13.1018169,52.3891375],[13.1020221,52.388887],[13.1022941,52.3886992],[13.1043517,52.3880314],[13.1055713,52.3877203],[13.1063767,52.3875605],[13.1029438,52.3883712],[13.1028396,52.3884169],[13.1025937,52.3885342],[13.1025074,52.3885829],[13.102211,52.3887588],[13.101957,52.3889446],[13.1020075,52.3893123],[13.1020905,52.3892448],[13.1022192,52.3891245],[13.102299,52.3890629],[13.1024634,52.3889496],[13.1025318,52.3888989],[13.102724,52.3887966],[13.1028282,52.3887359],[13.1030138,52.3886544],[13.1031278,52.3886028],[13.1057018,52.3877001],[13.1060375,52.3876252],[13.1059229,52.3876443],[13.1042228,52.3880603],[13.1062639,52.3875767]],vo=[[13.0839274,52.3751123],[13.084139,52.3751841],[13.0837653,52.3754305],[13.0835156,52.3748045],[13.0842126,52.3749385],[13.0833224,52.37431],[13.084702,52.3750981],[13.0833329,52.3745367],[13.0836219,52.3746937],[13.0838753,52.3744492],[13.0838924,52.374758],[13.0830282,52.3747804]],Ao=[[13.0652075,52.3823901],[13.0652106,52.3800631],[13.0663273,52.3787696],[13.0655868,52.3793161],[13.0655586,52.3790413],[13.0663003,52.3795231],[13.065624,52.3786822],[13.0660283,52.3786824],[13.0663266,52.3812958],[13.0654513,52.3808905],[13.0663394,52.3802212],[13.0663892,52.379903],[13.0646038,52.3826953],[13.0661926,52.3808297]],Mo=[[13.0323564,52.3822166],[13.0313131,52.3811369],[13.0313854,52.3825647],[13.0317692,52.3825137],[13.0293947,52.3811504],[13.0295433,52.3809188],[13.0301094,52.3813312],[13.0344282,52.3829963],[13.0328757,52.3828633],[13.0328708,52.3839909],[13.0333344,52.3832576],[13.0337771,52.3840094],[13.0348941,52.3838935],[13.0375026,52.3848355],[13.0371319,52.3848464],[13.03674,52.3847527],[13.0365473,52.3844714],[13.0365396,52.3846159],[13.0365446,52.3842604],[13.0380231,52.3851587],[13.0411872,52.3822181],[13.041694,52.3819835],[13.0427753,52.383028],[13.0387354,52.3852221],[13.0393017,52.3849966],[13.03652,52.3862845],[13.0378724,52.3853903],[13.0362484,52.3859431],[13.0357324,52.3860059],[13.0351337,52.3861024],[13.0443465,52.3828485],[13.0360165,52.3848408],[13.0345048,52.3853278],[13.0387007,52.3854678],[13.0393034,52.3855438],[13.0423683,52.3818716],[13.0330263,52.3830169],[13.042583,52.3826039],[13.0306081,52.3820984],[13.0316497,52.3817482],[13.0325951,52.3834946],[13.0326426,52.3833326],[13.0326925,52.3833385],[13.0346118,52.3830264],[13.0314985,52.3805219]],Lo=[[13.0869179,52.3807758],[13.0869945,52.3810871],[13.0860592,52.3790336],[13.0888362,52.3828968],[13.0882961,52.381972],[13.0872092,52.3829173],[13.0875915,52.3831173],[13.0949827,52.3885124],[13.0949123,52.3881116],[13.0947604,52.3877963],[13.091513,52.3849525],[13.0953302,52.3883237],[13.0856334,52.3808925],[13.0941791,52.3858102],[13.093231,52.3854536],[13.0946722,52.3884921],[13.0947462,52.3886304],[13.0831949,52.3783986],[13.082925,52.3782714],[13.0827231,52.3781762],[13.0934186,52.3860211],[13.0918059,52.3845387],[13.0831831,52.378443]],Po=[[13.134919,52.3839699],[13.1336446,52.3848049],[13.1332698,52.3846233],[13.1326599,52.3846594],[13.1329377,52.3846133],[13.1300662,52.3849488],[13.1294309,52.3849553],[13.1304501,52.3850263],[13.1309139,52.384802],[13.1354383,52.3844367],[13.1356484,52.3845209],[13.1358519,52.3844052],[13.1294933,52.384462],[13.1334335,52.3841423],[13.1310114,52.384354],[13.1329467,52.3842929],[13.1300444,52.3845455],[13.130297,52.3845478],[13.130566,52.3843862],[13.1306684,52.3844993],[13.1276103,52.3848583],[13.1285491,52.3848811],[13.1282266,52.3848508],[13.126991,52.3844327],[13.1271363,52.384445],[13.1273407,52.3844652],[13.1290235,52.3848594],[13.1275392,52.3844846],[13.1277861,52.3844306],[13.1280366,52.384476],[13.128495,52.3845005],[13.1376343,52.3837477],[13.137772,52.383596],[13.1376085,52.3834477],[13.1377451,52.3832837],[13.1384078,52.3837181],[13.1385593,52.3835672],[13.1383805,52.3834202],[13.1385274,52.3832185],[13.1391959,52.3836979],[13.1393424,52.3835449],[13.1391673,52.383398],[13.1393127,52.3831953],[13.1339333,52.3840482],[13.1341965,52.3841262],[13.1344231,52.3840093],[13.1346892,52.3840871],[13.1333277,52.3840131],[13.1349513,52.3849528],[13.1369624,52.3838707],[13.1369506,52.3837041],[13.1369387,52.3835376],[13.1369268,52.383371],[13.132662,52.3843543],[13.1327929,52.3843414],[13.1342522,52.3845453],[13.1348668,52.3844903],[13.1346599,52.3845088],[13.1344488,52.3845277],[13.1359038,52.3839755],[13.1356488,52.3839951],[13.1354037,52.3840139],[13.135151,52.3840334],[13.1379922,52.384447]],bo=[[13.0753308,52.3973885],[13.0757402,52.3978842],[13.0762657,52.3977468],[13.0746622,52.3978474],[13.0749476,52.3976898],[13.0750389,52.3930393],[13.0765607,52.3966437],[13.077327,52.3967425],[13.0774674,52.3963676],[13.0761544,52.3949282],[13.0714442,52.3931675],[13.0705687,52.3929952],[13.0727211,52.3929836],[13.0720994,52.3929364],[13.071478,52.3929558],[13.0706664,52.3932003],[13.0722218,52.3931407],[13.076706,52.3975421],[13.0762026,52.3958644],[13.0768618,52.3955803],[13.0817997,52.3953539],[13.0818959,52.3952409],[13.0817186,52.3954595],[13.0811333,52.3959403],[13.0812618,52.3958265],[13.0807087,52.3963436],[13.0801521,52.3966641],[13.0812708,52.3959277],[13.0805832,52.3964167],[13.0810537,52.3960995],[13.0808079,52.3961849],[13.0805391,52.3964431],[13.0808568,52.3960614],[13.0803163,52.3965448],[13.0803536,52.3965327],[13.0815212,52.3955778],[13.0813716,52.3958461],[13.0801336,52.3965967],[13.0809504,52.3961899],[13.081624,52.3955886],[13.0812443,52.395846],[13.0806804,52.3963608],[13.0815167,52.3957097],[13.0809573,52.396088],[13.0814257,52.3956852],[13.0776827,52.3965982],[13.0777784,52.3975461],[13.0743204,52.3941169],[13.0732793,52.3940454],[13.076135,52.39408],[13.0760047,52.3939654],[13.0758738,52.3938503],[13.0733392,52.3954467],[13.0735596,52.3953919],[13.0739979,52.395697],[13.0739979,52.3958025],[13.0739979,52.3959079],[13.0739979,52.3960134],[13.0744709,52.3964291],[13.0744707,52.3963269],[13.0744705,52.3962247],[13.0744703,52.3961225],[13.0751229,52.3968305],[13.0751231,52.3967273],[13.0751233,52.396624],[13.0751235,52.3965208],[13.078609,52.396362],[13.07766,52.3955194],[13.0777786,52.3956247],[13.0778972,52.39573],[13.0780158,52.3958353],[13.0781345,52.3959407],[13.0782531,52.396046],[13.0783717,52.3961513],[13.0784904,52.3962567],[13.0808778,52.3965083],[13.0804814,52.3967428],[13.082887,52.3940477],[13.0826056,52.3944455],[13.0825026,52.3947055],[13.0823084,52.3950646],[13.0820924,52.3953874],[13.081839,52.3956933],[13.0815733,52.3959908],[13.0812463,52.396258],[13.0801407,52.3967296],[13.0800208,52.3967342],[13.0799008,52.3967387],[13.0797809,52.3967433],[13.0796609,52.3967479],[13.0795409,52.3967525],[13.079421,52.396757],[13.0793373,52.3967602],[13.0791594,52.3968153]],Fo=[[13.0982306,52.375474],[13.0978586,52.3761433],[13.0985641,52.3761222],[13.0967851,52.3761742],[13.099059,52.3754902],[13.0982114,52.3761326],[13.0975059,52.376154],[13.0990849,52.375819],[13.0983877,52.3761274],[13.0990914,52.3757022],[13.0987405,52.3761169],[13.0976823,52.3761486],[13.0973222,52.3761593],[13.0980277,52.3761381],[13.096962,52.3761693],[13.0990719,52.3755873],[13.0971458,52.3761642],[13.097321,52.3758803],[13.0969422,52.3758914]],Do=[[13.0438637,52.386606],[13.0441616,52.3870419],[13.044106,52.3869968],[13.043919,52.3868402]],ko=[[13.1068705,52.4741676],[13.1063248,52.4746622],[13.1059235,52.4745478],[13.1061177,52.4741946],[13.1058227,52.4750901],[13.1061497,52.4749798],[13.1052709,52.4751858],[13.1065939,52.4745355],[13.1057806,52.4747257],[13.1056193,52.4744463],[13.1060194,52.4748781],[13.1067879,52.4749075],[13.1066853,52.4749343]],Oo=[],Go=[[13.027825,52.3932196],[13.0270424,52.393478],[13.0282941,52.3900001],[13.0286457,52.3893753],[13.0286765,52.3891958],[13.0288201,52.3890412],[13.0279501,52.3919986],[13.0280392,52.3930752],[13.0280555,52.3927735],[13.0281154,52.3926584],[13.027376,52.3930856],[13.026998,52.393061],[13.0274275,52.3927834],[13.0274534,52.392618],[13.0277565,52.3908343],[13.027965,52.3885821],[13.0276673,52.391583],[13.027916,52.3888536],[13.0277157,52.3912777],[13.027583,52.3921189],[13.0279389,52.38872],[13.0280392,52.3930752],[13.0277888,52.390643],[13.0282823,52.3904875],[13.0280143,52.3892712],[13.0282473,52.3906855],[13.0280366,52.3891345],[13.0276939,52.3914148],[13.0279917,52.3894079],[13.0283522,52.3900914],[13.0277202,52.3900597],[13.0279679,52.3895451],[13.0276364,52.3917824],[13.0276095,52.3919508],[13.0277202,52.3900597],[13.0283172,52.3902894],[13.0278211,52.3904512],[13.0280646,52.392005],[13.02837,52.3916961],[13.0282745,52.3915465],[13.0290324,52.3879792],[13.0294734,52.3877586],[13.0285264,52.3883322],[13.0301746,52.3876169],[13.0298964,52.3874286],[13.0283014,52.3899144],[13.0284092,52.3899856],[13.0282974,52.386623],[13.0302035,52.3875886],[13.0293148,52.3883985],[13.0283972,52.3896609],[13.0284125,52.3899245],[13.0284109,52.3899555]],No=[[12.9820766,52.4776911],[12.9822053,52.4775092],[12.9819661,52.4773918],[12.983014,52.4774419],[12.9829716,52.4771378],[12.9826729,52.4774049],[12.9826631,52.477194],[12.9824232,52.4772551],[12.9836871,52.4772205],[12.9824343,52.4774439],[12.9821875,52.4773344],[12.9835269,52.47707]],zo=[[13.0858843,52.363336],[13.0859781,52.3632088],[13.08604,52.3631248],[13.0861311,52.3630012],[13.0862214,52.3628786],[13.0866335,52.3631237],[13.0867146,52.3630116],[13.0867893,52.3629085],[13.0869032,52.3627366],[13.0869826,52.3626295],[13.087059,52.3625266],[13.0871243,52.3624385],[13.0875213,52.361909],[13.0874358,52.3620243],[13.0873577,52.3621296],[13.0872878,52.3622238],[13.0861138,52.3634854],[13.0862767,52.3635305],[13.0864519,52.3635789],[13.0866344,52.3636293],[13.0868322,52.363684],[13.0869772,52.3637241],[13.0867141,52.3633193],[13.0868724,52.3633633],[13.0871772,52.3634444],[13.0873843,52.3635041],[13.0875999,52.3635664],[13.0886639,52.3638395],[13.0885017,52.3637956],[13.0889868,52.3639348],[13.0891769,52.3639865],[13.0893635,52.3640373],[13.0895508,52.3640883],[13.090412,52.3642285],[13.0908536,52.3636216],[13.0899667,52.3639411],[13.0900548,52.3638216],[13.0901306,52.3637188],[13.0902734,52.363527],[13.0903589,52.3634082],[13.0904364,52.3633003],[13.0905032,52.3632074],[13.0906717,52.3629901],[13.0907493,52.3628815],[13.0864492,52.3625534],[13.0862688,52.3625043],[13.0861079,52.3624605],[13.0859101,52.3624067],[13.0857134,52.3623532],[13.0867332,52.3621834],[13.0865831,52.3621428],[13.0863965,52.3620923],[13.0861874,52.3620357],[13.0859884,52.3619819],[13.0869893,52.3618118],[13.0868018,52.3617594],[13.0866242,52.3617098],[13.0864369,52.3616575],[13.0862456,52.361604],[13.0884448,52.3642973],[13.0883524,52.3644229],[13.0882011,52.3646246],[13.0881225,52.3647313],[13.088039,52.3648448],[13.0879559,52.3649578],[13.0878766,52.3650657],[13.0870041,52.3648248],[13.0870858,52.3647139],[13.0871515,52.3646248],[13.0872236,52.3645269],[13.0875894,52.3640349],[13.0875101,52.3641426],[13.0874386,52.3642396],[13.0873684,52.3643349],[13.0868524,52.3642839],[13.0867794,52.3643858],[13.086562,52.3646891],[13.086631,52.3645929],[13.0867052,52.3644894],[13.0871004,52.3639479],[13.087022,52.3640573]],Wo=[[13.0504001,52.4139889],[13.0457808,52.4148212],[13.0458947,52.4150921],[13.0519811,52.4137482],[13.0497525,52.4123052],[13.0502894,52.4121882],[13.051657,52.4126207],[13.051815,52.4118959],[13.0515503,52.413093],[13.0512881,52.4119947],[13.0487348,52.4142861],[13.0488404,52.413851],[13.0500603,52.4134743],[13.0513579,52.4137197],[13.0470417,52.4141556],[13.0510773,52.4132483],[13.0458944,52.4144546],[13.0457198,52.4144869],[13.0475817,52.4143829],[13.0474926,52.4141959],[13.0480206,52.4148898],[13.0470183,52.4150722],[13.0472309,52.4150344],[13.0468056,52.4151101],[13.0474436,52.4149965],[13.0485285,52.4147987],[13.0482698,52.4148451],[13.0495496,52.4117382],[13.0497137,52.4118926],[13.0511425,52.4115583],[13.0512968,52.4119039],[13.0513531,52.4118221],[13.0518587,52.4118078],[13.0491097,52.4146852],[13.0493289,52.4146492]],Bo=[[13.0326586,52.4151812],[13.028178,52.4138305],[13.0287747,52.4136284],[13.0306667,52.4126075],[13.0321381,52.4129963],[13.0365477,52.418963],[13.0361781,52.4188641],[13.0357049,52.4182845],[13.0372361,52.4189476],[13.0358313,52.4184102],[13.0388257,52.4205404],[13.0374833,52.4192005],[13.0380512,52.4197494],[13.0377652,52.4194858],[13.0356611,52.418103],[13.0361265,52.4179462],[13.0371803,52.4197161],[13.0370434,52.4194883],[13.0358361,52.4175867],[13.0365563,52.4181276],[13.0373717,52.4190741],[13.0360678,52.4185172],[13.0365936,52.4192007],[13.0376096,52.4193246],[13.036125,52.4186923],[13.0358046,52.4173996],[13.0373141,52.418738],[13.0367417,52.4193724],[13.0380774,52.4195734],[13.0342386,52.4179772],[13.0340608,52.4165507],[13.0344397,52.4169364],[13.0342067,52.4166735],[13.034426,52.4170119],[13.0342759,52.4174123],[13.0346556,52.4171532],[13.0352771,52.4170382],[13.0347727,52.4173142],[13.0354134,52.418029],[13.03546,52.4173117],[13.0354598,52.4179075],[13.0343766,52.4175864],[13.0351696,52.4176304],[13.0337113,52.4167431],[13.0349813,52.4175999],[13.0364718,52.4182208],[13.0366126,52.4184035],[13.0406093,52.4218936],[13.0408769,52.4217386],[13.0422869,52.423717],[13.042877,52.424677],[13.0416104,52.4232047],[13.0424599,52.4239482],[13.0412649,52.422675],[13.0429521,52.4245887],[13.0431286,52.4249011],[13.0418322,52.4247422],[13.0425686,52.4240388],[13.0413333,52.4229352],[13.0412754,52.4228795],[13.0422945,52.4228972],[13.0437481,52.4253471],[13.04359,52.4258066],[13.0439251,52.4263482],[13.0437766,52.4273239],[13.0432099,52.4250429],[13.0433082,52.4252287],[13.0440602,52.4255519],[13.0441565,52.4262188],[13.0436046,52.4256323],[13.0315106,52.4140963],[13.0316097,52.4141998],[13.0440828,52.4277866],[13.0318751,52.4146203],[13.0356124,52.4190803],[13.032788,52.4154888],[13.0325271,52.4152306],[13.0326629,52.415365],[13.0428472,52.4242844],[13.0428939,52.424139],[13.0356433,52.4173864],[13.0386889,52.4204095],[13.0384778,52.4196157],[13.0386268,52.420256],[13.0441642,52.4268754],[13.0440652,52.4267453],[13.0439766,52.4266023],[13.041949,52.4233964],[13.0364437,52.4180008],[13.0437591,52.4261882],[13.0428346,52.4244549],[13.0433192,52.4246008],[13.0444842,52.4274485],[13.0442742,52.4270569],[13.0443481,52.4272113],[13.0405446,52.4221122],[13.0420316,52.4236001],[13.0386176,52.4212782],[13.0363656,52.417583],[13.0442257,52.4270301],[13.0428515,52.4258669],[13.0332108,52.4150428],[13.0331446,52.414844],[13.0327412,52.4144562],[13.0327978,52.4147925],[13.0326633,52.4146622],[13.0324459,52.4143123],[13.0408308,52.4223341],[13.040653,52.4222164],[13.0401435,52.4215917],[13.0399262,52.4214826],[13.0397539,52.4213769],[13.0396365,52.4212467],[13.0396525,52.4211103],[13.0331865,52.4156857],[13.0395149,52.4209714],[13.0393382,52.4208618],[13.0384173,52.4201017],[13.03832,52.4199967],[13.0381658,52.4198458],[13.0333031,52.415951],[13.0336736,52.416266],[13.0338348,52.4164101],[13.0352904,52.4177972],[13.03901,52.4213723],[13.0390562,52.4215377],[13.0387226,52.4217197],[13.0391229,52.4217625],[13.0395981,52.4219065],[13.0397642,52.4221187],[13.0329619,52.4160175],[13.0374547,52.4200815],[13.0370331,52.4203013],[13.0379308,52.4203303],[13.0374207,52.4205087],[13.0379546,52.4206186],[13.0376792,52.4207326],[13.0383117,52.4207326],[13.0378696,52.4208757],[13.0384749,52.4209193],[13.0391651,52.4221073],[13.0402062,52.4225619],[13.0399053,52.4226743],[13.040372,52.422723],[13.0406729,52.4229439],[13.040329,52.4230825],[13.0401878,52.4231311],[13.0407896,52.4231611],[13.0405563,52.4232435],[13.0436704,52.4270643],[13.0307087,52.4126664],[13.0438738,52.4259273],[13.0317273,52.4142932],[13.031672,52.4142416],[13.0436795,52.425462]],Ko=[[12.9922629,52.4121165],[12.9930303,52.4122066],[12.9929758,52.4121637],[12.9928277,52.4120485],[12.9927651,52.4120046]],Xo=[[12.9380653,52.4899294],[12.9415805,52.4884734],[12.9417539,52.4891985],[12.9387466,52.489744],[12.9387129,52.4899593],[12.9397366,52.4898568],[12.9385544,52.4898675],[12.9414609,52.4893667],[12.9424434,52.4883453],[12.9393898,52.4898219],[12.9423087,52.4885631],[12.9421193,52.4890578],[12.9411796,52.4899715],[12.9393045,52.4898192],[12.9382668,52.4897042],[12.9419908,52.4897115],[12.9418139,52.4884033],[12.9418753,52.4882271]],Vo=[[13.1039916,52.3832659],[13.1038672,52.3832671],[13.1037533,52.3834824],[13.1043275,52.3836246],[13.1040512,52.3833954],[13.1039282,52.3834109]],Yo=[[12.9850709,52.4129924],[12.9849865,52.4128491],[12.9846026,52.413044],[12.9845186,52.4127828],[12.9846577,52.4133737],[12.9844294,52.4126281],[12.9852769,52.4132804],[12.984863,52.4127045],[12.9847646,52.4122371],[12.984151,52.4121807],[12.9846724,52.412399],[12.9847771,52.4125508],[12.9842395,52.412321],[12.9843241,52.4124909],[12.984507,52.4120781],[12.984622,52.4131036],[12.9845645,52.4129517]],Zo=[[12.950764,52.4708339],[12.951207,52.4709721],[12.9501508,52.4711969],[12.9504787,52.471546],[12.9498353,52.4708184],[12.9508922,52.4715186],[12.9504726,52.4710142],[12.950933,52.4712933],[12.9509919,52.4710997]],Ho=[[13.1045059,52.3858675],[13.1049328,52.385783],[13.105531,52.3856845],[13.1053784,52.3853686],[13.1046288,52.3863699],[13.1057252,52.3851952],[13.1044149,52.3862486]],Uo=[[13.0912055,52.3703736],[13.0920051,52.3710777],[13.0915796,52.3708945],[13.0914637,52.3708599],[13.0919634,52.3709126],[13.092036,52.3708499]],jo=[[12.9832467,52.391457],[12.9811841,52.3932159],[12.9836431,52.3955414],[12.9838886,52.3950477],[12.9812825,52.3933706],[12.9780122,52.3923137],[12.9793452,52.392419],[12.9812443,52.3934255],[12.9785743,52.392426],[12.981824,52.3937286],[12.9803093,52.3922561],[12.9805104,52.3921918],[12.9797179,52.3923532],[12.9778282,52.4002433],[12.9804349,52.3989713],[12.9810147,52.3996793],[12.9805637,52.4017546],[12.9805029,52.4008928],[12.9808524,52.4025384],[12.979354,52.3975359],[12.9809815,52.3921859],[12.9788083,52.4011846],[12.9792166,52.4012641],[12.979712,52.4011519],[12.9799241,52.4012469],[12.981168,52.3923192]],qo=[[13.0451389,52.4087884]],$o=[],Jo=[[13.1296311,52.3744378],[13.1287357,52.3735638],[13.1286971,52.3748808],[13.1294745,52.3743279],[13.1302113,52.3745668],[13.1288455,52.3750163],[13.1302291,52.3738539],[13.1303739,52.3744423],[13.1287135,52.3742863],[13.1288621,52.3744219],[13.1302404,52.3732134],[13.1288896,52.3734331],[13.1296371,52.374197],[13.1296219,52.3748078],[13.1300264,52.3733092],[13.1286917,52.3751413],[13.1294805,52.374087],[13.1303799,52.3742015],[13.1302172,52.3743324],[13.1310771,52.3733169],[13.128708,52.3745467],[13.1294686,52.3745623],[13.1296249,52.374685],[13.1298177,52.3732085],[13.1303646,52.3748123],[13.1288507,52.3747501],[13.1296429,52.3739673],[13.1302232,52.3740915],[13.1303677,52.3746895],[13.1294864,52.3738494],[13.1303856,52.3739718],[13.1288674,52.3741555],[13.1287412,52.3732964],[13.1304512,52.3733137],[13.1287191,52.3740189],[13.1290102,52.3732984],[13.1287303,52.3738243],[13.129598,52.3733041],[13.130773,52.3732139]],Qo=[[12.9550605,52.4329487],[12.9558012,52.4328306],[12.9544921,52.4325018]],ea=[[13.132001,52.3750493],[13.1318473,52.3751743],[13.1320066,52.374783],[13.1338847,52.3744375],[13.133889,52.3743084],[13.1338932,52.3741788],[13.1338975,52.3740476],[13.1339017,52.3739182],[13.1339082,52.3737214],[13.1339125,52.37359],[13.1339167,52.3734607],[13.1339211,52.3733271],[13.133851,52.3732642],[13.1336652,52.3732619],[13.1333346,52.3732581],[13.1331211,52.3732555],[13.1329119,52.3732529],[13.1327002,52.3732504],[13.1324865,52.3732478],[13.1321659,52.3732432],[13.1319382,52.3732404],[13.1333015,52.3736744],[13.1330507,52.3736721],[13.132808,52.3736699],[13.1325546,52.3736676],[13.132306,52.3736654],[13.1320583,52.3736631],[13.1325516,52.3740786],[13.133293,52.3740859],[13.1330426,52.3740834],[13.1327959,52.374081],[13.1323093,52.3740762],[13.1320575,52.3740737],[13.133281,52.3744962],[13.1330302,52.374494],[13.1327815,52.3744919],[13.1325328,52.3744898],[13.1322863,52.3744877],[13.1320367,52.3744856]],ta=[[13.0200159,52.4103294],[13.0209528,52.4104559],[13.0193667,52.4103606],[13.0181822,52.4100801],[13.0188699,52.4101236],[13.0200757,52.4115018],[13.0200733,52.4112023],[13.020096,52.4107519],[13.0193186,52.4105356],[13.0190037,52.4103781],[13.0184967,52.4105457],[13.018221,52.4102879],[13.0187816,52.4101844],[13.0198384,52.410821],[13.0194051,52.410627],[13.020098,52.4103689],[13.0204086,52.4104461],[13.0206776,52.4104439],[13.0206751,52.4113406],[13.0208729,52.4107734],[13.0206358,52.4109529],[13.0206005,52.4111436],[13.0201511,52.4110252]],ia=[[13.02969,52.4402836],[13.0292229,52.4385536],[13.0268243,52.439252],[13.0271245,52.4389047],[13.0320195,52.4374248],[13.0357887,52.437501],[13.0334004,52.4376323],[13.0327666,52.437623],[13.0337698,52.437602],[13.0359326,52.4374893],[13.0318817,52.437771],[13.0352398,52.437563],[13.0356942,52.4377954],[13.0375973,52.4387207],[13.0496698,52.43645],[13.0503426,52.4363712],[13.0470756,52.4360753],[13.0379308,52.438404],[13.0377885,52.4380253],[13.0187253,52.4355153],[13.0419519,52.4378613],[13.0421972,52.4377877],[13.0472482,52.4366802],[13.0505268,52.4363764],[13.0396919,52.4373502],[13.0270441,52.4398099],[13.0341752,52.4375941],[13.0344836,52.4375672],[[13.0302549,52.437875],[13.03024,52.4377233],[13.0301942,52.4372555],[13.0300311,52.4355915],[13.0285801,52.4356873],[13.0284795,52.4356939],[13.0279478,52.435729],[13.0276314,52.4382161],[13.0280186,52.4381691],[13.028086,52.4381639],[13.0281971,52.4381549],[13.0282609,52.4381506],[13.0283627,52.4381428],[13.0283895,52.4381409],[13.0289001,52.4381043],[13.02959,52.4380433],[13.0300571,52.4380038],[13.03012,52.4379656],[13.0302549,52.437875]],[13.0260009,52.437877],[13.0255218,52.4377569],[13.0416466,52.4369441],[13.0355728,52.4375383],[13.041301,52.4369771],[13.0408625,52.4370273],[13.0467746,52.4370457],[13.0402236,52.436965],[13.040068,52.436981],[13.0397172,52.4370446],[13.0320658,52.4380409],[13.0267664,52.4383822],[13.0424022,52.4368514],[13.0465653,52.4369625],[13.0420162,52.436895],[13.0453184,52.4364991]],na=[[12.9850664,52.4766881],[12.9853497,52.4762867],[12.9857125,52.476283],[12.985442,52.4762858],[12.9858047,52.4762821],[12.9851423,52.4766561],[12.9854387,52.4765548],[12.985816,52.4766055],[12.986019,52.4767838],[12.985734,52.4765438],[12.9859371,52.4767221],[12.9857722,52.4769375],[12.9854996,52.4770582],[12.9854237,52.4770918],[12.9856962,52.4769711]],sa=[[12.989155,52.4027527]],ra=[[13.1016453,52.3712983],[13.1024689,52.371706],[13.1023006,52.3716018],[13.1020199,52.371366],[13.1026072,52.3718161],[13.1028081,52.3719108],[13.101944,52.3718125],[13.1022429,52.3719568],[13.1025383,52.372012],[13.1034275,52.3721452],[13.1036283,52.3722214],[13.1038178,52.3722728],[13.1038323,52.3725889],[13.1033714,52.3724612],[13.1036861,52.3726025],[13.1032067,52.3723624],[13.1027873,52.3722047],[13.1025481,52.372125],[13.1015009,52.3717947],[13.1013924,52.3712917],[13.1030543,52.3722245],[13.101834,52.3716247],[13.103325,52.3720727],[13.1022156,52.3714912],[13.1018336,52.3713105],[13.1031248,52.3720089]],oa=[[13.0471094,52.3832019],[13.0470372,52.3831974],[13.046893,52.3831883],[13.0440122,52.3841582],[13.0440849,52.3841875],[13.0441581,52.3842171],[13.0442304,52.3842463],[13.0443018,52.3842751],[13.044375,52.3843046],[13.0444481,52.3843341],[13.0445203,52.3843633],[13.0445923,52.3843924],[13.0443445,52.3839143],[13.0444512,52.3838194],[13.0445057,52.3837709],[13.0445437,52.3838858],[13.044682,52.3839445],[13.045099,52.3834209],[13.045016,52.3833657],[13.0449291,52.383393],[13.0451329,52.383329],[13.0451836,52.3835174],[13.0455834,52.3832233],[13.045759,52.3832251],[13.0458677,52.3832263],[13.045922,52.3834778],[13.0459235,52.3833829],[13.0465664,52.3834614],[13.0465862,52.3833505],[13.0473666,52.3835674],[13.047381,52.3835057],[13.047404,52.3834069]],aa=[[13.0472893,52.4000147],[13.0462082,52.3991866],[13.0464761,52.399101],[13.046108,52.3993616],[13.045898,52.3996308],[13.0459367,52.3997619],[13.0467549,52.4003255],[13.0464351,52.400088],[13.0465013,52.3990424],[13.0464487,52.3991686],[13.046523,52.3998998],[13.0466212,52.3999146],[13.0467198,52.3999293],[13.0464432,52.4003053],[13.0464727,52.4004227],[13.0462912,52.3996206],[13.04724,52.4002883],[13.047077,52.4001605],[13.0470606,52.4002014],[13.0471075,52.4000799],[13.0471692,52.40012],[13.0470968,52.400111],[13.047115,52.4001407],[13.0470525,52.4001339],[13.0471129,52.4000525],[13.047182,52.4000901],[13.0472175,52.4000251],[13.0471417,52.4000136],[13.04719,52.4000615],[13.0473255,52.4000689],[13.0471712,52.4000353]],la=[[13.090523,52.3902458],[13.0894678,52.3902253],[13.0898744,52.3903953],[13.0894678,52.3902253],[13.0898744,52.3903953],[13.0892533,52.3901981],[13.090523,52.3902458]],ha=[[13.0486882,52.4512012],[13.0482991,52.4516614],[13.0488795,52.4511101],[13.0472995,52.450194],[13.0482874,52.451294],[13.0476033,52.453527],[13.0472765,52.4501731]],ca=[[13.022205,52.4062372],[13.0270321,52.4037821],[13.0263893,52.4038281],[13.0264314,52.4037715],[13.0232597,52.4040072],[13.0276086,52.4037861],[13.0261086,52.4035056],[13.0251978,52.4034182],[13.0348541,52.4035918],[13.0253004,52.4036956],[13.0353628,52.4041023]],ua=[[12.9924998,52.4107755],[12.9923569,52.4096053],[12.9918766,52.4099957],[12.9924808,52.4099918],[12.9924658,52.4101736],[12.9917598,52.4103077],[12.9923863,52.410355],[12.9924961,52.4103956],[12.9916508,52.4104367],[12.9921361,52.4104994],[12.9920443,52.4106059],[12.9919644,52.4106986],[12.9919924,52.410794]],da=[[13.1027064,52.370221],[13.103223,52.369965],[13.1038643,52.3696476],[13.1007297,52.3711941],[12.9838849,52.4134332],[12.9840836,52.4130953],[12.9836847,52.4132652],[12.9835846,52.4130227],[12.983456,52.4128648],[12.9842584,52.4133908],[12.9842641,52.4131375],[12.9837263,52.4124706],[12.9838964,52.4127675],[12.9841419,52.41287],[12.9832728,52.4124257],[12.9835853,52.4126795],[12.9833423,52.412556],[12.983807,52.4126169],[12.9836854,52.4123246],[13.1010705,52.3712777],[13.101342,52.3710176],[13.102085,52.3706205],[13.1026141,52.370267],[13.1031331,52.3700095],[13.103772,52.3696921],[13.1006651,52.3704568],[12.9841044,52.4134324],[13.1018554,52.370788]],fa=[[13.0914153,52.3795825],[13.0910574,52.3795935],[13.0912166,52.3795886],[13.0915717,52.3795776],[13.0927282,52.3785993],[13.0921283,52.3792341],[13.0927476,52.3788221],[13.0914147,52.3792564],[13.0933861,52.3789358],[13.0933671,52.3787144],[13.0939214,52.3799563],[13.0926595,52.379217],[13.0933491,52.3784961],[13.094105,52.3793653],[13.0934026,52.3791353],[13.093411,52.3792374],[13.0917611,52.3792456],[13.093358,52.378604],[13.0915866,52.379251],[13.0927187,52.3784905],[13.0933934,52.3790237],[13.0927378,52.3787095],[13.0923088,52.3792283],[13.093658,52.3793797],[13.091931,52.3792403],[13.0938997,52.3796936],[13.093932,52.3800859],[13.0933754,52.3788154],[13.0939108,52.3798275],[13.0924859,52.3792226],[13.0938745,52.3793727],[13.0924496,52.3795262]],ga=[[13.0267845,52.4680418],[13.0265135,52.4681497],[13.0275647,52.4683386],[13.0269117,52.4682034],[13.0270504,52.4688363],[13.0277901,52.4683329],[13.0270961,52.4690105],[13.0266056,52.4682996],[13.0274063,52.4691788],[13.0269515,52.4686942],[13.0273764,52.4689683],[13.0271757,52.4692077],[13.0273054,52.4686015],[13.0286971,52.4689107],[13.0289288,52.4689362],[13.0283606,52.4685422],[13.0278362,52.4688654],[13.0271653,52.4684737],[13.0280318,52.4685274],[13.0286201,52.4685586],[13.0281095,52.4688715],[13.0268702,52.4685659],[13.0277664,52.4685235],[13.0273657,52.4687952],[13.0283823,52.4688851],[13.0267216,52.4684276],[13.0280711,52.4702747],[13.0277716,52.470278],[13.0274518,52.4702774],[13.029405,52.4689191],[13.0274246,52.4701443],[13.0274131,52.4699198],[13.0282308,52.4696289],[13.0274163,52.4699723],[13.02815,52.4696243],[13.0274213,52.4700906],[13.0280691,52.4696196],[13.0279883,52.469615],[13.0285398,52.4697411],[13.0278143,52.4699997],[13.0275051,52.4695766],[13.0279139,52.4699997],[13.0281055,52.4700071],[13.0289686,52.4703732],[13.0282037,52.4700129],[13.0289898,52.4701773],[13.0283962,52.4700258],[13.0291315,52.4699913],[13.0284903,52.4700378],[13.0285543,52.4696474],[13.0291543,52.4697914],[13.0286119,52.4689022],[13.027508,52.46963],[13.0282971,52.4688795],[13.0292432,52.4692211],[13.0295735,52.4690615],[13.0280236,52.4688688],[13.0293409,52.4690011],[13.02775,52.4688658],[13.0284734,52.4696428],[13.0297094,52.4689183],[13.0294584,52.468723],[13.0297705,52.4688097],[13.0274028,52.4697492],[13.0283926,52.4696382],[13.0274059,52.4698018],[13.0283117,52.4696335]],_a=[[13.1052692,52.3811146],[13.1050131,52.3811956],[13.1050909,52.3813479],[13.1053483,52.3812807],[13.1053872,52.3814567],[13.105229,52.3816925],[13.1054945,52.3816049],[13.1055487,52.3818572],[13.1059163,52.3815926],[13.1058508,52.3814064],[13.1059382,52.3812361],[13.1058652,52.3810796],[13.1056474,52.3809649],[13.1060605,52.3807769],[13.1057291,52.3806915],[13.1063692,52.3824431],[13.1062968,52.3822867],[13.1062156,52.3821321],[13.1061416,52.3819879],[13.1062191,52.3818147],[13.1059954,52.3816782],[13.1067695,52.3830484],[13.1066302,52.3829854],[13.1065321,52.3827612],[13.1065902,52.3825614],[13.1061199,52.3824858],[13.1057278,52.3820029],[13.1058556,52.3821738],[13.1061569,52.3826388],[13.1059122,52.3823426]],ma=[],pa=[[13.0343279,52.4460933],[13.0339386,52.4460501],[13.0336513,52.4461179],[13.0341779,52.4457032],[13.0337943,52.4456624],[13.0331746,52.4457581],[13.0330201,52.4454438],[13.033201,52.4457947],[13.0333573,52.4453249],[13.0336568,52.4453186],[13.0339502,52.4452191],[13.0334107,52.4449687],[13.0331081,52.4449593],[13.032881,52.4450803],[13.0326368,52.445114],[13.0323247,52.4451568],[13.0318797,52.445151],[13.0318829,52.4455297],[13.0319451,52.4454754],[13.031847,52.4459987],[13.032952,52.4459552],[13.032809,52.4458115],[13.0325037,52.4455108],[13.0318232,52.4465262],[13.0322735,52.4464406],[13.0334061,52.4460642],[13.0324084,52.4459563],[13.0329812,52.4461485],[13.0327453,52.4462187]],ya=[[13.1222009,52.3609589],[13.1229264,52.3611237],[13.1233947,52.3611976],[13.12591,52.3618664],[13.1248445,52.3614846],[13.1242263,52.3616077],[13.1254073,52.3618811],[13.1252816,52.3615658],[13.1239284,52.3615191],[13.1261069,52.3617366],[13.1238282,52.361291],[13.1259033,52.3616853],[13.1243582,52.3614101],[13.1245786,52.3614512],[13.1256377,52.3618138],[13.1251681,52.3618297],[13.1234985,52.3610119],[13.1249267,52.3616901],[13.1245479,52.3617506],[13.1222741,52.3613221],[13.1232819,52.3613342],[13.1220423,52.3611615],[13.1207748,52.3616639],[13.1227203,52.3614119],[13.1203978,52.3617864],[13.1202097,52.3615202],[13.1245909,52.3611589],[13.1216882,52.3614795],[13.1160077,52.3622538],[13.1152805,52.3622136],[13.1150344,52.3621675],[13.1260539,52.3623164],[13.1225635,52.3609434],[13.1217973,52.3612398],[13.1223806,52.3615666],[13.1223603,52.3616586],[13.123592,52.3614327],[13.1237593,52.3614946],[13.1239573,52.3613173],[13.1250934,52.3615092],[13.1257549,52.3616331],[13.1240569,52.361338],[13.1255982,52.3616125],[13.1258723,52.3616717]],xa=[[13.0822849,52.3838815],[13.0821199,52.3837843],[13.0821361,52.3834929],[13.0822894,52.3828931],[13.0830016,52.3816312],[13.0834246,52.3819982],[13.082435,52.3817722],[13.0824602,52.3820231],[13.0825891,52.3838728],[13.0830773,52.383189],[13.0820183,52.3831341],[13.0819837,52.3829861],[13.0817929,52.3830149],[13.083287,52.3845733],[13.0821152,52.3825125]],Ea=[[13.1027331,52.3747594],[13.1027237,52.3746418],[13.1027143,52.3745242],[13.102706,52.3744203],[13.102697,52.3743074],[13.102688,52.3741946],[13.1026793,52.3740853],[13.102671,52.3739807],[13.1026621,52.3738698],[13.1026543,52.3737712],[13.1028323,52.3753134],[13.1041227,52.3752745],[13.103754,52.3752857],[13.1033853,52.3752968],[13.1030166,52.3753079],[13.103201,52.3753023],[13.1035696,52.3752912],[13.1039383,52.3752801],[13.1045249,52.3749124],[13.1039731,52.3749277],[13.104157,52.3749226],[13.104341,52.3749175],[13.103816,52.374961],[13.1036605,52.3749655],[13.103505,52.3749701],[13.1031991,52.3741064],[13.1032095,52.3742466],[13.1032199,52.3743868],[13.1032303,52.3745271],[13.1032407,52.3746673],[13.1032511,52.3748075],[13.1025977,52.3754679],[13.1026052,52.375558],[13.1026128,52.3756481]],wa=[[13.1065781,52.3811285],[13.1067833,52.3810859],[13.1069697,52.3810487],[13.1070347,52.3810253],[13.1062388,52.3809738],[13.106554,52.3808997],[13.1069596,52.3809554],[13.1070496,52.3808136]],Ca=[[13.0526375,52.410335],[13.0474717,52.4106708],[13.0480524,52.4105746],[13.0475604,52.4106683],[13.0476424,52.4106527],[13.0478064,52.4106214],[13.0479704,52.4105902],[13.0477244,52.4106371],[13.0478884,52.4106058],[13.0475604,52.4106683],[13.0518062,52.4095894],[13.0522209,52.409415],[13.0467961,52.4108142],[13.0024123,52.4585033],[13.0501581,52.4112593],[13.0500142,52.4099059],[13.0500843,52.4101227],[13.0502323,52.4101702],[13.0505197,52.4097694],[13.0519817,52.4105347],[13.0505938,52.409922],[13.0507151,52.4100762],[13.0510665,52.4096048],[13.051155,52.4097144],[13.0512837,52.4099059],[13.0511899,52.4099942],[13.0518349,52.4098824],[13.0521535,52.4098269],[13.0469445,52.4108305],[13.0471177,52.4108002],[13.0472874,52.4107713],[13.0464918,52.4108686],[13.0461628,52.4109302],[13.054031,52.4098293],[13.0539164,52.4098437],[13.049777,52.4112166]],Sa=[[13.0970686,52.3750492],[13.0968952,52.3750541],[13.0972421,52.3750443],[13.0965695,52.3750633],[13.0964016,52.3750681],[13.0974202,52.3750392]],Ta=[[13.121566,52.381564],[13.1210813,52.3806483],[13.1212974,52.3811478],[13.12157,52.3812717],[13.1205914,52.3804038],[13.1210379,52.380864],[13.1207192,52.3805432],[13.1211879,52.3810226],[13.1219039,52.3819375],[13.1209495,52.3801557],[13.1213283,52.3798556],[13.1205675,52.3793433],[13.1215738,52.3798086],[13.1199022,52.3792525],[13.119308,52.3793274],[13.1201042,52.3788825],[13.1206192,52.3785754],[13.1227761,52.3803022],[13.1220848,52.3806316]],Ra=[[13.140817,52.3816677],[13.1298106,52.3820249],[13.1304524,52.3823647],[13.1299559,52.3823121],[13.129819,52.3823114],[13.1321404,52.3821123],[13.1323689,52.3817775],[13.1319916,52.3818334],[13.1277413,52.3823045],[13.1301182,52.3819984],[13.130317,52.3818345],[13.1280163,52.382585],[13.1280523,52.3822663],[13.1281933,52.3825476],[13.1283505,52.3822223],[13.1284787,52.3825193],[13.1377135,52.3819296],[13.1379202,52.3813574],[13.1381393,52.3814518],[13.138347,52.3813481],[13.1385661,52.3813434],[13.1388876,52.3813291],[13.1391068,52.3814235],[13.1393145,52.3813198],[13.1395335,52.381315],[13.1398314,52.3813011],[13.1400506,52.3813955],[13.1402583,52.3812918],[13.1404774,52.381287],[13.1371461,52.3819],[13.1372035,52.3816914],[13.135641,52.3819806],[13.1374293,52.381385],[13.1412749,52.381194],[13.1297089,52.382038],[13.1278925,52.3825992],[13.1402999,52.3816647],[13.1388956,52.3817442],[13.138908,52.3818913],[13.1389206,52.3820409],[13.138933,52.3821888],[13.1396244,52.3817294],[13.1396356,52.3818827],[13.1396463,52.3820302],[13.1396572,52.3821796],[13.1403119,52.381818],[13.1403235,52.3819658],[13.1403357,52.3821204],[13.1341058,52.3820386],[13.1341327,52.3821867],[13.1341608,52.3823412],[13.1341882,52.3824916],[13.1333382,52.3820863],[13.133364,52.3822291],[13.1333897,52.3823713],[13.1334151,52.3825123],[13.1334408,52.3826541],[13.1359926,52.3818171],[13.1361765,52.3817998],[13.1358044,52.3818315],[13.1358982,52.3818233],[13.1357082,52.3818404],[13.1360727,52.3818103],[13.134908,52.3822821],[13.1348597,52.3819882],[13.134933,52.3824343],[13.1348837,52.3821344],[13.1355623,52.3815972],[13.1353418,52.3816121],[13.1351075,52.381628],[13.1346715,52.3816613],[13.1344569,52.381674],[13.1342131,52.3816884],[13.1336907,52.3817643],[13.1334254,52.3817854],[13.1331635,52.3818062]],Ia=[[13.098796,52.4567304],[13.0992225,52.4561808],[13.0988863,52.4565368],[13.0989623,52.4553651],[13.0986603,52.4560443],[13.0986045,52.4558605],[13.0984416,52.4554272],[13.0988857,52.4572897],[13.0993084,52.4559136],[13.0987713,52.4562655],[13.0987329,52.4570761],[13.0991859,52.4556589],[13.0989269,52.4551283]],va=[[12.9841669,52.4112021],[12.9837931,52.4112735],[12.9838778,52.4114064],[12.9839326,52.4115125],[12.9839647,52.4115626]],Aa=[[13.1031584,52.3954203],[13.1029998,52.3951812],[13.1033269,52.395387],[13.1029758,52.3952761],[13.103126,52.3955616],[13.1030117,52.3951346],[13.1032947,52.3955272],[13.1033054,52.3954806],[13.1028502,52.3953594],[13.1028255,52.395405],[13.1028007,52.3954505]],Ma=[[13.1013918,52.3949804],[13.1015172,52.395169],[13.1010347,52.3942365]],La=[[13.0413122,52.4540875],[13.0400807,52.4539329]],Pa=[[13.0133425,52.4223647],[13.0132212,52.4222269],[13.0131126,52.4221035],[13.0129941,52.4219688],[13.0128862,52.4218462],[13.0127668,52.4217105],[13.0127969,52.4225416],[13.0126781,52.4224072],[13.012569,52.4222838],[13.012449,52.422148],[13.0123416,52.4220265],[13.0122267,52.4218966],[13.0118575,52.4219074],[13.0117026,52.4217339],[13.0120453,52.4217192],[13.0123045,52.4216322],[13.0125572,52.4215472],[13.0136923,52.4223068],[13.0135916,52.4221926],[13.0134888,52.4220759],[13.0133866,52.42196],[13.0132869,52.4218469],[13.0131831,52.4217293],[13.0130763,52.4216081],[13.0129605,52.4214768],[13.0128389,52.4213388],[13.0124876,52.4211627],[13.0125236,52.4209827],[13.011697,52.4208484],[13.0119176,52.4209477],[13.0121711,52.4210377],[13.0120242,52.4212761],[13.0117664,52.42137],[13.0114811,52.4212758],[13.0113639,52.4211427],[13.0111619,52.4213403],[13.0110358,52.4211988],[13.0112471,52.42101],[13.0109126,52.4210606]],ba=[[13.1431253,52.3664792],[13.1429681,52.366329],[13.1436285,52.3665496],[13.1438474,52.3668147],[13.1440149,52.3668566],[13.1442076,52.3670169],[13.1430602,52.3664335]],Fa=[[13.0585106,52.4550633],[13.0592573,52.4552291],[13.0595888,52.4552553],[13.0593393,52.4552313]],Da=[[13.0596075,52.4128239],[13.0596008,52.4123946],[13.0590715,52.4105918],[13.0594783,52.4135141],[13.0591565,52.4109253],[13.0594062,52.411683],[13.0587382,52.4096803],[13.058706,52.4095928],[13.059243,52.4112432],[13.0596324,52.4124813],[13.0592638,52.4111028],[13.059592,52.4130804],[13.0584302,52.4166835],[13.0577768,52.4167233],[13.0588422,52.416416],[13.0589914,52.4161821],[13.059477,52.4101688],[13.0578168,52.4169253],[13.0564297,52.4171384],[13.0591862,52.4100566],[13.0594316,52.4141162],[13.0594268,52.4142119],[13.0594464,52.4138782],[13.0596903,52.4129043],[13.0556659,52.4181535],[13.0568792,52.4168635],[13.059491,52.4098774],[13.0595046,52.4099567],[13.0594129,52.4100016],[13.0592879,52.4100146],[13.0589653,52.4100109],[13.0589412,52.409928]],ka=[[13.1299978,52.3840077],[13.1310158,52.384089],[13.1306933,52.38413],[13.1325121,52.3840292],[13.1303088,52.3836772],[13.1328021,52.3837347],[13.1323368,52.3838113],[13.1300999,52.383737],[13.132388,52.3835059],[13.1327482,52.3834631],[13.1306248,52.383506],[13.1302756,52.3839592],[13.1320906,52.3834762]],Oa=[[13.067179,52.35028]],Ga=[[13.0818679,52.3728279],[13.0809153,52.3726258],[13.0805901,52.3725174],[13.0805044,52.3724764],[13.0832586,52.3735116],[13.0836624,52.3736662],[13.0840311,52.3738395],[13.0842853,52.373897],[13.0844045,52.3739573],[13.0847293,52.3742257],[13.0850687,52.3742552],[13.0853686,52.3743938],[13.0843961,52.3735244],[13.0822021,52.3729837],[13.0827256,52.3731155],[13.0824773,52.3726735],[13.0823455,52.3724763],[13.0816467,52.3723519],[13.0812231,52.3723011],[13.0814539,52.3726752],[13.0806127,52.3721815],[13.0810053,52.3720932],[13.0841663,52.3733708],[13.0834875,52.3731315],[13.0839643,52.3732128],[13.0855144,52.3740414],[13.0856295,52.3741483],[13.0851572,52.3739305],[13.0796484,52.3735918]],Na=[[13.0961701,52.458521],[13.098476,52.4606523],[13.0981836,52.4605079],[13.0965805,52.4590421],[13.0975323,52.4591054],[13.0967596,52.4571079],[13.0979787,52.4602724],[13.0974819,52.4604365],[13.0970424,52.4580916],[13.0974092,52.4589689],[13.0991123,52.4609536],[13.0989352,52.4608022],[13.0967281,52.45692],[13.0968963,52.4593523],[13.0964764,52.4566276],[13.0972731,52.4600333],[13.0979148,52.4599706],[13.0988135,52.4607411],[13.0976303,52.4607515],[13.0978596,52.4608488],[13.0976744,52.4594773],[13.0978556,52.4595683],[13.0977818,52.4593008],[13.0968951,52.4576872],[13.0969341,52.4574845],[13.0968396,52.457289],[13.0969575,52.4579631],[13.097049,52.4596004]],za=[[13.032484,52.4129474],[13.0320816,52.4128398],[13.0325901,52.4125162],[13.0327437,52.4129456],[13.0327859,52.4133352],[13.0336285,52.4122983],[13.033745,52.4119199],[13.0332005,52.411609],[13.0344491,52.4107051],[13.0346051,52.411207],[13.0341858,52.4112972],[13.0348502,52.4107542],[13.0342624,52.4110601],[13.0345677,52.4113182],[13.0338161,52.4116876],[13.0342229,52.4111822],[13.0341464,52.4114194],[13.033706,52.4120443],[13.0330813,52.4119861],[13.0336042,52.4116606],[13.0331227,52.4118717],[13.034686,52.4109661],[13.0329993,52.4122258],[13.0330395,52.4121122],[13.034665,52.4107313],[13.0333965,52.4116335],[13.034645,52.411088],[13.0336686,52.412167],[13.0340253,52.4106503],[13.03424,52.4106764],[13.0335441,52.4112176],[13.0336223,52.4109874],[13.0335839,52.4111004],[13.0335035,52.4113372],[13.03345,52.4129156],[13.0344997,52.4130293]],Wa=[[13.0566752,52.4078542],[13.0566409,52.4076675],[13.0565378,52.4081905],[13.0565332,52.408016],[13.0563807,52.4078183],[13.0549322,52.4083269],[13.0566307,52.4074921],[13.0562735,52.407537],[13.0560608,52.4082175]],Ba=[[13.1052551,52.4686855],[13.106459,52.4686399],[13.1038482,52.4683671],[13.1051289,52.4683144],[13.104698,52.4683352],[13.1042724,52.4683496],[13.1059802,52.4682888],[13.1055572,52.4683048],[13.1027117,52.4685194],[13.1030014,52.4685553],[13.1039393,52.4683644],[13.1043635,52.4683469],[13.1047891,52.4683325],[13.10522,52.4683117],[13.1056483,52.4683021],[13.1060713,52.4682861],[13.1054555,52.4686749],[13.1055244,52.4686735],[13.1055933,52.468672],[13.1058368,52.4686602],[13.1059202,52.4686584],[13.1060036,52.4686567],[13.1047641,52.4687046],[13.1046701,52.4687065],[13.1044212,52.4687181],[13.1043287,52.4687199],[13.1040782,52.4687301],[13.1039685,52.4687322],[13.1037101,52.468744],[13.1036288,52.4687455],[13.106839,52.4684402],[13.1067826,52.468553],[13.1068485,52.4686224],[13.1071394,52.468555],[13.1072996,52.4686028],[13.1074215,52.4685435],[13.1078909,52.4685331],[13.1078048,52.4684235],[13.1078279,52.4683279],[13.1076518,52.4682346],[13.1075768,52.4681327],[13.1073855,52.4681153],[13.1070003,52.4681343],[13.1068046,52.4681384],[13.1067064,52.4680941]],Ka=[[13.0117616,52.4246372],[13.0125227,52.4243411]],Xa=[[12.9881116,52.4102336],[12.9881506,52.4106494],[12.9878001,52.4106689]],Va=[[12.9809536,52.476877],[12.9818462,52.4777161],[12.9824347,52.4787646],[12.981291,52.4776573],[12.9813623,52.4778499],[12.9819708,52.4785587],[12.9820094,52.4787675],[12.9814863,52.4772166],[12.9816879,52.4781091],[12.9814312,52.4770889],[12.9809435,52.4771309],[12.9823619,52.4783655],[12.9818144,52.4783636],[12.9824229,52.4785606],[12.9809993,52.4772993],[12.9814506,52.4787453],[12.9811435,52.4774649]],Ya=[[13.1078016,52.3915141],[13.1077196,52.3911327],[13.1077008,52.3910485],[13.1076526,52.3908263],[13.108029,52.3911105],[13.1080102,52.3910263],[13.1076338,52.3907422],[13.1079603,52.3907832],[13.1079415,52.390699],[13.1009269,52.4690213],[13.1009495,52.4691872],[13.1007898,52.4690259],[13.1008124,52.4691917]],Za=[[13.0561995,52.4593912],[13.056501,52.4581731],[13.0542383,52.4589422],[13.0540559,52.4590041],[13.0555046,52.4588475],[13.0558565,52.458117],[13.0567158,52.4582225],[13.0557567,52.4586765],[13.0589889,52.4570454],[13.0600562,52.4571009],[13.0597519,52.4574462],[13.0590688,52.4567764],[13.0598633,52.4573803],[13.0603679,52.4571018],[13.0596151,52.4568732],[13.058828,52.4572665],[13.055666,52.4589249],[13.0592264,52.4567308],[13.052387,52.4587629],[13.0527402,52.4589607],[13.0591472,52.4567519]],Ha=[[13.0461463,52.421209],[13.0459909,52.4213264],[13.0453716,52.4220957],[13.0456788,52.4216089],[13.0451705,52.4222853],[13.045501,52.4217403],[13.0459934,52.4215098]],Ua=[[13.0722677,52.4037168],[13.0737349,52.4038361],[13.073157,52.4020517],[13.0748653,52.4028142],[13.0743781,52.4040003],[13.074007,52.4031915],[13.0734341,52.4035524],[13.0737076,52.4039242],[13.0725848,52.4032491],[13.072613,52.4027771],[13.0735754,52.401462],[13.0755028,52.4029269],[13.0756442,52.4034572],[13.0758451,52.4024191],[13.0735376,52.4010762],[13.075368,52.4041975],[13.0745224,52.4024975],[13.074744,52.4034001],[13.0738973,52.4034875],[13.0732816,52.4022715],[13.0725005,52.4022505],[13.0757645,52.4037601],[13.0721588,52.4028384],[13.071382,52.4027401],[13.0720456,52.4025752],[13.0731031,52.4020004],[13.0729594,52.4018615],[13.0728424,52.4017483],[13.0745296,52.4019148],[13.0744595,52.4032889],[13.0708379,52.4028842],[13.0754624,52.4040076],[13.0755006,52.4024001],[13.07567,52.4034918],[13.0738217,52.4036315],[13.0739994,52.4037902],[13.0739033,52.4037044],[13.0740792,52.4038614],[13.0751297,52.4022559],[13.0741175,52.4030474],[13.0748259,52.4036099],[13.0710437,52.4028072],[13.0722043,52.4027081]],ja=[[13.0934984,52.3774455],[13.0956647,52.3789438],[13.0969517,52.3775915],[13.0957165,52.3795394],[13.0969838,52.3786828],[13.0950022,52.3780932],[13.0955489,52.3776738],[13.0913597,52.3780713],[13.0915334,52.3780667],[13.0917048,52.3780622],[13.0918582,52.3780581],[13.0920764,52.3780523],[13.0922499,52.3780477],[13.0924069,52.3780435],[13.0925638,52.3780394],[13.09135,52.3783962],[13.0915253,52.3783905],[13.0912098,52.3784008],[13.0922598,52.3783666],[13.0920952,52.378372],[13.0919501,52.3783767],[13.0916857,52.3783853],[13.0923923,52.3783623],[13.094351,52.3779966],[13.0944589,52.3782785],[13.0942493,52.3782851],[13.0940387,52.3782916],[13.097498,52.3775199],[13.0951241,52.3777817],[13.0976665,52.3774438],[13.0965078,52.3786431],[13.097063,52.3781093]],qa=[[13.03578,52.3924248],[13.0350732,52.3917184],[13.0361568,52.3916292],[13.0372403,52.3920524],[13.0369971,52.3919082],[13.0367698,52.39189],[13.0365431,52.3918719],[13.0363077,52.3918531],[13.0361271,52.3918399],[13.0359683,52.3917444],[13.0357955,52.3916535],[13.0356222,52.3915624],[13.0393067,52.3921683],[13.0395468,52.3921946],[13.039787,52.392221],[13.0377565,52.3919675],[13.0379581,52.3920715],[13.038177,52.3920883],[13.0383957,52.3921051],[13.0386145,52.3921218],[13.0379761,52.3919843],[13.0353079,52.3918707],[13.0357927,52.3919687],[13.0357927,52.3919687],[13.035823,52.3922018],[13.0359553,52.3922114],[13.0386794,52.3925256],[13.0386503,52.3926403],[13.0397541,52.3925088],[13.0395563,52.3924904],[13.0393585,52.3924721],[13.0391607,52.3924537],[13.0389628,52.392435],[13.0387651,52.3924163],[13.0347552,52.3917167],[13.0347562,52.3915787],[13.0350302,52.3915602],[13.0353079,52.3918707],[13.0374974,52.3920413],[13.0376825,52.3920538]],$a=[[13.0780393,52.3887716],[13.0800894,52.3875551],[13.0766976,52.3889682],[13.0769119,52.388787],[13.0773605,52.3884217],[13.0811989,52.3867577],[13.0809436,52.3875815],[13.0805723,52.3876968],[13.0801164,52.3875849],[13.0768086,52.3888189],[13.0800005,52.3877935],[13.0799687,52.3875959],[13.0806563,52.3870044],[13.080404,52.3870718]],Ja=[[12.9919524,52.4123682],[12.9915543,52.4120462],[12.9915938,52.4124899],[12.9915973,52.4124363],[12.9915215,52.4123308],[12.9915276,52.4122772]],Qa=[[12.9568787,52.4302767],[12.9543084,52.4308603],[12.9547347,52.430334],[12.9555822,52.4302688],[12.9563268,52.4306425],[12.9570549,52.4302652],[12.9573246,52.430648],[12.9587702,52.4305821],[12.9582969,52.4300796],[12.9542359,52.4309802],[12.9579189,52.4302747],[12.9583282,52.4306397],[12.9555769,52.4306262],[12.9565798,52.4306441],[12.9575788,52.4306347],[12.9553394,52.4302548],[12.9577427,52.4302862],[12.9557585,52.4302573],[12.9545907,52.43066],[12.9586857,52.4300728],[12.9583462,52.4302747],[12.9551653,52.4302688],[12.9547575,52.4306247],[12.957306,52.4302824],[12.95817,52.4302862],[12.9564524,52.4302743],[12.9587165,52.4302397],[12.9558222,52.4306184],[12.9583122,52.4301835],[12.9574822,52.4302709],[12.9568276,52.4306488],[12.9566286,52.4302628],[12.9578305,52.4306363],[12.9550472,52.4307695],[12.9548048,52.4307963],[12.9560209,52.4302731],[12.9560802,52.4306207],[12.9570754,52.4306503],[12.9580796,52.4306379],[12.9547322,52.4309255],[12.958743,52.4304101],[12.9549011,52.4303489],[12.9561972,52.4302616]],el=[[13.0187558,52.4682609],[13.0189076,52.4684215],[13.0190789,52.468552],[13.0186064,52.4674729],[13.0185877,52.4676237],[13.018584,52.4677766],[13.0186021,52.4679523],[13.0182213,52.4674377],[13.0188034,52.4685459],[13.0181945,52.467681],[13.0184338,52.4684048],[13.0186004,52.4683529],[13.0182806,52.4681718],[13.0184604,52.4681403],[13.0182059,52.4679249],[13.0183926,52.4679176],[13.0183817,52.4676831],[13.0184076,52.4674487],[13.0186538,52.4686144]],tl=[[13.0470668,52.4082244],[13.0472649,52.4085125],[13.0480639,52.4104286],[13.044974,52.4084137],[13.0453763,52.4082329],[13.0462103,52.4080608],[13.0458457,52.4082002],[13.0451228,52.4082754],[13.0464417,52.4080267],[13.0466637,52.4080408],[13.0471896,52.4086878],[13.0471251,52.4086648],[13.0475691,52.4094339],[13.0477326,52.4097423]],il=[[13.0165536,52.4336223],[13.0167539,52.4332364],[13.0165677,52.4332453],[13.0167188,52.4335035],[13.0165474,52.4334474],[13.0167207,52.4328749],[13.0166251,52.4329895]],nl=[[13.0929924,52.3927931],[13.0929924,52.3927931],[13.0935047,52.3926004],[13.0935433,52.3927857],[13.0922486,52.3927367],[13.0930381,52.3926921],[13.0927765,52.39276],[13.0934356,52.3925173],[13.0934381,52.3932292],[13.0925437,52.3927291],[13.0927131,52.3930329],[13.0933443,52.3927825],[13.0933772,52.3928296],[13.0935571,52.3930677],[13.0935296,52.3930229]],sl=[[13.0297101,52.4137194],[13.0301453,52.4139172],[13.0296737,52.4140437],[13.03107,52.4139478],[13.0299203,52.4140396],[13.0305735,52.4138875],[13.0300279,52.4141875],[13.0296557,52.4142083],[13.0306799,52.4138976],[13.0303078,52.4139042],[13.0308272,52.4140549]],rl=[[13.1079306,52.4728194],[13.1074532,52.4728469],[13.1085978,52.4727055],[13.1080185,52.4725258],[13.1083229,52.4724735],[13.1086088,52.4723108],[13.1086954,52.4723312]],ol=[[12.9680466,52.4572574],[12.9681094,52.4575003],[12.967968,52.4576711],[12.9678598,52.4579569],[12.9677404,52.4581534],[12.9675908,52.458381],[12.9680391,52.4584773],[12.9681459,52.4582632],[12.9683348,52.4579937],[12.9684575,52.4577669],[12.9684092,52.4576241],[12.9684699,52.457273],[12.9684745,52.4570814]],al=[[12.9643799,52.4096962],[12.9645872,52.4096452],[12.9647536,52.4098856],[12.9649133,52.40976],[12.9651579,52.4093779],[12.964801,52.4096055]],ll=[[13.036198,52.4456608],[13.0361225,52.4454788],[13.0359734,52.4452863],[13.0358826,52.4450943],[13.035795,52.4449166],[13.0357172,52.4447633],[13.0356315,52.4445841],[13.0355631,52.4444411],[13.0354887,52.444274],[13.0354325,52.444141],[13.0353808,52.4439806],[13.0354717,52.4437668],[13.035172,52.4434732]],hl=[[13.0844828,52.4146363],[13.0863235,52.4138459],[13.0858816,52.413784],[13.0859913,52.4140074],[13.0848087,52.414445],[13.083743,52.4148586],[13.0854493,52.4141798],[13.0851947,52.4142957],[13.0843025,52.4148453],[13.0810522,52.4157676],[13.0804132,52.4157345],[13.0813627,52.4152289],[13.0811717,52.4156993],[13.0819488,52.415551],[13.082807,52.4153996],[13.0843279,52.4154256]],cl=[[13.0665849,52.3829317],[13.0661875,52.382401],[13.0667518,52.3829082],[13.0665125,52.3821561],[13.0662451,52.382589],[13.064232,52.3822742],[13.0657889,52.3823729],[13.0650247,52.3811696],[13.0641141,52.3806738],[13.0638012,52.3812206],[13.0618734,52.3807283],[13.0652273,52.3801529],[13.0652315,52.3802621],[13.0636102,52.3808322],[13.0664782,52.3828243],[13.0649581,52.3819315]],ul=[[13.1070033,52.4560217],[13.1070258,52.4562188],[13.1075306,52.4565045],[13.1069555,52.4564401],[13.1048773,52.458705],[13.1047758,52.4581599],[13.1055464,52.4602565],[13.105136,52.4593176],[13.1052316,52.459792],[13.1050476,52.4588531],[13.1056367,52.4574016],[13.1051748,52.4600026],[13.105029,52.4590774],[13.1061753,52.4616955],[13.1065177,52.4635279],[13.1058043,52.4634856],[13.1065393,52.4602],[13.1058197,52.4636661],[13.1068036,52.4619193],[13.1067601,52.4616262],[13.1068833,52.4613474],[13.1068574,52.4611],[13.1066633,52.4632425],[13.1067096,52.4630366],[13.1062772,52.4597701],[13.1059391,52.4630307],[13.1060606,52.4594515],[13.1067887,52.4624498],[13.1064964,52.4607124],[13.1057708,52.4649019],[13.1057494,52.46456],[13.10578,52.4642145],[13.1063337,52.4653744],[13.1060586,52.4650221],[13.1059716,52.4643688],[13.106149,52.4647732],[13.1075405,52.4665897],[13.1066402,52.4645034],[13.1066868,52.4671251],[13.1069453,52.4651761],[13.1080852,52.4673555],[13.106998,52.4654156],[13.1068418,52.4649287],[13.1065603,52.4642829],[13.1065204,52.4638241],[13.1070474,52.467189],[13.1082249,52.4671569],[13.107989,52.4677561],[13.1076008,52.4669007],[13.1073642,52.467725],[13.1081229,52.4675557],[13.1071896,52.4674433],[13.1063926,52.465755],[13.1077219,52.4561597],[13.1080686,52.4557347],[13.1066055,52.463439],[13.105206,52.4575185],[13.1056028,52.4576665],[13.1057772,52.4640302],[13.1067715,52.4604687],[13.1065055,52.4640005],[13.1061026,52.4598944],[13.107209,52.4556599],[13.1068461,52.4567034],[13.1061695,52.4618856],[13.1063213,52.4523093],[13.10876,52.4553872],[13.1091086,52.4553802],[13.1065687,52.4556271],[13.1083181,52.4552909],[13.1073469,52.4570657],[13.10795,52.4555777],[13.1079978,52.4554123],[13.1074433,52.4567996],[13.1048498,52.4579942],[13.1050121,52.4577497],[13.1055187,52.4604679],[13.1059974,52.463743],[13.1069764,52.460767],[13.104569,52.4582136],[13.1055741,52.4607807],[13.1058484,52.4607894],[13.1047516,52.4585291],[13.1073104,52.4554267],[13.1067187,52.4622438],[[13.106823,52.4645407],[13.1066177,52.4645573],[13.1066292,52.4646102],[13.1067147,52.4646033],[13.1067291,52.4646698],[13.106642,52.4646768],[13.106659,52.4647549],[13.106866,52.4647381],[13.106823,52.4645407]],[13.106936,52.4658261],[13.1077209,52.4561689],[13.1052559,52.4606496],[13.1053762,52.459164],[13.1069299,52.4626406],[13.1072774,52.4558296]],dl=[[12.9870306,52.4060255],[12.9883706,52.4062738],[12.9882408,52.4061878],[12.987461,52.4061889],[12.988376,52.406473],[12.9871607,52.4061803],[12.9871462,52.4063155],[12.9869885,52.4065012],[12.9868088,52.4066046],[12.9877108,52.4064734],[12.9873578,52.4066174],[12.9873485,52.4067638],[12.9869181,52.4067913],[12.9870182,52.4068769]],fl=[[13.0378729,52.4442263],[13.0375529,52.4434678],[13.038006,52.444612],[13.0380822,52.4440134],[13.0381393,52.4436205],[13.0382925,52.4441483],[13.0383522,52.4443291],[13.0380062,52.4434253],[13.0378674,52.4427406],[13.0387647,52.4454763],[13.0383445,52.4446209],[13.0381337,52.4449437],[13.0381479,52.4452943],[13.0382556,52.4454839],[13.0385511,52.4450187],[13.0380606,52.4438303],[13.0378257,52.4431583],[13.036909,52.4426638],[13.0373397,52.4430747],[13.0371772,52.4426847],[13.0375566,52.4425571],[13.0383859,52.444999],[13.038323,52.4448158]],gl=[[12.9846395,52.4110366],[12.9852015,52.4109782],[12.9848606,52.4107633],[12.9850124,52.4111559],[12.9847893,52.4112712],[12.9844246,52.4108347]],_l=[[13.0911034,52.3825425],[13.0918653,52.3827895],[13.092197,52.382645],[13.0928612,52.3816637],[13.0907717,52.3815446],[13.0932836,52.3818637],[13.0912176,52.3815311],[13.0929374,52.3821298],[13.0932722,52.3817354],[13.0920599,52.3821545],[13.0909882,52.3815416],[13.0926585,52.3816695],[13.0923134,52.3821477],[13.0932968,52.3820013],[13.0918688,52.3815196],[13.0931876,52.3821232],[13.0925223,52.3821374],[13.0916812,52.381523],[13.0927244,52.3821328],[13.0915083,52.3815276],[13.0930771,52.3816625]],ml=[[12.9852956,52.4124228],[12.9853909,52.4125544],[12.9859129,52.4126735],[12.9856863,52.4123261],[12.9861563,52.4132101],[12.9860382,52.413014],[12.9852559,52.4120766],[12.9856118,52.4132469],[12.9855558,52.4121725],[12.9855121,52.4120105],[12.9850205,52.411952],[12.985224,52.4122574],[12.9855585,52.4129858],[12.9853996,52.4126552],[12.9854212,52.4127191],[12.985692,52.4123786],[12.9857259,52.4124366]],pl=[[13.1069147,52.4044749],[13.1060757,52.4056621],[13.1070246,52.404983],[13.1057169,52.4053625],[13.1060015,52.4051794],[13.106962,52.4037352],[13.1071338,52.4040669]],yl=[[13.0197176,52.3848764],[13.0194885,52.3841154],[13.0191952,52.3839637],[13.0194152,52.3843706],[13.0178893,52.3821103],[13.0178282,52.3822481],[13.0193267,52.3830412],[13.0186831,52.3830835],[13.0188962,52.3829934],[13.0191063,52.3829045],[13.0189339,52.3840709],[13.0189952,52.3841841],[13.0190565,52.3842972],[13.0191175,52.3844104],[13.0185265,52.3833997],[13.0186104,52.3835232],[13.0183586,52.3831526],[13.0184432,52.3832772],[13.018401,52.383215],[13.0185683,52.3834613],[13.0184851,52.3833388],[13.0179418,52.3823843],[13.0179739,52.3824435],[13.018006,52.3825027],[13.0180381,52.3825618],[13.0180702,52.382621],[13.0181023,52.3826802],[13.0181344,52.3827393],[13.0181665,52.3827985],[13.0181986,52.3828577],[13.0182307,52.3829168],[13.0182628,52.382976],[13.0182949,52.3830352],[13.0190823,52.3830352],[13.0192084,52.3833035],[13.0188431,52.3834094],[13.0189806,52.3832983]],xl=[[13.0158818,52.4205666],[13.0164734,52.4204459],[13.0143869,52.4209131],[13.015245,52.4206968],[13.0146553,52.4208533],[13.0154214,52.4209692],[13.0149414,52.4207816],[13.0157603,52.4209119],[13.0163245,52.4207804],[13.0166207,52.4206778],[13.0161913,52.4205068],[13.0144975,52.4211459],[13.0148846,52.4209501],[13.0150785,52.4210552],[13.016062,52.4208342],[13.0140062,52.4213005]],El=[[13.0430552,52.4121216],[13.0432145,52.4120924],[13.0433976,52.4120588],[13.0431836,52.4126053],[13.0432907,52.4125843],[13.0434393,52.4125553],[13.0435984,52.4125241],[13.0434314,52.4130703],[13.0435398,52.4130509],[13.04371,52.4130205],[13.0438763,52.4129908],[13.042942,52.412919],[13.0427992,52.4126314],[13.0428955,52.4128254],[13.0428437,52.4127211],[13.0420609,52.4123047],[13.0422222,52.4122751],[13.0423866,52.4122443],[13.042551,52.4122135]],wl=[[12.9640822,52.4092929],[12.9643117,52.4092454],[12.9644496,52.4094721],[12.9646098,52.4093445],[12.9644919,52.4091821],[12.9648712,52.4089704]],Cl=[[13.038331,52.4384105],[13.0383599,52.4382126]],Sl=[[13.1083792,52.4131643],[13.1089026,52.4129591],[13.1087168,52.4130934],[13.108977,52.4126928],[13.1083707,52.4119971],[13.1083696,52.4126548],[13.1084609,52.4125534],[13.1081778,52.4129118],[13.109138,52.4118161],[13.109387,52.4115963],[13.1094197,52.411534],[13.1095176,52.4111409],[13.107359,52.4131101],[13.1078079,52.4129244],[13.1078306,52.4131779],[13.1089087,52.4125139],[13.1090284,52.4125056],[13.1090436,52.4121366],[13.1091001,52.4120714],[13.1090343,52.4122824],[13.1089836,52.4123497],[13.1084492,52.4122871],[13.1085233,52.4122938],[13.1083454,52.4127569],[13.1093956,52.4110348],[13.108751,52.4111351]],Tl=[[12.9786717,52.4144867],[12.9788908,52.4134568],[12.9786489,52.4151424],[12.9796118,52.414068],[12.9796032,52.4143427],[12.9795729,52.4145236],[12.979593,52.4146783],[12.979538,52.414823],[12.9796618,52.4150559],[12.9796609,52.4151072],[12.97966,52.4151584]],Rl=[[13.0662659,52.381221]],Il=[[12.9913599,52.4092121],[12.9911697,52.4093189],[12.9910882,52.4093399],[12.9909267,52.409445],[12.9908451,52.4094659]],vl=[[13.1075735,52.4706012],[13.1069763,52.470204],[13.1071798,52.4706029],[13.1071121,52.4704703],[13.1070442,52.4703371],[13.1067937,52.4699771],[13.1067194,52.4697835],[13.1066569,52.4695888],[13.1066147,52.4693914]],Al=[[13.1290367,52.3861952],[13.1291044,52.3859401],[13.1282081,52.3861862],[13.1294478,52.3852992],[13.1289452,52.3838474],[13.1289884,52.3852224],[13.1290554,52.384441],[13.1289483,52.3843215],[13.1290354,52.3841308],[13.1294598,52.3843726],[13.1288177,52.3851315]],Ml=[[12.9843501,52.476676],[12.9845159,52.4768705],[12.9851987,52.4773376],[12.9848041,52.4770683],[12.9847211,52.4770399],[12.9855158,52.4774265],[12.9839183,52.4767554],[12.9840274,52.4769203],[12.9841708,52.4770397],[12.9847683,52.4774611],[12.9850147,52.4776096]],Ll=[[12.9859073,52.410999],[12.9855161,52.4109039],[12.9854903,52.4110595],[12.9853208,52.4106685],[12.9855793,52.4105667]],Pl=[[13.0510027,52.4057732],[13.0500643,52.4063996],[13.0513363,52.4057836],[13.0509798,52.4056572],[13.0515445,52.4065027],[13.0511342,52.4061367],[13.0510564,52.4062022],[13.0506556,52.4062517]],bl=[[13.1131943,52.3579613],[13.1120374,52.3595444],[13.1124142,52.3594485],[13.1125132,52.3592794],[13.1125965,52.3591321],[13.1177741,52.3575878],[13.1181918,52.3566836],[13.1147101,52.3573297],[13.1181478,52.3571168],[13.1148537,52.3566823],[13.1144625,52.3601871],[13.1169763,52.3577649],[13.1171069,52.3557837],[13.1148701,52.3559286],[13.1151143,52.3561126],[13.1154062,52.3567701],[13.1154433,52.3567204],[13.1155071,52.356635],[13.114045,52.3584389],[13.1179346,52.3580986],[13.1153034,52.356488],[13.1149011,52.3564765],[13.114936,52.3564241],[13.1122997,52.3595308],[13.1122806,52.3592169],[13.1126088,52.3591995],[13.1154798,52.3557472],[13.1145027,52.355891],[13.1155767,52.3586074],[13.1136031,52.3581913],[13.1132655,52.3589216],[13.1128444,52.3583734],[13.1125436,52.3593669],[13.1126259,52.3590725],[13.1155439,52.3565741],[13.1154755,52.3566805],[13.1165677,52.3574778]],Fl=[[13.0521405,52.4268331],[13.051587,52.4267562],[13.0515783,52.4266028],[13.0515698,52.4264495],[13.0536446,52.4268167],[13.0533922,52.426819],[13.052633,52.4268274],[13.0523868,52.4268303],[13.0515002,52.4251754],[13.0515552,52.4261722],[13.0515477,52.4259129],[13.0514909,52.4256566],[13.0522232,52.4262823],[13.0522381,52.4264652]],Dl=[[12.990998,52.4121018],[12.9909278,52.412515],[12.9906224,52.4124884],[12.9909292,52.4124597],[12.9906186,52.4124277],[12.9909163,52.412348],[12.990919,52.4122945],[12.9906326,52.4114191]],kl=[[13.0805483,52.3746267],[13.0806477,52.3744],[13.080161,52.3745779],[13.080765,52.3742753],[13.0809706,52.3738829],[13.0809576,52.3741419],[13.0811329,52.3735502],[13.0810298,52.3737127],[13.0813615,52.3734066],[13.0805433,52.3736731],[13.08065,52.3735348],[13.080692,52.3733391],[13.0812152,52.3731878],[13.0798875,52.3746746],[13.0802761,52.3742703],[13.0802567,52.3744304],[13.0801725,52.3740893],[13.0804584,52.3739814],[13.0804324,52.3738153],[13.0808526,52.3732223],[13.0808433,52.3728821],[13.0802777,52.3729444],[13.0823705,52.372164],[13.0813405,52.3720172],[13.0815447,52.3718959],[13.0815493,52.3717398],[13.0809228,52.3717587],[13.0817232,52.3716094],[13.0821795,52.3717666],[13.0818531,52.3714757],[13.0810071,52.3716245],[13.0819237,52.3713453],[13.0821784,52.3709166],[13.0813258,52.371273],[13.0820821,52.3707454],[13.0822496,52.3706397],[13.0821729,52.3704827],[13.0828368,52.3704332],[13.0826447,52.370824],[13.0828037,52.3705645],[13.0823761,52.3710791],[13.0829544,52.3710979],[13.0822897,52.3712429],[13.0821804,52.371386],[13.0821935,52.371572],[13.0821485,52.3719468],[13.0820024,52.3719986],[13.0814976,52.3740101],[13.0801505,52.3749258],[13.081039,52.3747337],[13.0820925,52.3710739],[13.0820581,52.3711361]],Ol=[[13.0650273,52.3800515],[13.0641925,52.3798234],[13.0648534,52.3800879],[13.0636838,52.3800815],[13.0642486,52.3797712]],Gl=[[13.0582444,52.4219551],[13.0582785,52.4221196],[13.0587885,52.4215154],[13.0586731,52.4216622]],Nl=[[13.0521441,52.4090448],[13.052149,52.4093141],[13.0516204,52.4090484],[13.0522041,52.4087751],[13.0517077,52.4087256],[13.0528134,52.4076189],[13.0521888,52.4076932],[13.0524597,52.4076619],[13.0532945,52.4075729],[13.0525395,52.4076506],[13.0524625,52.4076709],[13.0518368,52.4080757],[13.052605,52.4079161],[13.0468504,52.4068791],[13.0531336,52.4079408]],zl=[[12.9912393,52.4111019],[12.9911319,52.4111562],[12.9911055,52.4112648],[12.9911442,52.411486]],Wl=[[13.1420288,52.3775861],[13.1442592,52.3783588],[13.1393437,52.3761342],[13.1393268,52.3764199],[13.1427261,52.3780755],[13.1426604,52.3780542],[13.1458535,52.3791739],[13.1449942,52.3786711],[13.1455493,52.3788161],[13.1452047,52.3793836],[13.1453675,52.3795889],[13.1406659,52.3764455],[13.1408875,52.3765632],[13.1439161,52.3779917],[13.1422382,52.3773664],[13.145009,52.3788687],[13.1449124,52.3793465],[13.1423561,52.3778957],[13.14243,52.3779342],[13.1425865,52.3780157],[13.1422223,52.3778229],[13.1429375,52.3774744],[13.1456896,52.3798761],[13.1456239,52.3798456],[13.1445153,52.3792461],[13.14458,52.379283]],Bl=[[13.0995106,52.4675188],[13.0992521,52.4672157],[13.100926,52.4674945],[13.1010937,52.4674423],[13.0992242,52.46751],[13.1000721,52.4675947],[13.0999788,52.4674059],[13.1003523,52.4673925]],Kl=[[13.0052031,52.4222642],[13.0060624,52.4224901],[13.0061419,52.4223322],[13.0058993,52.4222963],[13.0055538,52.4218454],[13.0059742,52.422112],[13.0057982,52.4217804],[13.0060065,52.4217263],[13.0062419,52.4216636],[13.0056042,52.4226303],[13.0054254,52.4224105],[13.0050803,52.4225211],[13.004979,52.4224201],[13.0067783,52.42145],[13.0070562,52.4217445],[13.0073637,52.4220147],[13.0065326,52.4219198],[13.0061731,52.4220941],[13.0066105,52.4220088],[13.0066572,52.4220602],[13.0071149,52.421808],[13.0071614,52.4218591],[13.0064653,52.4220944],[13.0045318,52.4222227],[13.0050598,52.422058],[13.007013,52.4216973],[13.0064927,52.4218758],[13.0075054,52.4218139]],Xl=[[13.0950301,52.3947708],[13.0966377,52.394155],[13.0942238,52.3934789],[13.0947789,52.3940476],[13.0942822,52.3931336],[13.0965888,52.3946434],[13.0938697,52.3932859],[13.0953946,52.3929036],[13.09589,52.3946521],[13.0955894,52.3951746],[13.096462,52.3942025],[13.0956183,52.3949181],[13.0953909,52.3949346],[13.0961522,52.3944389],[13.0959703,52.39447],[13.0953842,52.39314],[13.0956545,52.3932788],[13.0939933,52.3931086],[13.0943106,52.3930255],[13.0945784,52.393052],[13.0955778,52.3931593],[13.0955486,52.3932683],[13.09589,52.3946521],[13.0956183,52.3949181],[13.0947614,52.3943021],[13.094723,52.3942341],[13.0941784,52.3935856],[13.0950926,52.3945402],[13.0944006,52.393845],[13.0947293,52.3939676],[13.0950061,52.3932028],[13.0948913,52.3931935],[13.0945748,52.3937292]],Vl=[[13.1064821,52.3854843],[13.1064748,52.3846989],[13.106256,52.3845916],[13.1066637,52.3844891],[13.1079622,52.3842048],[13.1076657,52.3843307],[13.1066745,52.3854797],[13.1068795,52.3853602]],Yl=[[13.0950402,52.3754383],[13.0948747,52.3754403],[13.0945113,52.3754244],[13.0936125,52.3754522],[13.0938039,52.3754522],[13.0943263,52.3754304],[13.0952187,52.3754304],[13.0941446,52.3754383],[13.0935499,52.3762199],[13.0935582,52.3763746],[13.0934243,52.3754581],[13.0953809,52.3754244],[13.0946638,52.3754205],[13.0939337,52.3754442],[13.0946918,52.375832],[13.0942736,52.3762916],[13.0951867,52.3758318],[13.0949029,52.3758326],[13.0956972,52.3758084],[13.0953665,52.3758231],[13.0942697,52.3761852],[13.0945047,52.3758393],[13.0942544,52.3759651],[13.0942601,52.3760833],[13.0955318,52.3758157]],Zl=[[13.0959254,52.4322365],[13.0982412,52.4303577],[13.0973272,52.4304819],[13.0963803,52.4319004],[13.0986253,52.4299197],[13.0960825,52.4314692],[13.0975485,52.430287],[13.0962374,52.4313356],[13.0971574,52.4305828],[13.0971902,52.4314876],[13.098862,52.4297992],[13.0962032,52.4320756],[13.0965767,52.4315946],[13.0983352,52.4299777],[13.0980554,52.4309019],[13.0975887,52.4312338],[13.095839,52.4317865],[13.0971849,52.4307667],[13.0971514,52.4308084],[13.0969502,52.4309063],[13.0969195,52.4309513]],Hl=[[13.1003987,52.4638819],[13.1002282,52.4652709],[13.1002386,52.464302],[13.1003769,52.4650735],[13.0995939,52.4659776],[13.100515,52.4640924],[13.1002776,52.4647004],[13.1002754,52.4631671],[13.0998039,52.461995],[13.0998146,52.4614347],[13.1004962,52.4618395],[13.0999642,52.4631611],[13.1002463,52.4616505],[13.0998195,52.462956],[13.1004077,52.4620175],[13.1005896,52.4623987],[13.1005297,52.4625876],[13.1002593,52.4629512],[13.1006067,52.4606892],[13.1001332,52.45546],[13.099892,52.4583529],[13.0994867,52.4583284],[13.0999405,52.4578115],[13.0997707,52.4610296],[13.0991992,52.4578945],[13.0999158,52.4575687],[13.0998536,52.4600431],[13.1002785,52.4610845],[13.0987729,52.4579367],[13.1002181,52.4593423],[13.1003134,52.4598256],[13.1004644,52.4599999],[13.100065,52.4585718],[13.0998498,52.4667027],[13.0994468,52.4668797],[13.1005102,52.4661432],[13.1002371,52.4648862],[13.1005429,52.4636679],[13.1006724,52.4621821],[13.0995252,52.4616055],[13.0999461,52.4624423],[13.0998121,52.4618341],[13.1004262,52.4604665],[13.1006435,52.4608761],[13.0995295,52.45866],[13.0995123,52.4588292],[13.0997723,52.4559001],[13.0988332,52.4575351],[13.1002696,52.4550792],[13.1013816,52.4550933],[13.0993661,52.457587],[13.0999912,52.4637863],[13.0999074,52.4647331],[13.0996643,52.4636136],[13.0998122,52.4641306],[13.0996582,52.463663],[13.099627,52.464337],[13.0997794,52.4639274],[13.0998158,52.4643153],[13.0998991,52.4646332],[13.100235,52.4665769],[13.1001492,52.4589001],[13.1001927,52.4663168],[13.0998978,52.4653708],[13.1003047,52.4562306],[13.100524,52.4602315],[13.0994671,52.459157],[13.0997508,52.466441],[13.09989,52.4662159],[13.0998647,52.4650504],[13.1012467,52.4542962],[13.1016321,52.4546505],[13.1011457,52.4545673],[13.100177,52.459123],[13.1005752,52.4554468],[13.1004416,52.4593435],[13.0996143,52.4597866],[13.0998879,52.4602218],[13.0996682,52.455881],[13.0997769,52.4626692],[13.0990096,52.4585593],[13.0997307,52.4606505],[13.099785,52.4596462],[13.0993008,52.4578855],[13.0995231,52.4593097],[13.100346,52.4595805],[13.100537,52.4549128],[13.1011558,52.4549416],[13.1008987,52.454893],[13.0998041,52.4651152],[13.100641,52.4627023],[13.0997736,52.4621379],[13.0998638,52.4570441],[13.1000153,52.4567807],[13.1001959,52.4563701],[13.0998203,52.4561067],[13.1002975,52.4559821],[13.1000181,52.4556291],[13.1004704,52.4558242],[13.1002877,52.4552096],[13.1011524,52.4547594],[13.1005985,52.4556561],[13.1007986,52.4556271]],Ul=[[13.1056215,52.3743385],[13.1048526,52.3741159],[13.1034212,52.3739427],[13.1042695,52.3741754],[13.1042776,52.3742834],[13.1042856,52.3743906],[13.1035898,52.3739377],[13.1037722,52.3739324],[13.1039491,52.3739272],[13.1042624,52.3740802],[13.1051512,52.3738373]],jl=[[13.0981287,52.3750437],[13.0979552,52.3750493],[13.0977809,52.3750549],[13.0980469,52.3742458],[13.0980741,52.3745942],[13.0967572,52.3743852],[13.0972765,52.3746007],[13.0972692,52.3744937],[13.0977107,52.3741395],[13.0980385,52.3741387],[13.0980639,52.3744641],[13.0964022,52.3743954],[13.096927,52.3743802],[13.0979017,52.3741339],[13.0972843,52.3747146],[13.0980552,52.3743522],[13.0973726,52.3741493],[13.0975269,52.3741448],[13.0980843,52.3747243],[13.0965743,52.3743904]],ql=[[12.9894674,52.4102414],[12.9866147,52.4100572],[12.9867073,52.4100655],[12.9880129,52.4099503],[12.9881087,52.4099575],[12.9883014,52.4099829],[12.9883977,52.4099921],[12.9886203,52.4100112],[12.9887154,52.4100221],[12.9867685,52.4098181],[12.9890774,52.4100326],[12.9891582,52.4100446],[12.9893433,52.4100712],[12.9894238,52.4100843],[12.9896066,52.4101166],[12.9868588,52.409826],[12.9896868,52.4101284],[12.9871551,52.4098697],[12.9872536,52.4098786],[12.987575,52.4099086],[12.9876734,52.4099185]],$l=[[12.9905744,52.409609],[12.9903414,52.4094601],[12.9904932,52.4096336],[12.9904263,52.409432],[12.9892951,52.4088753],[12.9896441,52.409276],[12.9898627,52.4095003],[12.9899049,52.4095484],[12.9900369,52.4096892],[12.9900788,52.409739],[12.9893435,52.4089268],[12.9894367,52.4090431],[12.9894853,52.4090956],[12.9896,52.4092316]],Jl=[[12.989599,52.4124703],[12.9887939,52.4123727],[12.9888313,52.4121023],[12.988556,52.4121596],[12.9886522,52.4121414],[12.9882728,52.412216],[12.9883632,52.4121975],[12.9892764,52.412629],[12.9895622,52.41241],[12.9892394,52.4125695],[12.9894682,52.4123115],[12.9894251,52.412256],[12.988883,52.4123542],[12.988922,52.4120833]],Ql=[[12.9638654,52.4089656],[12.9642682,52.409044],[12.9644571,52.4089944]],eh={"Adolf-Schmidt-Weg":[[13.0618552,52.3817942],[13.0657169,52.3824824],[13.0618465,52.3819332],[13.0655494,52.3826099],[13.0612754,52.3815583]],Ahornstraße:[[13.112348,52.3817657],[13.115047,52.3801554],[13.1163884,52.3841033],[13.1162773,52.3838603],[13.1162105,52.3837374],[13.1161398,52.3836],[13.1160629,52.3834533],[13.1141957,52.3794403],[13.1160546,52.3831199],[13.1140273,52.3798334],[13.115981,52.3831939],[13.1136254,52.3809638]],Ahornweg:nr,Akazienweg:sr,"Albert-Einstein-Straße":[[13.065998,52.3847326],[13.0670651,52.3843968],[13.0661251,52.3878722],[13.0663097,52.3878197],[13.0685166,52.3858612],[13.0657899,52.3892338],[13.0653789,52.3858585],[13.0646754,52.3863047],[13.065457,52.3858834],[13.0651236,52.3857767],[13.0652019,52.3858016],[13.0649465,52.3857197],[13.0648687,52.3856949],[13.064718,52.3856807],[13.0647588,52.3856333],[13.0645707,52.3858363],[13.0646114,52.3857886],[13.0644351,52.3859954],[13.0644752,52.3859482],[13.0643786,52.386087],[13.0645067,52.3860904],[13.0644652,52.3861384],[13.0646066,52.3859902],[13.0646478,52.3859431],[13.0647337,52.3858393],[13.0647747,52.3857913],[13.0657877,52.388896],[13.065295,52.3875634],[13.0652833,52.3874409],[13.0652715,52.3873174],[13.0652977,52.3877954],[13.0653077,52.3879177],[13.0653178,52.3880401],[13.0653277,52.3881601],[13.064734,52.3871971],[13.0649463,52.3871715],[13.0651375,52.3871478],[13.0652147,52.3869531],[13.0650575,52.3867694],[13.0656154,52.3880022],[13.0656095,52.3878751],[13.0655958,52.3886155],[13.0655918,52.388475],[13.0656081,52.3877407],[13.0656543,52.3876358],[13.0655567,52.3871668],[13.0655386,52.3869828],[13.0655117,52.3867916],[13.0654924,52.3865905],[13.0656367,52.3892114],[13.0656303,52.3891598],[13.0656247,52.3891149],[13.0656191,52.3890691],[13.0657782,52.388564],[13.0657834,52.3887463],[13.0656206,52.3882164],[13.065807,52.3883372],[13.0658036,52.3882098],[13.0658025,52.3881696],[13.0658058,52.3882916],[13.0658047,52.3882518],[13.0656082,52.3869558],[13.0660783,52.3881492],[13.0660786,52.3882296],[13.0658014,52.3881281],[13.0660842,52.3882843],[13.0661278,52.3883774],[13.0660786,52.3881869],[13.0660841,52.3883353],[13.0656437,52.3881846],[13.0656911,52.3873351],[13.0655782,52.3869494],[13.0658336,52.3891935],[13.0658268,52.3891309],[13.0658189,52.3890586]],"Alexander-Klein-Straße":[[13.0382261,52.4150243],[13.0375207,52.4148525],[13.0387982,52.4148032],[13.0387267,52.4148309],[13.0386552,52.4148585],[13.0385837,52.4148861],[13.0385122,52.4149138],[13.0384407,52.4149414],[13.0383691,52.414969],[13.0382976,52.4149966],[13.0377866,52.4151156],[13.0377334,52.415063],[13.0376802,52.4150104],[13.037627,52.4149577],[13.0375739,52.4149051],[13.037616,52.4145212],[13.0380373,52.4142141],[13.0374893,52.4142144],[13.0372192,52.4142749],[13.0370842,52.4143317],[13.0377581,52.4141207],[13.0374603,52.4143698],[13.0374254,52.4143289],[13.0373445,52.4142287],[13.0384104,52.4141876],[13.037968,52.4146895],[13.0386062,52.4142242],[13.0381588,52.4146177],[13.0384748,52.4145047],[13.0378999,52.4147158],[13.0382175,52.4145952],[13.038401,52.4145315]],"Allee nach Glienicke":[[13.1029214,52.4071324],[13.1029346,52.4073649],[13.1002519,52.4027185],[13.1003079,52.402589],[13.0997164,52.4021342],[13.098672,52.4016269],[13.0995319,52.4020407],[13.1008525,52.4032177],[13.1004155,52.4029009],[13.1001656,52.4024338],[13.0999199,52.4022844],[13.0990866,52.4019218],[13.0988641,52.4017187],[13.1007687,52.4031035],[13.1009537,52.4028647],[13.1023291,52.4078057],[13.1011024,52.4029896],[13.102118,52.407258],[13.1019832,52.4072787],[13.1025004,52.4071971],[13.1022855,52.4071031],[13.102643,52.4071762],[13.102238,52.4071106]],"Allee nach Sanssouci":[[13.0445733,52.4004454],[13.0454823,52.3999145],[13.04474,52.3996018],[13.0450283,52.3995067],[13.0448482,52.4003736],[13.0440525,52.4005806],[13.0451414,52.4003091],[13.0456741,52.4001829],[13.0447332,52.3997528],[13.0449447,52.3995832],[13.0459871,52.3999147],[13.04495,52.400245],[13.0456056,52.4001042],[13.0453072,52.4002516],[13.0454018,52.400149],[13.0446484,52.4003704]],Alleestraße:[[13.059739,52.409056],[13.0602794,52.4091402],[13.0625583,52.4092631],[13.0604522,52.4094434],[13.0621999,52.4093506],[13.0612838,52.409525],[13.061453,52.4091841],[13.0608283,52.4095817],[13.0598996,52.4095173],[13.0597537,52.4090918],[13.0586723,52.4092699],[13.0602303,52.4099513],[13.0601551,52.4096786],[13.0619715,52.4089068],[13.0598819,52.4092668],[13.0592863,52.4094618],[13.0604226,52.4091449],[13.0600745,52.4090545],[13.0611199,52.4096921],[13.0609002,52.409669],[13.0593592,52.409455],[13.0593914,52.4093569],[13.0594346,52.4087647],[13.0594186,52.4088896],[13.0593004,52.4088717],[13.0623435,52.4089331],[13.0623067,52.4092956],[13.0610125,52.4096808],[13.0588698,52.4092335],[13.0589456,52.4092472],[13.0587805,52.4092174],[13.0595437,52.4094318],[13.0603717,52.4094908],[13.0602386,52.4094816]],"Alt Drewitz":[[13.1262923,52.3638136],[13.1255307,52.3646021],[13.1257652,52.3632743],[13.1256648,52.3625361],[13.1261123,52.3652201],[13.1258684,52.3647514],[13.1256603,52.3631444],[13.1257054,52.3634763],[13.1264265,52.3641498],[13.1251321,52.3648325],[13.1260206,52.3633308],[13.1255328,52.36273],[13.1263249,52.3647478],[13.1270449,52.3644798],[13.1259329,52.3636588],[13.1259608,52.3632378],[13.1264101,52.3658804],[13.1246063,52.3620871],[13.1267981,52.3656507],[13.1260286,52.3650746],[13.1259292,52.363079],[13.1261521,52.3652485],[13.1259843,52.3628739],[13.1249683,52.3621894],[13.126249,52.3637349],[13.1260905,52.3638964],[13.12638,52.3651151],[13.1258395,52.3646943],[13.1262103,52.3636569],[13.1254665,52.3649048],[13.1261412,52.3635182],[13.1256928,52.3625743],[13.12642,52.3644977],[13.1250948,52.3633766],[13.1252736,52.3623596],[13.1263926,52.3650506],[13.1257972,52.3644492],[13.1266555,52.3654866],[13.125525,52.3630175],[13.1253935,52.3624743],[13.1261232,52.3634133],[13.1247697,52.3646967],[13.1256637,52.3641621],[13.1255176,52.3641674]],"Alt Nowawes":[[13.0927423,52.3984158],[13.0911615,52.3979096],[13.0919869,52.3976413],[13.0917952,52.3977554],[13.0909565,52.3977506],[13.091845,52.3986066],[13.0909211,52.3981671],[13.0926805,52.3982722],[13.0923047,52.3980268],[13.0924789,52.3981529],[13.0922711,52.3979985],[13.092648,52.3984063],[13.0899872,52.3958484],[13.0902456,52.396558],[13.0872796,52.3950748],[13.0875042,52.3950985],[13.0875875,52.3951607],[13.086841,52.3947713],[13.0869747,52.3952797],[13.0887782,52.396288],[13.0888434,52.3961213],[13.0881595,52.3958257],[13.0885859,52.3959288],[13.0883263,52.3957161],[13.0887962,52.3954404],[13.08958,52.3958625],[13.0877165,52.3952571],[13.0879596,52.3954412],[13.0880572,52.3956992],[13.0881128,52.395556],[13.0887127,52.3960236],[13.0884807,52.3962365],[13.0888609,52.3954949],[13.089001,52.3956008],[13.0890955,52.3956722],[13.0896156,52.3960739],[13.0895805,52.3960473],[13.0888801,52.3967085],[13.0891157,52.3970867],[13.0899976,52.3970117],[13.0888519,52.3967225],[13.0907213,52.3975599],[13.08745,52.3945355],[13.0884266,52.3947375],[13.0900043,52.3948776],[13.0885765,52.3951179],[13.0889941,52.3951668],[13.0894924,52.3954972],[13.0899743,52.3948315],[13.0893685,52.3954047],[13.0855114,52.393556],[13.0855926,52.3938286],[13.0866123,52.3944083],[13.0864905,52.3943136],[13.0869778,52.3946871],[13.0858015,52.3937801],[13.0903821,52.3966605],[13.0905919,52.3968179],[13.0915091,52.3966149],[13.0904646,52.3967223],[13.0910633,52.3971904],[13.0917586,52.3968181],[13.0913787,52.3974342],[13.0912256,52.3973159],[13.0907003,52.3968992],[13.0909351,52.3970912],[13.0914775,52.3975106],[13.0885261,52.3964812],[13.0887782,52.396288],[13.0920721,52.398606],[13.0901797,52.3971443],[13.0902966,52.3972316],[13.0904455,52.3973429],[13.0905419,52.3974147],[13.0884462,52.3951788],[13.0860126,52.3939427],[13.0907379,52.3978652],[13.0910632,52.397958],[13.0911196,52.3979959],[13.0912207,52.3980986],[13.0914508,52.3981288],[13.0914889,52.3982803],[13.0916855,52.3984846],[13.0899872,52.3958484],[13.0864905,52.3943136],[13.0910522,52.3985523],[13.0862207,52.3941056],[13.0864994,52.3938106],[13.0865504,52.3943601],[13.0902552,52.3958055],[13.0899028,52.3960823],[13.0899241,52.396187],[13.0863733,52.3943173],[13.0872203,52.3948761],[13.0863159,52.3941792],[13.0864569,52.3944544],[13.0873006,52.3949369],[13.0890071,52.3964499],[13.0891329,52.3965439],[13.0892584,52.3966376],[13.0893896,52.3967357],[13.0895154,52.3968297],[13.0899657,52.396339],[13.0899907,52.3951184],[13.0901996,52.3960323],[13.0905185,52.3958764],[13.0900898,52.3961408],[13.0900036,52.3963125],[13.0900425,52.3963967],[13.0881481,52.3948595],[13.0870104,52.3947616],[13.0904329,52.3952726],[13.0904043,52.3959871],[13.0898416,52.3960048],[13.0917026,52.3983223],[13.0914609,52.3981592],[13.0866415,52.3944692],[13.0865875,52.3945189],[13.0879971,52.3959242],[13.0879247,52.3959544],[13.090623,52.3975052],[13.0870136,52.3947159],[13.0915029,52.3967684],[13.0855187,52.3938925],[13.0856704,52.39376],[13.0918664,52.3987765],[13.0917002,52.3986282],[13.0910123,52.3984547],[13.0909451,52.3984876],[13.0908411,52.3985383],[13.0907332,52.398591],[13.0906616,52.3986259],[13.0905977,52.3986571]],"Alte Gärtnerei":[[13.0831329,52.3825753],[13.0832156,52.3825909],[13.0829505,52.3825396],[13.0827857,52.3825077],[13.0828681,52.3825237],[13.0834208,52.3823739],[13.0832562,52.3823416],[13.0833385,52.3823578],[13.0830729,52.3823043],[13.0829078,52.382273],[13.0829904,52.3822886],[13.0827266,52.3822374],[13.0825614,52.3822063],[13.082644,52.3822218],[13.0824367,52.3824395],[13.0825193,52.3824553],[13.0826017,52.382471]],"Alter Markt":[],"Alter Tornow":[[13.0440708,52.3850933],[13.0433722,52.3844807]],"Alter Weinberg":[[13.1140308,52.4731236],[13.1136861,52.4729667],[13.1138168,52.4735623],[13.1144404,52.4726524],[13.1137799,52.4728229],[13.1132032,52.4733803],[13.1140386,52.4724968],[13.1135018,52.4732998],[13.1139094,52.4733296],[13.1144132,52.4729809],[13.1141947,52.4722199],[13.1137651,52.4731156]],"Altes Bahnwerk":[[13.0720794,52.3904288],[13.0720524,52.3901719],[13.0720164,52.3898944],[13.0717339,52.3901869],[13.070992,52.3902186],[13.0706789,52.3902391],[13.0707094,52.3904926],[13.0710208,52.3904761],[13.0715093,52.389806],[13.0719646,52.3897394],[13.0721427,52.3897137]],"Altes Rad":[[12.9890363,52.4088019],[12.9896309,52.4085125],[12.9898394,52.4083591],[12.9875091,52.4095473],[12.9873104,52.409636],[12.9878395,52.4093769],[12.988472,52.4079425],[12.9891928,52.4075464],[12.9892601,52.4079633],[12.9898481,52.4078085],[12.9901669,52.4079478],[12.990695,52.4077563],[12.988838,52.4084081],[12.9894033,52.4081133],[12.9891636,52.4081947],[12.9892794,52.4081736],[12.9905056,52.4078131],[12.9905976,52.4077959],[12.9886087,52.4082759],[12.9882868,52.4083697],[12.9882645,52.4086636],[12.9880085,52.4087361],[12.9878297,52.408812],[12.9876514,52.4090498],[12.9872556,52.4091858],[12.9869067,52.4094724],[12.9886725,52.4081785],[12.987014,52.4094303],[12.9871291,52.4095893],[12.9875794,52.4095114],[12.9879106,52.4093417],[12.9888491,52.4087438],[12.9893151,52.4086973],[12.9882349,52.4088081]],Althoffstraße:[[13.1015844,52.3897951],[13.1029396,52.3899854],[13.1026259,52.3898525],[13.1021942,52.3897887],[13.1038156,52.3899751],[13.103393,52.3903224],[13.1024085,52.3900814],[13.1016536,52.3900608],[13.1026101,52.390222],[13.1036228,52.3904849],[13.1020071,52.3901263],[13.1029982,52.390282],[13.1013738,52.3900337],[13.1021596,52.3898799],[13.1020478,52.3900237],[13.1023745,52.3901634],[13.1025898,52.3899452],[13.1033738,52.3899583],[13.103429,52.3902321],[13.1037734,52.3900887],[13.1042613,52.390363],[13.1041722,52.3901698],[13.1043258,52.3901929],[13.1040705,52.3903439]],Altstadtblick:rr,"Am Alten Markt":[[13.0603262,52.3971551],[13.0623315,52.3957401],[13.0619242,52.3958369],[13.061657,52.3964722],[13.0617136,52.3963375],[13.0613125,52.3972983],[13.0615558,52.3967126],[13.0616042,52.3965976],[13.0613581,52.3971894],[13.0614145,52.3970547],[13.0614741,52.3969125],[13.0620612,52.3956933],[13.0619786,52.3957983]],"Am Anger":[[13.105698,52.4669266],[13.1062785,52.4668657],[13.1054586,52.4669747],[13.1067628,52.4667993],[13.1049345,52.4670453],[13.105934,52.4674353],[13.1061863,52.4672424],[13.1064179,52.4671198],[13.1053551,52.4674779],[13.1056267,52.4674466],[13.1048225,52.4672159],[13.1049067,52.4675694],[13.1043945,52.4675647],[13.1060529,52.4667223],[13.1047062,52.4673291]],"Am Bahnhof":[[12.974015,52.4297501],[12.9734327,52.4304407],[12.9739922,52.4311598],[12.9728193,52.4326837],[12.972637,52.4327967]],"Am Bassin":[[13.0588946,52.4003232],[13.0588565,52.4004358],[13.05882,52.4005437],[13.0596569,52.4008576],[13.0588103,52.4010976],[13.0586957,52.4014326],[13.0586565,52.4015473],[13.0586194,52.4016559],[13.0585265,52.4014111],[13.058603,52.4011873],[13.059041,52.4003124],[13.0590944,52.4002606],[13.058943,52.4006018],[13.0588796,52.4008164],[13.0586846,52.4013454],[13.0589046,52.4004019],[13.0589703,52.4002775],[13.0590132,52.4004011],[13.0589314,52.4006457],[13.0590789,52.4001728],[13.0591152,52.400199],[13.0589375,52.4007242],[13.0587342,52.4011801],[13.0589684,52.4003836]],"Am Brunnen":[[13.0767938,52.3783645],[13.0766259,52.3785176],[13.0763281,52.378748],[13.0760894,52.3788655],[13.075577,52.3791419],[13.0751938,52.3792864],[13.0750111,52.3794343],[13.074948,52.3795575],[13.0748802,52.37969],[13.0747079,52.3799503],[13.0745547,52.3800752],[13.0744041,52.3801979],[13.0740139,52.3804203],[13.0738109,52.3805106],[13.073609,52.3806004],[13.076555,52.3782636],[13.0737296,52.3800606],[13.075663,52.3788082],[13.0758646,52.3787454],[13.0761677,52.3786158],[13.0762638,52.3785417],[13.0763639,52.3784626],[13.0740457,52.3798519],[13.0743947,52.3795579],[13.0745923,52.3793656],[13.0748569,52.3791735],[13.0750262,52.3791064],[13.0750778,52.3790711],[13.0751739,52.3789544],[13.0754614,52.3788734]],"Am Buchhorst":[[13.1069755,52.3576125],[13.1137122,52.3616604],[13.1154321,52.3619474],[13.1152561,52.3615785],[13.1149755,52.3617089],[13.111857,52.359533],[13.1144881,52.3619336],[13.1069914,52.3590251],[[13.1122476,52.362153],[13.1129236,52.3623516],[13.1136994,52.3625831],[13.1143428,52.3617873],[13.1139015,52.3615559],[13.1132949,52.3611756],[13.1132243,52.3611313],[13.1131574,52.3611627],[13.1130355,52.3612246],[13.1125897,52.3617499],[13.1122476,52.362153]],[13.1051729,52.3563814],[13.1117094,52.3593456],[13.1071708,52.3576126],[13.1110646,52.359071],[13.1118608,52.3594828],[13.111812,52.3593605],[13.1119032,52.3594202]],"Am Böttcherberg":[[13.1077188,52.4123669],[13.1077623,52.4118852],[13.1077403,52.4121523],[13.1077004,52.4125899],[13.1075181,52.4112916],[13.107522,52.4110138],[13.1077652,52.4115332],[13.1083314,52.4099218],[13.1082369,52.4113813],[13.1081536,52.4115485],[13.1073426,52.4106667],[13.107338,52.4100241],[13.1075337,52.4116679],[13.1084377,52.4117676],[13.1074483,52.4100351]],"Am Bürohochhaus":[[13.1080993,52.3629924],[13.1080537,52.3629646]],"Am Eichenhain":[[12.9856986,52.4053704],[12.9869066,52.405474],[12.9874883,52.4054988],[12.987678,52.405492],[12.9864931,52.4055883],[12.9868958,52.4056235],[12.9882532,52.4055664],[12.9880335,52.4059765],[12.9877562,52.4056717]],"Am Fenn":[[13.0989098,52.4671445],[13.0991752,52.4665165],[13.0988298,52.4678141],[13.0982093,52.4678762],[13.0991883,52.4668005],[13.0987426,52.4674566],[13.0992115,52.4660019],[13.0984291,52.4667755],[13.0993142,52.4658048],[13.099212,52.4660567],[13.0991645,52.4648479],[13.0986115,52.4658422],[13.0992772,52.4637426],[13.0987089,52.4663189],[13.0994553,52.4639683],[13.0993696,52.4645004],[13.0993879,52.4641374],[13.0994126,52.4650813],[13.0993871,52.4652783],[13.0987132,52.4661635],[13.0984963,52.4665894],[13.0992165,52.4646046],[13.0985029,52.4674764],[13.0980192,52.3699899],[13.099724,52.3690436],[13.1000229,52.368874],[13.1001265,52.3688163],[13.1004229,52.3686504],[13.1005293,52.3685915],[13.1008367,52.36842],[13.1009488,52.3683587],[13.100755,52.3682194],[13.1006448,52.3682788],[13.1003249,52.3684642],[13.0981186,52.3699367],[13.1002436,52.3685094],[13.0999542,52.3686732],[13.0998469,52.3687339],[13.099521,52.3689121],[13.0994287,52.3689641],[13.098412,52.3697733],[13.0985184,52.3697165],[13.0988207,52.3695439],[13.098904,52.369496],[13.0992153,52.3693227],[13.0993112,52.3692693],[13.0996299,52.3690951],[13.0989531,52.3684798],[13.0990647,52.3684124],[13.0993491,52.3682412],[13.0994429,52.3681842],[13.0997241,52.3680159],[13.0998282,52.3679544],[13.1001037,52.367786],[13.1001994,52.3677268],[13.0989631,52.3691266],[13.0988681,52.369067],[13.0986469,52.3688346],[13.0985599,52.3687818]],"Am Friedhof":[[13.0068742,52.471159],[13.0080726,52.4710235],[13.0083318,52.4709546],[13.0086386,52.470845],[13.1323767,52.356252],[13.1324083,52.3560986],[13.1323485,52.3558779],[13.1324081,52.3562525],[13.132502,52.3564584],[13.1326369,52.3558493],[13.1325512,52.3567977],[13.1325352,52.3566174],[13.1319585,52.3561421],[13.1319533,52.3557788],[13.006368,52.4717768],[13.0065885,52.4716573],[13.0066369,52.4714607],[13.0077904,52.4709805],[13.0090289,52.4707296],[13.0088947,52.4707542]],"Am Friedrichspark":[[12.9656284,52.4753443],[12.9661856,52.4757947],[12.9652782,52.4757041],[12.9654435,52.4762036],[12.9654435,52.4762036]],"Am Fährgut":[[13.0485075,52.4399868],[13.0484257,52.4399723],[13.0483462,52.4399582],[13.0483022,52.4400766],[13.0484558,52.4401039],[13.0486098,52.4401311],[13.0487395,52.4401541],[13.0487928,52.4401636],[13.0488549,52.4401116],[13.0481874,52.4400209],[13.0481365,52.4401094],[13.0480741,52.4402183],[13.0480075,52.4403343],[13.0479566,52.4404229],[13.0479064,52.4405104],[13.0479762,52.4406072],[13.048063,52.4406269],[13.0481423,52.4406449]],"Am Föhrenhang":[[13.0505777,52.4483152],[13.0507576,52.4491915],[13.0500571,52.4489213],[13.0500016,52.4482961],[13.0489191,52.4485728],[13.0497597,52.448766],[13.0502594,52.4487388],[13.0484316,52.4487552],[13.0486408,52.4486745],[13.0507089,52.4490921],[13.0484668,52.449379],[13.0501124,52.4481008],[13.048887,52.4493339],[13.0503882,52.4484896],[13.049446,52.4487284],[13.0505243,52.4486546],[13.0492451,52.4492084],[13.0496841,52.4496769],[13.0494881,52.4483763],[13.0477881,52.4494981],[13.0491519,52.448831],[13.0500548,52.4485249],[13.0496944,52.4490476],[13.0491957,52.4484779],[13.0485843,52.449048],[13.047313,52.4495851],[13.0482461,52.4504077],[13.0484402,52.4504355],[13.0485439,52.4503309],[13.0479538,52.4495384],[13.0480291,52.4495124],[13.048104,52.4494956],[13.0481746,52.4494713],[13.0482461,52.4494467],[13.0483172,52.4494222],[13.048395,52.4494038],[13.0489825,52.4494347],[13.0493399,52.4493093],[13.0496095,52.4490778],[13.0499717,52.448951],[13.047399,52.4495872],[13.0503882,52.4484896],[13.0500016,52.4482961],[13.0476986,52.4494962],[13.0501903,52.4486097],[13.049841,52.4487356],[13.0495817,52.4484777],[13.0492898,52.4485791],[13.0495413,52.4488291],[13.0490122,52.4486743],[13.0492451,52.4489325],[13.0487328,52.4487763],[13.0489528,52.449039],[13.0483467,52.4487854],[13.0486761,52.44915],[13.0504811,52.4496721],[13.0501612,52.4491758],[13.0498009,52.4482494],[13.0484117,52.4504696],[13.0483026,52.4505162]],"Am Försteracker":[[13.0881311,52.371733],[13.0879892,52.3718924],[13.0881035,52.3723403],[13.0873877,52.3718658],[13.0873178,52.3718059],[13.0871622,52.3716658],[13.0871016,52.371615],[13.0869439,52.371479],[13.0868809,52.371422],[13.0867179,52.3712858],[13.0866521,52.3712301],[13.0864865,52.3711023],[13.086418,52.3710432],[13.086286,52.370911],[13.0862027,52.3708383]],"Am Garten":[[12.9699783,52.4575577],[12.9696053,52.45769],[12.9699929,52.4577053],[12.9703606,52.4577607],[12.9705488,52.4582734],[12.9698787,52.4585732],[12.9697298,52.4585646],[12.9699477,52.4583456],[12.9697852,52.4583346],[12.9691494,52.4598641],[12.9692116,52.4582919],[12.9702862,52.4580266],[12.9691414,52.460154],[12.9701244,52.4586828],[12.9701536,52.4585148],[12.9690751,52.4585843],[12.9701903,52.458333],[12.9698358,52.4581271],[12.9695773,52.4594354],[12.9697234,52.45995],[12.9694988,52.4581644],[12.9701581,52.459502],[12.9692985,52.4583467],[12.9702783,52.4592418],[12.9698216,52.459713],[12.9707177,52.4579309],[12.9702375,52.4576607],[12.9708803,52.4581449]],"Am Gehölz":[[13.130879,52.3864668],[13.1279051,52.3861653],[13.1303827,52.3863987],[13.1278794,52.3864048],[13.1284348,52.3863901],[13.1292747,52.3864645],[13.1311786,52.3864799],[13.1296533,52.3863964],[13.1275744,52.3864767],[13.1299375,52.3864329],[13.1318264,52.3863398],[13.1305164,52.38646],[13.1323883,52.3864698]],"Am Glienicker Mühlenberg":[[13.103411,52.472146]],"Am Golfplatz":[[13.0484188,52.4298047],[13.0470132,52.4307563],[13.0463574,52.431187],[13.0477654,52.4305099],[13.0383851,52.4357671],[13.037988,52.4361198],[13.0382464,52.4360713],[13.0367319,52.4364681],[13.0441878,52.4321035],[13.0539141,52.4273029],[13.0539151,52.4272656],[13.0539162,52.4272164],[13.0539178,52.4271513],[13.0539189,52.427105],[13.05392,52.4270605]],"Am Golmer Weinberg":[[12.9651668,52.4083809],[12.9648958,52.4081786],[12.9651135,52.4079475],[12.96506,52.4083921],[12.9650004,52.4081684],[12.9649117,52.4079694],[12.9650126,52.4079585]],"Am Großen Herzberg":[[12.9952742,52.416056],[12.9949562,52.4160397],[12.9942772,52.4157244],[12.998103,52.4163099],[12.9924168,52.4151935],[12.992531,52.4157211]],"Am Großen Horn":[[13.0525479,52.4372429],[13.0535701,52.4374043],[13.0527089,52.4375901],[13.0538707,52.4373731],[13.0544368,52.4373751],[13.052732,52.4373377],[13.0532629,52.4374865],[13.0529992,52.4372462],[13.0544359,52.437472],[13.054299,52.4371938],[13.0541321,52.4366259],[13.0531911,52.4370323],[13.0535839,52.4369714],[13.0524063,52.4377308],[13.0522107,52.4377723],[13.0530527,52.4375713],[13.0517657,52.4375],[13.0521327,52.4374503]],"Am Grünen Gitter":[[13.0401628,52.3999938],[13.0398453,52.3999904],[13.0421843,52.3998857],[13.041018,52.3997968],[13.0437181,52.4003629],[13.0381755,52.400565],[13.0379251,52.4003315],[13.0432965,52.4004656],[13.0362995,52.4002366],[13.0436391,52.4007405],[13.0436881,52.4006396],[13.043712,52.4005904],[13.0435622,52.4010172],[13.0338297,52.3998271],[13.0319202,52.4002188],[13.0370227,52.4002368],[13.0371979,52.4002321],[13.041769,52.3993105]],"Am Grünen Weg":[[12.9985286,52.4049749],[12.9987401,52.4048471],[12.9992828,52.4043045],[12.9990834,52.4047301],[12.9990352,52.404955]],"Am Gutstor":[[13.1102858,52.4745721],[13.1102624,52.4742896],[13.1106954,52.4744706],[13.1107992,52.4748886],[13.1100132,52.4751344],[13.1100626,52.4747514],[13.110002,52.474894],[13.1109992,52.473725],[13.1109322,52.4738794],[13.1108463,52.4740919],[13.1107819,52.4742371],[13.1109356,52.4747161],[13.1108681,52.4747051],[13.1107948,52.4746931],[13.1107235,52.4746814],[13.1106566,52.4746705]],"Am Hang":[[13.0574398,52.4213104],[13.057637,52.4217144],[13.0577989,52.4214443],[13.0578815,52.4217762],[13.0580358,52.4215106],[13.0564309,52.4212975],[13.0567461,52.4214959],[13.0569393,52.4211713],[13.0569904,52.4215637],[13.0571895,52.4212408],[13.0572347,52.4216314],[13.0564839,52.4210974],[13.0564997,52.4210501],[13.0563686,52.4209821],[13.0566618,52.4210193]],"Am Havelblick":[[13.0646454,52.386478],[13.0643762,52.3865393],[13.0605759,52.3879855],[13.0607509,52.3883235],[13.0613808,52.388636],[13.0628768,52.3871527],[13.0616742,52.3885191],[13.0640906,52.3864696],[13.0609921,52.3882033]],"Am Heineberg":[[12.9934083,52.4332676],[12.9868797,52.4371586]],"Am Hirtengraben":[[13.1366883,52.3625505],[13.1355103,52.3626429],[13.1363521,52.3625465],[13.1355103,52.3626429],[13.1333991,52.3627632],[13.1326792,52.3626429],[13.1300949,52.3628597],[13.1310059,52.3626528],[13.1314762,52.3626282],[13.1310059,52.3626528],[13.1267257,52.3618355],[13.1273221,52.3618456],[13.127837,52.361924],[13.1282338,52.3619195],[13.1288005,52.3622176],[13.1280082,52.3618995],[13.1291556,52.3621047],[13.1290591,52.3619668],[13.1286693,52.3619381],[13.1276766,52.3618915],[13.1387952,52.362618],[13.1391524,52.3626158],[13.1377277,52.3625958],[13.1379621,52.3625972]],"Am Hämphorn":[[13.1051332,52.4331248],[13.1055444,52.4335061],[13.1055583,52.4330411],[13.1056955,52.4333057],[13.1051358,52.4339625],[13.1044554,52.4336427],[13.1041456,52.4337897],[13.1049147,52.4332861],[13.1046358,52.4334078],[13.1043277,52.4336546]],"Am Jungfernsee":[[13.0600558,52.4318857],[13.059876,52.4322224],[13.060701,52.4319282],[13.0592285,52.4321267],[13.057856,52.4324135],[13.0578065,52.432748],[13.0585979,52.4326345],[13.0581728,52.432731],[13.0587869,52.4326482],[13.0594128,52.4325393],[13.0612126,52.4314944],[13.0593209,52.4322288],[13.0576032,52.4322651],[13.0569719,52.4321571],[13.05673,52.4319574],[13.0605281,52.4321803],[13.0612713,52.431028],[13.0598201,52.4301207],[13.0605509,52.430083],[13.0608331,52.4311126],[13.0594435,52.429167],[13.0590466,52.4293244],[13.0611766,52.4313082],[13.0567591,52.4323553],[13.0624286,52.4304395]],"Am Kanal":[[13.0588779,52.3971867],[13.0635647,52.3986824],[13.0647563,52.3987705],[13.0670153,52.3982167],[13.0682929,52.3985832],[13.0685379,52.3991878],[13.0683106,52.3989916],[13.0690099,52.399229],[13.0677378,52.3984942],[13.067103,52.3980081],[13.067101,52.3983945],[13.067248,52.3989372],[13.0670611,52.3989083],[13.0674348,52.398966],[13.0678085,52.3990237],[13.0676217,52.3989949],[13.0680249,52.3988106],[13.0704914,52.3989126],[13.0682732,52.3990797],[13.0691687,52.3987194],[13.0616954,52.3979613],[13.06051,52.3973614],[13.0630757,52.3976688],[13.0637649,52.3977764],[13.0641971,52.3978396],[13.0640269,52.3977519],[13.0622838,52.3975437],[13.0643008,52.3978207],[13.062056,52.3975122],[13.0617913,52.3975023],[13.0624199,52.3975987],[13.0634396,52.3976775],[13.0608705,52.3972261],[13.0607364,52.3972114],[13.0603256,52.3973319],[13.0606387,52.3973755],[13.0620085,52.3975356],[13.0622228,52.3975685],[13.0633125,52.3977058],[13.0635206,52.3977383],[13.0644143,52.3978735],[13.0646447,52.3979095],[13.0627994,52.3981667],[13.0636235,52.3982984],[13.06308,52.3981959],[13.0593217,52.3970309],[13.0590717,52.3970952],[13.0608028,52.3972171],[13.0619124,52.3974877],[13.0633233,52.3982343],[13.0699248,52.398841],[13.070131,52.3988732],[13.0602868,52.3973269],[13.0609042,52.3979038],[13.0611754,52.3979371],[13.0648691,52.3979446],[13.0648022,52.3978562],[13.0648226,52.398736],[13.0685169,52.3986157],[13.0687793,52.3986574],[13.0690402,52.398699],[13.0615253,52.3974218],[13.0629412,52.3976516],[13.0626078,52.3976006],[13.0700481,52.3992479]],"Am Kirchberg":[[13.0321062,52.4469529],[13.032402,52.4468921],[13.0329035,52.4467215],[13.0331757,52.4466557],[13.0338962,52.4464778],[13.0341665,52.4464168],[13.0368477,52.4459317],[13.0381363,52.4457133],[13.0336,52.4465423],[13.0392982,52.4456502],[13.0371357,52.4457675],[13.0368477,52.4459317],[13.0371743,52.4458831],[13.0389639,52.4455446],[13.0345087,52.4463725],[13.0317638,52.4472814],[13.0376754,52.4456291],[13.0374273,52.4457868],[13.0364193,52.4459995],[13.0409395,52.4452562],[13.0393002,52.4454775],[13.0327613,52.4467645],[13.0326645,52.446785]],"Am Kirchblick":[[12.9897819,52.4040943],[12.9899045,52.4037481],[12.9905065,52.4040187],[12.9898633,52.4039279],[12.9908687,52.4041289],[12.9902016,52.4041826],[12.9902553,52.4039938],[12.9902896,52.4038125]],"Am Klubhaus":[[13.1217685,52.3924914],[13.1210622,52.3922242],[13.1203481,52.3922347],[13.1199537,52.3923087],[13.120599,52.3924185],[13.1199078,52.3921633],[13.1217879,52.3923991]],"Am Krampnitzsee":[[13.0487707,52.4497318],[13.0490262,52.4507053],[13.0484153,52.4498892],[13.0486747,52.4501005],[13.0496422,52.4509906],[13.0495098,52.450329],[13.0490274,52.4499167],[13.049066,52.4505628],[13.0493188,52.4500849],[13.0489533,52.4502661],[13.0494244,52.4508263],[13.0489533,52.4502661],[13.049444,52.4501744],[13.0485365,52.4499808],[13.0491525,52.4500063],[13.0488917,52.4498234],[13.0487968,52.4501915]],"Am Krongut":[[13.0275996,52.4133696],[13.0274105,52.41351],[13.027559,52.4136213],[13.0254639,52.4109465],[13.0259073,52.41064],[13.025588,52.4110792],[13.0254375,52.4112989],[13.0255577,52.4115304],[13.0271344,52.4109119],[13.0273615,52.4109154],[13.0255937,52.410773],[13.0272835,52.4136233],[13.0272104,52.4132569],[13.0276876,52.4117506],[13.0266832,52.4114161],[13.0272763,52.4122093],[13.0245976,52.4138403],[13.0273089,52.4123997],[13.0276779,52.4111391],[13.0258973,52.4115343],[13.0249876,52.4121789],[13.0248399,52.413856],[13.0269222,52.4129154],[13.0278396,52.4109701],[13.0250075,52.4125851],[13.0272854,52.4114067],[13.0249545,52.4129133],[13.0262857,52.4114619],[13.0253978,52.4128958],[13.025431,52.4124211],[13.0260121,52.4110593],[13.0249766,52.4130774],[13.0259252,52.411138],[13.0262655,52.410829],[13.0249167,52.4133488],[13.0251468,52.4120157],[13.0265678,52.4111133],[13.0249634,52.4127344],[13.0253978,52.4127452],[13.0265666,52.4108207],[13.0274906,52.4120431],[13.0250516,52.4123887],[13.0250891,52.4138645],[13.0253934,52.4125891],[13.0266313,52.4117987],[13.0262387,52.4118508],[13.0253846,52.4130599],[13.0252172,52.413569],[13.0260427,52.4109048],[13.0252219,52.4133715],[13.0272778,52.4111943],[13.0262465,52.4111039],[13.0245091,52.4137722],[13.0268141,52.4111145],[13.0272027,52.4116391],[13.0268285,52.4108373],[13.0276653,52.4124082],[13.0273112,52.4125574],[13.0249773,52.4135136],[13.0258694,52.411375],[13.0268853,52.4116321],[13.0262968,52.4115397],[13.0272879,52.4129183],[13.0276991,52.4109044],[13.0273874,52.4110945],[13.0269507,52.4114243],[13.0269281,52.4131601],[13.0272985,52.4130601],[13.0269084,52.413325],[13.0246792,52.4127789],[13.0246776,52.4128331],[13.0246774,52.4130988],[13.024677,52.4131671],[13.024665,52.4132966],[13.0246613,52.4133723],[13.0244965,52.4135712],[13.0244931,52.4136501],[13.0276332,52.4127883],[13.0276373,52.4127307],[13.0276487,52.4126251],[13.0276513,52.4125688],[13.027652,52.4118926],[13.0276529,52.4118292],[13.0250924,52.4117982],[13.0246628,52.4121918],[13.0246651,52.4121363],[13.0246517,52.4123542],[13.0246542,52.4122988],[13.024637,52.4125135],[13.0246401,52.4124574],[13.0246823,52.412621],[13.0246807,52.4126733],[13.0276241,52.4130245],[13.0277886,52.4128997],[13.0273926,52.4119919],[13.0277145,52.411434],[13.0277105,52.411627],[13.0269568,52.4128336],[13.0273068,52.4128222],[13.0254586,52.4141989],[13.0257806,52.4120234],[13.0258928,52.4118243],[13.0253273,52.4120328],[13.0246989,52.411989],[13.0247012,52.4119335],[13.0246327,52.4129342],[13.02463,52.412994],[13.0277172,52.4123109],[13.0277185,52.4122463],[13.0277185,52.4121105],[13.0277199,52.4120524],[13.027686,52.4131803],[13.0251183,52.4143143],[13.0251204,52.4141102],[13.0251235,52.414048],[13.0276925,52.4131117],[13.025186,52.4145619],[13.0251178,52.4142421]],"Am Küssel":[[12.9645513,52.4316505],[12.9627811,52.4335996],[12.9625906,52.4338799],[12.9618868,52.4349289],[12.9615017,52.4352936],[12.9613694,52.4354696],[12.9607368,52.436055],[12.9610751,52.4359993],[12.9632066,52.4336025],[12.9613084,52.435887]],"Am Langen Berg":[[12.9917647,52.4085818],[12.9933403,52.4079995],[12.992734,52.4084],[12.9933403,52.4079995],[12.9925209,52.4081569],[12.9917647,52.4085818],[12.9925209,52.4081569],[12.9921937,52.4083888],[12.9922976,52.4083698],[12.9929331,52.4080774],[12.9929331,52.4080774],[12.992734,52.4084]],"Am Lehnitzsee":[[13.0478403,52.4422908],[13.0482089,52.4422452],[13.0479254,52.44321],[13.0475654,52.4429163],[13.0524035,52.4427874],[13.0484595,52.442374],[13.0508233,52.4421913],[13.0505799,52.4420675],[13.0511246,52.4428312],[13.0494218,52.4429904],[13.0497529,52.442973],[13.0519478,52.4420342],[13.0516358,52.4419492],[13.0493823,52.4422656],[13.0504452,52.4425865],[13.0504126,52.4429989],[13.0486344,52.4433005],[13.0499728,52.4422963],[13.0506922,52.4428933],[13.0490925,52.4429973],[13.0509594,52.442093],[13.0487495,52.4430077],[13.048436,52.4430248],[13.0524223,52.4420891],[13.0481141,52.4431393],[13.0542323,52.4433415],[13.0482219,52.4419702],[13.0527159,52.4424965]],"Am Luftschiffhafen":[[13.0135334,52.3745127],[13.0163301,52.376131],[13.017011,52.375649],[13.0177733,52.3807839],[13.0148403,52.3775398],[13.0157705,52.3789463],[13.0147557,52.3758082],[13.0182752,52.3800946],[13.0130135,52.3747216],[13.0137194,52.3747327],[13.0137616,52.3755795],[13.0152462,52.3764403]],"Am Lustgartenwall":[[13.0559372,52.3911094]],"Am Mittelbusch":[[13.1216105,52.3776627],[13.1218386,52.3777805],[13.1205063,52.3771335],[13.1209851,52.3773398],[13.1212497,52.3770805],[13.1207381,52.3772353],[13.121336,52.3771513],[13.1198563,52.3768491],[13.1210543,52.3769588],[13.1220683,52.3777481],[13.1217485,52.3772722],[13.1212668,52.3775462],[13.1224626,52.3775405],[13.1226053,52.3774389],[13.1205597,52.3769016],[13.1203054,52.3768212],[13.1201299,52.3766939],[13.1212553,52.3769296],[13.1209075,52.3773056],[13.120659,52.3772003],[13.1204242,52.3770972],[13.1201042,52.3765002],[13.1199458,52.3764374],[13.1214946,52.3775127]],"Am Moosfenn":[[13.0916157,52.3629853],[13.0917921,52.3630346],[13.091969,52.363084],[13.0921401,52.3631318],[13.0923173,52.3631988],[13.0924928,52.363248],[13.0926594,52.3632945],[13.0934757,52.3654085],[13.0930594,52.3648177],[13.0934985,52.3647662],[13.0932848,52.3650867],[13.0932234,52.3648336],[13.0928152,52.3647419],[13.0889216,52.3621804],[13.0887706,52.3621385],[13.0885936,52.3620894],[13.0884405,52.3620469],[13.088241,52.3619916],[13.0880635,52.3619423],[13.0906105,52.3626431],[13.0904461,52.3625976],[13.0902821,52.3625522],[13.090097,52.362501],[13.0899415,52.362458],[13.0897772,52.3624125],[13.0896041,52.3623646],[13.0879995,52.3615022],[13.0882148,52.361561],[13.0920914,52.3626679],[13.092914,52.3613974],[13.0922222,52.364989],[13.0924932,52.3648888],[13.088886,52.3617798],[13.0895193,52.3619676],[13.0901688,52.3621427]],"Am Mühlenberg":[[12.9667622,52.4127142],[12.9700575,52.415202],[12.9678056,52.4155242],[12.9697915,52.4165785],[12.9696043,52.4142779],[12.9697855,52.413152],[12.97072,52.4120045],[12.9708364,52.4125778],[12.9705944,52.4139753],[12.9712965,52.4139064],[12.9712462,52.4137158],[12.9705597,52.4137831]],"Am Neuen Garten":[[13.0638986,52.4075421],[13.0636593,52.4085723],[13.0635038,52.4087603],[13.0647158,52.4065136],[13.0631418,52.4090871],[13.0638132,52.4083223],[13.0685059,52.4213608],[13.06587,52.4156249],[13.063996,52.4127615],[13.0657907,52.4146358],[13.0651446,52.4137831],[13.0655521,52.414383],[13.0627349,52.4114137],[13.0641069,52.4135365],[13.063146,52.4116413],[13.06438,52.4129802],[13.063337,52.4118389],[13.0652152,52.4140438],[13.0645636,52.4131572],[13.0634445,52.4125965],[13.0658917,52.4147027],[13.0654619,52.4143341],[13.0634326,52.4118594],[13.0670543,52.4173711],[13.0665494,52.417483],[13.0662188,52.4175539],[13.067924,52.4198054],[13.0676605,52.4190656],[13.067403,52.4180971],[13.0672868,52.4206578],[13.0670873,52.4174782],[13.0676199,52.418904],[13.0673204,52.4178795],[13.0679345,52.4201629],[13.0683016,52.4211011],[13.0682391,52.4208144],[13.0648829,52.406873],[13.064586,52.407255],[13.0648003,52.407],[13.0663532,52.4150642],[13.0646398,52.4139529],[13.0645698,52.4142043],[13.0648958,52.4134941],[13.0644479,52.4132818],[13.0651768,52.414634],[13.0660675,52.4152823],[13.0653794,52.4141153],[13.0674667,52.418878],[13.0673044,52.4185254],[13.0674742,52.4185562],[13.0635837,52.408605],[13.0667487,52.4177743],[13.0661615,52.4159991],[13.0664255,52.4157781],[13.0664501,52.4160464],[13.0658268,52.4157399],[13.0656482,52.4160834],[13.0678108,52.4194359],[13.0677556,52.4193422],[13.0653909,52.4073283],[13.0638482,52.4124705],[13.063787,52.412406],[13.0636474,52.4122611],[13.0635762,52.4121861],[13.0675809,52.4208708],[13.0676676,52.4208272],[13.0680179,52.4204944],[13.067909,52.4205441]],"Am Neuen Markt":[[13.0582202,52.3961531],[13.0579902,52.3963261],[13.0580567,52.3964812],[13.0575106,52.3963433],[13.0576254,52.3966351],[13.0575944,52.3965336],[13.0571345,52.3966904],[13.0569532,52.3965229],[13.057218,52.3970206],[13.0572021,52.3969115],[13.057403,52.3968947],[13.0559504,52.3960634],[13.0562838,52.3959946],[13.0577335,52.3956195],[13.057553,52.3959969],[13.0575155,52.3958831],[13.0561835,52.3965281],[13.057403,52.3968947],[13.0559893,52.3961777],[13.0561227,52.3965694],[13.0565078,52.3959656],[13.0566354,52.3959751],[13.0559376,52.3961828],[13.0575507,52.3963386],[13.0579135,52.3958972],[13.0570525,52.3964152],[13.0573105,52.3966152]],"Am Neuen Palais":[[13.0143946,52.3943711],[13.0131795,52.4032268],[13.0145901,52.3964663],[13.013606,52.3965174],[13.0133238,52.3994209],[13.0124419,52.4005455],[13.01186,52.4038213],[13.0126649,52.4006881],[13.0133987,52.4002057],[13.0102925,52.4001687],[[13.0125573,52.4016599],[13.0125433,52.4017913],[13.0125037,52.4021634],[13.0131811,52.4021903],[13.0132054,52.401962],[13.0135004,52.4019737],[13.0135137,52.4018486],[13.0135311,52.4018493],[13.0135719,52.4018509],[13.0135779,52.4017952],[13.0135833,52.4017438],[13.0135378,52.401742],[13.0135164,52.4017412],[13.0135251,52.4016592],[13.0134512,52.4016563],[13.013384,52.4016536],[13.0132839,52.4016496],[13.0132798,52.4016885],[13.0132133,52.4016859],[13.0125573,52.4016599]],[13.011915,52.4028012],[13.0132133,52.4016859],[13.0117571,52.4002515],[13.0095665,52.4003345],[13.014025,52.3993378],[13.0132122,52.4017538],[13.0129369,52.4017495],[13.0126767,52.4017456],[13.0132106,52.4018465],[13.0129364,52.4018423],[13.0126752,52.4018383],[13.0117366,52.4000975],[13.010657,52.3994936],[13.0106328,52.3996704],[13.0118439,52.3980215],[13.0118279,52.3982028],[13.0118144,52.398357],[13.0134904,52.3993931],[13.0097598,52.400339],[13.0096345,52.4022574],[13.0116974,52.399827]],"Am Nuthetal":[[13.1021289,52.3736579],[13.101955,52.3736633],[13.1017483,52.3736696],[13.1006791,52.3738403],[13.1001521,52.373858],[13.1003305,52.373852],[13.100507,52.3738461],[13.0989031,52.3738939],[13.0995139,52.3738738],[13.099103,52.3738873],[13.0993098,52.3738805]],"Am Palais Lichtenau":[[13.0633023,52.4059068],[13.0635265,52.4055029],[13.0639419,52.4057887],[13.0641966,52.4056483],[13.0643072,52.4056619],[13.0644053,52.4056741],[13.063517,52.4054927],[13.0639096,52.4054639],[13.0638067,52.4053626],[13.0643062,52.4055254],[13.0644579,52.4055428]],"Am Park Babelsberg":[],"Am Park":[[13.1129735,52.4724554],[13.1131712,52.4727251],[13.1134834,52.4724052],[13.1131015,52.4722849],[13.1128604,52.4720897],[13.1133328,52.4720715],[13.1150354,52.4742604],[13.1130237,52.472902],[13.1133424,52.4725743],[13.1128808,52.4726421],[13.1143743,52.4737831],[13.1145161,52.4738524],[13.1136408,52.4721618],[13.1132279,52.4722689],[13.1146783,52.4741296],[13.1147693,52.4741525],[13.1065181,52.4705262]],"Am Parkplatz":[[12.9346118,52.4846833],[12.9344247,52.4851781],[12.9339728,52.4845451],[12.9341622,52.4847428],[12.9352722,52.4844655]],"Am Pfingstberg":[[13.0605292,52.422134],[13.0560614,52.4199667],[13.0564527,52.4200926],[13.0567696,52.4201746],[13.0574346,52.4204791],[13.0573458,52.4204455],[13.0620082,52.4242851],[13.0617909,52.424115],[13.0622147,52.4247267],[13.057041,52.4201766],[13.0626869,52.4225208],[13.0634294,52.4241848],[13.0636404,52.4225456],[13.0641368,52.4223472],[13.0634226,52.4225895],[13.0604718,52.4220442],[13.0564249,52.4204537],[13.0566876,52.4204848],[13.0571689,52.4205958],[13.0573988,52.4206655],[13.0577789,52.4208791],[13.0576632,52.4210313],[13.0585475,52.4210891],[13.058416,52.4212451]],"Am Phloxgarten":[[13.0123917,52.4250851],[13.0122791,52.4249168],[13.0128283,52.4248609]],"Am Plantagenhaus":[[13.086878,52.3719709],[13.0867219,52.3721424],[13.0865149,52.3720174],[13.084918,52.3733641],[13.0851764,52.3731978],[13.0851689,52.3736768],[13.0853424,52.3735129],[13.0854648,52.3733927],[13.0864828,52.3716391],[13.0862416,52.3722699],[13.0856808,52.3726105],[13.0861879,52.3717835],[13.0854951,52.3727223],[13.0851046,52.3729938],[13.0860886,52.3723943],[13.0852874,52.3728388],[13.0861494,52.3720489],[13.0859625,52.3724293],[13.0847056,52.3731958],[13.0865187,52.3722695],[13.0871488,52.3723206],[13.0861641,52.3725732],[13.0859688,52.3727512],[13.0863985,52.3724185],[13.0867488,52.3726109],[13.0858069,52.3728674],[13.0865084,52.3718738],[13.0855514,52.373102],[13.0856453,52.373021]],"Am Priesteracker":[[12.9984363,52.4225099],[12.998099,52.4223125],[12.9980923,52.4224312]],"Am Raubfang":[[13.019396,52.4177691],[13.0223059,52.4212755],[13.0218052,52.4210808],[13.0209689,52.4209706],[13.0194238,52.4181868],[13.0194728,52.4183278],[13.0197195,52.4185297],[13.0180984,52.4207782],[13.0207112,52.4212524],[13.0214136,52.4214804],[13.0215903,52.4214168],[13.0202488,52.4187886],[13.019744,52.4207771],[13.0197623,52.4188475],[13.0203338,52.4202247]],"Am Rehweg":[[13.0475043,52.4419491],[13.0461346,52.4424264],[13.0446507,52.4409604],[13.042871,52.4411161],[13.0431734,52.4411124],[13.0436048,52.4408639],[13.0463624,52.4418136],[13.0462127,52.4414089],[13.0466845,52.4423009],[13.0404536,52.4417837],[13.0457252,52.4410804],[13.0464981,52.4419802],[13.0432142,52.4409837],[13.043242,52.4410844],[13.0433215,52.4410541],[13.0433697,52.4409309],[13.0429896,52.4411771],[13.0436813,52.4408397],[13.0436813,52.4408397],[13.0453525,52.4411216],[13.0451066,52.4410858],[13.0448307,52.4411702],[13.044575,52.4411595],[13.0443454,52.4409322],[13.0441472,52.4409233],[13.0440105,52.4409178],[13.0417693,52.4413197]],"Am Reiherbusch":[[13.0575582,52.4221737],[13.0570747,52.4220558],[13.0565763,52.4219378],[13.0561055,52.4221522],[13.0563302,52.4221998],[13.056581,52.4222594],[13.0568024,52.4223071],[13.0571313,52.4223885],[13.0573268,52.4224302],[13.0575222,52.4224719],[13.0577013,52.4225117],[13.0576684,52.4219933],[13.05718,52.4218761],[13.0566697,52.4217473]],"Am Sandberg":[[12.9951181,52.4073763],[12.9955212,52.4073346],[12.9955212,52.4073346],[12.9946856,52.406959],[12.9945668,52.4073219],[12.9947736,52.4069682],[12.9948465,52.4073481],[12.9948616,52.4069773],[12.9948465,52.4073481],[12.9951181,52.4073763],[12.9956898,52.4071273],[12.9956898,52.4071273],[12.9951093,52.4069648],[12.995111,52.4068587],[12.9951149,52.4067965],[12.9951201,52.4066901],[12.9951228,52.4066272],[12.9951277,52.4065239],[12.9959084,52.4069706],[12.9951316,52.4064617],[12.9959084,52.4069706],[12.9959166,52.406812],[12.9959166,52.406812],[12.9951054,52.407027]],"Am Schlahn":[[13.0951559,52.4610542],[13.094737,52.4678887],[13.0949841,52.4611086],[13.0949841,52.4611086],[13.0954436,52.4674435]],"Am Schlangenfenn":[[13.0889419,52.3595304],[13.0888466,52.3596611],[13.0887556,52.3597859],[13.0886636,52.3599121],[13.0884222,52.3592531],[13.0883348,52.3593718],[13.0882429,52.3594966],[13.0881517,52.3596204],[13.0880629,52.3597409],[13.0886559,52.3607993],[13.0884888,52.3607532],[13.0883305,52.3607096],[13.0881712,52.3606658],[13.0880012,52.3606184],[13.0878441,52.3605745],[13.0876831,52.3605294],[13.0875301,52.3604865],[13.087367,52.3604147],[13.0872098,52.3603707],[13.0870479,52.3603254],[13.0868917,52.3602816],[13.0887304,52.3604651],[13.0885703,52.3604207],[13.088404,52.3603746],[13.0882128,52.3603215],[13.0880732,52.3602828],[13.0877679,52.3601999],[13.0875892,52.3601515],[13.0874278,52.3601078],[13.0895308,52.3606791],[13.0894693,52.3607624],[13.0893963,52.3608613],[13.089331,52.3609499],[13.0893578,52.3600719],[13.089435,52.3599648],[13.0895159,52.3598523],[13.0896011,52.3597342],[13.089683,52.3596204],[13.0908115,52.3595071],[13.0906414,52.3594599],[13.0904782,52.3594145],[13.09013,52.359321],[13.0899749,52.3592779],[13.0872499,52.359874],[13.0873333,52.3597603],[13.0874139,52.3596506],[13.087492,52.3595442],[13.087636,52.3593301],[13.0877094,52.3592314],[13.0877949,52.3591164],[13.0878699,52.3590156],[13.0890275,52.3590594],[13.0887923,52.3589944],[13.0886072,52.3589432],[13.0884058,52.3588876]],"Am Schlänitzsee":[[12.9628177,52.4606073],[12.9627952,52.4598774],[12.963121,52.4604396],[12.9635108,52.4604269],[12.963049,52.4600599],[12.9632529,52.4606499],[12.9627047,52.4600352],[12.9634443,52.4606176],[12.9629927,52.4602107],[12.9634267,52.4601861],[12.9634704,52.4599246],[12.9627486,52.4603911],[12.9631838,52.4599013],[12.9626557,52.4601338],[12.9626768,52.4600799],[12.9638309,52.4599648]],"Am Schragen":[[13.0546936,52.4124652],[13.0546119,52.4122915],[13.0548202,52.4103269],[13.0548655,52.4104577],[13.0548124,52.4105412],[13.0548241,52.4105929],[13.0550056,52.4107253],[13.0549246,52.4108858],[13.0549328,52.4109283],[13.0550411,52.4109828],[13.0550872,52.4111186],[13.0550247,52.4111946],[13.0534767,52.4124406],[13.0535642,52.4126657],[13.0547193,52.4102709],[13.0547191,52.4097395],[13.0547296,52.4097716],[13.0551471,52.411296],[13.0551555,52.4113216],[13.0551792,52.4113942],[13.0551876,52.4114197],[13.0553087,52.4115462],[13.0553198,52.4115789],[13.0553454,52.4116544],[13.0553627,52.4117055],[13.0552999,52.4119404],[13.0553067,52.411969],[13.0547618,52.40987],[13.0553291,52.412063],[13.0553358,52.412091],[13.0543889,52.4122682],[13.0543168,52.4122774],[13.0542295,52.4122885],[13.054151,52.4122985],[13.0539414,52.4123436],[13.0538883,52.4123547],[13.0537786,52.4123775],[13.0547713,52.4098991],[13.0537162,52.4123905],[13.0537671,52.4126269],[13.0538192,52.4126161],[13.0539616,52.4125865],[13.0540136,52.4125757],[13.0542419,52.4125177],[13.0547382,52.4100494],[13.0542884,52.412504],[13.0544312,52.412462],[13.054473,52.4124497],[13.0554039,52.4122893],[13.055418,52.412319],[13.0554596,52.4124073],[13.0554757,52.4124413],[13.0547466,52.410075],[13.0547714,52.4101507],[13.0547802,52.4101775],[13.0535387,52.4125597]],"Am Seeblick":[[13.1086916,52.4584046],[13.10775,52.4578251],[13.1084025,52.4582129],[13.1072842,52.4576923],[13.1075155,52.457762],[13.1083866,52.457923]],"Am Silbergraben":[[13.1299126,52.3580315],[13.1301551,52.3576093],[13.1282317,52.3594275],[13.1277376,52.3596715],[13.1277117,52.3593659],[13.1298316,52.3583005],[13.1280866,52.3592086],[13.1273036,52.3599882],[13.129113,52.356722],[13.1298813,52.3572068],[13.1278004,52.3590631],[13.1279896,52.3595161],[13.1294841,52.3578673],[13.1282992,52.3593043],[13.1288697,52.3586794],[13.1280596,52.3595603],[13.1293631,52.3580573],[13.1278052,52.3599883],[13.1279994,52.3597578],[13.129458,52.3575507],[13.1291991,52.3582758],[13.1275987,52.3598591],[13.1277253,52.3591775],[13.1272938,52.3597067],[13.1287302,52.3587994],[13.1271813,52.3597762],[13.1303563,52.3574438],[13.1279748,52.3592976],[13.1334667,52.3555371],[13.1334864,52.3556968],[13.1331027,52.3557377],[13.1331741,52.3555587],[13.1328257,52.3556864],[13.1325327,52.3556842],[13.1348691,52.3550786],[13.1346959,52.3551525],[13.1315683,52.3559275],[13.1300153,52.3568326],[13.1295232,52.3584822],[13.1297501,52.3584346],[13.1290363,52.358494],[13.1285326,52.3580988],[13.1285151,52.3583489],[13.1292556,52.3584523],[13.1286618,52.3588543],[13.1292511,52.3589723],[13.1303302,52.3575086],[13.1289318,52.3577933],[13.1303884,52.3563275],[13.129536,52.3561087],[13.1301738,52.35647],[13.1297833,52.3574031],[13.1309581,52.3555357],[13.1306349,52.3557052],[13.1305611,52.3559873],[13.1325724,52.3550355],[13.1332954,52.3549694],[13.1329359,52.3550012],[13.1317121,52.3553736],[13.1312534,52.3554209]],"Am Speicher":[[13.0591782,52.3901567],[13.0585619,52.3894905],[13.0591327,52.389279],[13.0592117,52.3895201],[13.0594778,52.3900643]],"Am Spitzen Berg":[[13.0145397,52.4772488],[13.0141352,52.4776519],[13.0141934,52.476741],[13.0142488,52.4771231],[13.0134745,52.477441],[13.0143483,52.4774668],[13.0138106,52.4770566],[13.014516,52.4768919],[13.0134376,52.4776024],[13.0147665,52.4778329],[13.0136131,52.4772827],[13.0139462,52.4768975],[13.0145177,52.4781667],[13.0152822,52.4780019],[13.0150754,52.4782526],[13.0154435,52.4775925],[13.013068,52.4781922],[13.0143519,52.4781127],[13.0149723,52.4778775],[13.0148923,52.4774114],[13.0130362,52.4777794],[13.0128597,52.47803],[13.0148662,52.4782661],[13.0140231,52.4778756],[13.0151281,52.4775211],[13.013777,52.4781387],[13.0132119,52.4778214],[13.0139149,52.4776127],[13.0136627,52.477883],[13.0145334,52.4770276],[13.0145574,52.4764687],[13.0161162,52.4770205],[13.0157609,52.4771124],[13.0147325,52.4765262],[13.0164795,52.4767167],[13.0158318,52.4766693],[13.014226,52.4763607],[13.0155661,52.4766383],[13.0152999,52.4772274],[13.0153913,52.477775],[13.015374,52.4768204],[13.0155024,52.477294],[13.0155555,52.4770165],[13.0149114,52.4768235],[13.0151595,52.4766313],[13.0157473,52.4769171],[13.0162003,52.476704],[13.0129378,52.4780554],[13.0141513,52.4767888],[13.0143065,52.4775144],[13.0147838,52.4769676],[13.0150811,52.4766058],[13.0141786,52.4765477],[13.0131144,52.4778049],[13.013751,52.4778813],[13.0143818,52.4764114],[13.0132901,52.4778468],[13.0148692,52.4768712],[13.014498,52.4772963],[13.0145941,52.4769173],[13.013396,52.4776499],[13.0137587,52.4775618],[13.0131457,52.4782175],[13.0148272,52.4769187],[13.0150811,52.4766058],[13.0138191,52.4780912],[13.014207,52.4771706],[13.0144916,52.4770751],[13.0148104,52.4765516],[13.0141114,52.4778738],[13.0141367,52.4765956],[13.0145574,52.4764687],[13.014177,52.4776044],[13.0139052,52.4769457],[13.0135162,52.4773935],[13.0137691,52.4771042],[13.013655,52.4772351],[13.0153772,52.4776992],[13.0151156,52.477167],[13.0157427,52.4766369],[13.0149836,52.4774414],[13.0158301,52.4770666],[13.0152079,52.4775472],[13.0154279,52.476922],[13.0149723,52.4778775],[13.0143519,52.4781127],[13.0160413,52.476978],[13.0146987,52.478227],[13.0160981,52.4767049],[13.0157473,52.4769171],[13.0164795,52.4767167],[13.0159207,52.4766686],[13.0154034,52.4772614],[13.0151832,52.4779695],[13.0148662,52.4782661],[13.0146744,52.4778028],[13.0152352,52.4783049]],"Am Sportplatz":[[13.113773,52.3901033],[13.1135139,52.3894938],[13.1128312,52.3872234],[13.1130852,52.3869047],[13.1134515,52.3876064],[13.1134202,52.3878491],[13.1134804,52.3879315],[13.1137656,52.3881431],[13.1138355,52.3882813],[13.113927,52.3884343],[13.1139993,52.3885785],[13.1140765,52.3887314],[13.1140234,52.3888947],[13.1142886,52.3890403],[13.1131671,52.3870562],[13.1132394,52.3872195],[13.1133334,52.3873563],[13.1134033,52.3875122],[13.1146755,52.3900099],[13.1144624,52.3894232],[13.1149585,52.3905111],[13.1149691,52.3909951],[13.1146346,52.3897488],[13.1148437,52.3903504],[13.1147992,52.3902565],[13.1145153,52.3895949],[13.1149513,52.3906986],[13.1127268,52.3870435],[13.1135854,52.3896593],[13.113657,52.3898249],[13.114774,52.3901821],[13.1138354,52.3902701],[13.1138978,52.390437],[13.1140125,52.3908536],[13.1140373,52.3909958]],"Am Springbruch":[[13.0894002,52.3573557],[13.089579,52.3574037],[13.0897283,52.3574439],[13.0895706,52.3576873],[13.0894021,52.3576408],[13.0892277,52.3575927],[13.0890633,52.3575473],[13.0885634,52.358161],[13.0882433,52.3583475],[13.0887386,52.3582088],[13.0889342,52.3582623],[13.0891026,52.3583083],[13.0889273,52.3585347],[13.0887492,52.3584864],[13.0885783,52.35844],[13.088405,52.358393]],"Am Stadtrand":[[13.1036846,52.3702232],[13.1069785,52.3723903],[13.1072911,52.3719513],[13.1075589,52.3716832],[13.1068522,52.3714787],[13.1070668,52.3712543],[13.1074509,52.3714066],[13.1065846,52.3714122],[13.106678,52.3711128],[13.1059971,52.3711959],[13.1062629,52.3712562],[13.1063026,52.3709687],[13.1059038,52.3708226],[13.1056846,52.3710448],[13.1052603,52.3708785],[13.105475,52.3706586],[13.1050101,52.3707886],[13.1048068,52.3707126],[13.1046056,52.3706341],[13.1050851,52.3705115],[13.1044022,52.3705542],[13.1040972,52.3704205],[13.1043317,52.3702021],[13.1047016,52.370363],[13.1043623,52.3704515],[13.1039753,52.3700311],[13.1040656,52.3700761],[13.1044254,52.3702436],[13.1047983,52.3704011],[13.1051831,52.3705479],[13.1055729,52.3706954],[13.1060095,52.3708613],[13.1063995,52.3710063],[13.1067823,52.3711519],[13.1071724,52.3712946],[13.107554,52.3714457],[13.1070433,52.3723256],[13.1072247,52.3720195],[13.1074938,52.3717445],[13.1069559,52.3715183],[13.1063689,52.3712968],[13.1057891,52.3710838],[13.1053589,52.3709156],[13.1037766,52.370268],[13.1029491,52.3693835],[13.1027878,52.3692606],[13.1025824,52.3691034],[13.1024063,52.3689654],[13.1021704,52.3687722],[13.1020305,52.3686458],[13.1018042,52.368462],[13.1016527,52.3683355],[13.1014111,52.3681166],[13.1012477,52.3679851],[13.1010348,52.3678253],[13.1008804,52.3677012],[13.1007201,52.3674718],[13.1008874,52.367371],[13.1010932,52.367244],[13.1012626,52.3671432],[13.1016847,52.3683267],[13.1088749,52.370727]],"Am Stellwerk":[[13.0699209,52.3902341],[13.0694759,52.3906607],[13.0702374,52.3904165],[13.0702565,52.3905917],[13.0701412,52.3907544],[13.0698608,52.3907658],[13.069789,52.3901789]],"Am Stinthorn":[[13.0521568,52.4465211],[13.0530938,52.4470975],[13.0524811,52.4468168],[13.0515747,52.4465171],[13.0541854,52.4474548],[13.0524062,52.4482742],[13.0525415,52.4477775],[13.053258,52.4467644],[13.0552143,52.4469849],[13.0505295,52.4473096],[13.0516652,52.4478512],[13.0545558,52.4471618],[13.0509641,52.4468248],[13.0501353,52.4469824],[13.0525057,52.4462124],[13.0497921,52.4471516],[13.0517547,52.4479887],[13.0529775,52.4474657],[13.0521444,52.4472714],[13.0533358,52.4473956],[13.0533228,52.447706],[13.0537907,52.4469552],[13.0530475,52.4465833],[13.051067,52.4475619],[13.0479984,52.4475985],[13.0519332,52.4480487],[13.0477394,52.4476886],[13.0523918,52.4472745],[13.0524153,52.4478568],[13.0533372,52.4470501],[13.0509114,52.447375],[13.0509423,52.4467021],[13.0514759,52.4474635],[13.0520324,52.4483939],[13.052801,52.4464496],[13.0546654,52.4473643],[13.0530346,52.4480441],[13.053886,52.4467507],[13.0536047,52.4477585],[13.0527952,52.4483018],[13.0493609,52.4471892],[13.052703,52.4468144],[13.0525713,52.446882],[13.0513823,52.4473962],[13.0514759,52.4474635],[13.0526765,52.4461632],[13.0477394,52.4476886],[13.0481236,52.4476879],[13.0517277,52.4466296],[13.0516987,52.4467816],[13.0518351,52.4474327],[13.0519382,52.4473789],[13.0520413,52.4473252],[13.0524971,52.4472198],[13.0526023,52.4471651],[13.0527075,52.4471104],[13.049911,52.4478818],[13.0495852,52.4475764],[13.0494806,52.4474914],[13.0543726,52.4468184],[13.051731,52.4469634],[13.0516613,52.4470059],[13.0515808,52.4470713],[13.0514467,52.4471203],[13.0513608,52.4471792],[13.0522138,52.4467051],[13.0521387,52.4467378],[13.0520689,52.4467934],[13.0519617,52.4468326],[13.0518812,52.4468784],[13.0535941,52.4468838]],"Am Tempelberg":[[12.9970556,52.4057961],[12.9969246,52.4062317],[12.9973903,52.4059619],[12.9979812,52.4062336],[12.9969556,52.4060427],[12.9978223,52.4058818],[12.9968332,52.4063474],[12.9962275,52.4064148],[12.9957587,52.4064017],[12.997214,52.4066987],[12.9974166,52.4068912],[12.997214,52.4066987],[12.9967684,52.4068206],[12.9967684,52.4068206],[12.9974166,52.4068912],[12.9972639,52.4064277],[12.9979774,52.4065075],[12.9979774,52.4065075],[12.9973251,52.4062126],[12.9973251,52.4062126],[12.9979812,52.4062336],[12.9972639,52.4064277],[12.9969556,52.4060427],[12.9969246,52.4062317]],"Am Uferpark":[[13.0488921,52.3834319],[13.0483879,52.3835615],[13.0489031,52.3833711],[13.0489146,52.3833111],[13.0484706,52.3833616],[13.0489249,52.3832503],[13.0484706,52.3833616],[13.0484815,52.383302],[13.0484931,52.3832416],[13.0483731,52.3836451],[13.0485056,52.3836539],[13.0493286,52.3836515],[13.0489548,52.3835462],[13.049452,52.3834097],[13.0494412,52.3834677],[13.0498689,52.3834985],[13.0498804,52.3834385],[13.0499614,52.383619],[13.0498046,52.3836868],[13.0503887,52.3834731],[13.0503791,52.3835327],[13.0504118,52.3833542],[13.0503996,52.383415],[13.0504709,52.3836875],[13.0503152,52.3837568]],"Am Upstall":[[13.0152894,52.4744921],[13.0157493,52.4739665],[13.0150235,52.4761392],[13.0155458,52.4762317],[13.0147758,52.4760174],[13.015234,52.4761964],[13.0144769,52.4756393],[13.0144637,52.4751002],[13.0158257,52.4762337],[13.0144685,52.4752801],[13.0144724,52.4754597],[13.0148293,52.4750074],[13.0151502,52.4761789],[13.0144671,52.4752263],[13.0144623,52.4750466],[13.0154575,52.4762293],[13.0147209,52.4759753],[13.0144711,52.4754059],[13.0144755,52.4755855],[13.014828,52.4749535],[13.0157373,52.4762339],[13.0149515,52.4761083],[13.013876,52.4741078],[13.0146228,52.4741],[13.0138919,52.4744036],[13.014626,52.4743958],[13.0138919,52.4745743],[13.0146291,52.4745636]],"Am Upstallgraben":[[13.0190224,52.469211],[13.0190924,52.469471],[13.019073,52.469422],[13.0192833,52.4686117],[13.0197505,52.4685692],[13.0190347,52.4689991],[13.0190347,52.4689991],[13.0196278,52.4687336],[13.0195301,52.4689029],[13.0194367,52.469085],[13.0192286,52.4696177],[13.0192286,52.4696177],[13.0194038,52.4693234],[13.0195085,52.4677665],[13.0194777,52.4671264],[13.0191446,52.4676365],[13.0196412,52.4677539],[13.0195213,52.4678131],[13.0195355,52.4678652],[13.0195497,52.4679168],[13.0195632,52.4679664],[13.0195331,52.4683288],[13.0194593,52.468386],[13.0193367,52.4681699],[13.0192296,52.4682022],[13.0192579,52.4679809],[13.019139,52.4679882],[13.0192465,52.4677777],[13.0191271,52.4677765],[13.0198737,52.4682678],[13.0196925,52.4681626],[13.0199334,52.4683025],[13.0197487,52.4681953],[13.0198115,52.4682317],[13.0197862,52.468104],[13.0188614,52.4666673],[13.0195106,52.4666694],[13.0179248,52.4667082]],"Am Vogelherd":[[13.0441998,52.4310505],[13.0441649,52.4293849],[13.0440935,52.4296507],[13.0443895,52.4312763],[13.0442719,52.4305114],[13.0452691,52.4280187]],"Am Wald":[[13.0798016,52.373857],[13.0798162,52.3737047],[13.0802304,52.3727789],[13.0794064,52.3744251],[13.078932,52.3755071],[13.078952,52.3757544],[13.0809,52.3714573],[13.081271,52.3710341],[13.0813909,52.3707551],[13.0812198,52.3711852],[13.0813816,52.3704509],[13.0815274,52.3703313],[13.079344,52.3745805],[13.0807244,52.3720106],[13.081238,52.3708037],[13.0812138,52.3708462]],"Am Waldfrieden":[[13.0994109,52.4551425],[13.0990523,52.4547915],[13.0986406,52.4547777],[13.100708,52.4544471],[13.1003248,52.4545722],[13.0999709,52.4542951],[13.0980425,52.4554855],[13.0995188,52.4546181],[13.0982859,52.4548899],[13.0965762,52.4556601],[13.0970996,52.4549955],[13.0978567,52.4549527],[13.1002865,52.4547998],[13.0969644,52.4556124],[13.0983786,52.4552393],[13.0961859,52.4557173],[13.0977254,52.4555442],[13.0990327,52.4549645]],"Am Waldrand":[[13.109476,52.4120101],[13.1093226,52.4126371],[13.109276,52.4127931],[13.1094145,52.4123059],[13.1097273,52.4117137],[13.1098201,52.411461],[13.1098615,52.4111538],[13.109414,52.4108554],[13.1096529,52.4114067],[13.1098415,52.410822],[13.1098858,52.4106764],[13.109701,52.4110594],[13.110188,52.4100995],[13.1102934,52.409943],[13.1106428,52.4110034],[13.1099396,52.4105152],[13.1104923,52.4104724],[13.1104563,52.410619],[13.1102492,52.4112631],[13.1107004,52.4108217],[13.1093699,52.4121968],[13.1098563,52.4116182],[13.1095959,52.4124541],[13.1096277,52.4123478],[13.1105363,52.4106044],[13.1101147,52.4101523]],"Am Weinberg":[[13.0151353,52.4638751],[13.0156715,52.4639568],[13.0158943,52.4642092]],"Am Weißen See":[[13.0342134,52.4395834],[13.0360574,52.4391686],[13.0356581,52.4391563],[13.0364533,52.4391742],[13.0352248,52.4394065]],"Am Wiesenrand":[[13.0474392,52.4421024],[13.0476442,52.4420754],[13.0473736,52.4424225],[13.047047,52.4423662]],"Am Wildpark":[[13.0137769,52.3939576],[13.0129429,52.3941192],[13.0148102,52.3934014],[13.0148792,52.3927868],[13.012687,52.3940054],[13.0128888,52.3939233]],"Am Windmühlenberg":[],"Am Zachelsberg":[[12.9758518,52.4113504]],"Am Zernsee":[[12.9463834,52.4042528],[12.9469743,52.4043502],[12.9449895,52.4018884],[12.9460194,52.4037936],[12.9427104,52.398738],[12.9450311,52.4021937],[12.9457547,52.4033684],[12.9430115,52.3984953],[12.9425968,52.3981739],[12.9450463,52.4022822],[12.9454994,52.4029087],[12.9424183,52.3982274],[12.9461503,52.4039295],[12.9437338,52.3994207],[12.9451398,52.4019394],[12.9457155,52.4030719],[12.9461674,52.4046033],[12.9430702,52.3989028],[12.944142,52.3999547],[12.9423754,52.3980861],[12.9453342,52.4026979],[12.942759,52.3984247],[12.945555,52.4029936],[12.9458505,52.4035649],[12.9454453,52.4013911],[12.9440544,52.3993758],[12.9424744,52.3983746],[12.9450983,52.4014374],[12.9464004,52.4043982],[12.9450097,52.4016484],[12.9427918,52.399019],[12.9456804,52.4032292],[12.9458997,52.4037087],[12.945157,52.4012801],[12.946878,52.4041652],[12.9426813,52.3987015],[12.9448905,52.4014279],[12.945152,52.4020424],[12.942632,52.3989011],[12.9465697,52.4036151],[12.9462699,52.4034967],[12.9444257,52.4008171],[12.944258,52.4005384],[12.9441647,52.4003808],[12.9440631,52.4002336],[12.9439618,52.4000884],[12.9438686,52.399941],[12.9437775,52.3997938],[12.9434344,52.3993304],[12.9439342,52.3991177],[12.9436912,52.3991441],[12.9433799,52.3990596],[12.9432541,52.3988521],[12.9431857,52.3986556],[12.9429646,52.3982736],[12.9428089,52.3981582],[12.9424486,52.3969506],[12.941128,52.3965111],[12.9466077,52.4040335],[12.9465968,52.4037627],[12.9470044,52.4047031],[12.9466927,52.4042918],[12.946759,52.4044586],[12.9472821,52.4046494],[12.9471555,52.4048921],[12.9446692,52.4014163],[12.9497799,52.4048441],[12.9494524,52.4048574],[12.9492617,52.404851],[12.9489705,52.4048589],[12.9487365,52.4049023],[12.9484869,52.4047809],[12.9482556,52.4048683],[12.9479927,52.4048947],[12.9477952,52.4048916],[12.9475714,52.4048986],[12.9473608,52.4048705],[12.9465467,52.4052081],[12.942422,52.3984841],[12.9422671,52.3976162],[12.9421807,52.3973812],[12.9462975,52.4050188],[12.9417664,52.3972233],[12.9409971,52.3962991],[12.9428982,52.3989856],[12.9389381,52.3939331],[12.9388718,52.3943083],[12.9389082,52.394377],[12.9420125,52.3966189],[12.9417223,52.3965417],[12.9387344,52.3933089],[12.9479107,52.406185]],"Am alten Dorf":[[12.9999835,52.4270255],[13.0004517,52.4268183],[13.0002225,52.4267486],[12.9998651,52.4266435],[13.0006067,52.4266488],[13.0008654,52.4267688]],"Am alten Mörtelwerk":[[12.9935336,52.4084414],[12.9935619,52.4084966],[12.993613,52.4085939],[12.9936427,52.40865],[12.993551,52.4083188],[12.993551,52.4083188],[12.9950129,52.4058051],[12.9948241,52.4059149],[12.9948241,52.4059149],[12.9950129,52.4058051],[12.9950354,52.4060423],[12.9949264,52.4062755],[12.9949264,52.4062755],[12.9947477,52.4065865],[12.9947477,52.4065865],[12.9946878,52.4068157],[12.9946878,52.4068157],[12.9953967,52.4081242],[12.9940979,52.4084292],[12.9946979,52.4080247],[12.9941225,52.4081108],[12.9941659,52.4085895],[12.9931721,52.4083175],[12.9926117,52.4085076],[12.992645,52.4085739],[12.9931721,52.4083175],[12.9941225,52.4081108],[12.992754,52.4087368],[12.9927823,52.408792],[12.9940876,52.4066244],[12.9945136,52.4060175]],Amselweg:or,Amselwinkel:ar,Amtsstraße:[[13.0240279,52.4180132],[13.0234033,52.4183842],[13.0230558,52.417188],[13.0236278,52.4170378],[13.0234896,52.4176444],[13.0231047,52.4179066],[13.0230433,52.4181544],[13.0232742,52.4190461],[13.0235812,52.418395],[13.0231076,52.4170867],[13.0235058,52.4177845],[13.023811,52.4189793],[13.023503,52.417447],[13.0231931,52.4175539],[13.0235275,52.4180497],[13.0230176,52.4167202],[13.0234253,52.4169869],[13.0233526,52.4187892],[13.024031,52.418932],[13.0233626,52.4210196],[13.026067,52.4205194],[13.0231988,52.4207493],[13.0227239,52.4194999],[13.0227367,52.4189726],[13.0232775,52.4198119],[13.0234224,52.4199977],[13.0232625,52.4202247],[13.0227814,52.4196409],[13.0265371,52.4205448],[13.0292715,52.4204938],[13.0236196,52.4170176],[13.0226643,52.4185691],[13.0228542,52.4184048],[13.0234363,52.4193459],[13.0226143,52.4186633],[13.024106,52.4179559],[13.0230692,52.4172406],[13.0244019,52.4177307],[13.0232741,52.4204685],[13.0235318,52.4181617],[13.0232425,52.420831]],Amundsenstraße:[[13.019775,52.4163009],[13.0193061,52.4143442],[13.0193111,52.414138],[13.0193133,52.4139245],[13.0193215,52.4150256],[13.0194912,52.415697],[13.0192822,52.4147507],[13.0192925,52.41455],[13.0193311,52.4152302],[13.0193537,52.4153365],[13.0196125,52.4154314],[13.0248943,52.4220177],[13.0215831,52.4180749],[13.0220529,52.4185496],[13.0218564,52.4192766],[13.022606,52.4179124],[13.0244273,52.4216146],[13.0248794,52.4216635],[13.0222426,52.4197101],[13.0217216,52.4189476],[13.0239586,52.4213713],[13.023694,52.4218509],[13.0225252,52.420049],[13.0240076,52.4221546],[13.0200381,52.4183173],[13.0195423,52.4177073],[13.0218516,52.4172773],[13.0215809,52.4173202],[13.0213724,52.4175018],[13.0220042,52.4208385],[13.0202811,52.4190565],[13.0207404,52.4191309],[13.0205128,52.4185168],[13.0197745,52.4180733],[13.0145988,52.4082439],[13.0186774,52.4119728],[13.0182071,52.4121188],[13.0257283,52.4230758],[13.0271083,52.4239337],[13.0268262,52.4236813],[13.0334918,52.42758],[13.0263041,52.4234295],[13.0264349,52.4228186],[13.0261265,52.4233181],[13.0331741,52.4275062],[13.0286908,52.4247916],[13.0198427,52.4159962],[13.0185241,52.4105855],[13.018749,52.410731],[13.0190567,52.4108952],[13.0195359,52.4110016],[13.0201196,52.4163387],[13.0211199,52.4197927],[13.0219267,52.4194573],[13.0205315,52.4161015],[13.0263488,52.4251273],[13.0253397,52.4232621],[13.02532,52.4229375],[13.0251059,52.4227323],[13.0197967,52.4109886],[13.0198683,52.4178599],[13.020683,52.4179176],[13.0205284,52.4175894],[13.0239284,52.4212365],[13.0207832,52.4179623],[13.0213925,52.418269],[13.0215254,52.4183886],[13.0334765,52.4273741],[13.0198452,52.4164508],[13.0249663,52.4226016],[13.0260668,52.4226617]],"An den Eisbergstücken":[[13.0308829,52.4693862],[13.0307262,52.4706981],[13.0314329,52.4696904],[13.0314828,52.4699172],[13.0313802,52.4698693],[13.0316479,52.4697848],[13.0311404,52.4697577],[13.0319024,52.4699031],[13.0302232,52.4692285],[13.0326481,52.4698927],[13.0317902,52.4709615],[13.032184,52.4695677],[13.0329696,52.4700605],[13.0311563,52.4695563],[13.0304629,52.4706773],[13.0307485,52.4694945],[13.0302897,52.4690535],[13.0303753,52.469321],[13.0317287,52.4700314],[13.0305973,52.4696152],[13.0307612,52.469014],[13.0315105,52.4693646],[13.0313559,52.4692928],[13.0327536,52.4703538],[13.0326669,52.4704818],[13.0317357,52.4694702],[13.0324545,52.4698024],[13.0320806,52.4703363],[13.0320174,52.4706475],[13.0324071,52.4708655],[13.0325806,52.4706097],[13.0324937,52.4707374],[13.0316567,52.4705566],[13.0328403,52.4702257],[13.032259,52.4700727],[13.0322295,52.4697008],[13.03113,52.4691878],[13.0318372,52.4706022],[13.0321672,52.4702084],[13.0323486,52.4710026],[13.0314767,52.4705113],[13.0313567,52.4707455],[13.030399,52.468917],[13.030088,52.4693961],[13.0316133,52.4708128],[13.0296713,52.4700782],[13.0312793,52.4704619],[13.0309957,52.4707606],[13.0312135,52.470814],[13.0314732,52.4708792],[13.0296913,52.4701223],[13.0303857,52.4697851],[13.0297113,52.4701664],[13.0297313,52.4702105],[13.0304824,52.4699183],[13.0318074,52.4695031],[13.0297513,52.4702546],[13.0297713,52.4702987],[13.0297913,52.4703428],[13.0305536,52.4700684],[13.0304152,52.4694153],[13.0300328,52.4694877],[13.0297281,52.470595],[13.0305176,52.4702246],[13.0315816,52.4693976],[13.0313559,52.4692928],[13.0312011,52.4692208]],"An den Gärten":[[13.0494056,52.409403],[13.0489061,52.4093218],[13.0488342,52.4089207],[13.0488144,52.409227],[13.048726,52.4091407],[13.0490049,52.4094275],[13.0489409,52.409356],[13.0497841,52.4098576],[13.0495771,52.4097719],[13.0495486,52.4096621],[13.0492306,52.4096508],[13.049256,52.4094697]],"An den Kopfweiden":[[13.0841908,52.3834523],[13.0840801,52.3835661],[13.0838248,52.383482],[13.0837143,52.3835968],[13.0849397,52.383516],[13.0836801,52.3833039],[13.0848151,52.3835221],[13.0845592,52.3834302],[13.0844481,52.3835423],[13.0830266,52.3835823],[13.083338,52.3835522],[13.0832996,52.3833121],[13.0829957,52.3833317],[13.0829769,52.3838638],[13.0839763,52.3819748],[13.083234,52.3828258],[13.0854249,52.3836471],[13.0825934,52.3833592],[13.0832641,52.3830438],[13.0826601,52.3836085],[13.0832779,52.3838023],[13.0833782,52.3837925],[13.0836325,52.3837671],[13.0837331,52.3837587],[13.0839976,52.3837348],[13.0840986,52.3837282],[13.0843604,52.3837103],[13.0844616,52.3837052],[13.0847191,52.3836894],[13.0848203,52.3836843],[13.0850735,52.3836665],[13.0851747,52.3836614],[13.0855261,52.383642],[13.0836042,52.3827601],[13.0834453,52.3830352],[13.0832712,52.3830987],[13.0834152,52.3828171],[13.0832411,52.3828775],[13.0828468,52.3835912],[13.0827802,52.3833419]],"An den Leddigen":[[13.0119415,52.4757313],[13.0124618,52.4760616],[13.0124985,52.4766054],[13.0126422,52.4773424],[13.0116123,52.4776414],[13.0128054,52.4767114],[13.0131239,52.4752058],[13.0109716,52.4774965],[13.0136601,52.4761214],[13.0117617,52.4774826],[13.0130627,52.4764175],[13.0130652,52.4767621],[13.0127304,52.4772435],[13.0112809,52.4774802],[13.0116272,52.4761001],[13.0109616,52.4769959],[13.0127192,52.4755904],[13.0122252,52.4762747],[13.0131993,52.4766088],[13.0124159,52.4775615],[13.0117891,52.4769155],[13.013212,52.475799],[13.0123824,52.4770819],[13.0137431,52.4764674],[13.0131969,52.4749467],[13.0123053,52.4768221],[13.0117691,52.4762995],[13.0127939,52.4762683],[13.0107231,52.4774162],[13.0121779,52.4769792],[13.0135623,52.4758298],[13.0122194,52.4772043],[13.012189,52.4754258],[13.0117934,52.4758715],[13.0133993,52.4764824],[13.0122475,52.4758796],[13.0116033,52.4765483],[13.0121237,52.4773591],[13.012386,52.475721],[13.0126156,52.4758684],[13.0124052,52.4778816],[13.0134661,52.4759403],[13.0120947,52.4778744],[13.012086,52.476433],[13.0130742,52.4771658],[13.0139036,52.476201],[13.012649,52.4776529],[13.0135783,52.4764091],[13.0128276,52.4770852],[13.013081,52.475948],[13.011926,52.4778192],[13.0118968,52.4761539],[13.0112861,52.4771028],[13.0129363,52.4761059],[13.0132728,52.4769372],[13.0123313,52.4752228],[13.0108061,52.4774359],[13.0121777,52.4772519],[13.0114147,52.4769542],[13.0133566,52.476531],[13.0124939,52.477587],[13.0127192,52.4755904],[13.0129056,52.4771106],[13.0125383,52.4771328],[13.0117273,52.4763471],[13.0128054,52.4767114],[13.0113718,52.4770038],[13.0127722,52.477196],[13.0116304,52.4768639],[13.0133522,52.4769631],[13.01172,52.4775301],[13.0126476,52.475567],[13.0124086,52.4751351],[13.0117618,52.4765997],[13.0131982,52.4749963],[13.0121279,52.4763856],[13.0114747,52.4768131],[13.0126258,52.4749257],[13.0137389,52.4761471],[13.0125491,52.4750128],[13.0119832,52.4756839],[13.0122634,52.4768698],[13.0136047,52.4757817],[13.0139717,52.4759916],[13.0121725,52.4778998],[13.0126405,52.4764428],[13.0126582,52.4758201],[13.0119179,52.4766503],[13.0118352,52.475824],[13.0131995,52.4750457],[13.0125036,52.4760141],[13.0130466,52.4752936],[13.0123437,52.475769],[13.0122654,52.4753388],[13.0116304,52.4768639],[13.0121361,52.4770267],[13.0117618,52.4765997],[13.0124833,52.4779071],[13.0120819,52.4774067],[13.0127269,52.4776783],[13.0130224,52.4768107],[13.0123702,52.4751786],[13.0130627,52.4764175],[13.0131521,52.4771912],[13.0140622,52.4762527],[13.0131566,52.4766574],[13.0118549,52.4762014],[13.0127514,52.4763167],[13.0125874,52.4749692],[13.0132008,52.4750958],[13.0139399,52.4759415],[13.011004,52.4769466],[13.0132545,52.4757507],[13.0120039,52.4778447],[13.0122669,52.4762272],[13.0131235,52.4758997],[13.0110888,52.4768479],[13.012456,52.4766537],[13.0122058,52.4759271],[13.0130856,52.4752494],[13.0122271,52.4753824],[13.0128936,52.4761545],[13.0134999,52.4763834],[13.0125764,52.4755437],[13.0116272,52.4761001],[13.0110464,52.4768973],[13.011329,52.4770533],[13.0138223,52.4764932],[13.0134238,52.4759883],[13.0126004,52.4773899],[13.0114747,52.4768131],[13.0119984,52.4766764],[13.0125107,52.4750563],[13.012447,52.4750915],[13.0115755,52.4776906],[13.0112809,52.4774802],[13.0110538,52.4775163],[13.0139627,52.4754323],[13.0137656,52.475448],[13.0135709,52.4754405],[13.0125402,52.475325]],"An den Windmühlen":[[13.1021192,52.3846367],[13.1015563,52.3852654],[13.1014545,52.3856098],[13.1016847,52.3860662],[13.1012339,52.3851296],[13.1017522,52.3861985],[13.1017964,52.3856994],[13.1014795,52.3854118],[13.1014625,52.3848657],[13.1017566,52.3858769],[13.1018996,52.3848036],[13.1005523,52.3849031],[13.101686,52.3845992],[13.1011666,52.3846],[13.1019211,52.3843509],[13.1009974,52.3847649],[13.1013219,52.3845479],[13.1021603,52.3867538],[13.1015962,52.3865409],[13.1016807,52.3862418]],"An der Alten Brauerei":[[13.0852768,52.3941986],[13.0849589,52.3944509],[13.0850321,52.3944137],[13.085487,52.3941259],[13.0855,52.3945496],[13.0852023,52.3942362],[13.0851064,52.394376],[13.0855623,52.394088],[13.0851737,52.3946294],[13.0850978,52.394667],[13.0852234,52.3947521],[13.085149,52.3947921],[13.0856786,52.3945219],[13.0856786,52.3945219],[13.0862308,52.3944683]],"An der Alten Zauche":[[13.0922033,52.3740275],[13.0906175,52.3743016],[13.0943987,52.3738041],[13.0917602,52.3745373],[13.0889445,52.3813874],[13.0930453,52.3738753],[13.0931056,52.3744114],[13.0912483,52.3761796],[13.0912417,52.3760976],[13.0912567,52.3762849],[13.091264,52.3763756],[13.0910664,52.3776518],[13.0910713,52.3777722],[13.091077,52.3779096],[13.090357,52.3801529],[13.0908948,52.3800134],[13.0912167,52.3790766],[13.0912001,52.3788231],[13.0903881,52.3804483],[13.0912064,52.3789511],[13.0903674,52.3802505],[13.090386,52.3803583],[13.0908658,52.3798816],[13.090845,52.3797384],[13.0911628,52.3768047],[13.0911582,52.3767074],[13.0911444,52.37661],[13.0905999,52.381111],[13.0906207,52.3812119],[13.0906253,52.3813206],[13.0906288,52.3814301]],"An der Bahn":[[12.9744986,52.4129828]],"An der Birnenplantage":[[13.0388128,52.4449946]],"An der Brauerei":[[13.1061291,52.3563775],[13.1092253,52.3566054]],"An der Eisenbahnbrücke":[[12.9728185,52.4532033]],"An der Fährwiese":[[13.0384248,52.3855906],[13.0386699,52.3863097],[13.038619,52.3863486],[13.0385787,52.3863917],[13.0385503,52.3864391],[13.0383441,52.3865525],[13.0382923,52.386592],[13.0382523,52.3866351],[13.0384959,52.3856152],[13.0382241,52.3866821],[13.038024,52.386944],[13.0376149,52.3868022],[13.0376149,52.3868022],[13.0386712,52.385676],[13.0387418,52.3857002],[13.0389175,52.3857615],[13.0389883,52.3857859],[13.0391641,52.3858465],[13.0392351,52.3858711],[13.0377237,52.3865648],[13.0378874,52.3865656],[13.0379392,52.3865264],[13.0378427,52.386436],[13.0378965,52.3862681],[13.0380608,52.3862695],[13.0381124,52.3862303],[13.0381413,52.3861832],[13.0382228,52.386025],[13.0383873,52.3860259],[13.0382909,52.3859357],[13.0384671,52.3859398],[13.0386843,52.386185],[13.0387117,52.3861388],[13.0387518,52.3860958],[13.0388033,52.3860565]],"An der Jubelitz":[[12.9958799,52.473994],[12.9953635,52.4742852],[12.9954106,52.4742284],[12.9976877,52.4735064],[12.9963332,52.4736218],[12.9973511,52.4734536],[12.9971263,52.4734477],[12.9963952,52.4735839],[12.9976019,52.473495],[12.9969073,52.4738697],[12.9981983,52.4736716],[12.9956911,52.4741428],[12.9967907,52.4735196],[12.9974374,52.4734463],[12.9962264,52.4741078],[12.997042,52.4734628],[12.9967829,52.473404],[12.9978786,52.4735789],[12.9981155,52.4736513],[12.9979614,52.4735993],[12.9976902,52.4737851],[12.9964796,52.4739729],[12.9971986,52.4739388],[12.9961631,52.4741845],[12.9975085,52.4739163],[12.9961794,52.4738592],[12.996677,52.4746074],[12.9963496,52.4744996]],"An der Kirche":[[13.1028709,52.470137],[13.1034977,52.4699994],[13.1025074,52.4701526],[13.1024891,52.4689427],[13.1037289,52.4700837],[13.1029948,52.4690396],[13.1041135,52.4700704],[13.1031154,52.4701264],[13.1044165,52.4700581],[13.1048026,52.4700457],[13.1046156,52.4700543],[13.1039121,52.4700777],[13.1039936,52.4689789],[13.1036098,52.4689957],[13.1045014,52.4689579],[13.1042969,52.4689649],[13.1046852,52.4689509],[13.1056581,52.4688575],[13.1037932,52.4689869],[13.1050656,52.4691962],[13.1051175,52.469746],[13.1033287,52.469709],[13.1050547,52.4690839],[13.1024917,52.4691884],[13.1033406,52.4698196],[13.1025509,52.469741],[13.1032833,52.4692665],[13.1050765,52.4693086],[13.1057895,52.4691699],[13.1058327,52.4696069],[13.1032952,52.4693771],[13.1051066,52.4696337],[13.1033168,52.4695985],[13.102539,52.4696305],[13.1057786,52.4690576],[13.1025628,52.4698516],[13.1058218,52.4694945],[13.1032714,52.4691559],[13.1025155,52.4694095],[13.1050957,52.4695213],[13.1058005,52.4692823],[13.1025036,52.4692989],[13.1058436,52.4697192],[13.1059283,52.4689203],[13.1059283,52.4689203],[13.106263,52.468838],[13.1063178,52.469313],[13.1063068,52.469218],[13.1062959,52.469123],[13.1062849,52.469028],[13.106274,52.468933],[13.106263,52.468838],[13.1024985,52.4690564],[13.1035082,52.4701104],[13.1020892,52.4692364],[13.1021426,52.469972],[13.1021264,52.4698366],[13.1021097,52.4697221],[13.1020723,52.4690267],[13.1020944,52.4693582],[13.1021052,52.4694773],[13.1021566,52.4700999],[13.1034298,52.469019],[13.1033351,52.4690216],[13.1045686,52.4696061],[13.104598,52.4697298],[13.1046056,52.469824],[13.1038541,52.4698576],[13.103841,52.4697462],[13.1037885,52.4696449],[13.1038097,52.4694523],[13.1038032,52.4693841],[13.1037628,52.4693158],[13.1037577,52.4692337],[13.1037353,52.4691464],[13.1045193,52.4691281],[13.1045446,52.4692051],[13.104548,52.4692682],[13.1045514,52.4693296],[13.1045545,52.4693849],[13.1063603,52.4699408],[13.1063496,52.4698429],[13.1063398,52.4697541],[13.1063298,52.4696633],[13.1063204,52.4695776],[13.1063109,52.4694913],[13.1050969,52.4700577],[13.1052213,52.470053],[13.1054893,52.4700395],[13.1057178,52.4700293],[13.1059972,52.470019],[13.1061033,52.4700152],[13.1047011,52.4702063],[13.1045604,52.47021],[13.104126,52.4702266],[13.1039974,52.47023],[13.1066755,52.4701231],[13.1065347,52.4701268],[13.105982,52.4701537],[13.1058249,52.4701578],[13.1054211,52.4701711],[13.1052621,52.4701753]],"An der Kornmühle":[[13.0599017,52.3898064]],"An der Obstplantage":[[12.9623418,52.4619606],[12.9615233,52.4633497],[12.9624811,52.4634396],[12.9618008,52.4622952],[12.9620373,52.4629865],[12.9615245,52.4632105],[12.9622657,52.4633354],[12.9623781,52.4622631],[12.9630198,52.4620533],[12.9617622,52.4626041],[12.9623324,52.4631799],[12.9625737,52.4619991],[12.9618839,52.4621596],[12.9616931,52.4627076],[12.9618031,52.4624686],[12.9620303,52.4631813],[12.9625643,52.4631977],[12.9628043,52.4620333],[12.9622177,52.4626184],[12.961932,52.4620205],[12.9620936,52.4627639],[12.9622329,52.462415],[12.9615994,52.4630714],[12.9620104,52.4634367],[12.9616591,52.4629373],[12.9626474,52.4622781],[12.9620092,52.4618742],[12.9617844,52.463426]],"An der Orangerie":[[13.035208,52.4046412],[13.0208832,52.4077187],[13.0211045,52.4073361],[13.0353376,52.4047855],[13.0300699,52.405442],[13.0297131,52.4055153],[13.0298821,52.4054812]],"An der Parforceheide":[[13.1358918,52.3878284],[13.1349768,52.3873382],[13.1352194,52.3875385],[13.1358102,52.3873009],[13.1341969,52.3876808],[13.134674,52.387337],[13.1361778,52.3871637],[13.1344454,52.3876439],[13.1360123,52.3873982],[13.1356393,52.3878812],[13.13584,52.3876025],[13.1345108,52.3881206],[13.1350839,52.3880016],[13.1349755,52.3876102],[13.1358558,52.3877539],[13.1353638,52.3879378],[13.1346835,52.3876071],[13.1348087,52.388068],[13.1338755,52.3870916],[13.1342056,52.3871861],[13.1335324,52.3870358],[13.1345008,52.3873711],[13.1337073,52.3874938],[13.1337457,52.3876083],[13.1337722,52.3876806],[13.1338083,52.3877942],[13.1338356,52.3878686],[13.1339952,52.3879807],[13.1340392,52.3880596],[13.1340994,52.3881647],[13.1343292,52.3880125],[13.134143,52.3882431],[13.1344546,52.3879842],[13.1342099,52.388351],[13.1335608,52.3871131],[13.1346951,52.3879335],[13.1342534,52.3884291],[13.134817,52.387906],[13.1343029,52.3885238],[13.135067,52.3878474],[13.1343513,52.3886106],[13.1351804,52.3878218],[13.1340084,52.3874262],[13.1336019,52.3872156],[13.1345595,52.3884666],[13.134644,52.3884519],[13.134155,52.387406],[13.1347285,52.3884373],[13.134813,52.3884226],[13.1348975,52.3884079],[13.1351063,52.3883923],[13.1351934,52.3883772],[13.1336332,52.3873004],[13.1352806,52.3883621],[13.1353677,52.388347],[13.1354548,52.3883318],[13.1343729,52.3873887],[13.1336737,52.3874025],[13.1366175,52.3876103],[13.1366543,52.3875641],[13.1366911,52.3875178],[13.1362404,52.3874334],[13.1363546,52.3872125],[13.1368503,52.3873408],[13.1368897,52.3872906],[13.1369291,52.3872404],[13.1369686,52.3871902],[13.137008,52.38714],[13.1372657,52.3868262],[13.1373024,52.3866752],[13.1357057,52.3882814],[13.1357943,52.3882622],[13.1358829,52.3882429],[13.1359715,52.3882237],[13.1360602,52.3882044],[13.136284,52.388033],[13.1363212,52.3879853],[13.1363583,52.3879376],[13.1363955,52.38789],[13.1364327,52.3878423],[13.1365438,52.3877029],[13.1365806,52.3876566],[13.1373081,52.3867589]],"An der Pirschheide":[[13.0148999,52.3730856],[13.0080177,52.3752674],[13.0128803,52.3737744],[13.0146322,52.371983],[13.0104538,52.3653007],[13.0141124,52.3717311],[13.010855,52.3650042],[13.0127741,52.3730002],[13.0129221,52.3732838],[13.0128883,52.3732191],[13.0128128,52.3730744]],"An der Roten Kaserne":[],"An der Sandscholle":[[13.1142524,52.3876326],[13.1145947,52.3885858],[13.1146573,52.3883887],[13.1145778,52.3882284],[13.1144187,52.3879401],[13.1143416,52.3877959],[13.1144983,52.388096],[13.1151173,52.3893684],[13.1152203,52.38951],[13.1152918,52.3896718],[13.1153476,52.3898208],[13.1154139,52.389988],[13.1154715,52.3901615],[13.1155482,52.3903223],[13.1155971,52.3904798],[13.1156529,52.3906438],[13.1156982,52.3908109],[13.1157209,52.3910068],[13.1141167,52.3874112],[13.1141645,52.3874943],[13.1138908,52.3869864],[13.1139546,52.3870964],[13.1137924,52.3868278],[13.1137493,52.3867534]],"An der Sporthalle":[[13.1042733,52.4666906],[13.1058944,52.4665809],[13.1063398,52.4665254],[13.1053803,52.4660105]],"An der Sternwarte":[[13.1037808,52.4050062],[13.1048991,52.4051686],[13.1018028,52.4049423],[13.1006408,52.4040823],[13.1047066,52.4044646],[13.1041708,52.403908],[13.1018647,52.4034035],[13.1015808,52.4033748],[13.1009612,52.4033891],[13.1024158,52.4034345],[13.1021125,52.4033978],[13.1012524,52.4033965],[13.1043059,52.4057857],[13.1013664,52.4040488],[13.103664,52.4058931],[13.1039301,52.4036504],[13.1022408,52.4042952]],"An der Vogelwiese":[[13.0073462,52.4243214],[13.0054411,52.4247638],[13.0061524,52.4245978],[13.0057529,52.4246908],[13.0065194,52.4245156],[13.007478,52.4246181],[13.0068025,52.4248267],[13.0068025,52.4248267],[13.0064503,52.4248715],[13.0064503,52.4248715],[13.0062035,52.4250084],[13.007478,52.4246181],[13.0062035,52.4250084],[13.0058763,52.4251023],[13.0058763,52.4251023],[13.0055588,52.4251048],[13.0055588,52.4251048],[13.0071186,52.4247015],[13.0071186,52.4247015]],"An der Vorderkappe":[[13.0522995,52.3846219],[13.0546341,52.3846508],[13.054653,52.3848127],[13.0541695,52.3845953],[13.0544131,52.384649],[13.0526749,52.3842634],[13.0525231,52.3842381],[13.0522273,52.3842444],[13.0521404,52.3842566],[13.0520534,52.3842687],[13.0519665,52.3842809],[13.0517265,52.3843094],[13.0516357,52.3843239],[13.0515449,52.3843384],[13.0514541,52.3843529],[13.0506977,52.3845137],[13.0506095,52.3845353],[13.0505213,52.3845569],[13.0504331,52.3845786]],"An der Windmühle":[[12.9996339,52.4740029],[13.0000928,52.4742702],[13.0000949,52.4738431],[13.0003423,52.4738293],[13.0002211,52.4743187],[13.0001935,52.4741712],[12.9995421,52.4739317],[12.9994772,52.4740778]],"An der Wublitz":[[12.9499206,52.4700241],[12.9491164,52.4705942],[12.9487951,52.4698896],[12.9493294,52.4704775],[12.9489698,52.4697249],[12.9495444,52.4703582],[12.9494517,52.4695588],[12.9497033,52.4701789],[12.949989,52.4697943]],"An der alten Kreisstraße":[[12.9671088,52.4705634],[12.966614,52.4719109],[12.9667873,52.4714927],[12.9666975,52.4709185],[12.9668473,52.4704869]],Angermannstraße:[[13.0534677,52.4216258],[13.0534171,52.4218933],[13.053673,52.4218796],[13.0538455,52.4219316],[13.0540166,52.4219818],[13.0542423,52.4220495],[13.0547815,52.4209498],[13.0542245,52.4217634],[13.054052,52.4217243],[13.0541287,52.4214662],[13.0542259,52.4213897],[13.0544004,52.4212172],[13.0543864,52.4208245],[13.0542468,52.4207846],[13.0540522,52.4210836],[13.0539326,52.4212242],[13.053756,52.4214193],[13.0536956,52.4214911]],Anhaltstraße:[[13.1003231,52.3910233],[13.1006704,52.3910238],[13.1007563,52.3905205]],"Annemarie-Wolff-Platz":[[13.0510628,52.4144493],[13.0504396,52.4145083],[13.0507509,52.4145903],[13.0509338,52.4144195]],"Anni-von-Gottberg-Straße":[[13.1374312,52.36141],[13.1358152,52.3621536],[13.1354655,52.3617107],[13.1366578,52.3613809],[13.1362972,52.3613999],[13.1360563,52.3619066],[13.1364895,52.3619127],[13.1364818,52.3621172],[13.1356159,52.3621209],[13.1365486,52.3613865],[13.1360334,52.3613978],[13.1365592,52.361402],[13.136187,52.3617672],[13.1361012,52.3619072],[13.1361597,52.3618763],[13.1364866,52.3618092],[13.1363465,52.3621586],[13.1359287,52.3620136],[13.1359544,52.3619413],[13.1351253,52.3614631],[13.134899,52.3612774],[13.1353528,52.3612798],[13.1362701,52.3619096],[13.136486,52.3620053],[13.1360531,52.3619894],[13.1360593,52.3621113],[13.1362535,52.362114],[13.1385531,52.3613266]],Apfelweg:lr,"Asta-Nielsen-Straße":[[13.1407979,52.3710453],[13.140441,52.3704376],[13.140488,52.3702676]],"Auf dem Kiewitt":[[13.0408615,52.39348],[13.0409597,52.3921751],[13.0411393,52.3919411],[13.0409329,52.392645],[13.041688,52.3917334],[13.039792,52.3906582],[13.0407769,52.3904825],[13.0403934,52.3909104],[13.0403872,52.3912241],[13.040381,52.3915379],[13.0403748,52.3918517],[13.0416292,52.3919546],[13.0416257,52.3921656],[13.0416221,52.3923679],[13.0416187,52.3925532],[13.0409656,52.3934819],[13.0400016,52.3896144],[13.0423442,52.3928652],[13.042906,52.3934544],[13.0421179,52.3950134],[13.0410814,52.3908876],[13.0403818,52.3900438],[13.0408683,52.3904127],[13.0405777,52.3940002],[13.0405676,52.3942605],[13.0419214,52.3943262],[13.04193,52.3941297],[13.0419387,52.3939298],[13.0419469,52.3937416],[13.0416208,52.3943267],[13.0416297,52.3941221],[13.0416446,52.3937383],[13.0416327,52.3939348]],"August-Bebel-Straße":[[13.1297517,52.394079],[13.1274182,52.3934813],[13.1279245,52.3936124],[13.1218112,52.3895519],[13.1220359,52.3894231],[13.1218357,52.3880325],[13.1174927,52.3888668],[13.1234447,52.387572],[13.1233172,52.3905078],[13.1232365,52.3907513],[13.1230893,52.3902288],[13.1226151,52.3923144],[13.1236498,52.3910303],[13.1221804,52.3842685],[13.122192,52.3843497],[13.1222937,52.3840366],[13.1223603,52.3834582],[13.1223675,52.3838067],[13.1223744,52.3845815],[13.1223871,52.3846717],[13.1222789,52.3849184],[13.1225116,52.3853314],[13.1225116,52.3853314],[13.1226201,52.3859733],[13.1224692,52.3858389],[13.1225812,52.386275],[13.1224187,52.3863512],[13.1227644,52.3921412],[13.1227666,52.3919676],[13.1219198,52.3958282],[13.1231665,52.3897957],[13.1231577,52.3894819],[13.1228275,52.3891988],[13.1229073,52.3888029],[13.1227787,52.3888703],[13.1227474,52.3886359],[13.1294407,52.3934384],[13.122668,52.3884237],[13.1276863,52.3935761],[13.1205844,52.3890236],[13.124854,52.3922117],[13.1235214,52.3923185],[13.1237002,52.3916622],[13.1214376,52.3877512],[13.1229018,52.3892523],[13.1270763,52.3923807],[13.1215535,52.388054],[13.1228592,52.3875982],[13.1227017,52.3908738],[13.1221175,52.3880747],[13.122129,52.3881082],[13.1220599,52.388132],[13.1220736,52.38817],[13.1220862,52.3882053],[13.122099,52.3882409],[13.1221781,52.3882763],[13.1221918,52.3883165],[13.1222044,52.3883532],[13.1221574,52.3884035],[13.1227143,52.388384],[13.1227089,52.3883189],[13.1220974,52.3880322],[13.1219029,52.3880027],[13.1218708,52.3880485],[13.1218794,52.3880926],[13.1218882,52.3881377],[13.121974,52.388245],[13.1219338,52.3883047],[13.1219592,52.3883499],[13.1219794,52.3883857],[13.1220371,52.3884299],[13.1197939,52.3888479],[13.1207447,52.3880624],[13.1215341,52.3879815],[13.1208849,52.388048],[13.1207612,52.388129],[13.1215075,52.3878825],[13.1212335,52.3879245],[13.1210341,52.3879551],[13.1208594,52.3879819],[13.1207297,52.3880018],[13.1214849,52.3877986],[13.1212218,52.3878433],[13.1210205,52.3878775],[13.1208256,52.3879107],[13.120712,52.38793],[13.1202536,52.3882867],[13.1211465,52.3863158],[13.1294843,52.3932349]],"August-Bier-Straße":[[13.1133188,52.3992055],[13.1142623,52.3999585],[13.1133138,52.3989263],[13.114055,52.3997283],[13.1128564,52.3988592],[13.1123814,52.3987052],[13.1141616,52.399249],[13.1145479,52.4001279],[13.1124683,52.3992989],[13.1127573,52.3995267],[13.1135621,52.4000513],[13.1137565,52.4001765],[13.1141574,52.4003701],[13.1120688,52.3990271],[13.1122173,52.3991447],[13.1137209,52.3996676],[13.1128998,52.3999733],[13.1141031,52.3992112]],"August-Bonness-Straße":[[13.0444656,52.4120847],[13.0445836,52.4123819],[13.0446912,52.4125714],[13.0448217,52.4128526],[13.0455831,52.4139528],[13.0456591,52.4141178],[13.0453934,52.4135905],[13.0452954,52.4133834],[13.0451805,52.4131319]],Ausbau:hr,"Babelsberger Straße":[[13.0668333,52.3913146],[13.0668151,52.3920645],[13.0670029,52.3921137],[13.0670088,52.3921727],[13.0668854,52.3921178],[13.0646417,52.3923644],[13.0645241,52.3923914],[13.0675298,52.3924741],[13.0639529,52.3921676],[13.0644068,52.3923942],[13.067125,52.3922845],[13.0663957,52.3923258],[13.0664884,52.3918514],[13.0664928,52.3918964],[13.0664698,52.3916659],[13.0661808,52.392331],[13.0677817,52.393851],[13.0692141,52.3925248],[13.0648761,52.3923811],[13.0654902,52.39255],[13.0637346,52.3924603],[13.0671229,52.3924368],[13.0651747,52.392504],[13.0652822,52.3923377],[13.0653356,52.3924957],[13.0654072,52.3923363],[13.0647652,52.3925151],[13.0639262,52.3923664],[13.0638084,52.3923143],[13.0663805,52.3924609],[13.068096,52.3925668],[13.0639157,52.3922716],[13.0649727,52.3925112],[13.0664633,52.3925137],[13.0655145,52.3926665],[13.0646535,52.3926721],[13.0658452,52.3926268],[13.0681794,52.39318],[13.0707765,52.3924417],[13.0703324,52.3924581],[13.0672092,52.3924292],[13.070691,52.3921754],[13.070439,52.3921838],[13.0675344,52.3925189],[13.0671314,52.3924882],[13.0657335,52.3923328],[13.0658641,52.3923314],[13.0660094,52.3923298],[13.0642656,52.3926874]],Baberowweg:cr,Bahnhofstraße:[[13.1231944,52.3824229],[13.1236403,52.3825111],[13.1231553,52.3821583],[13.1238665,52.3815434],[13.1231942,52.381982],[13.1233217,52.3821263],[13.1239947,52.3815178],[13.123404,52.3823237],[13.1230887,52.3822455],[13.1235773,52.3818061],[13.1234886,52.382302],[13.1242599,52.3814147],[13.1241033,52.3814555],[13.1236874,52.3817432],[13.1225444,52.3821624],[13.1225294,52.3817613],[13.1286957,52.3803086],[13.1284433,52.3804478],[13.1268627,52.380765],[13.1290433,52.3801211],[13.1297766,52.3800663],[13.1287715,52.3803466],[13.1295803,52.3799552],[13.1271654,52.3807135],[13.1253186,52.3810288],[13.1264343,52.3808279],[13.1274868,52.3805888],[13.1280904,52.3808925],[13.1258131,52.3810288],[13.1292511,52.3800725],[13.1266419,52.3807677],[13.1226536,52.3828183],[12.967643,52.4770951],[12.9674978,52.4774033],[12.967531,52.4757207],[12.9675701,52.4749853],[12.9670529,52.4769419],[13.1243807,52.3815019],[13.1245444,52.3815087],[13.1246922,52.38145],[13.1247409,52.3813229],[13.1249763,52.3814235],[13.1255761,52.3812562],[13.1250276,52.3812402],[13.123576,52.3817349],[13.1259633,52.3809273],[13.1279259,52.3805614],[13.127748,52.3805715],[13.1284597,52.3804287],[13.1282483,52.3805136],[13.1280928,52.3806209],[13.1262787,52.3804293],[13.1264708,52.3803826],[13.1266749,52.3803329],[13.1268573,52.3802884],[13.1271752,52.380211],[13.1273721,52.3801631],[13.1275745,52.3801138],[13.1277658,52.3800672],[13.1280664,52.379981],[13.1282706,52.3799313],[13.1284576,52.3798861],[13.1286651,52.3798369],[13.1288541,52.3797931],[13.1291288,52.3797248],[13.1293443,52.3796723],[13.1271469,52.3805427],[13.1272406,52.3805248]],Baldurstraße:[[13.1079268,52.3987843],[13.1070983,52.3985361],[13.107038,52.3987044],[13.1072759,52.398828],[13.1066456,52.3982761],[13.1073398,52.3981499],[13.1078777,52.3985141]],"Bartholomäus-Neumann-Straße":[[13.0470495,52.4125708],[13.0474429,52.4125047],[13.0479634,52.4127658],[13.04588,52.4131933],[13.0456297,52.4128817],[13.0474951,52.4128144],[13.0468721,52.4129244],[13.0471789,52.4128721],[13.0479854,52.4124622],[13.0481535,52.4124321],[13.0483612,52.4123949],[13.0486314,52.4123464]],Bassewitzstraße:[[13.0479355,52.4489754],[13.0473896,52.4487108],[13.0470096,52.4487867],[13.0477276,52.4485897],[13.0476248,52.4486261],[13.0472819,52.4487396],[13.0480594,52.4491044],[13.0480186,52.4490619],[13.0479778,52.4490194]],Baumhaselring:ur,Baumschulenweg:dr,"Bebraer Straße":[[13.1231743,52.3717682],[13.1225393,52.3725756]],Beethovenstraße:[[13.1272605,52.3854185],[13.1267002,52.3848427],[13.1266015,52.3847317],[13.1264757,52.3846029],[13.1262668,52.3844278],[13.1261835,52.3843076],[13.1260868,52.3842001],[13.125961,52.3840655],[13.1258449,52.3839532],[13.1257491,52.3838469],[13.1256358,52.3837281],[13.1271453,52.385301],[13.1255081,52.3835995],[13.1253939,52.3834873],[13.1252807,52.3833697],[13.1252273,52.3833141],[13.1251172,52.3831949],[13.1250021,52.3830791],[13.127037,52.38519],[13.1269267,52.3850718],[13.126826,52.3849667],[13.1275465,52.3853586],[13.1272085,52.3850064],[13.1271792,52.384832],[13.1274651,52.3852569],[13.1273179,52.3851137],[13.126693,52.3843048],[13.1265787,52.384192],[13.1264706,52.3840773],[13.1263829,52.3839702],[13.1262623,52.3838498],[13.1261605,52.3837331],[13.1258798,52.3834241],[13.125645,52.3832186],[13.1258643,52.3831361],[13.1262309,52.3830861],[13.1261181,52.3829679],[13.1261871,52.3828605],[13.1259411,52.3827859],[13.1256827,52.3829454],[13.1254507,52.3830279]],Beetzweg:fr,Behlertstraße:[[13.0699421,52.4050774],[13.0597103,52.4053814],[13.0599095,52.40549],[13.0608604,52.4052221],[13.0589905,52.4057701],[13.0612748,52.4051584],[13.0674352,52.4057156],[13.068092,52.4045811],[13.0680153,52.4047702],[13.0682029,52.4043626],[13.0674413,52.4054973],[13.0680033,52.40518],[13.068051,52.4050276],[13.0692077,52.4036312],[13.0696561,52.4035947],[13.0695984,52.4032921],[13.0691024,52.4031561],[13.0690719,52.4035864],[13.0706616,52.404567],[13.0690403,52.4040285],[13.0656287,52.4063778],[13.0583423,52.4058999],[13.0621998,52.4059664],[13.0632924,52.40654],[13.0637313,52.4061007],[13.0640128,52.4064228],[13.0621983,52.4063958],[13.0624456,52.4062664],[13.0627978,52.4064891],[13.0648796,52.4059816],[13.0629205,52.4063211],[13.0631243,52.4065251],[13.062018,52.4063761],[13.0621206,52.4062267],[13.0626858,52.406294],[13.0657247,52.4060054],[13.0662801,52.4057416],[13.0610872,52.4055028],[13.0611799,52.4061587],[13.0613872,52.4061801],[13.0606839,52.4058889],[13.0634566,52.4064852],[13.0641456,52.4069369],[13.0625769,52.406466],[13.0643306,52.4065555],[13.0705706,52.4044806],[13.0690725,52.4032751],[13.0684764,52.4040526],[13.0685168,52.4039458],[13.0686417,52.4037301],[13.0687109,52.4036292],[13.0689215,52.4034367],[13.0695606,52.4032031],[13.0614733,52.40619],[13.0704975,52.4049412],[13.070957,52.404404],[13.0601213,52.4063806],[13.0599058,52.4063524],[13.0596904,52.4063243],[13.0594749,52.4062962],[13.0608005,52.4063292],[13.060582,52.4062941],[13.0603634,52.4062589],[13.0609051,52.4054545],[13.0607661,52.4055612],[13.060627,52.4056679],[13.0602671,52.4059755],[13.0600516,52.4059406],[13.0598361,52.4059057],[13.0596206,52.4058708],[13.0692646,52.4042811],[13.0692056,52.4053366],[13.0687818,52.40434],[13.0708005,52.4046143],[13.0705655,52.4058602],[13.0667494,52.405768],[13.0688328,52.4042107],[13.0708661,52.4046867],[13.0612873,52.4061552],[13.0683262,52.4041189],[13.0681087,52.4040852],[13.0678625,52.404047],[13.0684683,52.4037808],[13.0682617,52.4037196],[13.0680329,52.4036518],[13.068541,52.4034229],[13.0683877,52.4033733],[13.0682344,52.4033238],[13.0686943,52.4034724],[13.058409,52.4059293],[13.0584938,52.4058391],[13.0677286,52.4045629]],Behringstraße:[[13.1042655,52.3997514],[13.1038986,52.3993244],[13.1044456,52.3994729],[13.1046159,52.3997918],[13.1042206,52.3990385],[13.1040606,52.3993581],[13.1047762,52.3998243],[13.1042511,52.3990973],[13.1033961,52.3980229],[13.1034192,52.3980845],[13.1031132,52.3973096],[13.1033845,52.3968263],[13.1033016,52.3977896],[13.1031374,52.3973726],[13.1032428,52.396492],[13.1034083,52.3968887],[13.1042087,52.3999178],[13.1033236,52.3978505],[13.103693,52.3989319],[13.1037207,52.3980345],[13.1043698,52.3999483],[13.1038558,52.3989632],[13.1040022,52.3995221],[13.1046489,52.3995789],[13.1041631,52.3995539],[13.1046779,52.3996367],[13.1043186,52.3992214],[13.1037449,52.3980992],[13.10435,52.3992841],[13.103206,52.3975493],[13.103437,52.3973207],[13.1031805,52.3966848],[13.1032312,52.3976127],[13.1033437,52.3970796],[13.1037962,52.3991292],[13.1037571,52.3977735],[13.103459,52.3973797],[13.1033676,52.3971453],[13.1039605,52.3991617],[13.1042354,52.3996911],[13.1036472,52.3978569],[13.1030307,52.3962951],[13.105421,52.4004169],[13.1054176,52.4008069],[13.1059173,52.400284],[13.105391,52.4005199],[13.1047993,52.4004343],[13.1050908,52.4006054],[13.1061278,52.4004655],[13.1054946,52.4008552],[13.105245,52.4007005],[13.1057296,52.4007262],[13.1062954,52.4003023],[13.1056609,52.4009556],[13.105245,52.4007005],[13.105641,52.4010556],[13.1058954,52.400714],[13.1045545,52.4003808],[13.1082601,52.4036829],[13.1079195,52.4035411],[13.1083263,52.4038366],[13.1081796,52.4034628],[13.1064632,52.401973],[13.1070852,52.402042],[13.1071125,52.4015712],[13.1084017,52.4024519],[13.1087976,52.4031211],[13.1068495,52.4014061],[13.1086346,52.4027561],[13.1065598,52.4012059],[13.1088189,52.4031789],[13.1085746,52.402668],[13.1035376,52.3975619],[13.1035596,52.3976209],[13.103677,52.3987087],[13.1036974,52.3987713],[13.106397,52.4015358],[13.1062019,52.4014171],[13.1077451,52.4019323],[13.1081903,52.4029903],[13.1081885,52.4032022],[13.1075897,52.4015474],[13.1027185,52.3966994],[13.1029145,52.3968129],[13.1028262,52.3969701],[13.102755,52.3967911]],"Bei den Enderlings":[[12.9862938,52.4765138]],Bellavitestraße:[[13.1362675,52.3648911],[13.1362635,52.3650629]],Bendastraße:[[13.0961435,52.392731],[13.0964137,52.3929946],[13.0963979,52.3928449],[13.0962705,52.3922348],[13.0958247,52.3922946],[13.0958689,52.3930504],[13.0964907,52.3925868],[13.0965844,52.3922453],[13.0961334,52.3933137],[13.0962022,52.3924617],[13.0963551,52.3931333],[13.0962022,52.3924617],[13.0959969,52.3926764],[13.0960723,52.3929474],[13.0960617,52.3929914]],Benkertstraße:[[13.0606589,52.4022822],[13.0606242,52.4023875],[13.0605928,52.4024829],[13.0605531,52.4026033],[13.0605183,52.4027088],[13.0604839,52.402813],[13.0610827,52.4023329],[13.0610493,52.402434],[13.0610153,52.4025365],[13.0609734,52.4026628],[13.0609397,52.4027641],[13.0609044,52.4028706],[13.0609044,52.4028706],[13.0603629,52.4031919],[13.0603164,52.4033233],[13.0601644,52.4037519],[13.060261,52.4034798],[13.0607882,52.4032536],[13.0607456,52.4033797],[13.0606904,52.4035437],[13.0606455,52.4036775],[13.0605843,52.4038299],[13.0600994,52.402504],[13.0599305,52.4025735],[13.0601513,52.4033015],[13.0597714,52.4033081],[13.0600958,52.4034581],[13.0606501,52.4031471],[13.0607736,52.402929],[13.0606123,52.4033406],[13.0608838,52.4027014],[13.0605437,52.4036324],[13.0605668,52.4035623],[13.060356,52.4031157],[13.0606437,52.4032604],[13.0602972,52.403284],[13.0604369,52.4028479],[13.0605555,52.4025081],[13.0607223,52.4029333],[13.0605823,52.4023473],[13.0606545,52.4022624],[13.0605765,52.4034762],[13.0608707,52.4025586]],Benzstraße:[[13.1034244,52.3919087],[13.1031802,52.3918819],[13.1036046,52.3919247],[13.1012192,52.3913238],[13.1006443,52.3915324],[13.100755,52.3915952],[13.1013624,52.3916396],[13.1015552,52.3916443],[13.1018762,52.3915129],[13.1020193,52.3916653],[13.1020348,52.3917889],[13.1025001,52.3916962],[13.1027507,52.3917434],[13.1029852,52.3917838],[13.0959946,52.3911362],[13.0961953,52.3912751],[13.0964365,52.3912943],[13.0969015,52.3913273],[13.0970881,52.3913425],[13.0969641,52.3911422],[13.0973925,52.3912823],[13.097838,52.3914077],[13.0984855,52.3914666],[13.0987666,52.3914915],[13.0988604,52.3914995],[13.0990051,52.3915133],[13.0992264,52.3911714],[13.0993136,52.391307],[13.0995287,52.3915155],[13.0968618,52.391324],[13.097597,52.3912998],[13.0978057,52.3913176],[13.1004853,52.3916114],[13.0957257,52.3912272],[13.0974988,52.3913297],[13.0998373,52.3913873],[13.099977,52.3913997],[13.1030567,52.3918521]],"Bergholzer Straße":[[13.0758732,52.3880443],[13.0756937,52.3879021],[13.0755305,52.3877708],[13.0758762,52.3878288],[13.0762516,52.3881249]],Bergstraße:[[13.1027376,52.4681679],[13.0989893,52.4682786],[13.09805,52.4684283],[13.1030254,52.4679462],[13.1004053,52.4679879],[13.0999727,52.4682714],[13.1019909,52.4683047],[13.0986593,52.4683878],[13.1008255,52.4682902],[13.1008162,52.4679835],[13.1020458,52.4679566],[13.1035491,52.4678246],[13.1011034,52.4679277],[13.1026491,52.4678879],[13.09984,52.4680239],[13.1004103,52.4683138],[13.0980474,52.4681409],[13.0992277,52.4682682],[13.100137,52.4683052],[13.0986168,52.4680734],[13.1062708,52.4681249],[13.1045685,52.4681884],[13.1041339,52.4681208],[13.1058533,52.4681403],[13.1054159,52.4680708],[13.1037057,52.4681338],[13.1049885,52.4680857],[13.0983426,52.4683506],[13.0992372,52.468069],[13.0995394,52.4680361],[13.0988971,52.4681],[13.1048874,52.4679027],[13.1063202,52.4677825],[13.1060063,52.4676756],[13.1053438,52.4679046],[13.1023642,52.4677768],[13.1045147,52.4679258],[13.1041766,52.4679097],[13.1038496,52.467763],[13.1023785,52.467908],[13.1025101,52.4682086],[13.1045685,52.4681884],[13.1054231,52.4681558],[13.1027376,52.4681679],[13.1041405,52.4682059],[13.1058533,52.4681403],[13.1049954,52.4681707],[13.1037057,52.4681338],[13.1062708,52.4681249],[13.1031671,52.4681518],[13.1003048,52.4680062],[13.103406,52.4677298],[13.0997291,52.468262],[13.0979294,52.4684418],[13.0979692,52.4680958],[13.106498,52.4679034]],"Berliner Straße":[[13.0668534,52.3991645],[13.0700459,52.4031561],[13.07146,52.4053255],[13.0707292,52.4041004],[13.0715861,52.4043284],[13.0705509,52.4036171],[13.0729648,52.4048843],[13.0716481,52.4057421],[13.0716267,52.4055753],[13.0724029,52.4052166],[13.0728204,52.4057966],[13.0731748,52.4059465],[13.0734673,52.4064199],[13.069583,52.4017274],[13.0697606,52.4018377],[13.0701489,52.4017325],[13.0694516,52.4022145],[13.0689376,52.4018486],[13.0686749,52.4019478],[13.0689079,52.4016965],[13.0684289,52.4013924],[13.0757512,52.4085404],[13.0742603,52.4081747],[13.0743445,52.4071693],[13.0737784,52.4074124],[13.085631,52.4109315],[13.0862638,52.4104969],[13.0865832,52.4098966],[13.0855935,52.410707],[13.0848051,52.4116136],[13.0860077,52.4101315],[13.0853329,52.4108969],[13.0851656,52.4113979],[13.0860994,52.4111486],[13.0853768,52.4112001],[13.0857181,52.4105444],[13.0863208,52.4101564],[13.0858238,52.4103713],[13.0855071,52.4115496],[13.0851491,52.4111384],[13.0866866,52.4099992],[13.0875471,52.4125647],[13.0871811,52.41234],[13.0867521,52.4111716],[13.0863867,52.4115809],[13.0868649,52.4126848],[13.0876198,52.4114162],[13.0864573,52.4114934],[13.0870308,52.4107154],[13.0857433,52.4121408],[13.0878636,52.4127016],[13.0868284,52.4113155],[13.0865697,52.4123862],[13.0871612,52.4120477],[13.086793,52.412055],[13.0836494,52.4117944],[13.0834179,52.4117898],[13.0837705,52.4111025],[13.072494,52.4060964],[13.0738079,52.4064885],[13.0746993,52.407332],[13.0741198,52.4067397],[13.0744178,52.407017],[13.0741021,52.4066954],[13.08422,52.4120207],[13.0841187,52.4124617],[13.0848825,52.4123525],[13.0859206,52.4128989],[13.085318,52.4125889],[13.086385,52.4130703],[13.0833232,52.4116379],[13.0829384,52.4114755],[13.0816315,52.4110872],[13.0768989,52.4088171],[13.0751224,52.4077484],[13.0752929,52.408105],[13.0751555,52.4079627],[13.0753093,52.4079026],[13.0742621,52.4062211],[13.07414,52.4060119],[13.0781677,52.4089277],[13.0774237,52.4092446],[13.0778379,52.4093994],[13.0786033,52.4097088],[13.0795477,52.4101372],[13.0789222,52.409899],[13.0791096,52.4100563],[13.0806476,52.4098186],[13.0829872,52.4106148],[13.0815441,52.4101864],[13.0801903,52.4097742],[13.0762257,52.4079986],[13.0807526,52.4099921],[13.084482,52.4121119],[13.0819914,52.4105447],[13.0809885,52.4101562],[13.0767244,52.4083083],[13.0760184,52.4078682],[13.0790752,52.4093261],[13.0772727,52.4085472],[13.0818838,52.4103487],[13.0777049,52.408664],[13.0816326,52.4103611],[13.0798743,52.4094643],[13.0792041,52.4089246],[13.0796374,52.4093915],[13.0801903,52.4097742],[13.0762257,52.4079986],[13.0756583,52.4075185],[13.075471,52.4070877],[13.0749431,52.4066143],[13.0752135,52.4070876],[13.0747667,52.4063606],[13.0800618,52.410272],[13.0803008,52.4105117],[13.0747868,52.4066743],[13.075306,52.4069776],[13.0743689,52.4063257],[13.0756442,52.4073072],[13.074994,52.406897],[13.0840887,52.412136],[13.0848051,52.4116136],[13.0860994,52.4111486],[13.0868114,52.4103599],[13.0869086,52.4103875],[13.087001,52.4113772],[13.0870308,52.4107154],[13.0851317,52.4118994],[13.0746648,52.4072996],[13.0877041,52.4102675],[13.0872006,52.4105574],[13.07146,52.4053255],[13.0768503,52.4083661],[13.0761805,52.4087402],[13.0787846,52.4107295],[13.0758513,52.4074368],[13.0683417,52.4017279],[13.0668726,52.4013258],[13.0726261,52.4055019],[13.0733554,52.4063411],[13.087877,52.4135759],[13.0725247,52.4044106],[13.0823571,52.4112717],[13.0675488,52.3996732],[13.0842991,52.4111074],[13.0678883,52.4007242],[13.071879,52.4037792],[13.0697058,52.4041982],[13.0695186,52.4022816],[13.0693188,52.4020879],[13.0691902,52.4019661],[13.0690269,52.4018482],[13.0689704,52.4018035],[13.068911,52.4017285],[13.0780804,52.4094311],[13.0675346,52.4003836],[13.067191,52.400057],[13.0683555,52.4011757],[13.0694512,52.402605],[13.0685155,52.4013132],[13.080813,52.410544],[13.0812108,52.4111644],[13.0813347,52.4110165],[13.0670607,52.3992807],[13.0709973,52.4056458],[13.0719414,52.4051418],[13.0672668,52.4010752],[13.0731618,52.4063642],[13.0707905,52.4036133],[13.0700878,52.403091],[13.0700375,52.4030501],[13.0699696,52.4029949],[13.0699137,52.4029494],[13.0877565,52.413657],[13.0743265,52.4070895],[13.0744134,52.4070651],[13.0743304,52.4069856],[13.0726609,52.4055541],[13.0725973,52.4053679],[13.0738844,52.4055785],[13.0739316,52.4058804],[13.0739729,52.4059194]],"Bernhard-Kellermann-Straße":[[13.0946797,52.3688688],[13.0945064,52.3689858],[13.0941573,52.369223],[13.0939852,52.369339],[13.093813,52.3694551],[13.0934473,52.3696942],[13.0932976,52.3698223],[13.0931479,52.3699503],[13.0929981,52.3700784],[13.0936982,52.3706682],[13.0946056,52.3698192],[13.09452,52.369669],[13.0944344,52.3695187],[13.0952057,52.3696572],[13.0951227,52.3695075],[13.0950396,52.3693578],[13.0949565,52.3692081],[13.0936114,52.3705214],[13.092929,52.3704243],[13.0930236,52.370572],[13.0931122,52.3707102],[13.0935245,52.3703745],[13.0932007,52.3708481],[13.0934377,52.3702276],[13.094175,52.3702783],[13.0940922,52.3701298],[13.0940094,52.3699813],[13.0939265,52.3698328],[13.0946911,52.3699695]],"Bertha-von-Suttner-Straße":[[13.0642059,52.4073553],[13.0633846,52.4070286],[13.0602355,52.4071242],[13.0610896,52.4067224],[13.060455,52.4067184],[13.0607712,52.4067278],[13.0604263,52.4071195],[13.0607056,52.4069683],[13.063347,52.4073941],[13.0620931,52.4068497],[13.0623231,52.4069055],[13.0635425,52.4074363],[13.063158,52.4069771],[13.0628628,52.4070375],[13.0642126,52.4073449],[13.063694,52.4071031],[13.0639194,52.4071268],[13.0630747,52.4074521],[13.0611379,52.4070919],[13.0630377,52.4074406],[13.0626747,52.407298]],Bertinistraße:[[13.0677425,52.4263911],[13.067873,52.4263969],[13.0682583,52.4262787],[13.0682569,52.4233297],[13.0689459,52.4222451],[13.0690987,52.4239021],[13.0685637,52.4247249],[13.0693033,52.4260915],[13.0678107,52.4267233],[13.06753,52.4264433],[13.0677782,52.4236189],[13.068897,52.4223487],[13.0652914,52.4247157],[13.0690006,52.4242623],[13.0671458,52.4265763],[13.0666211,52.4265608],[13.0690106,52.4254927],[13.0690255,52.4255457],[13.0690403,52.4255986],[13.0690551,52.4256515],[13.06907,52.4257044],[13.0689892,52.4258279],[13.0683891,52.42302],[13.0682968,52.4232363]],Bertiniweg:gr,"Bertolt-Brecht-Straße":[[13.0965344,52.3666556],[13.0977205,52.3670071],[13.098636,52.3662755],[13.0985362,52.3661209],[13.0984337,52.3659621],[13.0992369,52.3661411],[13.0991385,52.3659874],[13.0990375,52.3658295],[13.0989338,52.3656673],[13.0985434,52.3654116],[13.098371,52.3655086],[13.0981985,52.3656055],[13.0976138,52.3668397],[13.098026,52.3657024],[13.0978536,52.3657994],[13.0974406,52.3660472],[13.0972741,52.366147],[13.0971076,52.3662468],[13.0969411,52.3663467],[13.0967746,52.3664465],[13.0975151,52.3666848],[13.0974137,52.3665257],[13.0982187,52.3667255],[13.0981144,52.366561],[13.0980165,52.3664064],[13.0979163,52.3662482],[13.0987385,52.3664343]],"Bettina-von-Arnim-Straße":[[13.1337444,52.3630145],[13.1337444,52.3630145],[13.133045,52.3632684],[13.1332198,52.3630043]],Beyerstraße:[[13.0601381,52.4119842],[13.0602568,52.4120122],[13.0617298,52.4120627],[13.0615108,52.4124011],[13.0604938,52.4124141],[13.0608532,52.4124602],[13.060603,52.4120288],[13.0608373,52.4120635],[13.0605937,52.4118282]],Biberkiez:_r,Biberweg:mr,Bienenwinkel:pr,Binsenhof:yr,Birkengrund:xr,Birkenhügel:[[12.9894876,52.4040317],[12.9901138,52.4032883],[12.9901138,52.4032883],[12.9897057,52.4032912],[12.989103,52.4038385]],Birkenstraße:[[13.0600766,52.4105625],[13.0599516,52.4104554],[13.0607325,52.410499],[13.0604502,52.4103222],[13.0610262,52.4104164],[13.0611217,52.409952],[13.0619016,52.4098821],[13.0614647,52.409883]],Birkenweg:Er,Birnenweg:wr,Bisamkiez:Cr,Blumenstraße:[[13.0263479,52.4141884],[13.0263722,52.4129327],[13.0260191,52.413742],[13.0263302,52.4136258],[13.0263482,52.413816],[13.0260248,52.4139191],[13.026359,52.4139419],[13.0263718,52.413297],[13.026391,52.4126126],[13.0267203,52.4126516],[13.0260263,52.4126937],[13.0260211,52.4128728],[13.0259457,52.4129344],[13.0260179,52.4125074],[13.0266092,52.4123242],[13.0263164,52.412318],[13.0270201,52.4121979],[13.0269851,52.4125503],[13.0261599,52.4133547],[13.0260263,52.4131867],[13.0261655,52.4132444],[13.0260929,52.413507],[13.0260914,52.4135697]],Blumenweg:Sr,"Bonner Straße":[[13.0517393,52.4241231],[13.0517064,52.4237917],[13.0512665,52.423554]],"Brandenburger Straße":[[13.0583472,52.4006817],[13.0579073,52.4008644],[13.058621,52.400955],[13.0560954,52.4007386],[13.0563563,52.4006708],[13.0569443,52.4008497],[13.0571394,52.4008736],[13.0565134,52.4007964],[13.0566974,52.400819],[13.0564028,52.400539],[13.056582,52.4005619],[13.0569858,52.4006136],[13.0571701,52.4006363],[13.0546103,52.4008646],[13.054152,52.4003929],[13.054288,52.4005124],[13.0544725,52.4005354],[13.0541453,52.4002524],[13.054334,52.4002761],[13.0545828,52.4003073],[13.0547532,52.4003287],[13.0549337,52.4003521],[13.0551158,52.4003746],[13.0553526,52.4004038],[13.0555376,52.4004267],[13.0561663,52.4005095],[13.0581694,52.4008977],[13.0582841,52.4010153],[13.0584315,52.4010335],[13.054119,52.4004914],[13.0539435,52.400227],[13.0528609,52.4000903],[13.0528941,52.3999886],[13.0526922,52.3999641],[13.0522632,52.4000151],[13.0528562,52.4003381],[13.0526617,52.4003144],[13.0525263,52.4001865],[13.050676,52.400053],[13.0509745,52.4000923],[13.0511771,52.400119],[13.0504929,52.4000289],[13.050327,52.3999045],[13.0507475,52.3998255],[13.0509812,52.3998544],[13.0511727,52.3998781],[13.0513665,52.3999021],[13.0495135,52.3996676],[13.0494417,52.3998983],[13.0492626,52.3998756],[13.0492962,52.3997767],[13.0490811,52.3997495],[13.0493365,52.3996458],[13.0493712,52.3995433],[13.0482212,52.3999133],[13.0483893,52.3999346],[13.0488987,52.3997264],[13.0489381,52.3995966],[13.0487543,52.3995739],[13.0486042,52.3993851],[13.0484293,52.3993635],[13.0492359,52.3994794],[13.0524917,52.4002937],[13.0541953,52.4002587],[13.0553959,52.4004092],[13.0555967,52.4005737],[13.0544631,52.4002907],[13.0559605,52.4004802],[13.0504161,52.399784],[13.0490656,52.3996123],[13.0490194,52.3996066],[13.0489432,52.399732],[13.0496155,52.3998171],[13.0523,52.4000197],[13.0524079,52.4000333],[13.0584856,52.400806],[13.0550793,52.4007629],[13.0542985,52.4002716],[13.0542757,52.4004083],[13.0544145,52.4004418],[13.0573206,52.4007919],[13.0492323,52.3996329],[13.0485639,52.3993802],[13.0525102,52.4000462],[13.0579116,52.4009191],[13.049126,52.3997552],[13.0587172,52.4008349],[13.0586821,52.4009811],[13.0586056,52.4007782],[13.0583511,52.4009209],[13.0581763,52.4007675],[13.0572161,52.4006422],[13.057051,52.4007579],[13.0571464,52.4005884],[13.0570276,52.4006188],[13.056964,52.40061],[13.0568999,52.400739],[13.0568413,52.4007834],[13.0566721,52.4007329],[13.0562387,52.4006561],[13.0545716,52.4004451],[13.0546902,52.4004599],[13.0544738,52.4004587],[13.0542018,52.4003991],[13.0526432,52.4002075],[13.0522832,52.4001744],[13.0521734,52.4001411],[13.0511173,52.4000082],[13.0509339,52.3999844],[13.050572,52.3999367],[13.0504706,52.3999234],[13.0506064,52.3998075],[13.0555789,52.4004323],[13.055499,52.4004219],[13.0551799,52.400361],[13.055084,52.4003514],[13.054909,52.4003291],[13.0548102,52.4003212],[13.0547222,52.400311],[13.0541035,52.4002471],[13.0514869,52.399917],[13.0507963,52.3999663],[13.0512103,52.3998828],[13.0510206,52.3998593],[13.0507124,52.399821],[13.0505139,52.3997961],[13.0498794,52.3997128],[13.0495597,52.3996733],[13.0488037,52.39958],[13.0491062,52.3992789],[13.0526107,52.4000588],[13.050943,52.3996182],[13.0506706,52.3999497],[13.0506563,52.3998137],[13.050467,52.3997903],[13.0503367,52.399774],[13.0486774,52.3998205],[13.048404,52.3998298],[13.0582784,52.4007802],[13.0513089,52.399895],[13.0571345,52.4006319],[13.0529112,52.4000843],[13.0530109,52.4001092],[13.0496487,52.3996843],[13.0553041,52.4003633],[13.0585776,52.4008104],[13.0493367,52.3997818],[13.0492356,52.399769],[13.0490355,52.3997437]],Brauerstraße:[[13.0629159,52.3952553],[13.0622272,52.3955244],[13.0626895,52.395389],[13.062452,52.3956536],[13.062345,52.3955921],[13.0626559,52.3957708],[13.0628243,52.3958676]],Brauhausberg:Tr,Braumannweg:Rr,"Breite Straße":[[13.0518107,52.3959186],[13.0571537,52.3953253],[13.0513349,52.3959367],[13.0510251,52.3959694],[13.0506443,52.3960166],[13.053507,52.3952251],[13.0553836,52.3949971],[13.0486376,52.3962285],[13.0497275,52.3962131],[13.0494469,52.3962486],[13.0509074,52.3954832],[13.0488514,52.3957528],[13.0502131,52.3955117],[13.0498835,52.3951967],[13.046847,52.3957243],[13.0519688,52.395418],[13.0541152,52.3958166],[13.0462677,52.3959472],[13.0466154,52.3967065],[13.0575726,52.3953347],[13.0465532,52.3965234],[13.0465656,52.3969905],[13.0476375,52.396375],[13.0562294,52.3953667],[13.055993,52.3952703],[13.0459142,52.3970994],[13.054547,52.3955932],[13.0548503,52.3955348],[13.0552958,52.3955035],[13.0461014,52.3970514],[13.0458434,52.3970133],[13.04598,52.3971555],[13.0487012,52.3962802],[13.0501127,52.3963448],[13.0497593,52.396368],[13.0462793,52.3958253],[13.0460875,52.3969409],[13.0577717,52.3952375],[13.0589927,52.3950922],[13.0530166,52.3951893],[13.0467862,52.3967999],[13.0521016,52.3957054],[13.0470559,52.3959249],[13.0469956,52.395884],[13.0494804,52.3964254],[13.0518098,52.3954383],[13.0515243,52.3954764],[13.0521205,52.395399],[13.0534073,52.395218],[13.0531847,52.3952441],[13.045843,52.3968917],[13.0550663,52.3955191],[13.0473968,52.3965513],[13.0481114,52.3964416],[13.048075,52.3963494],[13.0499098,52.3963842],[13.0477396,52.39636],[13.0519185,52.3960205],[13.0519892,52.3962306]],"Breiter Weg":[[13.0102577,52.4259235],[13.0096808,52.4258135],[13.0099404,52.425766],[13.0099842,52.4259889],[13.0109017,52.4255804],[13.0104966,52.425895],[13.0094225,52.4258479],[13.0092008,52.4258022],[13.0098734,52.4259906],[13.0109915,52.4252649],[13.0108344,52.4258555],[13.0112876,52.4255456],[13.0114582,52.4257592],[13.0120805,52.4257242],[13.0111143,52.4258291],[13.0113845,52.4260138]],Brentanoweg:Ir,Brombeerstieg:vr,Brunnenallee:Ar,"Bruno-H.-Bürgel-Straße":[[13.1008441,52.3973043],[13.1022636,52.3998269],[13.1031904,52.400972],[13.1011978,52.3980917],[13.1028642,52.401159],[13.1032557,52.4010183],[13.1012218,52.3981486],[13.1023566,52.3999944],[13.1026402,52.4004472],[13.1029349,52.4012073],[13.1019858,52.3995502],[13.101653,52.3980717],[13.1012982,52.3976279],[13.1018648,52.3999635],[13.1024858,52.4002201],[13.1023566,52.3999944],[13.1020238,52.3992977],[13.1015412,52.3978332],[13.1017402,52.39972],[13.1026764,52.4005015],[13.1021437,52.3995873],[13.1016772,52.3981345],[13.1014554,52.3976637],[13.1018937,52.4000185],[13.101934,52.3990574],[13.1014694,52.3990022],[13.101097,52.3978807],[13.1025181,52.4002737],[13.102046,52.3993567],[13.1015737,52.3978955],[13.1017698,52.3997828],[13.1018614,52.3988132],[13.1023479,52.4007128],[13.1019553,52.3991182],[13.1018784,52.3988763],[13.1023986,52.4007716],[13.1021014,52.3997918],[13.1008441,52.3973043],[13.1011259,52.397944],[13.1014223,52.3988429],[13.1034482,52.4012677],[13.1039223,52.4015661],[13.1043247,52.4018074],[13.1046638,52.4020004],[13.101434,52.3993059],[13.1033803,52.4012263],[13.1015442,52.3995876],[13.1037534,52.4014621],[13.1015455,52.3992329],[13.1043247,52.4018074],[13.1039926,52.4016091],[13.1047501,52.4019401],[13.1016448,52.3994816],[13.1037888,52.4013609],[13.1007566,52.3970992],[13.1034033,52.4016264],[13.1039981,52.4019814],[13.1031232,52.4014542],[13.1033354,52.401585],[13.1030553,52.4014128],[13.1039302,52.40194],[13.1036878,52.4018091],[13.1036199,52.4017677],[13.1038849,52.4024652],[13.1010239,52.3977311],[13.100995,52.3976678],[13.1020374,52.4002774],[13.1020715,52.4003364],[13.1021889,52.4005071],[13.1022258,52.4005604],[13.1043972,52.402115],[13.103186,52.4027188],[13.1044809,52.4021594],[13.1046671,52.4022573],[13.1047422,52.4022983],[13.1042013,52.4025031]],"Bruno-Taut-Straße":[[13.0572519,52.4230092],[13.0575311,52.4229867],[13.0577853,52.4229883],[13.0567278,52.4229934],[13.0568419,52.4229955],[13.0569946,52.4229913],[13.0565083,52.4229904],[13.0563842,52.4229888],[13.0562546,52.4229854],[13.0561222,52.4229854],[13.0559953,52.422982],[13.055863,52.4229803],[13.0557472,52.4229787],[13.0565827,52.422824],[13.0564393,52.422824],[13.0561222,52.4228256],[13.0559953,52.4228256],[13.0558492,52.4228256],[13.0557196,52.4228256],[13.0560036,52.4226844],[13.0558685,52.4226827],[13.0557334,52.4226827],[13.0570625,52.4227685],[13.0569329,52.4227415],[13.0568061,52.4227146],[13.0566627,52.4226844],[13.0565221,52.4226558],[13.0563814,52.4226238],[13.0562353,52.4225902],[13.0560919,52.4225582],[13.0559347,52.4225263],[13.0557775,52.4224943],[13.0572252,52.4228021],[13.0573355,52.422824],[13.0574845,52.4228609]],Bullenwinkel:Mr,Burgstraße:[[13.0690566,52.3969842],[13.0649202,52.3976747],[13.0663445,52.3979264],[13.068049,52.3980375],[13.0662895,52.3982452],[13.0670157,52.3976327],[13.0638064,52.3965151],[13.0642307,52.396575],[13.0650283,52.3967022],[13.0654889,52.3967754],[13.0634545,52.3971891],[13.0635041,52.3970683],[13.0635626,52.3969257],[13.0641081,52.3971585],[13.0633967,52.3973299],[13.0640529,52.397291],[13.0639996,52.3974189],[13.0641667,52.3970178],[13.0647682,52.397123],[13.0646119,52.3975074],[13.0646668,52.3973724],[13.0647155,52.3972525],[13.0658945,52.3973396],[13.0658275,52.3975047],[13.0656764,52.3978768],[13.0657403,52.3977194],[13.0699457,52.397065],[13.0625696,52.3963248],[13.0629156,52.3963782],[13.0692566,52.3971397],[13.0691435,52.3971324],[13.0695096,52.3971561]],Bussardweg:Lr,Bäckerstraße:[[13.0526408,52.3985767],[13.0525909,52.3984767],[13.0522728,52.398645],[13.0520904,52.3986789],[13.0520416,52.3984351],[13.0517781,52.3984841],[13.0515689,52.3985231]],Böcklinstraße:[[13.0785167,52.4140541],[13.0803169,52.4141866],[13.0794427,52.4138086],[13.0805541,52.4142496],[13.0799335,52.4124686],[13.0788058,52.4136992],[13.0790382,52.4136915],[13.0800224,52.4140672],[13.0783101,52.4138996],[13.0797088,52.4144085],[13.0811663,52.4150579],[13.0801612,52.4147146],[13.0780299,52.4130836],[13.0779008,52.4133758],[13.0782852,52.4135142],[13.079829,52.4148878],[13.0815381,52.4148465],[13.0805006,52.4147184],[13.080755,52.4148291]],Büringstraße:[[13.1383667,52.3636051]],"Caputher Heuweg":[[13.0953655,52.3586972],[13.0952063,52.3586536],[13.0950558,52.3586124],[13.0948632,52.3585271],[13.0947129,52.3584857],[13.0945589,52.3584433],[13.0944171,52.3584042],[13.0940906,52.3583152],[13.0939419,52.3582736],[13.0937894,52.358231],[13.0936419,52.3581897],[13.0934351,52.3581631],[13.0933091,52.3581288],[13.0931883,52.3580959],[13.0955266,52.3597725],[13.0953791,52.3597275],[13.0952249,52.3596845],[13.0950405,52.3596333],[13.0948897,52.3595903],[13.0947187,52.3595412],[13.0910602,52.3565293],[13.0909844,52.3566336],[13.090914,52.3567304],[13.0908397,52.3568326],[13.0914008,52.3571602],[13.0915325,52.3571962],[13.091675,52.3572351],[13.0918304,52.3572775],[13.0911909,52.3571324],[13.0910674,52.3570989],[13.0909615,52.3570702],[13.0921879,52.3573766],[13.0923617,52.3574239],[13.0925274,52.357469],[13.0926731,52.3575087],[13.0932979,52.3575701],[13.0932343,52.3576573],[13.0931624,52.3577556],[13.0931007,52.3578401]],"Carl-Adam-Petri-Straße":[[13.0558205,52.4307384],[13.0559522,52.4306246],[13.0560185,52.4305779],[13.0561762,52.430473],[13.05625,52.4304307],[13.0564285,52.4303418],[13.0565048,52.4303072],[13.0567151,52.4302201],[13.0567963,52.4301881],[13.0570344,52.4301199],[13.0571287,52.4300942],[13.0574078,52.4300283],[13.0574986,52.4300103],[13.0577151,52.4299656],[13.0578161,52.4299522],[13.0580799,52.4299232],[13.0581699,52.4299082],[13.0584047,52.4298726],[13.0584932,52.429848],[13.0556278,52.430392],[13.0557043,52.4303496],[13.0559461,52.4302244],[13.0560356,52.4301848],[13.0561388,52.430095],[13.0562354,52.4300608],[13.0564062,52.4299886],[13.0565028,52.4299544],[13.0567344,52.4298939],[13.0568271,52.4298715],[13.0570477,52.429796],[13.0571414,52.4297771],[13.0577967,52.4296708],[13.0576988,52.4296804],[13.0585683,52.4295137],[13.0574783,52.4297384],[13.0573894,52.4297532],[13.0567235,52.4314424],[13.0568419,52.4314283],[13.0563516,52.4314792],[13.0564702,52.4314721],[13.0564776,52.4317424],[13.0560789,52.4313589],[13.0560123,52.431676],[13.0554232,52.4316508],[13.0549695,52.4313017],[13.0550543,52.4310908],[13.0551635,52.4308333],[13.0552712,52.430578],[13.0590786,52.429713],[13.055928,52.4314282],[13.0558436,52.4313944],[13.0557584,52.4313604]],"Carl-Christian-Horvath-Straße":[[13.0462886,52.4135747],[13.04598,52.4136315],[13.0476722,52.4133058],[13.0473819,52.4133592],[13.0470917,52.4134127],[13.0465972,52.4135178],[13.048684,52.4135395],[13.0482641,52.4140086],[13.0480948,52.4136485],[13.0473141,52.4137132],[13.0474085,52.4138924],[13.0468742,52.4138601]],"Carl-Dähne-Straße":[[13.008349,52.4065134],[13.0087821,52.4067301],[13.0077686,52.4056664],[13.0095717,52.4071247],[13.0075689,52.4057892],[13.0088008,52.4070458],[13.0082673,52.40674],[13.0085953,52.406943],[13.0080305,52.4066612],[13.0076749,52.4067915],[13.0069281,52.405667],[13.0070705,52.4062185],[13.0076299,52.4067208],[13.0069417,52.4059295],[13.0072572,52.4065026],[13.0076489,52.405854]],"Carl-Gustav-Jacobi-Straße":[[13.0581762,52.4302631],[13.0582597,52.4302474],[13.0595036,52.4302533],[13.0592417,52.4303808],[13.0582787,52.4305381],[13.0585136,52.4304789],[13.0587484,52.4301678],[13.0560312,52.430977],[13.0561328,52.4309582],[13.0563526,52.4309144],[13.0564511,52.4308871],[13.0566718,52.4308196],[13.0567562,52.4307883],[13.0569496,52.4307141],[13.0570279,52.430675],[13.057211,52.4305795],[13.0572831,52.4305443],[13.0574725,52.4304637],[13.0575522,52.4304343],[13.0576184,52.4307271],[13.0575387,52.4307565],[13.0573849,52.4308429],[13.0573128,52.4308781],[13.0571288,52.4309666],[13.0570505,52.4310057],[13.0568571,52.4310723],[13.0567727,52.4311036],[13.0565924,52.4311487],[13.0564939,52.431176],[13.056251,52.431221],[13.0561494,52.4312398],[13.059318,52.4299773],[13.0597593,52.4297252],[13.0578792,52.4306507],[13.0557323,52.4309789],[13.0558118,52.4309623],[13.0556507,52.4309981]],"Carl-von-Ossietzky-Straße":[[13.0344375,52.3967593],[13.034403,52.3971137],[13.0338821,52.3972733],[13.0339196,52.3967793],[13.0341843,52.3972731],[13.0344521,52.3966094],[13.0339377,52.3965866],[13.0344185,52.3969548],[13.0341464,52.3975432],[13.0336224,52.3961413],[13.0339558,52.3963943],[13.033902,52.3969656],[13.0335381,52.3974144],[13.0344464,52.3949215],[13.0350053,52.3944796],[13.0345056,52.394456],[13.0344298,52.3950521],[13.0343834,52.3955583],[13.0344015,52.3954232],[13.0345791,52.3939333],[13.0344827,52.3946358],[13.0345835,52.3951971],[13.0343653,52.3956925],[13.0345565,52.3940803],[13.0343419,52.3958154],[13.0347884,52.3948091],[13.0337012,52.3943505],[13.0338804,52.3953106],[13.0341213,52.3949762],[13.0341048,52.3951478],[13.0338481,52.3957034],[13.0342806,52.3939681],[13.0339687,52.3944828],[13.033834,52.3958167],[13.0336562,52.3959622],[13.033601,52.3954879],[13.0338821,52.3972733],[13.0334118,52.3973284],[13.034208,52.3940649],[13.034917,52.3946294],[13.0343537,52.3953621],[13.0341534,52.3974714],[13.0339857,52.3956298],[13.0352683,52.3945391],[13.0352616,52.3945987],[13.0352569,52.3946408]],Charlottenstraße:[[13.0566505,52.3994147],[13.0569929,52.3995612],[13.0585149,52.3999746],[13.0586211,52.4000968],[13.0587624,52.4001146],[13.0583281,52.4000599],[13.0626236,52.4004563],[13.0558994,52.3994281],[13.055355,52.3993609],[13.0542621,52.3992245],[13.0541391,52.3992091],[13.0540065,52.3991947],[13.0538688,52.3991769],[13.0536956,52.3991538],[13.0527992,52.3990443],[13.052656,52.3990269],[13.056026,52.3997595],[13.0559974,52.3996526],[13.055845,52.399634],[13.055685,52.3996144],[13.0555233,52.3995947],[13.0550462,52.3995364],[13.0548904,52.3995173],[13.0547298,52.3994977],[13.0545646,52.3994775],[13.0544041,52.3994579],[13.0540899,52.3994195],[13.0539338,52.3994004],[13.0545402,52.3992592],[13.0546173,52.3990292],[13.0648035,52.3998536],[13.0646568,52.3999182],[13.06456,52.3998383],[13.0643697,52.4000467],[13.064126,52.400028],[13.0640805,52.4001761],[13.0639392,52.4002387],[13.0637743,52.4003138],[13.0635333,52.400299],[13.0631646,52.4003558],[13.0629689,52.4002998],[13.0651676,52.3994863],[13.0550462,52.3995364],[13.0553557,52.3995742],[13.0537747,52.3993791],[13.0540565,52.3995217],[13.052007,52.3992741],[13.0508171,52.3987993],[13.0506535,52.3987789],[13.0504095,52.3987478],[13.0499608,52.3986936],[13.049813,52.3986748],[13.0496617,52.3986555],[13.0495144,52.3986368],[13.0493634,52.3986176],[13.0492147,52.3985987],[13.0490662,52.3985798],[13.0489078,52.3985596],[13.0487725,52.3984394],[13.0485403,52.3984105],[13.0502883,52.398561],[13.0517706,52.3992325],[13.0506072,52.3990907],[13.0504085,52.3989636],[13.0499396,52.3989829],[13.0497764,52.3989893],[13.0498085,52.3988927],[13.0496644,52.3988749],[13.049525,52.3988577],[13.0493627,52.3988376],[13.0490343,52.3988977],[13.0487811,52.3987663],[13.0489996,52.3988934],[13.04884,52.3988737],[13.0548129,52.3992932],[13.055253,52.3992449],[13.055253,52.3992449],[13.0636249,52.4003819],[13.0583634,52.3999555],[13.0582591,52.3999423],[13.0502883,52.3987345],[13.0662234,52.3994036],[13.0552183,52.3991908],[13.0554282,52.3998842],[13.0677924,52.4020398],[13.0649397,52.4018793],[13.0579805,52.3995517],[13.058039,52.3996547],[13.0548818,52.3993019],[13.0571387,52.3998369],[13.0567619,52.3997885],[13.0589919,52.4000347],[13.0499884,52.3989149],[13.0590918,52.4000745],[13.0635383,52.4015255],[13.0638064,52.4015565],[13.0591796,52.3998461],[13.0589213,52.3998114],[13.0582136,52.3997161],[13.0588315,52.4000145],[13.0587108,52.3999992],[13.059961,52.3998697],[13.0601734,52.3998968],[13.0603821,52.3999235],[13.060763,52.3999713],[13.0609884,52.3999996],[13.0611977,52.4000258],[13.0615721,52.4000737],[13.0617954,52.4001019],[13.0620113,52.4001291],[13.0523843,52.3993346],[13.0525422,52.3993539],[13.052704,52.3993737],[13.0528733,52.3993943],[13.0574122,52.399607],[13.055741,52.3996213],[13.0549043,52.3992485],[13.0553429,52.399281],[13.0554053,52.3985056],[13.055234,52.3990111],[13.0549182,52.3987692],[13.0549213,52.3989718],[13.0549607,52.3986407],[13.0518703,52.3991445],[13.0509403,52.398815],[13.0485899,52.3984585],[13.0545303,52.3994733],[13.0544496,52.3994634],[13.0543729,52.3994541],[13.0543156,52.3994982],[13.0540253,52.3994663],[13.0510463,52.3990434],[13.0495455,52.3988978],[13.0485383,52.3987578],[13.0588961,52.3997013],[13.0583907,52.3999589],[13.0583409,52.3999526],[13.0582778,52.3999447],[13.0581715,52.3999865],[13.0565895,52.3998045],[13.050681,52.3990552],[13.0587779,52.3997644],[13.0555874,52.3993159],[13.0552654,52.3995631],[13.0551665,52.3995511],[13.0540039,52.3994089],[13.0555882,52.3996799],[13.0629921,52.4006084],[13.0634013,52.4005734],[13.063803,52.3999361],[13.0507039,52.399001],[13.0554287,52.3993299],[13.0555767,52.3993669],[13.0560046,52.3993508],[13.055004,52.3995312],[13.0538456,52.3991725],[13.0553079,52.3993551],[13.0506084,52.3987736],[13.0497242,52.3988823],[13.0529137,52.3990587],[13.0525894,52.3990184],[13.0524505,52.3990015],[13.0523106,52.3989845],[13.0584647,52.3997229],[13.0542989,52.3992291],[13.0649342,52.4012967],[13.0486934,52.3984953],[13.0500935,52.3986573],[13.0500318,52.3986492],[13.0494243,52.3985821],[13.0527784,52.399001],[13.0526993,52.3989945],[13.0507151,52.3987424],[13.0507633,52.3987927],[13.0540954,52.3991598],[13.0529997,52.3990166],[13.0554938,52.3993777],[13.0552628,52.3993013],[13.0634174,52.4003307],[13.063534,52.4003618],[13.0637982,52.4002554],[13.0640437,52.4000901],[13.063703,52.3999993],[13.064281,52.4000255],[13.0642341,52.4000599],[13.0644862,52.3999265],[13.0645734,52.3999003],[13.0655001,52.3994012],[13.0653774,52.3994327],[13.0653196,52.3994191],[13.0559434,52.3996933],[13.0559408,52.3996457],[13.0553835,52.3996278],[13.055472,52.3996348],[13.0554318,52.3997649],[13.0536534,52.3994089],[13.0535991,52.3994376],[13.0496174,52.3989028],[13.0494504,52.3988485],[13.0550352,52.399321],[13.0590383,52.3997583],[13.0541538,52.3994822]],Chileplatz:Pr,Chopinstraße:[[13.1351179,52.3794764],[13.1353106,52.3796982],[13.1344288,52.37901],[13.1355853,52.3797117],[13.1339675,52.3789811],[13.1341785,52.3793614],[13.1343572,52.3795855],[13.1344288,52.37901],[13.1343572,52.3795855],[13.1341785,52.3793614],[13.1349576,52.3790273],[13.1347619,52.3793021],[13.134807,52.3793625]],"Christoph-Friedrich-Weg":[[13.1257893,52.4831316],[13.1258537,52.4839163],[13.1260552,52.4845124],[13.1256506,52.4832402],[13.1258449,52.4838553]],Christophorusweg:br,"Clara-Schumann-Straße":[[13.1348595,52.3584389],[13.1355058,52.3589162],[13.1343785,52.3575519],[13.1335137,52.3570737],[13.1359854,52.35901],[13.1349164,52.3584785],[13.1349731,52.3585179],[13.1350212,52.3585513],[13.135064,52.358581],[13.1354381,52.3588188],[13.1353933,52.3587902],[13.1353429,52.358758],[13.1352836,52.3587202],[13.135224,52.3586821],[13.1355051,52.3589656],[13.1355045,52.359014],[13.1355037,52.3590678],[13.1354978,52.3591996],[13.1354971,52.359249],[13.1354964,52.3592974],[13.1354957,52.3593512],[13.1339754,52.3572309],[13.1336895,52.357753],[13.133167,52.357259],[13.1352247,52.3582697],[13.1353455,52.3583442],[13.1355071,52.3584438],[13.1358153,52.3585444],[13.1360379,52.3585656],[13.136126,52.3586471],[13.1359245,52.3601617],[13.135907,52.3607511],[13.135893,52.3610479],[13.1355774,52.3610126],[13.1356167,52.360155]],"Clara-Zetkin-Straße":[[13.0376298,52.3947836],[13.0375739,52.3949172],[13.0373522,52.3969163],[13.0370888,52.3967831],[13.0373897,52.3965721],[13.0373773,52.3964497],[13.0374405,52.3961328],[13.0379901,52.3954788],[13.0379859,52.3955252],[13.0378882,52.3963541],[13.0372899,52.3970326],[13.0372651,52.3973756],[13.0378285,52.3971187],[13.0373213,52.3970337],[13.0377414,52.3949465],[13.0374682,52.3958853],[13.0375447,52.3951964],[13.0379285,52.3961129],[13.0379035,52.3963153],[13.0374804,52.3957709],[13.0376825,52.3953891],[13.0379528,52.3958359],[13.03748,52.3957417],[13.0375374,52.3952117],[13.0379557,52.3957122],[13.0375053,52.3954954],[13.0379967,52.3972466],[13.0380512,52.3950127],[13.0380208,52.3952037],[13.0380221,52.395185]],Concordiaweg:Fr,"Conrad-Veidt-Straße":[[13.1432435,52.3672336],[13.1431056,52.3671477],[13.1419692,52.3665839],[13.1418456,52.3665054],[13.1424159,52.3667181],[13.1429677,52.3670618],[13.1428297,52.3669759],[13.1433815,52.3673195],[13.1435194,52.3674054],[13.1415985,52.3663485],[13.1426918,52.36689],[13.1417221,52.366427]],Daimlerstraße:[[13.0889162,52.3904839],[13.0888853,52.3903428],[13.0895355,52.3917244],[13.0894842,52.3916409],[13.0883627,52.3901695],[13.0883833,52.3906618],[13.088108,52.3906487],[13.0878565,52.3906284],[13.0884139,52.3904568],[13.0883945,52.3903476]],Damaschkeweg:Dr,"David-Gilly-Straße":[[13.0376223,52.4154572],[13.0371127,52.4155994],[13.0349843,52.4143646],[13.0369215,52.4143828],[13.0355558,52.4137232],[13.0354647,52.413578],[13.0356058,52.4137713],[13.0356866,52.4138492],[13.0354295,52.4141298],[13.0357319,52.4138928],[13.0357721,52.4139315],[13.0358161,52.413974],[13.0358488,52.4139036],[13.0351321,52.413851],[13.0351765,52.4138927],[13.0352851,52.4139944],[13.0353291,52.4140357],[13.0353789,52.413551],[13.0350289,52.4142913],[13.0353766,52.4140802],[13.0354621,52.4136328],[13.0355132,52.4136821],[13.034656,52.4139388],[13.0349819,52.4142488],[13.0349779,52.4137065],[13.0350124,52.4137388],[13.0350536,52.4137774],[13.0350925,52.4138139],[13.0348773,52.4138815],[13.0355802,52.4136613]],"Dennis-Gabor-Straße":[[13.0349796,52.4148831],[13.0351629,52.4150585],[13.0353655,52.4152524],[13.0344424,52.41428]],Dianastraße:[[13.1230559,52.38656],[13.1224106,52.3866032],[13.1234164,52.3864131],[13.1239802,52.3865447],[13.1236942,52.3863346],[13.1231598,52.3863728],[13.1241083,52.3867772],[13.1244196,52.3864617],[13.124759,52.3872243],[13.1251721,52.3868744],[13.1256131,52.3869966],[13.1247442,52.3871241],[13.1254704,52.386809],[13.1261399,52.3890997],[13.1266652,52.3884811],[13.1268912,52.3890211],[13.1266508,52.3881831],[13.125692,52.3878782],[13.1265034,52.3880307],[13.1263432,52.3878615],[13.1262064,52.3877086],[13.1260415,52.3875477],[13.1258041,52.387437],[13.1260629,52.388284],[13.1268081,52.3883482],[13.125936,52.3881381],[13.1231024,52.3871763]],Dieselstraße:[[13.093078,52.388389],[13.0919413,52.3885398],[13.0924465,52.388463],[13.0926619,52.388317],[13.0903046,52.3888903],[13.0905576,52.3888348],[13.0914381,52.3886252],[13.0908206,52.3887805],[13.0988908,52.3872639],[13.0986456,52.3873139],[13.0991332,52.3872146],[13.0917123,52.3883172],[13.0908675,52.3883895],[13.0903426,52.3886096],[13.0919738,52.3882659],[13.0906497,52.3885421],[13.0912469,52.388688],[13.0915198,52.388356],[13.0940384,52.3881167],[13.0942504,52.3880827],[13.0942968,52.3881902],[13.0909205,52.3884875],[13.0907851,52.3885148],[13.0911597,52.388706],[13.0913274,52.3883948],[13.0982117,52.3870521],[13.0974314,52.387283],[13.0972052,52.3872356],[13.097445,52.3877829],[13.0977201,52.3878088],[13.0977438,52.3875538],[13.0985267,52.38725],[13.099422,52.3870616],[13.0956635,52.3876054],[13.0953237,52.387684],[13.0957509,52.3875866],[13.0954485,52.3876541],[13.0934425,52.3882125]],Dohlenweg:kr,Domstraße:[[13.1162324,52.3977199],[13.11722,52.3975856],[13.1168999,52.3972324],[13.1185173,52.3972678],[13.1141686,52.3975273],[13.1182098,52.3972656],[13.1181921,52.3970445],[13.117745,52.3975435],[13.1173296,52.397674],[13.1150507,52.39755],[13.1176494,52.397216],[13.1147455,52.3975975],[13.1155278,52.39769],[13.1141708,52.397055],[13.1091435,52.3974034],[13.1106107,52.3976029],[13.1129652,52.3969903],[13.1094761,52.3973719],[13.1090604,52.3976871],[13.1125162,52.3970982],[13.1089844,52.3974314],[13.114634,52.3971284],[13.1093963,52.3977367],[13.1111958,52.3970793],[13.1149698,52.3971133],[13.1102589,52.3975167],[13.1108776,52.3971116],[13.1161996,52.3970455],[13.1116217,52.3975523],[13.1112572,52.3976057],[13.1119808,52.397492],[13.1189104,52.3971683],[13.1188125,52.396891],[13.1126081,52.3967848],[13.1189499,52.3967028],[13.1165888,52.3980678],[13.1119819,52.3975895],[13.1119188,52.3970583],[13.1117786,52.3970589],[13.1105506,52.397065],[13.1121612,52.3968497],[13.1155367,52.3965265],[13.1167336,52.3967936],[13.1134725,52.3967993],[13.1155273,52.3969802],[13.1157866,52.3980147],[13.1171892,52.3953781],[13.1138263,52.3971963],[13.1162684,52.3958857],[13.1168419,52.3976287],[13.1167296,52.3976258],[13.1099448,52.3975521],[13.1097696,52.3975831]],Donarstraße:[[13.1028427,52.4007765],[13.1038776,52.4006279],[13.1061767,52.3999944],[13.1066576,52.400023],[13.105722,52.4000991],[13.1058706,52.3997679],[13.1065251,52.3995852],[13.104387,52.4001832],[13.1049912,52.3999971],[13.1051799,52.4001577],[13.1068912,52.3994088],[13.1038287,52.4003568],[13.1063132,52.3999604],[13.1051595,52.4002611],[13.1043004,52.4002093],[13.1055815,52.3998293],[13.1057733,52.3999969],[13.1070722,52.3998216],[13.1038287,52.4003568],[13.1054172,52.3997615],[13.1048619,52.4000351],[13.1023939,52.401063],[13.1024602,52.4010155],[13.1032617,52.4005553],[13.1031812,52.4005959]],Dorfstraße:[[12.9882527,52.4753719],[12.9884348,52.4749309],[12.9881839,52.4755173],[12.9879174,52.475791],[12.9878277,52.4763348],[12.990563,52.4745565],[12.9890474,52.4737054],[12.9377662,52.4249128],[12.93813,52.4250168],[12.9381834,52.4252229],[12.9382552,52.4254301],[12.9384746,52.4254877],[12.9373323,52.4263526],[12.9389931,52.4259409],[12.9392896,52.4263235],[12.9388049,52.4264792],[12.9380847,52.4268835],[12.9386541,52.4267527],[12.9386577,52.42725],[12.98794,52.4755123],[12.9880566,52.4758918],[12.9894132,52.4728094],[12.9890722,52.4736183],[12.9892654,52.4731172],[12.9900002,52.4728452]],"Dorothea-Schneider-Straße":[[13.1352284,52.363926],[13.1347805,52.3628306],[13.1347627,52.3632386],[13.1347738,52.3630241],[13.1342389,52.3632312],[13.1344083,52.3630255],[13.1341304,52.3626678],[13.1352307,52.3644572],[13.1345705,52.3638868],[13.1349233,52.3641882],[13.1342341,52.3617446],[13.1344636,52.3608973],[13.1343429,52.3605872]],Dortustraße:[[13.0526335,52.3978948],[13.0534612,52.3989688],[13.0534339,52.3988183],[13.053373,52.3984831],[13.0528841,52.398926],[13.053047,52.3988011],[13.0530264,52.3986795],[13.0541422,52.4025306],[13.0541042,52.4011054],[13.0538588,52.4010593],[13.0540058,52.4009374],[13.053978,52.4007881],[13.0539119,52.4004336],[13.0535716,52.3995277],[13.0535809,52.3995759],[13.0536082,52.3997178],[13.0536357,52.399861],[13.0536595,52.3999843],[13.0536783,52.4000821],[13.0524661,52.3970883],[13.0526737,52.3970705],[13.0537443,52.4004452],[13.0537642,52.4005519],[13.0543056,52.3999354],[13.0538246,52.3999723],[13.0540156,52.4018535],[13.0540156,52.4018535],[13.0540634,52.4021092],[13.0540634,52.4021092],[13.0540928,52.4022663],[13.0541177,52.4023994],[13.0530552,52.4001147],[13.0531085,52.4003452],[13.0531789,52.4004121],[13.0531989,52.4005159],[13.0532266,52.4006597],[13.0532474,52.4007678],[13.0532747,52.4009101],[13.0532951,52.4010162],[13.0521914,52.3952452],[13.0518696,52.3948321],[13.051622,52.3945074],[13.0506989,52.3934038],[13.051182,52.3941572],[13.051182,52.3941572],[13.0512867,52.3943166],[13.0514428,52.3942723],[13.0513327,52.394377],[13.0514026,52.3944687],[13.0535488,52.4025402],[13.0535666,52.402341],[13.0536088,52.4016459],[13.0534594,52.4018144],[13.0534594,52.4018144],[13.0535666,52.402341],[13.0531432,52.4018404],[13.0533445,52.4019758],[13.0535117,52.4020695],[13.051918,52.3981716],[13.0534339,52.3988183],[13.0535413,52.4022157],[13.0533405,52.4012385],[13.0533759,52.4013999],[13.0537424,52.4003497],[13.0534874,52.3991045],[13.0537691,52.4025685],[13.0536925,52.4022316],[13.0536635,52.4021406],[13.0541102,52.4021335],[13.0536534,52.4018665],[13.053214,52.4018989],[13.0536145,52.4016741],[13.053537,52.4013253],[13.0534098,52.4007239],[13.0545707,52.4017871],[13.0537497,52.4004742],[13.0533441,52.4003837],[13.0536966,52.4022988],[13.0541602,52.4022902],[13.0534019,52.4006832],[13.0533897,52.4006195],[13.0534067,52.4009297],[13.0539093,52.4011433],[13.0536716,52.4000471],[13.0536856,52.4001202],[13.0531966,52.3960301],[13.0533351,52.402143],[13.0532296,52.4002718],[13.0538561,52.4002161],[13.0532,52.400133],[13.0531253,52.4002599],[13.0531347,52.3993631],[13.0530474,52.3996642],[13.05308,52.3998128],[13.053108,52.3999404],[13.0530221,52.3995488],[13.05317,52.3995213],[13.0532564,52.3999081],[13.05324,52.3998348],[13.0525705,52.3962245],[13.0535877,52.3996113],[13.0540837,52.4011955],[13.0536667,52.400022],[13.0545793,52.4019999],[13.0546656,52.4021416],[13.0544358,52.4022881],[13.0543242,52.4016495],[13.053974,52.4016313],[13.0539475,52.4015017],[13.0539237,52.4013772],[13.0537535,52.4023618],[13.0535339,52.4015519],[13.0536215,52.3997871],[13.053955,52.3997774],[13.0543755,52.3997018],[13.0543395,52.399707],[13.0541787,52.3996686],[13.0539777,52.3996434],[13.0537735,52.4006016],[13.0538964,52.4005755],[13.053834,52.4006308],[13.0532042,52.3996744],[13.0533736,52.400536],[13.0533642,52.4004872],[13.0543703,52.3997309],[13.0532227,52.3997573],[13.0533519,52.3983751],[13.0533175,52.39819],[13.0529982,52.3994322],[13.0534248,52.4008641],[13.0536399,52.402028],[13.0536777,52.4019868],[13.0536574,52.4021112],[13.0531445,52.3995435],[13.0539807,52.3996833],[13.0535159,52.4018674],[13.0534845,52.4021524],[13.0536005,52.4023076],[13.0537674,52.4024303],[13.0535651,52.401451],[13.0534736,52.4010478],[13.0534663,52.4011064],[13.0533604,52.4008663],[13.0530486,52.4007906],[13.0532127,52.4008124],[13.053231,52.4003843],[13.0529192,52.3986136],[13.0529266,52.3986573],[13.052364,52.3976017],[13.0515204,52.3945051],[13.0537359,52.3986144],[13.0534905,52.3985714],[13.0534436,52.3986197],[13.0537306,52.3985837],[13.0534194,52.3985256],[13.0538131,52.3989008],[13.0535831,52.399089],[13.053685,52.399537],[13.0540337,52.3998258],[13.0542157,52.3999242],[13.053925,52.3998623],[13.0538875,52.4004158],[13.0537963,52.4004003],[13.0538468,52.400861],[13.0536515,52.3999427],[13.0534083,52.4007818]],Drevesstraße:[[13.0765664,52.380157],[13.0762108,52.3799706],[13.0764292,52.3797329],[13.0769071,52.3799723],[13.0781984,52.378815],[13.0780379,52.3787377],[13.0778347,52.3788332],[13.0781124,52.3789714],[13.0787949,52.3781858],[13.0789652,52.3782768],[13.0791817,52.3781848],[13.0789097,52.3780458],[13.0749978,52.3809029],[13.0752069,52.3806449],[13.0754216,52.3805507],[13.075531,52.3804151],[13.0757607,52.3803138],[13.0759015,52.3802147],[13.0760435,52.3801118],[13.0763643,52.380282],[13.0762273,52.3803834],[13.0760866,52.3804841],[13.0759699,52.3806421],[13.0757612,52.3807336],[13.0756552,52.3808683],[13.07527,52.3810451],[13.0746956,52.3821137],[13.0747051,52.3819892],[13.0747198,52.3817603],[13.0747291,52.381636],[13.0753321,52.3811769],[13.0751247,52.3812783],[13.0746237,52.3813488],[13.0750124,52.3814075],[13.0749618,52.3816436],[13.0749546,52.3817497],[13.0749402,52.3819953],[13.0749314,52.3821184],[13.074463,52.3811209],[13.0746537,52.3810277],[13.074791,52.380896],[13.0745329,52.3825335],[13.0767678,52.3796467],[13.0769071,52.3795436],[13.0770422,52.3794436],[13.077272,52.3792379],[13.0774112,52.379137],[13.0775598,52.3790293],[13.0778273,52.3791797],[13.0776898,52.3792791],[13.077544,52.3793844],[13.077255,52.3795547],[13.0771182,52.3796563],[13.0769833,52.3797566],[13.0791112,52.3778882],[13.0792486,52.377792],[13.0793912,52.3776879],[13.0796891,52.3773648],[13.0794778,52.377257],[13.0792449,52.3771382],[13.0801291,52.3775853],[13.0803603,52.3777046],[13.0805942,52.3778254],[13.0796706,52.3778278],[13.079525,52.3779288],[13.0793864,52.3780354],[13.0802423,52.377125]],"Drewitzer Straße":[[13.1082175,52.3621896],[13.1045078,52.3641789],[13.1102264,52.3626786],[13.1080617,52.363462],[13.1055116,52.3645839],[13.1060561,52.3646182],[13.1063227,52.3653879],[13.1063192,52.3642038],[13.0881135,52.3741808],[13.0966063,52.3689227],[13.1108762,52.3611431],[13.0872689,52.377027],[13.0870372,52.3767787],[13.1016442,52.3667104],[13.1019016,52.3666026],[13.1021186,52.3664686],[13.1023381,52.3663342],[13.1010839,52.3663367],[13.1014701,52.3661037],[13.1010463,52.366395],[13.1011858,52.3663291],[13.103337,52.3659482],[13.1008747,52.3653553],[13.0998594,52.3671222],[13.1000216,52.3670179],[13.1002065,52.3669028],[13.1003813,52.3668035],[13.1005467,52.3667051],[13.0966302,52.3690632],[13.0979599,52.368263],[13.0981291,52.3681602],[13.0982983,52.3680573],[13.0984675,52.3679545],[13.0986367,52.3678517],[13.0989048,52.3676919],[13.0990756,52.3675891],[13.0992464,52.3674862],[13.0994172,52.3673834],[13.099588,52.3672806],[13.1095646,52.3624826],[13.1076852,52.3632545],[13.1105352,52.3611447],[13.1045522,52.3640814],[13.1075672,52.3623557],[13.1044305,52.3638794],[13.1075546,52.3655994],[13.1095393,52.3611928],[13.1032138,52.3658704],[13.0835899,52.377407],[13.0839998,52.3772186],[13.0859486,52.375847],[13.0860651,52.375769],[13.0864471,52.3757107],[13.0865912,52.3757909],[13.0871328,52.375584],[13.0870878,52.3754582],[13.0869587,52.3753857],[13.0869851,52.3751554],[13.0871193,52.3750707],[13.0867772,52.3758189],[13.086894,52.3757417],[13.0870136,52.3756627],[13.0961822,52.3689684],[13.0874467,52.3749118],[13.0875954,52.3748101],[13.0879968,52.3746201],[13.08814,52.3745235],[13.1045209,52.3640218],[13.0886891,52.3742221],[13.0891311,52.3739776],[13.0885056,52.3743396],[13.0890046,52.3740613],[13.1121204,52.3608625]],Driftweg:Or,Drosselweg:Gr,"Döberitzer Straße":[[13.010749,52.4755298],[13.0105048,52.4771612],[13.0107583,52.4766405],[13.0103996,52.4773209],[13.0109607,52.4720457],[13.0106044,52.4770026],[13.011097,52.476672],[13.0093686,52.4720862],[13.0113278,52.4721868],[13.0092854,52.4723077],[13.0107074,52.4768434],[13.0107706,52.4764743],[13.0107726,52.4757025],[13.0112563,52.4763837],[13.0113324,52.4708582],[13.011524,52.4715394],[13.010985,52.4714963],[13.0116194,52.4713309],[13.011117,52.4709789],[13.0112684,52.4712805],[13.0118251,52.4710736],[13.0110274,52.4717003],[13.0113622,52.4705677],[13.0086943,52.4720232],[13.0109267,52.4740504],[13.0108191,52.4749888],[13.0107534,52.4752388],[13.0109603,52.4719041],[13.0117385,52.4707991],[13.0111744,52.4766973],[13.0107579,52.4759196],[13.010971,52.4762897],[13.011373,52.4764622],[13.0107653,52.47581],[13.0111652,52.4759718],[13.0108996,52.4762662],[13.0112431,52.4759973],[13.0111851,52.4763602],[13.0107745,52.4764203],[13.0104317,52.4772709],[13.0111652,52.4759718],[13.0111137,52.4763367],[13.0110423,52.4763132],[13.0107621,52.4765864],[13.0107388,52.4767943],[13.010769,52.4757561],[13.0113022,52.4764389],[13.0106362,52.4769531],[13.0107617,52.4758639],[13.0105359,52.4771125],[13.011401,52.4719781],[13.0114623,52.4717836],[13.0108623,52.4722559],[13.0106468,52.4722319],[13.0103541,52.4721928],[13.0101868,52.4721695],[13.0110182,52.4742637],[13.0110209,52.4744286],[13.0110271,52.4745944]],Dürerstraße:[[13.0759639,52.4110198],[13.0757769,52.4109438],[13.0755828,52.4108743],[13.075403,52.4107918],[13.075216,52.4107158]],Ebereschenweg:Nr,Ebräerstraße:[[13.0573771,52.3984473],[13.0572291,52.3984428],[13.0569685,52.3984741],[13.0567073,52.3985055],[13.0573706,52.3985902],[13.0571481,52.3986172],[13.0569217,52.3986448],[13.0574206,52.3984057],[13.0575259,52.3983926]],Ecksteinweg:zr,Edisonallee:Wr,"Edith-Schollwer-Weg":[[13.1255897,52.4820077],[13.1266803,52.4819051],[13.1254622,52.4819226],[13.1263648,52.4819104],[13.1262656,52.4819194]],"Eduard-Claudius-Straße":[[13.0915044,52.3717554],[13.0890327,52.3730514],[13.0901472,52.3723801],[13.090325,52.3722675],[13.0904329,52.3722037],[13.0905924,52.3720921],[13.0906871,52.3720231],[13.0908465,52.3719075],[13.0909262,52.3718274],[13.0920441,52.3714917],[13.0919654,52.3714599],[13.0918867,52.3714281],[13.0918079,52.3713962],[13.0917292,52.3713644],[13.0916505,52.3713325],[13.0914412,52.3712484],[13.0913584,52.3712206],[13.0912757,52.3711928],[13.0891622,52.3729379],[13.0889546,52.3731234],[13.091193,52.371165],[13.0911103,52.3711372],[13.0910276,52.3711094],[13.0908282,52.3710293],[13.0907432,52.3710017],[13.0906582,52.3709741],[13.0905731,52.3709466],[13.0904881,52.370919],[13.090403,52.3708914],[13.0892602,52.3728699],[13.0908133,52.3716783],[13.0906937,52.3716408],[13.0904329,52.3717118],[13.0903582,52.3717919],[13.0902319,52.3719177],[13.0901422,52.3720018],[13.0899844,52.3721175],[13.0894413,52.3727644],[13.0899031,52.3721945],[13.0897469,52.3723071],[13.0896522,52.3723913],[13.0895609,52.3726995],[13.0897386,52.3726022],[13.0898499,52.3725434],[13.090031,52.3724399],[13.0894308,52.3725201],[13.0893361,52.3726043],[13.0903589,52.3712862],[13.0906722,52.371406],[13.0902427,52.3712489],[13.0905618,52.3713647]],"Eduard-von-Winterstein-Straße":[[13.1362615,52.3685134],[13.1361127,52.3686027],[13.1367256,52.3682366],[13.1365807,52.3683357],[13.1364305,52.368425],[13.1369149,52.3681284],[13.1352018,52.3680915],[13.1361347,52.3681745],[13.1364431,52.3679932],[13.1355032,52.3682827],[13.136287,52.368085],[13.1350478,52.3679939],[13.1347712,52.3678185],[13.1353558,52.3681892],[13.1359759,52.3682679],[13.1358375,52.3683492],[13.1349198,52.3679127],[13.1365958,52.3679034]],Ehrenpfortenbergstraße:[[12.9857263,52.4086069],[12.9837422,52.4088714],[12.9842358,52.4087968],[12.984739,52.4087247],[12.9855902,52.4084831],[12.9856713,52.4084117],[12.9845482,52.4090119],[12.9843572,52.4091384],[12.9859577,52.4088635],[12.9841439,52.4091625],[12.9855472,52.4089003],[12.9861072,52.4094115],[12.9852533,52.4090222],[12.9856389,52.4088973],[12.9847704,52.408981],[12.9851939,52.4052423],[12.9854151,52.4050406],[12.9882701,52.4080518],[12.9877698,52.4083404],[12.9864868,52.4083481],[12.9873938,52.4083041],[12.9876218,52.4084428],[12.9869252,52.4090416],[12.9867666,52.4083173],[12.9871353,52.4082341],[12.986719,52.4085237],[12.9873638,52.408145],[12.9861867,52.4086933],[12.9860425,52.4083269],[12.985612,52.4056278],[12.9858582,52.4080564],[12.9856637,52.407259],[12.9856,52.4058506],[12.9862005,52.4084988],[12.9856486,52.4063821],[12.9856266,52.4065451],[12.9856225,52.4066115],[12.9856231,52.4066846],[12.9856628,52.4069187],[12.9856331,52.4070001],[12.9858546,52.4060591],[12.9838208,52.4092691],[12.9861929,52.4098586],[12.9865354,52.409414],[12.98643,52.4091043],[12.9863818,52.4089698],[12.9864323,52.4087912],[12.9860651,52.4094591],[12.9879761,52.4082676],[12.9858495,52.4092284]],Eichbergstraße:[[13.0613408,52.4265797],[13.0608505,52.4262771],[13.0603841,52.4259957],[13.0599806,52.4256836],[13.0607155,52.4254038],[13.0611031,52.4256681],[13.0614799,52.425806],[13.0605177,52.4265128],[13.0620259,52.4263375]],Eichelkamp:Br,"Eichenallee zur B.E.S.T. Bau":[],Eichenallee:Kr,Eichenring:Xr,Eichenweg:Vr,Einsiedelei:Yr,Eisenhartstraße:[[13.0598115,52.4070144],[13.0600909,52.407372],[13.0602944,52.4075584],[13.0603304,52.4076035],[13.0606331,52.4080253],[13.0592911,52.4068613],[13.0595496,52.40719],[13.0592075,52.4066702],[13.0591274,52.4065662],[13.0610593,52.409038],[13.0601259,52.407834],[13.0605333,52.4084715],[13.0610328,52.4083951],[13.0602708,52.4081839],[13.0608311,52.408199],[13.060007,52.4076861],[13.0610804,52.4089261],[13.0610271,52.4086867],[13.0596971,52.4075246],[13.0612314,52.4089255],[13.061453,52.4091841],[13.0588127,52.4061048],[13.0586715,52.4062339],[13.0588392,52.4066428],[13.0599274,52.4070368],[13.0610057,52.4086607],[13.0613835,52.409103],[13.0606109,52.4078671],[13.06068,52.4079529],[13.0597537,52.4066065],[13.0602921,52.4074445]],"Eleonore-Prochaska-Straße":[[13.1298135,52.3632496],[13.1300595,52.3636854],[13.1305822,52.3641472],[13.1300573,52.3637926],[13.1303826,52.3627392],[13.1304435,52.3630847],[13.1302423,52.364463],[13.1303852,52.3640832],[13.1300946,52.3642827],[13.1299777,52.3642331]],Elisenweg:Zr,Elsternstraße:[[12.9812882,52.4146643],[12.9812779,52.4149173],[12.9812768,52.4149706],[12.9804516,52.4149127],[12.9804523,52.4149651],[12.9804529,52.4150175],[12.9805978,52.4141721],[12.9805892,52.4143795],[12.9805357,52.4145204],[12.9799252,52.4148754],[12.9802292,52.4143515],[12.9804173,52.4146779],[12.9799127,52.4142455],[12.9798667,52.414505],[12.9800025,52.4146661],[12.9801704,52.4148513]],Eltesterstraße:[[13.0702248,52.3973206],[13.0704713,52.3972923]],"Emil-Jannings-Straße":[[13.1155515,52.3880328],[13.1153306,52.3877131],[13.1152003,52.3874313],[13.1149906,52.3871422],[13.1148688,52.3868619],[13.1146458,52.3865431],[13.1145114,52.38626]],"Emmy-Noether-Straße":[[13.0598925,52.4314609],[13.0591326,52.4319376],[13.0595676,52.4317772],[13.0598461,52.431655],[13.0608412,52.4308905],[13.0605331,52.4310808],[13.0586191,52.4320177],[13.0579034,52.4322057],[13.058233,52.432082],[13.0587898,52.4320164],[13.0602878,52.4313471]],"Erich-Arendt-Straße":[[13.0517631,52.4233523],[13.0513026,52.4231078]],"Erich-Mendelsohn-Allee":[[13.0414453,52.4164637],[13.0407981,52.4164791],[13.0413882,52.4164135],[13.0427348,52.4178861],[13.0418773,52.4168861],[13.0411901,52.4166048],[13.0421066,52.41711],[13.0435539,52.4186552],[13.0435593,52.4184782],[13.0438541,52.4187579],[13.0434051,52.4183339],[13.0456398,52.4206995],[13.0455083,52.4205441],[13.0422851,52.4174551],[13.0423831,52.4175484],[13.0425909,52.4176039],[13.0426648,52.4176416],[13.0425804,52.4177382],[13.0428889,52.4178874],[13.0428643,52.4179592],[13.0430045,52.4179677],[13.0431058,52.4180653],[13.0430179,52.4181575],[13.0435539,52.4186552],[13.0452585,52.4202969],[13.0459072,52.4209824],[13.0463455,52.4214345],[13.0443461,52.4194325],[13.0440358,52.4191261],[13.0443992,52.4194909],[13.044192,52.4192794],[13.0410998,52.4166385],[13.0408911,52.4164443],[13.0419733,52.4169798],[13.0419253,52.4169329],[13.0416505,52.4166628],[13.0415992,52.416613],[13.0415479,52.4165633],[13.0414966,52.4165135],[13.0411808,52.4162125],[13.0412327,52.4162627],[13.0412845,52.416313],[13.0413364,52.4163632],[13.0422027,52.4172039],[13.0421547,52.4171569],[13.0444523,52.4195391],[13.0442961,52.4193858],[13.0441462,52.4192315],[13.043987,52.4190788],[13.0435593,52.4184782],[13.0434051,52.4183339],[13.0438541,52.4187579],[13.0443744,52.4184814],[13.0399372,52.4146132],[13.0401209,52.414788],[13.0395751,52.4142686],[13.0397568,52.4144414],[13.0393749,52.4137217],[13.039245,52.4134776],[13.0382421,52.4139813],[13.0388324,52.4141263],[13.0384212,52.4139269],[13.038557,52.4139087],[13.0400174,52.4152928],[13.0402085,52.4154449],[13.0388629,52.4143241],[13.0392326,52.414719],[13.0393858,52.4148594],[13.0387266,52.4140021]],"Erich-Pommer-Straße":[[13.1384772,52.3701743],[13.1374695,52.3693952],[13.1384681,52.3699992],[13.1383202,52.3699064],[13.138159,52.3698184],[13.1380085,52.369724],[13.137858,52.3696296],[13.1377234,52.3695545],[13.1378504,52.3696341],[13.1371187,52.3691711],[13.1368257,52.3691607],[13.1368167,52.3689816]],"Erich-Weinert-Straße":[[13.0954749,52.3644222],[13.0984187,52.3647474],[13.0999295,52.3657674],[13.0981661,52.3646342],[13.1006062,52.3663289],[13.1004507,52.3662327],[13.1002741,52.3661236],[13.1002524,52.3658727],[13.1004509,52.3657805],[13.1006065,52.3656888],[13.1009444,52.3656593],[13.1011429,52.3657445],[13.101395,52.3658395],[13.1016042,52.3659148],[13.1001996,52.3665117],[13.1000328,52.366399],[13.0999035,52.3663116],[13.0997443,52.366204],[13.1025418,52.3673897],[13.1027271,52.3674973],[13.1029851,52.3676501],[13.1031801,52.3677794],[13.103358,52.3678783],[13.1035736,52.3680081],[13.1037829,52.3681339],[13.1039355,52.3682281],[13.104159,52.3683569],[13.1043541,52.3684722],[13.1045178,52.3685711],[13.1024027,52.3670021],[13.1026159,52.3668681],[13.1019022,52.3670606],[13.1017779,52.3669912],[13.1016657,52.3669152],[13.1024104,52.3673105],[13.1044164,52.3689198],[13.1042275,52.3689532],[13.1040201,52.368984],[13.103789,52.3690204],[13.1035421,52.3690602],[13.1037918,52.3686019],[13.1035567,52.3686422],[13.1033174,52.3686799],[13.1031015,52.3687152],[13.1029118,52.3687454],[13.1032457,52.3682722],[13.1029834,52.3683119],[13.1027599,52.3683452],[13.1025134,52.3683795],[13.1023576,52.3684104],[13.1026258,52.3679489],[13.1024175,52.3679778],[13.1022135,52.3680132],[13.1020094,52.3680486],[13.1018054,52.368084],[13.1022121,52.3676869],[13.102048,52.3675919],[13.101884,52.3674968],[13.10172,52.3674018],[13.101556,52.3673067],[13.098032,52.3645819],[13.0976485,52.364423],[13.0975358,52.3643706]],Erlenhof:Hr,"Ernst-Lubitsch-Weg":[[13.1406585,52.3683434],[13.1409751,52.3685434],[13.1408168,52.3684434],[13.139863,52.3683377],[13.1401889,52.3685367],[13.140036,52.3684376]],"Ernst-Thälmann-Straße":[[13.1041795,52.4637028],[13.1021143,52.4631636],[13.10523,52.4632076],[13.1048147,52.4631733],[13.1047592,52.4631935],[13.1046841,52.4636286],[13.1052994,52.4636518],[13.1055076,52.4632073],[13.1036102,52.462946],[13.1039887,52.4631628],[13.1022355,52.4633681],[13.1039303,52.4637036]],"Erwin-Barth-Straße":[[13.0408785,52.4161662]],Eschenweg:Ur,Espengrund:jr,Esplanade:qr,Eulenkamp:$r,"Eva-Katharina-Weg":[[13.1268272,52.4829108],[13.1263328,52.4827594],[13.1266952,52.4844984],[13.1267359,52.4841641],[13.1266916,52.4827727],[13.1266028,52.4837944],[13.1264902,52.4839342],[13.1268424,52.483839],[13.1263357,52.4834502],[13.1271386,52.4843026],[13.1273317,52.4841605],[13.1269742,52.4836942]],"Eva-Laube-Weg":[[13.0740024,52.392474],[13.0737857,52.3925536],[13.074014,52.3921489],[13.0745298,52.3923635]],"Fahrländer Chaussee":[[12.9812884,52.4941093],[12.981047,52.4936546]],"Fahrländer Damm":[[13.0310647,52.4404136],[13.0330508,52.4395903],[13.0328774,52.4399309],[13.0338462,52.4399554],[13.0328677,52.4392236],[13.0323893,52.4397094],[13.0336009,52.4399916],[13.0325519,52.4395607],[13.0322267,52.4398614],[13.0322625,52.4405479],[13.0332669,52.4393344],[13.0316353,52.4404667],[13.0354343,52.4384926],[13.0308037,52.4408855]],"Fahrländer Straße":[[12.9666617,52.4584846],[12.966685,52.4583866],[12.9704151,52.4588253],[12.9696575,52.4587824],[12.9692071,52.4587436],[12.9692027,52.4590955],[12.967256,52.4598007],[12.9676347,52.4591719],[12.967245,52.4583391],[12.9662543,52.4580477],[12.967653,52.4590314],[12.9659661,52.4584093],[12.9676347,52.4593202],[12.9671261,52.4584963],[12.9663283,52.4580626],[12.9661911,52.4584027],[12.9670525,52.4590966],[12.9679293,52.4590537],[12.9657404,52.4588595],[12.9667766,52.4580782],[12.965602,52.4585442],[12.9673292,52.4581797],[12.9661673,52.4588486],[12.965741,52.4584116],[12.9704747,52.4591585],[12.9669376,52.4579493],[12.9665964,52.4579018],[12.9706996,52.4588542]],Falkenhorst:Jr,Falknerstraße:[[12.9687395,52.403685],[12.9689341,52.4039031],[12.9690526,52.4040521],[12.9693623,52.4043951],[12.9695125,52.4045516],[12.9688089,52.4043809],[12.9687648,52.4042948],[12.9686735,52.4040157],[12.9685858,52.4046725],[12.9686844,52.404784],[12.9684559,52.4036705],[12.969308,52.4042349],[12.9693583,52.4042948]],Fasanenring:Qr,Feldweg:eo,Feuerbachstraße:[[13.0423276,52.3971213],[13.0426108,52.3971518],[13.0417832,52.3972309],[13.0417117,52.3968859],[13.0414581,52.3966142],[13.0384071,52.3974216],[13.0380125,52.3975845],[13.0377122,52.3975089],[13.0375067,52.3976544],[13.0374768,52.3975396],[13.0371328,52.3976552],[13.0368936,52.3976076],[13.0367307,52.3976305],[13.0384768,52.3974899],[13.0389844,52.3975395],[13.0395614,52.3972922],[13.0398351,52.3972595],[13.0401039,52.3972274],[13.0366514,52.3969529],[13.0401039,52.3972274],[13.0367274,52.3974435],[13.0370471,52.3974032],[13.0367274,52.3974435],[13.0381844,52.397173],[13.0385464,52.3972456],[13.0383977,52.397263],[13.0398367,52.3969111],[13.0412086,52.3963825],[13.0408412,52.3968186],[13.041328,52.3967949],[13.0410348,52.3965283],[13.0405408,52.3966517],[13.0399411,52.3970832],[13.0407488,52.397161],[13.0405322,52.3971793],[13.0427383,52.3970904],[13.0415589,52.3972234],[13.0410357,52.3971352],[13.0410357,52.3971352],[13.0412244,52.3965895],[13.0418934,52.3977336],[13.0393795,52.3973496],[13.0423824,52.3974056],[13.0368052,52.3976408],[13.0389405,52.3973874],[13.0387907,52.3974016],[13.0400897,52.3970346],[13.0402956,52.3969903]],Fichtenallee:to,Fichtestraße:[[13.0294365,52.3913985],[13.0294008,52.3915467],[13.0293652,52.3916949],[13.0293295,52.391843],[13.0299643,52.3915838],[13.0299217,52.3917694],[13.0298799,52.3919513]],Filchnerstraße:[[13.1032054,52.3994283],[13.1029148,52.3996647],[13.1029701,52.4000373],[13.1028303,52.399492],[13.1038071,52.4008571],[13.1034853,52.4007047],[13.1030886,52.3991626],[13.1031793,52.3993729],[13.1038888,52.4009069],[13.1028303,52.399492],[13.103267,52.399552],[13.102977,52.3992462],[13.1027244,52.399249],[13.1026302,52.3990116],[13.1033573,52.3997415],[13.1025505,52.3987718],[13.103164,52.3996386],[13.1026975,52.3991915],[13.1034622,52.3999242],[13.1026091,52.3989506],[13.1029404,52.3987407],[13.1032602,52.3998257],[13.1030645,52.3999497],[13.1025322,52.3987115],[13.1030097,52.3989497],[13.1033697,52.4000133],[13.1028199,52.3988145],[13.1029447,52.3997219],[13.1024546,52.3977298],[13.1026675,52.3978882],[13.1025629,52.3979711],[13.1020784,52.3974884],[13.1023207,52.3974356],[13.1019859,52.3975682],[13.1024803,52.3974745],[13.1020539,52.3977421],[13.1022148,52.3977765],[13.1021672,52.3979932],[13.1021929,52.3980542],[13.1025652,52.3976506],[13.104472,52.4012611],[13.1031038,52.4002696],[13.1045361,52.4010848],[13.1036077,52.4001719],[13.1048386,52.4012611],[13.1042859,52.4007683],[13.1052103,52.4016584],[13.1032011,52.400189],[13.1047055,52.4015065],[13.1048713,52.4014831],[13.1035736,52.4001137],[13.1048452,52.4011539],[13.104472,52.4012611],[13.1050415,52.4016826],[13.1051461,52.4014265],[13.1046351,52.4010239],[13.1052186,52.4014645],[13.1041426,52.4010627],[13.1042339,52.4011186]],Finkenweg:io,Fintelmannstraße:[[13.0457805,52.4245086],[13.0459962,52.4252332],[13.0459372,52.425086],[13.045838,52.4249339],[13.0457494,52.4247736],[13.0453218,52.423991],[13.0454682,52.4236272],[13.0454072,52.4241405],[13.0455539,52.4237768],[13.045624,52.4239252],[13.0459881,52.4245451],[13.0452585,52.4238483],[13.0457135,52.4240772],[13.0460157,52.4246156],[13.0461602,52.4248631],[13.0462557,52.4250319],[13.0463256,52.4251946],[13.0467238,52.4261559],[13.0470391,52.4261064],[13.0468388,52.4257681],[13.0463447,52.4258035],[13.046232,52.4256361],[13.0469454,52.4259493],[13.0466478,52.425724],[13.0445861,52.4229785],[13.0452906,52.4233561],[13.0450168,52.423336],[13.0453382,52.423405],[13.0450752,52.4233934],[13.0453795,52.4234476],[13.0451288,52.423446],[13.0451818,52.423498],[13.0450034,52.423099],[13.0447547,52.4230857],[13.0450479,52.4231401],[13.044812,52.4231419],[13.0450984,52.4231867],[13.0448666,52.4231955],[13.0451489,52.4232334],[13.0449213,52.4232492],[13.0465161,52.4259318],[13.0465649,52.4254917]],Fliederweg:no,Florastraße:[[13.01482,52.4223806],[13.0145316,52.4228126],[13.0149406,52.4225278],[13.0141551,52.421603],[13.0151115,52.4226817],[13.0144766,52.4217025],[13.0145175,52.4220151],[13.0150757,52.4220017],[13.0144281,52.4224083],[13.012809,52.4205624],[13.0124409,52.4203746],[13.0130031,52.420129],[13.015439,52.4237259],[13.0153041,52.4233411],[13.0155673,52.4231092],[13.0154474,52.4235345],[13.0134493,52.4198781],[13.0135038,52.4213744],[13.0138991,52.4201231],[13.0156216,52.423357],[13.0129829,52.4209734],[13.0159315,52.4242575],[13.0133975,52.4207817],[13.0160225,52.4232765],[13.0137246,52.4209423],[13.0132557,52.4206049],[13.0163055,52.4246329],[13.0133592,52.4212168],[13.0156458,52.4239344],[13.0157843,52.4234826],[13.0140239,52.4214555],[13.0152581,52.4229817],[13.0160956,52.4238426],[13.0129228,52.4206886],[13.0149077,52.4231896],[13.0135571,52.420732],[13.0126706,52.420608],[13.0132253,52.4212601],[13.013555,52.4214284],[13.0133926,52.4214805],[13.0137816,52.42189],[13.0141335,52.4222219],[13.0137911,52.4220069],[13.0122972,52.4203238],[13.0125454,52.4202873],[13.0122446,52.420263],[13.0137159,52.4216877]],Flotowstraße:[[13.1357906,52.3813487],[13.1365744,52.3832023],[13.1367332,52.3827085],[13.1367725,52.3819489],[13.1362752,52.3828097],[13.1363439,52.3832916],[13.1363597,52.383442],[13.1363755,52.3835924],[13.1363913,52.3837429],[13.1362958,52.3822106],[13.1362953,52.3822686],[13.1362448,52.3823397],[13.136283,52.3828705],[13.1362887,52.3829244],[13.1362945,52.3829782],[13.1363003,52.3830321],[13.136306,52.383086],[13.1362881,52.3821097],[13.1362921,52.3821627],[13.1362185,52.3820349]],Fontanestraße:[[13.1116819,52.3962892],[13.1115086,52.394806],[13.1111526,52.3941371],[13.1110289,52.3944284],[13.1112206,52.3967427],[13.1111975,52.3954522],[13.1116713,52.3961285],[13.1116677,52.3959753],[13.1116748,52.3968264],[13.111165,52.3943615],[13.1116953,52.3942558],[13.1110794,52.395084],[13.1116819,52.3966322],[13.1116695,52.3964456],[13.1119976,52.3945502],[13.1116069,52.3941166],[13.1112028,52.3956571],[13.1115013,52.3951591],[13.1116461,52.3953294],[13.1116512,52.3955474],[13.1114943,52.3957566],[13.0321978,52.4444762],[13.0315591,52.4445503],[13.0318893,52.4444765],[13.0322139,52.4441563],[13.0320723,52.4438387],[13.0325453,52.4438937],[13.0326514,52.4441135],[13.0329445,52.4440268],[13.0331734,52.4443852],[13.032891,52.4443996],[13.0327956,52.4444555],[13.0323842,52.4444429],[13.0324808,52.4437436],[13.1116703,52.3948832],[13.0312575,52.4442789],[13.1112071,52.3965245],[13.1115424,52.3944736],[13.1115437,52.3945428],[13.0316243,52.4442083],[13.0315414,52.4442194],[13.0333781,52.4438258],[13.0334014,52.4438932]],Forstallee:so,Forststraße:[[13.0121445,52.3939414],[13.0116448,52.3922345],[13.0120253,52.3887324],[13.0117069,52.3893257],[13.0118496,52.3899193],[13.01207,52.3934039],[13.0118535,52.3931157],[13.0118817,52.3932284],[13.0116993,52.3924836],[13.0117352,52.392658],[13.0117711,52.3928323],[13.0116872,52.3923917],[13.0137426,52.3832193],[13.0143407,52.3831808],[13.0145693,52.3830411],[13.0143777,52.3835001],[13.014238,52.3836475],[13.0138209,52.3830766],[13.0144237,52.3833488],[13.0147372,52.3826813],[13.0149647,52.3806285],[13.0152588,52.3810806],[13.015986,52.3815841],[13.014344,52.3813112],[13.0157717,52.3816839],[13.0152952,52.3813164],[13.0151444,52.3815478],[13.0108601,52.3893924],[13.0108826,52.3889776],[13.0116259,52.3864594],[13.0119782,52.386773],[13.0115882,52.3878808],[13.0113021,52.388426],[13.010496,52.3891336],[13.0108366,52.3897682],[13.0133723,52.3851482],[13.0129087,52.3859352],[13.0122863,52.3853234],[13.012502,52.3862939],[13.0120295,52.3872104],[13.0114706,52.3881713],[13.0118979,52.3874695],[13.0124138,52.3864673],[13.0132866,52.3853062],[13.011396,52.3873619],[13.0111701,52.3886953],[13.0123821,52.3855815],[13.0131562,52.38553],[13.0117217,52.3876583],[13.0112838,52.3878423],[13.0110095,52.3890191],[13.0113737,52.3875366],[13.0126328,52.3861075],[13.0148318,52.3820623],[13.0121521,52.3862509],[13.0122044,52.3869888],[13.0100063,52.3894217],[13.0101298,52.3892287],[13.0101043,52.3886809],[13.010499,52.3885061],[13.0106455,52.3881674],[13.0105769,52.3912741],[13.0105782,52.3913635],[13.0107258,52.3912276],[13.010722,52.3911382],[13.0107074,52.3908148],[13.0107108,52.3909093],[13.0105473,52.3907308],[13.0105618,52.3906552],[13.010596,52.3904953],[13.0106118,52.3904228],[13.0106504,52.3902626],[13.0106642,52.3901931],[13.0135648,52.3860557],[13.0135314,52.3861129],[13.013498,52.38617],[13.013428,52.3863016],[13.0133941,52.3863603],[13.0133603,52.3864191],[13.0133265,52.3864778],[13.0132926,52.3865366],[13.0132588,52.3865953],[13.013225,52.3866541],[13.0131911,52.3867128],[13.0131573,52.3867716],[13.01327,52.386878],[13.0132368,52.3869364],[13.0132035,52.3869948],[13.0131703,52.3870532],[13.0131371,52.3871116],[13.0131038,52.3871699],[13.0130706,52.3872283],[13.0130374,52.3872867],[13.0137985,52.3856557],[13.0130041,52.3873451],[13.0127382,52.3875035],[13.0127054,52.3875611],[13.0126725,52.3876186],[13.0126397,52.3876762],[13.0126068,52.3877337],[13.0125739,52.3877912],[13.0125411,52.3878488],[13.0125082,52.3879063],[13.0124754,52.3879639],[13.0137651,52.3857129],[13.0124425,52.3880214],[13.0137317,52.38577],[13.0136983,52.3858272],[13.013665,52.3858843],[13.0136316,52.3859414],[13.0135982,52.3859986],[13.0107068,52.3899677],[13.010689,52.3900386],[13.0148993,52.3818991],[13.0143314,52.3815394],[13.0153776,52.3810137],[13.0154083,52.380948],[13.0160041,52.3811921],[13.0139223,52.3828343],[13.0137898,52.3837242],[13.0125143,52.3905189],[13.0130891,52.3905826],[13.0136695,52.390643],[13.0136128,52.3834369],[13.0103653,52.3896783],[13.0121256,52.3865605],[13.0127002,52.3846408],[13.0124189,52.3902638],[13.0124535,52.3901415],[13.0129816,52.3903187],[13.0130234,52.3901855],[13.0135614,52.3903873],[13.01359,52.3902339],[13.0146307,52.3807882],[13.0146032,52.3808456],[13.0137044,52.3848025],[13.0132282,52.384448],[13.0131914,52.3845161],[13.0137491,52.3845609],[13.0137188,52.3846246],[13.012172,52.3856655],[13.012134,52.3857361],[13.0117487,52.386618],[13.0117157,52.3866751],[13.0115286,52.3867851],[13.0114968,52.3868418]],"Franz-Mehring-Straße":[[13.1115828,52.3909773],[13.111219,52.3900619],[13.1103255,52.3872916],[13.1100808,52.3879432],[13.1098572,52.3878204],[13.1099142,52.3876404],[13.109683,52.3875038],[13.1097256,52.3872979],[13.1101625,52.3895708],[13.109857,52.3890324],[13.1095667,52.3885009],[13.110256,52.3875043],[13.110406,52.3888174],[13.1103219,52.3886635],[13.1102378,52.3885096],[13.1101537,52.3883556],[13.1100697,52.3882017],[13.1119896,52.3904814],[13.1119166,52.3903492],[13.1121252,52.3910224],[13.1120477,52.3908858],[13.1119702,52.3907491],[13.1120625,52.3906135],[13.1100747,52.389417],[13.1099868,52.3892631],[13.1097755,52.388877],[13.109694,52.3887216],[13.1094814,52.3883463],[13.1093961,52.3881917],[13.1113319,52.3905297],[13.1115911,52.3907229],[13.1117189,52.390951],[13.1114486,52.3905081],[13.1110709,52.39009],[13.1103131,52.3878914],[13.111303,52.3903839],[13.1113536,52.3902754],[13.1107213,52.3891193],[13.1108044,52.3892694],[13.1108929,52.3894295],[13.1109665,52.3895624],[13.1110549,52.3897223]],"Französische Straße":[[13.0619839,52.3988059],[13.0629371,52.3989111],[13.0624378,52.3989845],[13.0629395,52.3990667],[13.0624407,52.3991459],[13.0629419,52.3992171],[13.0624449,52.3992767],[13.0628154,52.3993798],[13.062449,52.3994075],[13.0624531,52.3995339],[13.0628205,52.399547],[13.0628258,52.3997193],[13.0624631,52.3997636],[13.0628421,52.3998893],[13.0624677,52.3998923],[13.0624725,52.4000288],[13.0628456,52.4000536],[13.0628489,52.4002142],[13.0628064,52.3984795]],Freiheitstraße:[[13.1086262,52.4732301],[13.1053532,52.4738568],[13.1099686,52.4736856],[13.1091673,52.4734034],[13.1105849,52.4738853],[13.106314,52.4736131],[13.1081335,52.4735774],[13.1072645,52.4735469],[13.1089779,52.4738358],[13.1063731,52.4738502],[13.1049049,52.4738806],[13.1087411,52.4738233],[13.1055256,52.4735974],[13.1095393,52.4736675],[13.1056176,52.4737875],[13.105977,52.4738636],[13.1100703,52.4736689],[13.1086755,52.4736673],[13.1092017,52.4736014],[13.1078567,52.4735492],[13.1058507,52.4735486],[13.1060529,52.4733374],[13.1069033,52.4736161],[13.1085878,52.4735634],[13.1077002,52.4736319],[13.1050291,52.4738574],[13.1098457,52.4738278],[13.1066462,52.4738614],[13.1085054,52.4738174],[13.1084358,52.4738366],[13.1067585,52.4735974],[13.1066405,52.4736123]],Freiligrathstraße:[[13.1134263,52.3952269],[13.1130543,52.3943299],[13.1130325,52.3945893],[13.1126151,52.3945252],[13.1126526,52.3943147],[13.1130731,52.3948121],[13.11305,52.3950301],[13.1130571,52.3952086],[13.1130576,52.3954418],[13.1126426,52.3953688],[13.1126501,52.3952025],[13.1126211,52.3947806],[13.1126369,52.3949962]],Freundlichweg:ro,Friedhofsgasse:oo,"Friedrich-Ebert-Straße":[[13.0578582,52.3996683],[13.0582363,52.3968975],[13.0582826,52.396752],[13.0583292,52.3966078],[13.0583621,52.3964997],[13.0583968,52.3963929],[13.0575829,52.3984226],[13.0577044,52.3988101],[13.0578654,52.4001205],[13.0578758,52.400252],[13.0580508,52.4003632],[13.0581394,52.4006468],[13.0580691,52.4006113],[13.0581517,52.4017152],[13.0579629,52.4015745],[13.0579542,52.4014628],[13.0579166,52.4009827],[13.0581461,52.4018468],[13.0579872,52.4019412],[13.0580058,52.4022743],[13.058012,52.4023864],[13.0580178,52.4024913],[13.0582186,52.4027677],[13.0582296,52.4030244],[13.0583358,52.4032682],[13.0574547,52.401299],[13.0574497,52.4011853],[13.0574434,52.4010568],[13.0573605,52.4009009],[13.0574673,52.4015321],[13.0576803,52.4021441],[13.0576739,52.4020243],[13.0577034,52.4025982],[13.0576913,52.4023508],[13.0576675,52.4019054],[13.0574241,52.4017527],[13.0573538,52.40066],[13.0575749,52.4005761],[13.0575679,52.4004628],[13.0575598,52.4003265],[13.0575527,52.4002113],[13.0576809,52.3981256],[13.0578595,52.4000053],[13.0578509,52.3998907],[13.0574865,52.4031759],[13.057546,52.4028185],[13.0575518,52.4029338],[13.0580058,52.4022743],[13.0581588,52.4020469],[13.0580463,52.4030272],[13.0583358,52.4032682],[13.0582788,52.4036927],[13.0577781,52.4041727],[13.0572254,52.4041054],[13.0593782,52.4043815],[13.0581258,52.4042602],[13.0574327,52.4047671],[13.0581906,52.4047947],[13.0586464,52.4045172],[13.0583205,52.4050961],[13.0587153,52.4056345],[13.0579599,52.405975],[13.0581599,52.406224],[13.0580143,52.4064385],[13.057839,52.4065258],[13.0561417,52.4061333],[13.0573223,52.4063955],[13.0569745,52.4061067],[13.0568306,52.4062884],[13.0582553,52.407141],[13.058028,52.4073248],[13.0581508,52.4074843],[13.0577964,52.397781],[13.0587053,52.4074594],[13.0583858,52.4062472],[13.0583154,52.4076512],[13.0582077,52.4086626],[13.0585796,52.407346],[13.0585274,52.4070144],[13.0588157,52.408295],[13.0584531,52.4067108],[13.0588609,52.4085352],[13.0590998,52.408827],[13.058426,52.4065351],[13.0586876,52.4079017],[13.0585538,52.4071853],[13.0584772,52.4068877],[13.0583505,52.4059653],[13.058533,52.406117],[13.0580529,52.4085648],[13.0579757,52.4083302],[13.0582343,52.3960502],[13.0581256,52.4030885],[13.0575507,52.4001796],[13.0581822,52.4046284],[13.0582281,52.3969211],[13.0584474,52.3961848],[13.0575672,52.4018067],[13.0575857,52.4012677],[13.0575617,52.4003585],[13.0579237,52.397518],[13.0576336,52.3991217],[13.0576413,52.4019886],[13.0579825,52.4018833],[13.0574011,52.4020583],[13.0583062,52.3966399],[13.0579017,52.3980255],[13.0596293,52.3958018],[13.0576526,52.3990475],[13.0576197,52.3991759],[13.0576084,52.3992198],[13.0579388,52.4004596],[13.0584966,52.3993534],[13.0575219,52.4002675],[13.058292,52.3967223],[13.0580885,52.4029848],[13.0582438,52.396874],[13.0583655,52.3992901],[13.0583312,52.4032159],[13.0588734,52.4052378],[13.0591472,52.4051832],[13.0592828,52.4050895],[13.0594171,52.4048288],[13.0596129,52.4049303],[13.059792,52.4050208],[13.0598995,52.4050755],[13.0595745,52.4052628],[13.0581699,52.4044928],[13.0585782,52.4072613],[13.0594174,52.4054318],[13.0580126,52.3994411],[13.0580441,52.3993323],[13.0583453,52.4033655],[13.0577397,52.3986663],[13.0583927,52.4054175],[13.0583397,52.4053683],[13.0583454,52.3965546],[13.058419,52.396323],[13.0567761,52.402516],[13.0571167,52.4023381],[13.0573171,52.4023606],[13.0569693,52.4022401],[13.0576374,52.4016319],[13.0576345,52.4015825],[13.0576291,52.4014952],[13.0576201,52.4013289],[13.0580748,52.4028447],[13.0580721,52.4027666],[13.0580639,52.4025302],[13.0575734,52.4005514],[13.0575698,52.4004936],[13.0575468,52.4001164],[13.0575415,52.4000321],[13.0574877,52.3999317],[13.0578113,52.3983771],[13.0578488,52.3982314],[13.0578786,52.3981153],[13.0578609,52.4000325],[13.0579065,52.4000948],[13.0578709,52.4001865],[13.0579358,52.4003927],[13.0578955,52.4005155],[13.0579018,52.4006016],[13.0576176,52.3986672],[13.0575908,52.3987564],[13.057691,52.3988981],[13.0575773,52.3992925],[13.0579087,52.4007104],[13.0583318,52.3993365],[13.0585457,52.4044924],[13.0575385,52.3999837],[13.0576451,52.4023236],[13.0585343,52.4068263],[13.0580009,52.4021871],[13.0579986,52.4021463],[13.0579942,52.4020666],[13.0580009,52.3976385],[13.0583891,52.3963644],[13.058188,52.3992999],[13.057614,52.4018663],[13.0583654,52.4053079],[13.0588563,52.405537],[13.0583198,52.4054225],[13.0571598,52.4022646],[13.0584158,52.4062806],[13.0581345,52.4072338],[13.058582,52.4073337],[13.058401,52.4044922],[13.0584906,52.4045973],[13.0584834,52.4045208],[13.0577836,52.398247],[13.0579748,52.3977399],[13.0583944,52.4061857],[13.0576279,52.405263],[13.0575199,52.4018685],[13.0580319,52.4019701],[13.0584646,52.4066089],[13.0581581,52.4067413],[13.0587671,52.4080658]],"Friedrich-Engels-Straße":[[13.0661962,52.3901222],[13.0777345,52.3892892],[13.0777098,52.389062],[13.0778811,52.3895127],[13.0784947,52.3895103],[13.0791233,52.3897992],[13.0814613,52.3891949],[13.07925,52.3890069],[13.0661577,52.3911239],[13.0684481,52.3908117],[13.0813164,52.3904286],[13.0850039,52.3904663],[13.0851982,52.390474],[13.0854938,52.3904734],[13.0859573,52.3902363],[13.0769264,52.3906966],[13.0667708,52.3913845],[13.0668009,52.3919116],[13.0663345,52.3913343],[13.0768781,52.3895351],[13.0765773,52.3895365],[13.0868835,52.3902991],[13.0861979,52.3904635],[13.0873303,52.3901931],[13.0871192,52.3902425],[13.0863126,52.3902694],[13.0866444,52.3900565],[13.0872822,52.3900338],[13.0875854,52.3898355],[13.0878775,52.3898944],[13.0893179,52.3896437],[13.0730953,52.3909618],[13.0895123,52.3897756],[13.0882403,52.3896366],[13.0869413,52.3899662],[13.0850527,52.3902844],[13.0873907,52.3905932],[13.0767593,52.3893955],[13.0784065,52.390221],[13.0880702,52.3898495],[13.0876498,52.3899478],[13.0673096,52.3911384],[13.0784947,52.3895103],[13.0763629,52.3894107],[13.0651107,52.3910715],[13.0725528,52.3892587],[13.0731565,52.3892315],[13.0744423,52.3890848],[13.0754519,52.3890015],[13.0757637,52.3891548],[13.0760328,52.3892354],[13.0825808,52.3902967],[13.0721405,52.3893685],[13.0718835,52.3894065],[13.0716384,52.3894427],[13.071121,52.3895229],[13.0707896,52.3895719],[13.0702672,52.389651],[13.0700079,52.3896903],[13.0697618,52.3897276],[13.0765756,52.3895783],[13.0866426,52.3904158],[13.0772425,52.3890085],[13.089159,52.3896517],[13.0872213,52.3904413],[13.087427,52.3897266],[13.0858421,52.3899965],[13.085689,52.3903955],[13.0850788,52.3901989],[13.077136,52.3891269],[13.0769108,52.3893776],[13.0762366,52.3893573],[13.0767306,52.3894383],[13.0822099,52.3899499],[13.0695263,52.3902549],[13.0881175,52.3900321],[13.0878797,52.3900854],[13.0877139,52.3901226],[13.0875496,52.3901594],[13.0654025,52.391061],[13.078557,52.3894652],[13.0781362,52.3894555],[13.0649194,52.3913289],[13.065386,52.3903067],[13.0769808,52.3892997],[13.0778542,52.3890192],[13.0785354,52.3893884],[13.0786097,52.3894219],[13.0787143,52.3901577],[13.0869507,52.3896068],[13.066975,52.391218],[13.0871852,52.3905043],[13.0871469,52.3904428]],"Friedrich-Klausing-Straße":[[13.055631,52.424686],[13.0570714,52.4246899],[13.0573606,52.424692],[13.0576153,52.4249051],[13.0576153,52.4249901],[13.057605,52.4250877],[13.0562608,52.4246731],[13.0566085,52.4246784],[13.0568477,52.4246815]],"Friedrich-Kunert-Weg":[[13.0457494,52.4254818],[13.0461276,52.4254033],[13.0464393,52.4253383],[13.0450283,52.4256411],[13.0468054,52.4252675]],"Friedrich-List-Straße":[[13.0847066,52.3920928],[13.0853187,52.3921969],[13.0761072,52.3919089],[13.0828056,52.3916181],[13.0750677,52.3918919],[13.0744835,52.3919648],[13.0851682,52.3923225],[13.085077,52.3924911]],"Friedrich-W.-Murnau-Straße":[[13.1436785,52.3690746],[13.1426071,52.369703],[13.1431948,52.3693577],[13.1422842,52.3694959],[13.1417998,52.3691853],[13.1435173,52.3691689],[13.1424457,52.3695995],[13.1430336,52.3694521],[13.1421227,52.3693924],[13.1416392,52.3690815],[13.1427686,52.3698066],[13.1433561,52.3692633]],"Friedrich-Wilhelm-Boelcke-Straße":[[13.0585108,52.3875851],[13.0583016,52.387849],[13.0585096,52.3880188],[13.0587156,52.3881871]],"Friedrich-Wolf-Straße":[[13.094141,52.366129],[13.09467,52.3668375],[13.0965886,52.3672529],[13.0959687,52.3674145],[13.0969005,52.3672321],[13.0975574,52.3679574],[13.0977505,52.3678416],[13.0979435,52.3677258],[13.0981365,52.36761],[13.0971358,52.3676473],[13.0973339,52.3675268],[13.097532,52.3674064],[13.0977301,52.3672859]],Friesenstraße:[[13.0903879,52.3892324],[13.0900255,52.3894475],[13.0903345,52.3890677],[13.0904278,52.3893612],[13.0900898,52.388948],[13.0908929,52.3878787],[13.0901403,52.3883121],[13.0902395,52.3894235],[13.089501,52.3891676],[13.0892736,52.3893594],[13.089501,52.3891676],[13.0893545,52.3890535],[13.0893407,52.3889425],[13.089749,52.3891706],[13.0908662,52.3882378],[13.090604,52.3893392],[13.0911179,52.3877649],[13.0914256,52.3879583],[13.0913832,52.3879662],[13.0913468,52.387973],[13.091294,52.3879828],[13.0912556,52.38799],[13.0912156,52.3879975],[13.0911725,52.3880055]],"Fritz-Encke-Straße":[[13.043728,52.4229401],[13.0443687,52.4225913],[13.0442125,52.4227391],[13.0448213,52.4225084],[13.046608,52.4215991],[13.0458881,52.4220922],[13.046339,52.4218626],[13.0466824,52.421771],[13.0456767,52.4225339],[13.0426025,52.4233745],[13.0429494,52.4232492],[13.0464439,52.4222526],[13.0423736,52.4234652]],"Fritz-Lang-Straße":[[13.142325,52.3686207],[13.1417103,52.3689844],[13.1419911,52.3688165],[13.1418254,52.3689164],[13.1421581,52.3687186],[13.1415952,52.3690524],[13.1426917,52.3684461],[13.1414227,52.3686255],[13.1415845,52.368531],[13.1417465,52.3684378],[13.1412609,52.3687201],[13.1423916,52.3680652],[13.1422273,52.3681616],[13.1432128,52.3675831],[13.1425558,52.3679688],[13.1427201,52.3678724],[13.1428843,52.367776],[13.1430486,52.3676796]],"Fritz-Rumpf-Straße":[[13.0794883,52.4122159],[13.0796707,52.4119739],[13.080279,52.4114903],[13.0805258,52.4115982],[13.0806408,52.4114734],[13.080758,52.4113547],[13.0806124,52.4117195],[13.0804342,52.4120964],[13.0799876,52.411689],[13.080141,52.4116331],[13.0795263,52.4117744],[13.0803504,52.4113854],[13.08076,52.4108474],[13.080671,52.4110035]],"Fritz-Zubeil-Straße":[[13.1030849,52.3834273],[13.1025884,52.3832645],[13.1044016,52.3865315],[13.1029072,52.3849471],[13.1029588,52.3850703],[13.103034,52.3852118],[13.1036669,52.3864791],[13.1038758,52.3869156],[13.1040311,52.385458],[13.1112799,52.3762331],[13.1020942,52.3836434],[13.1020216,52.3829674],[13.1024895,52.3842679],[13.1026029,52.3844556],[13.1025146,52.3839534],[13.1013943,52.3824139],[13.1028728,52.3835039],[13.1012848,52.3832865],[13.1022133,52.383713],[13.1020465,52.3830308],[13.1021908,52.3835334],[13.1011113,52.3823776],[13.1028237,52.3837655],[13.1132179,52.3768305],[13.1042501,52.3806043],[13.1039745,52.3846561],[13.1036046,52.3817199],[13.1035984,52.3812713],[13.1035357,52.3837326],[13.1031461,52.3853697],[13.1035453,52.3863189],[13.1036389,52.3861169],[13.1032957,52.3858357],[13.1033841,52.3856248],[13.1014922,52.3816746],[13.1134075,52.3750842],[13.1038803,52.3865751],[13.104263,52.3866264],[13.1038019,52.381495],[13.1039265,52.381482],[13.1038909,52.3854991],[13.1132193,52.3751964],[13.1128719,52.3754043],[13.1044487,52.3818638],[13.103861,52.3813525],[13.1048305,52.3815453],[13.1047753,52.3814267],[13.1046597,52.3811822],[13.103923,52.3814635],[13.1039829,52.3815836],[13.1040267,52.3816921],[13.1040589,52.3819001],[13.104231,52.3818865],[13.1046597,52.3818404],[13.104887,52.3816615],[13.1047149,52.3813155],[13.103847,52.3809602],[13.099862,52.3817335],[13.1031674,52.3855874],[13.1031101,52.3854767],[13.103275,52.3812177],[13.1117374,52.3776885],[13.108046,52.3782129],[13.1049069,52.384947],[13.1021433,52.3832931]],"Fritz-von-der-Lancken-Straße":[[13.0550222,52.4272304],[13.060522,52.4271507],[13.0618741,52.4272152],[13.0622017,52.4273824],[13.0612611,52.4272735],[13.0561841,52.4265535],[13.0572159,52.4257833],[13.0576097,52.4273135],[13.0554214,52.4273205],[13.0561945,52.4273052],[13.0574709,52.4270679],[13.0576097,52.4271144],[13.0550923,52.4270382]],"Fuldaer Straße":[[13.1227007,52.3769022],[13.1233801,52.3770526],[13.1204465,52.3760601],[13.1237614,52.3767328],[13.122189,52.3764373],[13.1229736,52.3769765],[13.1240284,52.3770539],[13.1235739,52.3767942],[13.1211934,52.3764591],[13.1207561,52.3760724],[13.1241123,52.3773076],[13.1235714,52.3771127],[13.1245546,52.3771753],[13.1224464,52.3768429],[13.1238666,52.3769453],[13.1217532,52.3766005],[13.1242784,52.3770297],[13.1205484,52.3760654],[13.1245441,52.3774502],[13.1235872,52.3766087],[13.1233157,52.3766698],[13.1238402,52.3772157],[13.1233566,52.3764103],[13.1215068,52.3765464],[13.1230081,52.3765518],[13.1219587,52.3766866],[13.1239816,52.3772336],[13.1206485,52.3757554],[13.1231349,52.3768445],[13.1221209,52.3770697],[13.1227101,52.3764583],[13.1234015,52.3765288],[13.1226337,52.376653],[13.1202952,52.3762852],[13.1237826,52.3769199],[13.1224702,52.3764939],[13.12233,52.3764499],[13.1228246,52.3763353],[13.1206402,52.3763319],[13.1205085,52.3762866],[13.1221234,52.3767463],[13.1242148,52.3768181],[13.1241391,52.3767944]],Fultonstraße:[[13.0952285,52.3899909],[13.0955273,52.3903903],[13.0954458,52.3902421],[13.0955891,52.3905504],[13.095576,52.3907746],[13.0950587,52.3894686],[13.0959394,52.3901797],[13.0960192,52.3903493],[13.0961071,52.3905187],[13.0954986,52.3889858],[13.0953704,52.3891193],[13.0949627,52.3889631],[13.0949977,52.3892854],[13.0949686,52.3892288],[13.0949394,52.3891721],[13.0958562,52.3900261],[13.0950428,52.3891181],[13.0952672,52.3895253]],Fährweg:[[12.9495534,52.4709189]],Försterweg:[[13.1240218,52.3877261],[13.1247256,52.3874709],[13.1235203,52.3883474],[13.1244973,52.3882711],[13.1248415,52.3879968],[13.1239809,52.3881367],[13.1226448,52.3880714],[13.1237746,52.3877158],[13.1231144,52.3880225]],Gagarinstraße:[[13.1247319,52.3791851],[13.1261899,52.3801664],[13.1250231,52.3789537],[13.1244359,52.3783101],[13.1248696,52.3787088],[13.1251063,52.3790864],[13.1245138,52.3781544],[13.1247917,52.3788644],[13.1242808,52.3780625],[13.1246676,52.3783992],[13.1246367,52.3786169],[13.1258346,52.3796226],[13.1259234,52.3797585],[13.1260122,52.3798945],[13.1261011,52.3800304]],Galileistraße:[[13.1339154,52.3763063],[13.1397047,52.3757726],[13.1407845,52.3759044],[13.1391042,52.3752048],[13.1405425,52.375221],[13.1395324,52.3752081],[13.1399606,52.3752113],[13.1393207,52.3753026],[13.1397526,52.3753061],[13.1386745,52.3752004],[13.1384987,52.3751989],[13.1376196,52.3752384],[13.1369876,52.3752349],[13.1363492,52.3753261],[13.1378284,52.3752404],[13.1371979,52.3752362],[13.136772,52.3753297],[13.1365587,52.3752312],[13.135825,52.3752214],[13.1360228,52.3752228],[13.1333412,52.3751922],[13.1297487,52.3751558],[13.1331118,52.3752868],[13.1299562,52.3752537],[13.1307258,52.3752605],[13.1338813,52.3752935],[13.1301856,52.3751592],[13.1329043,52.3751889],[13.1321486,52.3751766],[13.1289931,52.3751436],[13.1323716,52.3751783],[13.1307278,52.3751601],[13.1326984,52.3752836],[13.1338834,52.3751932],[13.1333392,52.3752885],[13.1301836,52.3752555],[13.129216,52.3751453],[13.1295429,52.3752505],[13.1405382,52.3753125],[13.1422287,52.3752797],[13.1424029,52.3752812],[13.1434968,52.3753879],[13.1430729,52.3753841],[13.1438309,52.3752939],[13.1432929,52.3752892],[13.1428327,52.3752851],[13.1399691,52.3759423]],Ganghoferstraße:[[13.0472574,52.4480754],[13.0470911,52.4481895],[13.0469467,52.4492852],[13.0468234,52.4496816],[13.0468348,52.449082],[13.0469313,52.4484641],[13.0465531,52.4483143],[13.0470911,52.4481895]],Garnstraße:[[13.0895742,52.3945103],[13.0897551,52.3944703],[13.0903485,52.3943433],[13.0899912,52.3941537],[13.0880933,52.3946776],[13.0887998,52.3945259],[13.0896901,52.3942189],[13.0885188,52.394588],[13.0903276,52.394026],[13.0914809,52.3938359],[13.0895611,52.3942841],[13.0911602,52.394015],[13.0918689,52.3937491],[13.0912893,52.3938788],[13.0917125,52.3937845],[13.0882199,52.3945522],[13.0877935,52.3946635],[13.0906076,52.3940335],[13.0890565,52.3946958],[13.0891922,52.3948849],[13.0892625,52.3949218],[13.0887404,52.3947681],[13.0895893,52.3945982],[13.0893736,52.3945445],[13.0919,52.3939358],[13.0915321,52.3941389],[13.091632,52.3941153],[13.0910024,52.3941472],[13.0917998,52.3940582],[13.0912393,52.3940914],[13.0920422,52.3939023],[13.0900837,52.3943978],[13.0911048,52.3940338],[13.0894708,52.3943863],[13.0904515,52.3941756],[13.0897168,52.3944787],[13.0920325,52.3939304],[13.0881852,52.3946572],[13.089946,52.3944281],[13.0920054,52.3938237],[13.0901388,52.3942438],[13.0902908,52.3942104],[13.0902729,52.3941667],[13.0892896,52.3945622],[13.0906185,52.3941393],[13.0914781,52.3939431],[13.0912942,52.3939847],[13.0917215,52.3938879],[13.0899343,52.3942884],[13.0890972,52.3946017],[13.091591,52.3939175],[13.0885008,52.3947479],[13.0886525,52.3947183],[13.0885758,52.394709]],Gartenstraße:[[13.0129006,52.4739886],[13.0124523,52.4743355],[13.0129084,52.4743316],[13.0154327,52.4736021],[13.0124599,52.4746657],[13.0124435,52.4739926],[13.1065913,52.3837276],[13.1051602,52.3837308],[13.1046348,52.3840129],[13.1071928,52.3834401],[13.1079677,52.3833282],[13.1075006,52.3833488],[13.1046807,52.3847874],[13.1071936,52.3842779],[13.1031694,52.3844267],[13.1047631,52.3838579],[13.1051602,52.3837308],[13.1040394,52.3841278],[13.1041183,52.3840642],[13.1043386,52.3839937],[13.1086926,52.3832043],[13.1094271,52.3833086],[13.1092299,52.3832034],[13.1080929,52.3825545],[13.1037548,52.3842317],[13.1090806,52.3829744],[13.1062423,52.3839626],[13.1061486,52.3835192],[13.1108374,52.3828375],[13.1102943,52.3821771],[13.1096742,52.3823647],[13.1091514,52.3824871],[13.1056204,52.3836773],[13.1063459,52.3834448],[13.0163005,52.4735005],[13.0120938,52.4739835],[13.0118327,52.4739855],[13.011812,52.47413],[13.0118168,52.47442],[13.0118231,52.4745916],[13.0160569,52.4735655],[13.0152082,52.473806],[13.0149582,52.4738739],[13.0147162,52.4739457],[13.0137051,52.473969],[13.0134902,52.4739661],[13.1058952,52.3835912],[13.1077195,52.38298],[13.1105176,52.3820494],[13.1103879,52.3818995],[13.1100518,52.382254],[13.107893,52.3829253],[13.1090207,52.3823371],[13.10945,52.3824359],[13.1076516,52.3830014],[13.1079701,52.382901],[13.1059855,52.3838302],[13.1055765,52.3839646],[13.1051675,52.3840989],[13.1047586,52.3842333]],Gaußstraße:[[13.1435087,52.3736853],[13.1433147,52.3736853],[13.1431219,52.3736853],[13.1429246,52.3736853],[13.1427295,52.3736853],[13.1436673,52.3733406],[13.1434895,52.3733389],[13.1433083,52.3733371],[13.1431325,52.3733354],[13.1429565,52.3733337],[13.1427803,52.373332],[13.1438445,52.3733423],[13.1439972,52.3733438],[13.1436934,52.3738908],[13.1436921,52.3740422],[13.1436908,52.3741937],[13.1436894,52.3743452],[13.1436881,52.3744966],[13.1436559,52.3745801],[13.1434091,52.3745777],[13.1431624,52.3745752],[13.1429156,52.3745728],[13.1426688,52.3745703],[13.1422657,52.3752218],[13.142266,52.3750737],[13.1422663,52.3749256],[13.1422666,52.3747775],[13.1422669,52.3746294],[13.1422672,52.3744813],[13.1422675,52.3743332],[13.1422678,52.3741851],[13.1422681,52.374037],[13.1422684,52.3738889],[13.1440075,52.3749869],[13.1439982,52.3752231],[13.1440121,52.3748709],[13.1440027,52.3751071],[13.1443038,52.3735391],[13.1443017,52.3736321],[13.1442994,52.3737373]],Geiselbergstraße:[[12.9612345,52.4077405],[12.962206,52.4075706],[12.9605786,52.4047766],[12.9662228,52.4039143],[12.9667109,52.4038649],[12.9635948,52.4095141],[12.9639209,52.4100905],[12.9626707,52.4088805],[12.9630303,52.4094398],[12.9629579,52.4086667],[12.9631468,52.4090013],[12.9642391,52.4102698],[12.964504,52.4103194],[12.9647812,52.4103507],[12.9627143,52.4083096],[12.9642977,52.4105643],[12.9603239,52.4058632],[12.9605597,52.4068251],[12.9607598,52.4068928],[12.9608629,52.4070689],[12.9656817,52.4039294],[12.9660857,52.4041428],[12.9667431,52.4042094],[12.9648202,52.4039356],[12.9643286,52.4040118],[12.964538,52.4039829],[12.9641,52.40399],[12.9639081,52.4040734],[12.9646569,52.4043045],[12.9645726,52.4046109],[12.9643083,52.4043506],[12.9642321,52.4043805],[12.9637958,52.404434],[12.9639736,52.404713],[12.9634283,52.4046021],[12.9631561,52.4044811],[12.9629666,52.4048819],[12.9632081,52.4048033],[12.9627462,52.4049937],[12.9626335,52.4047123],[12.9624618,52.4050238],[12.9622001,52.4050845],[12.9623006,52.4048012],[12.9617106,52.4048594],[12.9615048,52.4048891],[12.9610489,52.4049715],[12.962576,52.4043629],[12.9617395,52.4045356],[12.9616466,52.404262],[12.9613401,52.4045255],[12.9609642,52.4046849],[12.9604077,52.4046378],[12.9602711,52.4050142],[12.9596802,52.4049305],[12.9599762,52.4052253],[12.9596846,52.4056935],[12.9599112,52.4059101],[12.9597123,52.4060716],[12.9598673,52.4065241],[12.9601176,52.406902],[12.9603887,52.4071599],[12.9606902,52.4072952],[12.9623466,52.4083513],[12.9621694,52.4081098],[12.9616642,52.4081605],[12.9617747,52.4078892],[12.960921,52.4078853],[12.961067,52.4074946],[12.9636028,52.4099791],[12.9648034,52.4107638],[12.9648361,52.4111004],[12.9650853,52.4109761],[12.9652298,52.4114189],[12.9653422,52.4117678],[12.9654594,52.4119566],[12.963493,52.4040381],[12.9652298,52.4114189],[12.961378,52.404914],[12.961848,52.4079284],[12.9632293,52.4096703],[12.9644871,52.4101839],[12.9613661,52.4076331],[12.9636128,52.4094436],[12.9605006,52.4063369],[12.960518,52.4064241],[12.9604774,52.4062209],[12.9621466,52.4044542],[12.9620552,52.4044731]],Gellertstraße:[[13.0383672,52.4584219],[13.0386815,52.4578097],[13.0390618,52.4572281],[13.039414,52.4570332],[13.0385073,52.4579727],[13.0387561,52.4575628],[13.0395344,52.4569352],[[13.0399268,52.457733],[13.0400397,52.4577849],[13.0401356,52.4577074],[13.0400227,52.4576555],[13.0399268,52.457733]],[13.039404,52.4574194]],"Georg-Hermann-Allee":[[13.0473754,52.4185063],[13.0490498,52.4134346],[13.0493446,52.4140239],[13.049114,52.4135636],[13.0492233,52.4137734],[13.0489855,52.4133055],[13.049284,52.4138986],[13.0493631,52.4125339],[13.048604,52.4125545],[13.0486689,52.4126921],[13.0487337,52.4128296],[13.0487986,52.4129672],[13.0505938,52.4155219],[13.0506461,52.4152772],[13.0506811,52.4187822],[13.0513132,52.418946],[13.0518163,52.419012],[13.0524226,52.4190807],[13.0480935,52.4202548],[13.050812,52.4213768],[13.0508296,52.4219805],[13.050882,52.4230884],[13.0508921,52.4235083],[13.0485157,52.411895],[13.0486416,52.4121563],[13.0488169,52.4125471],[13.0486326,52.412223],[13.0485739,52.4120157],[13.049002,52.4130569],[13.0491998,52.413457],[13.048611,52.4120928],[13.048531,52.4119268],[13.0486584,52.4263891],[13.0506095,52.4159911],[13.0500296,52.4161056],[13.0500365,52.4163308],[13.0500387,52.4165369],[13.0494711,52.4140753],[13.0507111,52.4161707],[13.0507491,52.4162503],[13.0499399,52.4153407],[13.0498128,52.414756],[13.0499585,52.4155214],[13.0498845,52.4149323],[13.0499713,52.4157008],[13.0533901,52.4251354],[13.0504217,52.414582],[13.050368,52.4145874],[13.0494346,52.4139349],[13.050437,52.4147215],[13.0504897,52.4148461],[13.0509388,52.4244044],[13.0509967,52.4244841],[13.0511034,52.4245547],[13.0512401,52.4245979],[13.050918,52.4241728],[13.0509152,52.4240887],[13.0509122,52.4240005],[13.0518685,52.4246322],[13.051747,52.4246272],[13.0516077,52.4246215],[13.0522491,52.4246479],[13.0505026,52.4145737],[13.05046,52.4145781],[13.0504682,52.4146044],[13.0505679,52.4148385],[13.0505229,52.4148423],[13.0531947,52.4249969],[13.0505348,52.4148717],[13.0498856,52.415277]],Gerlachstraße:[[13.130189,52.3681141],[13.1285832,52.3673258],[13.127692,52.367682],[13.1287877,52.36717],[13.1284705,52.3673405],[13.1286843,52.3678101],[13.1336359,52.3695763],[13.1342386,52.3692197],[13.1346251,52.3690431],[13.1348576,52.3691727],[13.1354854,52.3695667],[13.1308492,52.3679312],[13.1296424,52.3688261],[13.1289959,52.3675469],[13.129024,52.3673873],[13.128911,52.367426],[13.1347539,52.3692878],[13.1349536,52.3694614],[13.1347056,52.3693048],[13.133513,52.3696482],[13.1339911,52.3691953],[13.1337972,52.3693086],[13.1335772,52.3694371],[13.133373,52.3695564],[13.1381826,52.3715029],[13.1281151,52.3682723],[13.1308171,52.3673218]],Gersthofweg:ao,"Gertrud-Droste-Platz":[[13.1072397,52.3991221]],"Gertrud-Feiertag-Straße":[[13.0522972,52.4149699],[13.0530652,52.4153084],[13.0528528,52.4148604],[13.0533714,52.4154011],[13.0537263,52.4158222]],"Geschwister-Scholl-Straße":[[13.0286173,52.3929973],[13.0289113,52.3930195],[13.0280905,52.3934323],[13.0290474,52.3931257],[13.026738,52.3934913],[13.0240026,52.3934782],[13.038706,52.3947089],[13.038502,52.3946424],[13.0383241,52.3945844],[13.0380258,52.3944872],[13.0386578,52.395061],[13.0378792,52.3944394],[13.0376365,52.3943603],[13.0377285,52.3942865],[13.0372078,52.3942206],[13.0367743,52.3940695],[13.0365291,52.3939925],[13.037031,52.394458],[13.038056,52.3948662],[13.038502,52.3949625],[13.0373535,52.3945775],[13.028795,52.3932218],[13.029305,52.393318],[13.029419,52.392744],[13.0305612,52.3929754],[13.0307613,52.3933906],[13.0309308,52.3937183],[13.0317666,52.3936396],[13.0313107,52.3937373],[13.0327527,52.3932266],[13.0257095,52.3933651],[13.0250383,52.3934823],[13.0248975,52.3934909],[13.0244272,52.3934855],[13.022697,52.39292],[13.0181324,52.3939341],[13.0296948,52.3939798],[13.0296889,52.3938485],[13.0297065,52.3942424],[13.0297006,52.3941111],[13.0299396,52.3937368],[13.0303668,52.3937281],[13.0319642,52.3936417],[13.0301532,52.3937324],[13.029726,52.3937411],[13.0310515,52.393737],[13.0330211,52.3931748],[13.0296108,52.3932587],[13.0266257,52.3940836],[13.0348346,52.3935808],[13.0327204,52.3934943],[13.0341249,52.3935501],[13.0341487,52.3935668],[13.0345236,52.3935933],[13.0345695,52.3935985],[13.0346398,52.393311],[13.0350618,52.3932542],[13.0345599,52.3938356],[13.0340371,52.3936964],[13.035963,52.3939884],[13.028807,52.394408],[13.0337062,52.3935359],[13.0353357,52.3936684],[13.0356201,52.3937243],[13.0358736,52.3938003],[13.0359095,52.3938115],[13.035172,52.393998],[13.0347948,52.3938524],[13.035205,52.3939152],[13.0355754,52.393868],[13.0360155,52.3936773],[13.0336149,52.3930229],[13.0262415,52.393776],[13.0180692,52.3934653],[13.020099,52.3939077],[13.0194201,52.3939323],[13.0188765,52.3939814],[13.0231798,52.39342],[13.0210323,52.3938677],[13.0219746,52.3937198],[13.021667,52.393081],[13.0216526,52.3936533],[13.0221,52.3932518],[13.0223032,52.3928537],[13.0177736,52.3937905],[13.0198167,52.3939045],[13.0182823,52.3935937],[13.022543,52.393603],[13.0206212,52.3938778],[13.0223259,52.393153],[13.0179954,52.3940389],[13.0192064,52.3939641],[13.0216393,52.393338],[13.0312934,52.3934023],[13.0316135,52.3934156],[13.0340243,52.3938306],[13.033657,52.3938965],[13.0335046,52.3936785],[13.0332307,52.39394],[13.0330375,52.3937897],[13.0328059,52.3937702],[13.0295096,52.3932325],[13.0225097,52.3938283],[13.0284199,52.3937056],[13.033239,52.3935149],[13.0333907,52.3932364],[13.0218677,52.3928151],[13.0358493,52.394122],[13.0195512,52.3939383],[13.0183985,52.394015],[13.0190654,52.3936234],[13.0171443,52.3939406],[13.0154777,52.3940156],[13.0193892,52.3950169],[13.0365983,52.3939558],[13.0360419,52.3940134],[13.033439,52.3935108],[13.0370698,52.394146],[13.0368498,52.3940761],[13.034693,52.3937603],[13.0372819,52.3942257],[13.0358328,52.3940016],[13.0350285,52.393309],[13.0351179,52.3935717],[13.0352066,52.3934242],[13.0349438,52.3935469],[13.0351267,52.3932511],[13.0367371,52.393806],[13.0341192,52.3937325],[13.033397,52.3936847],[13.0342662,52.3938979],[13.021998,52.3935613],[13.0324264,52.3930394],[13.032538,52.3929959],[13.0323908,52.3930376],[13.0319224,52.3930152],[13.0320902,52.3930212],[13.0319976,52.3934198],[13.0322859,52.3930281],[13.0317572,52.393403],[13.0360833,52.3940697],[13.0365214,52.3941965],[13.036783,52.3942661],[13.0369835,52.3943325],[13.0325996,52.3934705],[13.0382193,52.3945064],[13.0356843,52.3939009],[13.0352607,52.3936018]],"Gillis-Grafström-Straße":[[13.0118176,52.4254397],[13.0122518,52.4251785],[13.0112535,52.4249004],[13.0110862,52.4246501],[13.0119027,52.4250137],[13.0114746,52.4251151]],Ginsterweg:lo,Gladiolenweg:ho,Glasmeisterstraße:[[13.0860306,52.3926217],[13.0862336,52.3923577],[13.0868785,52.3926206],[13.0843454,52.3914717],[13.0843874,52.3909212],[13.0883382,52.3925747],[13.0881419,52.3925348],[13.087939,52.3924937],[13.0877301,52.3924514],[13.0868143,52.3925516]],"Glienicker Dorfstraße":[[13.1082604,52.4679623],[13.1080931,52.4703771],[13.1087163,52.4685349],[13.1085861,52.4703372],[13.107693,52.4704125],[13.1085887,52.4683839],[13.1078563,52.4702421],[13.1087219,52.4701606],[13.1082617,52.4693048],[13.1092602,52.4702414],[13.1099437,52.4708491],[13.1094958,52.4709247],[13.10834,52.4702138],[13.1090527,52.4697036],[13.1092968,52.4697391],[13.1086834,52.469875],[13.1093397,52.4705804],[13.1088436,52.4710883],[13.1091674,52.4716385],[13.1095144,52.471734],[13.1103769,52.4718517],[13.1106594,52.4714556],[13.1096172,52.4711852],[13.1092961,52.4688768],[13.1090554,52.4692848],[13.1098251,52.4715393],[13.1088084,52.4687008],[13.1095329,52.4686299],[13.1096265,52.4690995],[13.1076502,52.4689811],[[13.1085832,52.47074],[13.1080262,52.4707885],[13.108027,52.4707918],[13.1079644,52.4707965],[13.1079728,52.4708339],[13.1076349,52.4708635],[13.1076101,52.4707578],[13.1076007,52.470709],[13.1075873,52.4706493],[13.1075735,52.4706012],[13.107914,52.4705715],[13.1079255,52.4706225],[13.1080557,52.4706138],[13.1081103,52.4706205],[13.1081897,52.4706131],[13.1081913,52.4706326],[13.1082465,52.4706441],[13.1084189,52.4706286],[13.1084109,52.4705816],[13.1086432,52.4705611],[13.1086759,52.4707022],[13.1085758,52.4707091],[13.1085832,52.47074]],[13.1086078,52.4706682],[13.108349,52.468921]],"Glienicker Weg":[[12.9835669,52.4910809]],"Glienicker Winkel":[[13.1017059,52.4029585],[13.1032616,52.4028636],[13.1019967,52.4029906],[13.1021438,52.402726],[13.1026145,52.403329],[13.1019911,52.4027754],[13.1030336,52.4032654],[13.1024805,52.4030714],[13.1028951,52.4031237],[13.1028488,52.4034184]],Gluckstraße:[[13.1358063,52.3824679],[13.1354624,52.3828318],[13.1360218,52.382706],[13.1357454,52.3825494],[13.1355497,52.3827413],[13.1325445,52.382799],[13.1321628,52.3826267],[13.1337525,52.3825422],[13.1343481,52.3825054],[13.1351682,52.3829433],[13.1349629,52.3829583],[13.1347776,52.3829718],[13.1345809,52.3829862],[13.1340629,52.3830326],[13.1338577,52.383047],[13.1336084,52.3830653],[13.1335596,52.3833434],[13.1335845,52.3834735],[13.1336077,52.3835946],[13.1336327,52.3837249],[13.134273,52.3832858],[13.1342961,52.3834148],[13.1343194,52.3835452],[13.1343431,52.3836783],[13.1349913,52.3832351],[13.1350177,52.3833661],[13.1350443,52.3834985],[13.1350707,52.3836294],[13.1357044,52.383183],[13.1357296,52.3833106],[13.1357567,52.3834483],[13.1357791,52.3835618],[13.1356025,52.3827795],[13.1359436,52.3825068],[13.1357994,52.3827636],[13.1358544,52.3825171],[13.1355244,52.3825444],[13.1358788,52.3827584],[13.1357062,52.3827724],[13.1356247,52.3825332],[13.1334152,52.3830782]],Glumestraße:[[13.0652943,52.4152595],[13.0642517,52.4152592],[13.0645603,52.4152621],[13.0649849,52.4153652],[13.0649831,52.4150061],[13.0646494,52.4150109]],Goethestraße:[[13.107614,52.3964645],[13.1081429,52.3961074],[13.1069792,52.3960613],[13.1072892,52.3960747],[13.1072151,52.3960712],[13.1077042,52.3960924],[13.1079039,52.3961006],[13.1081967,52.3964151],[13.1036736,52.3962262],[13.1038706,52.3961284],[13.1041039,52.3962348],[13.1039517,52.3961291],[13.1044431,52.3959214],[13.1040671,52.3958844],[13.1045492,52.3958403],[13.1053442,52.3959915],[13.1065621,52.3960569],[13.1041919,52.3958974],[13.103688,52.3959374],[13.1064595,52.3959591],[13.1059639,52.3960278],[13.1055826,52.3960054],[13.1067359,52.396063],[13.1062941,52.396045],[13.103879,52.3959351],[13.109928,52.3961426],[13.1104834,52.3964558],[13.1107751,52.396513],[13.1090557,52.3960442],[13.1088253,52.3967244],[13.1094635,52.3965022],[13.111206,52.3960822],[13.1098064,52.3964407],[13.1087599,52.3964795],[13.1094122,52.3966251],[13.1107985,52.3960905],[13.1098272,52.3960768],[13.1094825,52.396066],[13.1100663,52.396513],[13.1088642,52.3964838],[13.1091205,52.396733],[13.1105257,52.3960924],[13.1091488,52.3964903],[13.1024513,52.3958928],[13.1031027,52.3959458],[13.1028421,52.3958575],[13.1022763,52.395895],[13.1027032,52.3958593],[13.103261,52.3958459],[13.1034425,52.3958432],[13.1072451,52.396377],[13.1068645,52.3963324],[13.1073989,52.3960788],[13.107713,52.3960056],[13.1050229,52.39598],[13.1048276,52.3959501],[13.1049318,52.3959579],[13.1051191,52.3959872],[13.10765,52.3962898],[13.1068433,52.3962376]],"Golmer Chaussee":[[12.983538,52.4249813],[12.9837595,52.4249609],[12.9848027,52.4256348],[12.9849465,52.4249409],[12.9844267,52.4250429],[12.9847164,52.4248882],[12.9779811,52.4236574],[12.9873415,52.425254],[12.9860834,52.4254567],[12.9865624,52.4252869],[12.9870546,52.4252173],[12.9868141,52.4252282],[12.9834082,52.4253672],[12.9836553,52.4254694],[12.9828167,52.4253743],[12.9825488,52.4254426],[12.9824764,52.4254643],[12.9821908,52.4252964],[12.9818583,52.4252021],[12.9821811,52.4249035],[12.9820413,52.4245879],[12.9808358,52.4249219],[12.9830532,52.4254709],[12.9876202,52.4252486],[12.983974,52.4250531],[12.9858172,52.4252614],[12.9829988,52.4250074],[12.9829936,52.4248959],[12.9829883,52.4247811],[12.9880885,52.4248958],[12.9818573,52.4254622]],"Golmer Damm":[],"Golmer Fichten":[[12.9779552,52.4122148],[12.9777636,52.411532],[12.9778455,52.4115246],[12.978027,52.4122076],[12.9779273,52.4115172],[12.9780092,52.4115098],[12.9780911,52.4115024],[12.9781729,52.411495],[12.9776978,52.4112797],[12.9777812,52.4112716],[12.9778647,52.4112635],[12.9779481,52.4112554],[12.9780315,52.4112472],[12.978115,52.4112391],[12.9780988,52.4122005],[12.9774569,52.4121549],[12.9774193,52.411996],[12.9772045,52.4112254],[12.9772295,52.4113504],[12.9781707,52.4121933],[12.9782425,52.4121861],[12.9783143,52.412179],[12.9783861,52.4121718],[12.978458,52.4121646],[12.9785298,52.4121575],[12.9779397,52.4118439],[12.9780185,52.4118366],[12.9780974,52.4118294],[12.9781762,52.4118221],[12.978255,52.4118148],[12.9783338,52.4118076],[12.9784126,52.4118003],[12.9784914,52.4117931]],Gontardstraße:[[13.0139141,52.3884836],[13.0139328,52.388266],[13.0141977,52.3877522],[13.0135028,52.3881857],[13.0140549,52.3870734],[13.014438,52.3876902],[13.015007,52.3865408],[13.0148619,52.3863952],[13.015119,52.3858848],[13.0146882,52.3858108],[13.0141387,52.3869159],[13.0145718,52.3874291],[13.0148831,52.3867932],[13.014635,52.3873042],[13.0148118,52.3869238],[13.0144479,52.3863024],[13.0143709,52.386459],[13.0137462,52.3876841],[13.0138343,52.387531],[13.0137062,52.3878579]],Grabenstraße:[[13.0229819,52.4096059],[13.023208,52.4097486],[13.0233569,52.4096405],[13.0255004,52.4099873],[13.0240644,52.4098227],[13.0251573,52.4099215],[13.0245983,52.4099062],[13.0235651,52.4097839],[13.0226119,52.4095646],[13.022518,52.4096679]],"Graf-von-Schwerin-Straße":[[13.0549886,52.4250849],[13.0550024,52.4241372],[13.0557977,52.4255996],[13.0551066,52.4232321],[13.0553695,52.4229206],[13.0554154,52.4252967],[13.0552285,52.4255336],[13.0554107,52.4257797],[13.0550243,52.4257477],[13.0550267,52.4252912],[13.0557148,52.4237723],[13.0556887,52.4239226],[13.0557087,52.4240433],[13.0557067,52.4240928],[13.0557049,52.4241362],[13.055703,52.4241828],[13.0557006,52.4242405],[13.0557804,52.4243067],[13.0559724,52.4239876],[13.0560611,52.4239889],[13.0561497,52.4239903],[13.0562384,52.4239917],[13.056327,52.423993],[13.0564156,52.4239944],[13.0565043,52.4239957],[13.0565929,52.4239971],[13.0566816,52.4239984],[13.0567702,52.4239998],[13.0568589,52.4240011],[13.0569475,52.4240025],[13.0570362,52.4240038],[13.0571248,52.4240052],[13.0572135,52.4240065],[13.0573021,52.4240079],[13.0573908,52.4240092],[13.0574739,52.424127],[13.0575373,52.4243415],[13.0575353,52.4243895],[13.0575333,52.4244376],[13.0575314,52.4244856],[13.0575294,52.4245336],[13.0551147,52.4265911],[13.0552105,52.426354],[13.0551973,52.4268282],[13.0575207,52.4233682],[13.0569779,52.4233605],[13.0564352,52.4233528],[13.0558924,52.4233451],[13.0552756,52.4229599],[13.0574909,52.4237711],[13.057497,52.4236222]],Grasmückenring:[[12.9811944,52.4139151],[12.9815039,52.4139723],[12.9816033,52.4139906],[12.9819139,52.4140486],[12.9820133,52.4140664],[12.9828747,52.4144899],[12.9828782,52.4145432],[12.982915,52.4147393],[12.9829172,52.4147926],[12.9827321,52.4149611],[12.9826618,52.4150613],[12.9829707,52.4152509],[12.9829003,52.4153511],[12.9826327,52.415282],[12.9825623,52.4153822],[12.9809801,52.4155882],[12.9810967,52.4152045],[12.9811927,52.4151971],[12.9817135,52.4151523],[12.9822296,52.4151143],[12.982143,52.4151215],[12.9822988,52.4153196],[12.9822284,52.4154198],[12.9819788,52.415455],[12.98188,52.4154631],[12.9816442,52.415475],[12.9815454,52.4154831],[12.9813149,52.4155086],[12.9812162,52.4155167],[12.9816148,52.4151604],[12.9811548,52.4142031],[12.9810553,52.4141854],[12.9819286,52.4143447],[12.9818385,52.4143298],[12.9814675,52.4142605],[12.9815575,52.4142754],[12.9831369,52.4142712],[12.9832269,52.4142874],[12.9828057,52.4142164],[12.9828957,52.4142325],[12.9824619,52.4141435],[12.982552,52.4141596],[12.9832448,52.4144227],[12.9832427,52.4143655],[12.9832742,52.4146159],[12.9832721,52.4145587],[12.9833018,52.4148007],[12.9833039,52.4148579],[12.9833267,52.4150653],[12.9833246,52.4150081],[12.983359,52.4152761],[12.9833569,52.4152189],[12.9808697,52.4138643],[12.9806605,52.413803],[12.9804017,52.4137793],[12.9801764,52.4137318],[12.9799296,52.4136934],[12.9797177,52.4136247],[12.9796734,52.4139731],[12.9808027,52.4154942],[12.9805147,52.4151535],[12.9806006,52.4151457],[12.9801352,52.4151944],[12.980221,52.4151866],[12.9796631,52.4152411],[12.979749,52.4152332],[12.9798375,52.4155453],[12.9799233,52.4155375],[12.9801473,52.4155258],[12.9802331,52.4155179],[12.9804754,52.4154918],[12.9805612,52.415484],[12.979773,52.4140176],[12.9803504,52.4141349],[12.9802219,52.4140122]],"Gregor-Mendel-Straße":[[13.0504324,52.4049728],[13.0489938,52.4050143],[13.0482592,52.4050471],[13.0480728,52.4052846],[13.0496638,52.4052405],[13.0475198,52.4053854],[13.0479255,52.4050123],[13.0497274,52.4048388],[13.0492876,52.4052222],[13.04713,52.4051438],[13.0466801,52.4048799],[13.0436436,52.4053892],[13.0487342,52.4052433],[13.0479172,52.4054269],[13.0475723,52.4050058],[13.048638,52.4052406],[13.0502458,52.4052133],[13.0469093,52.4049277],[13.0493218,52.4050038],[13.0492345,52.4050056],[13.0501335,52.4049868],[13.0467689,52.4052708],[13.0501335,52.4049868],[13.0488797,52.4046683],[13.0482259,52.4046041],[13.0443557,52.4049098],[13.0418546,52.4046018],[13.0427974,52.4046062],[13.042556,52.4046379],[13.0527775,52.4053437],[13.0527577,52.4052496],[13.0521239,52.4051949],[13.0514045,52.4050853],[13.0507214,52.405251],[13.0494468,52.4053876],[13.0507132,52.4049693],[13.0447514,52.4047124],[13.0451367,52.4047286],[13.0456639,52.4047226],[13.0465133,52.4046376],[13.0465404,52.4053151],[13.0467145,52.4048065],[13.0423956,52.4045845],[13.0522331,52.405122],[13.0417642,52.4044897]],Grenzallee:co,Grenzstraße:[[13.0937134,52.3981378],[13.0935255,52.3983039],[13.0937517,52.3984447],[13.0939736,52.3980448],[13.094326,52.398021],[13.094728,52.3978215],[13.0945768,52.398052],[13.0942763,52.3981571],[13.0930935,52.3987456],[13.0932123,52.3985491],[13.0950071,52.3980124],[13.0939333,52.398285],[13.0941001,52.3982547]],Griebnitzstraße:[[13.1056036,52.4089915],[13.1059646,52.4086282],[13.1066071,52.4084622],[13.1070252,52.4084148],[13.1079839,52.4083175],[13.1086774,52.4082573],[13.1051842,52.4086647]],Grillparzerstraße:[[13.0393141,52.3912852],[13.0393036,52.3914615],[13.039293,52.3916378],[13.0392825,52.391814],[13.0388212,52.3910707],[13.0388109,52.3912466],[13.0388006,52.3914226],[13.0387903,52.3915985],[13.03878,52.3917744]],Grotrianstraße:[[13.1358254,52.379267],[13.1365593,52.3800465],[13.1365442,52.379927],[13.1365291,52.3798075],[13.136514,52.379688],[13.1365094,52.3795099],[13.1366052,52.3806018],[13.1364941,52.3793855],[13.1364788,52.3792612],[13.1364635,52.3791369],[13.1364428,52.378956],[13.1364371,52.3788321],[13.1364314,52.3787082],[13.1364258,52.3785843],[13.136592,52.3804764],[13.1365788,52.380351],[13.1365656,52.3802257]],"Groß Glienicker Heide":[[13.1251673,52.4854983],[13.1250883,52.4852421],[13.1247067,52.4849899],[13.1240075,52.4850699],[13.1236206,52.4848954]],Großbeerenstraße:[[13.144838,52.3805894],[13.0943217,52.3887792],[13.0939304,52.3889911],[13.0941044,52.3888457],[13.0943012,52.3887352],[13.0937215,52.388827],[13.1182415,52.384337],[13.0988592,52.3882569],[13.1203772,52.3833167],[13.0946097,52.3890348],[13.0937118,52.3893344],[13.0942187,52.3893829],[13.0934893,52.3895041],[13.0909056,52.3898162],[13.0916486,52.3897506],[13.0923853,52.3896049],[13.0925329,52.3894671],[13.0929189,52.3890876],[13.0924252,52.3893054],[13.0928739,52.3890152],[13.0921751,52.3893581],[13.0926743,52.3889956],[13.0916317,52.3894765],[13.090981,52.389608],[13.0906317,52.3895208],[13.0907738,52.38968],[13.0914854,52.3894984],[13.0980767,52.388301],[13.0966406,52.388615],[13.0969492,52.3885522],[13.0973146,52.3885768],[13.0976625,52.3884019],[13.0982774,52.3882584],[13.0962228,52.3888243],[13.0978892,52.3883537],[13.0969492,52.3885522],[13.0958328,52.388899],[13.0985914,52.3883421],[13.0960171,52.3887442],[13.0959726,52.388482],[13.0966308,52.3883376],[13.0972627,52.3880823],[13.0980061,52.3881452],[13.0978146,52.3881849],[13.0961684,52.3885314],[13.0973254,52.3882923],[13.09757,52.3882357],[13.0953726,52.3886966],[13.1018637,52.3876281],[13.0998986,52.3880223],[13.0996743,52.3877928],[13.0992215,52.3878877],[13.0994402,52.3878411],[13.0998986,52.3880223],[13.0993502,52.3881307],[13.0997219,52.3880588],[13.0989813,52.3879384],[13.0995505,52.3880891],[13.1067852,52.386158],[13.1013415,52.3872615],[13.1003714,52.3875389],[13.1006977,52.3875858],[13.1016066,52.3873747],[13.1016134,52.3870227],[13.0997822,52.3871985],[13.1050459,52.3866379],[13.1058816,52.386466],[13.1033685,52.3869868],[13.1028165,52.3864252],[13.1057783,52.3859139],[13.1210519,52.3831587],[13.1099224,52.3854764],[13.1096336,52.3853669],[13.1112927,52.3857063],[13.1101562,52.3852387],[13.1349665,52.3811248],[13.1347141,52.3812774],[13.1344311,52.3811947],[13.1338933,52.381294],[13.1341581,52.3812712],[13.1163884,52.3841033],[13.116093,52.3842976],[13.1162514,52.3842481],[13.1134308,52.3848178],[13.113834,52.3847362],[13.1141255,52.3846772],[13.1144288,52.3846158],[13.1147812,52.3845445],[13.1151038,52.3844792],[13.115536,52.3842707],[13.1248366,52.382909],[13.1245923,52.3829919],[13.1240517,52.3830611],[13.1256578,52.3825424],[13.1254244,52.3826199],[13.1263254,52.3823001],[13.125191,52.3826992],[13.1258849,52.382464],[13.1261183,52.3823808],[13.1242919,52.3829882],[13.1266152,52.3820912],[13.1293075,52.3816848],[13.1291707,52.3814964],[13.1285622,52.3815017],[13.1295572,52.3817356],[13.128309,52.3816617],[13.1280085,52.3816167],[13.1288007,52.3815754],[13.1294619,52.3814583],[13.1310706,52.3813937],[13.1376404,52.3799643],[13.1291762,52.3803998],[13.1378848,52.3797166],[13.1381276,52.3797224],[13.1321899,52.3812158],[13.1375026,52.3797262],[13.1319728,52.3812456],[13.1402155,52.3802578],[13.1331353,52.3811463],[13.1335553,52.3811347],[13.1302823,52.3807222],[13.1377602,52.3803913],[13.138232,52.3803832],[13.1378754,52.3802263],[13.1375872,52.3802263],[13.1341449,52.3807078],[13.1334557,52.3807185],[13.1299064,52.3805195],[13.1328537,52.3806785],[13.1331291,52.3807098],[13.140044,52.3793786],[13.1239931,52.3826718],[13.1235451,52.3833256],[13.1298981,52.3812972],[13.1460754,52.3800245],[13.1459193,52.3800299],[13.1467958,52.3799335],[13.1265392,52.3817542],[13.1246645,52.381844],[13.1257937,52.3818612],[13.1283684,52.3812727],[13.127756,52.3812297],[13.128102,52.3813477],[13.1274249,52.3813745],[13.1253398,52.3819876],[13.124763,52.3824004],[13.1211185,52.3834811],[13.1272273,52.3815506],[13.1344543,52.3806541],[13.1384609,52.3801191],[13.0938514,52.3891978],[13.1085419,52.3862585],[13.1084721,52.3862241],[13.1072731,52.3865292],[13.1079955,52.3863964],[13.1073633,52.3866653],[13.1076343,52.3863927],[13.0899196,52.3898357],[13.0901684,52.3896972],[13.0900072,52.3899248],[13.0918706,52.3897112],[13.0917123,52.3897455],[13.0917915,52.3897284],[13.0919498,52.3896941],[13.092029,52.389677],[13.0932392,52.3893259],[13.0909711,52.3900564],[13.0941543,52.3891359],[13.0943481,52.3890944],[13.0931135,52.3890467],[13.0931756,52.3891567],[13.0967657,52.3884091],[13.0968756,52.3883873],[13.0971749,52.3883247],[13.0972872,52.388302],[13.1275504,52.3818412],[13.129854,52.3816904],[13.1038996,52.3872886],[13.0912691,52.3892365],[13.124156,52.3823219],[13.1080296,52.3862811],[13.1325833,52.3811234],[13.1108651,52.3850881],[13.1023049,52.3871364],[13.1071639,52.3851746],[13.1000142,52.3876524],[13.1415836,52.3804649],[13.1470978,52.3798739],[13.1471486,52.3799394],[13.0928632,52.3897094],[13.0929326,52.3898322],[13.0911515,52.389573],[13.0965179,52.3883613],[13.103821,52.3869255],[13.122345,52.3832639],[13.1266694,52.3811943],[13.1334444,52.3811367],[13.1475853,52.3797232],[13.1492383,52.3798908],[13.1375841,52.3794554],[13.1404328,52.3795277],[13.100676,52.3864773],[13.1390275,52.3798915],[13.1385005,52.3795403],[13.1377454,52.3793095],[13.138416,52.3788191],[13.1379305,52.3789157],[13.1382403,52.378544],[13.1376877,52.3786472],[13.1372371,52.3789403],[13.1373015,52.3792325],[13.1377508,52.3794847],[13.0960628,52.3888265],[13.1383804,52.3785161],[13.1232153,52.3833731],[13.102998,52.3870764],[13.1049843,52.3866653],[13.1185889,52.3856716],[13.0917121,52.3894439],[13.116633,52.3853181],[13.1031816,52.3870568],[13.1080117,52.3856458],[13.1083425,52.3854935],[13.1081947,52.3856074],[13.1079991,52.3859095],[13.1087309,52.3857855],[13.1089325,52.3857456],[13.1123369,52.3850176],[13.1180587,52.3835869],[13.118412,52.3837099],[13.1197903,52.3833958],[13.0947132,52.3888352],[13.1235668,52.3832038],[13.1080235,52.3851784],[13.1030541,52.386709],[13.0922218,52.3895572],[13.0955179,52.3886662],[13.0957911,52.388609],[13.0930613,52.3891807],[13.0933975,52.3890884],[13.0903197,52.3898105],[13.1192203,52.3835223],[13.1038758,52.3869156],[13.1021757,52.3875092],[13.1014698,52.3875811],[13.1011961,52.3876403],[13.0996103,52.387967],[13.1073308,52.3851206],[13.1396027,52.3805519],[13.1392862,52.3805572],[13.1388627,52.3805676],[13.1392349,52.3801838],[13.1388884,52.3802099],[13.1084135,52.3858785],[13.0905508,52.3897163],[13.1115111,52.3855569],[13.1118397,52.3854529],[13.112055,52.3854061],[13.1122734,52.3853586],[13.1124997,52.3853093],[13.113745,52.3847303],[13.1089539,52.3860666],[13.1091765,52.3860206],[13.1093915,52.3859745],[13.1096087,52.3859286],[13.1098364,52.3858752],[13.1101306,52.3858785],[13.1103325,52.3859125],[13.1102533,52.3851682],[13.1052944,52.3859949],[13.1442062,52.3800409],[13.1083785,52.3855487],[13.1010187,52.3874607],[13.1400982,52.3794647],[13.1402161,52.3794924],[13.1403425,52.3795107],[13.1405739,52.3794781],[13.0987396,52.3879237],[13.0971674,52.3885125],[13.1035464,52.3867927],[13.1116576,52.3851598],[13.112077,52.3850723],[13.1113955,52.3852148],[13.1050151,52.3868867],[13.1055958,52.3867645],[13.1052451,52.3868384],[13.1045482,52.3867511],[13.1061921,52.386639],[13.1058444,52.3867134],[13.1064254,52.3865894],[13.1060772,52.3857886],[13.1061507,52.3859336],[13.1113669,52.3855433],[13.112944,52.3855377],[13.1128452,52.3854107],[13.1009339,52.387716],[13.1007102,52.387764],[13.1001937,52.3878557],[13.1003696,52.3878183],[13.0906647,52.389705],[13.0903501,52.3897501],[13.0930102,52.3890798],[13.0929391,52.389002],[13.0922069,52.3892951],[13.0910428,52.3895373],[13.0927318,52.3892409],[13.0925936,52.38927],[13.0940522,52.3889202],[13.097122,52.38852],[13.1031929,52.3869119],[13.1030195,52.3869395],[13.102938,52.3868258],[13.1031218,52.386839],[13.103139,52.3866933],[13.1272895,52.3814056],[13.1045624,52.3873185],[13.1044589,52.3874332],[13.1047368,52.3870428],[13.1041948,52.3874876],[13.1045392,52.3871772],[13.1039429,52.3874465],[13.091417,52.3894669],[13.1315986,52.3812882],[13.0962355,52.3887459],[13.1080735,52.38576],[13.1188667,52.3836334],[13.1027252,52.3870986],[13.102652,52.3871112],[13.0927407,52.3894641],[13.1438149,52.3803054],[13.143693,52.3803189],[13.1435817,52.3803312],[13.1298297,52.3813838],[13.0912371,52.3897824],[13.0921648,52.3898689],[13.0921076,52.3898837],[13.0920158,52.3898904],[13.0919479,52.3899063],[13.0918882,52.3899016],[13.0918093,52.3899186]],"Große Fischerstraße":[[13.0703876,52.3975504],[13.0703727,52.3976557],[13.070358,52.3977596],[13.0703448,52.397867],[13.0702795,52.3979969],[13.0707725,52.3985812],[13.0704158,52.3985591],[13.0703747,52.3988208],[13.0704022,52.398644],[13.0704554,52.3982288],[13.0708693,52.397867],[13.0709002,52.3976466]],"Große Weinmeisterstraße":[[13.0626535,52.4199883],[13.0632923,52.4184077],[13.0637087,52.4185381],[13.0680338,52.4223013],[13.0672411,52.4212136],[13.0667731,52.4210453],[13.0683831,52.4216321],[13.0678352,52.4221497],[13.067862,52.4215239],[13.0674791,52.4214412],[13.0624112,52.4120042],[13.0618339,52.4107283],[13.061182,52.4108844],[13.0617192,52.4107563],[13.0616726,52.4118756],[13.062458,52.4114159],[13.0623468,52.4116693],[13.0620643,52.4100329],[13.0619589,52.4104495],[13.06207,52.4108542],[13.0617963,52.41126],[13.0620202,52.4126738],[13.0628725,52.4140714],[13.0627219,52.4125194],[13.0629219,52.4138898],[13.0632007,52.4135657],[13.0623988,52.4132107],[13.0622432,52.4128595],[13.0633179,52.4137422],[13.0628985,52.413121],[13.0623499,52.4123666],[13.0630267,52.4132897],[13.0635557,52.4140553],[13.0635866,52.4140805],[13.0632087,52.4134722],[13.0633402,52.414261],[13.0642719,52.4145565],[13.0638973,52.4152621],[13.0638477,52.4144871],[13.0630272,52.4148186],[13.0632626,52.4146421],[13.0639045,52.415493],[13.0640458,52.4158334],[13.0630869,52.4159231],[13.0648517,52.4191066],[13.0654514,52.4199399],[13.0646535,52.4187776],[13.0651026,52.4194759],[13.0650115,52.4193287],[13.0661656,52.4204692],[13.0656146,52.420294],[13.0653807,52.4197835],[13.0647568,52.4189524],[13.0645474,52.4186153],[13.0644312,52.4182568],[13.0655521,52.420201],[13.0655053,52.4207722],[13.0651948,52.4192276],[13.0658001,52.4204469],[13.0659466,52.4213722],[13.0660064,52.4207821],[13.0614391,52.4110265],[13.0609883,52.4118938],[13.0625241,52.4125122],[13.0637309,52.4142868],[13.0639537,52.414284],[13.0673471,52.4220904],[13.0670305,52.4217488],[13.0622054,52.4132593],[13.061188,52.4111151],[13.0611336,52.4111299],[13.0607623,52.411476],[13.0606114,52.4113864],[13.0600292,52.4112927],[13.0603289,52.4110995],[13.0618309,52.4196978],[13.0645079,52.4194326],[13.065808,52.4210934],[13.0652496,52.4196415],[13.0655053,52.4207722],[13.0661529,52.4209596],[13.0617939,52.4157957],[13.0647082,52.4159024],[13.0667731,52.4210453],[13.0611358,52.415736],[13.0618586,52.4160052],[13.0631264,52.4156088],[13.0630617,52.4152172],[13.0622645,52.4155336],[13.0626238,52.4152694],[13.0614044,52.4155454],[13.0636477,52.4157927],[13.0640654,52.416116],[13.0634676,52.4177278],[13.0623787,52.4212536],[13.0684424,52.4222509],[13.0686309,52.4221418],[13.0622935,52.4103058],[13.0633463,52.4175371],[13.0649968,52.4176332],[13.06459,52.4177288],[13.0642436,52.4178101],[13.0623933,52.4123181],[13.0624687,52.4122653]],Gröbenstraße:[[12.9878038,52.4252401],[12.988097,52.4252204],[12.9870345,52.4260568],[12.9874372,52.4256135],[12.988097,52.4252204],[12.9879534,52.4256202],[12.9873896,52.425948],[12.9867394,52.4260543],[12.9875113,52.4253918],[12.9871938,52.4254421],[12.9868449,52.4255488],[12.9866283,52.4256592],[12.9863219,52.4257594],[12.9861008,52.425873],[12.9865315,52.4260131],[12.9863083,52.4261007],[12.9858064,52.4263041],[12.9849654,52.4267726],[12.984122,52.426494],[12.9836861,52.4266777],[12.9836323,52.4266709],[12.9832233,52.426843],[12.9830043,52.4269056],[12.9826434,52.4270399],[12.9825503,52.4272634],[12.9823029,52.4273397],[12.9860308,52.4258396],[12.9869223,52.4264503],[12.9854705,52.4267755],[12.9849418,52.4264769],[12.982104,52.4267113],[12.9856025,52.4261449],[12.9758223,52.429202],[12.9851888,52.4263523],[12.9846878,52.4265195]],"Grüner Weg":[[13.106609,52.4726025],[13.1066058,52.4729733],[13.1063433,52.4732497],[13.1046154,52.4736053],[13.1058693,52.4732262],[13.1076704,52.4725119],[13.1070988,52.4722742],[13.1079439,52.4722538],[13.1050445,52.4751886],[13.1049319,52.4731599],[13.1049614,52.4733321],[13.1062805,52.4727019],[13.1044754,52.4729323],[13.1053689,52.4747485],[13.1075477,52.4723017],[13.106929,52.4724032],[13.010488,52.4265125],[13.0112902,52.4268328],[13.0117171,52.4263901],[13.010751,52.4269351],[13.0113639,52.4264386],[13.0115941,52.4267247],[13.0108273,52.4265262],[13.0104076,52.42654],[13.0156525,52.425655],[13.0118803,52.426644],[13.0117857,52.4260937],[13.0111783,52.4263915],[13.0110486,52.426792],[13.0120324,52.4263336],[13.1057169,52.4727219],[13.1060892,52.4727909],[13.1064641,52.4730265],[13.1058259,52.4727991],[13.1051217,52.4731246],[13.1053174,52.4730529],[13.1058364,52.4730292],[13.1056407,52.473101],[13.104235,52.4732951],[13.1042471,52.4733963],[13.1042592,52.4734974],[13.1042713,52.4735986]],Grünstraße:[[13.1114235,52.3834143],[13.1132688,52.3845965],[13.1131897,52.3844509],[13.113102,52.3842894],[13.1130131,52.3841257],[13.1122726,52.3839554],[13.1116434,52.3844076],[13.1112695,52.3844829],[13.1110983,52.3846789],[13.1112224,52.3849019],[13.11223,52.3844969],[13.1111603,52.3847904],[13.1110362,52.3845674],[13.1114564,52.3844453],[13.1118303,52.38437],[13.1123032,52.3846328]],"Guido-Seeber-Weg":[[13.1381217,52.3687718],[13.1383751,52.3690756],[13.1380184,52.3688348],[13.1382477,52.369146],[13.1378883,52.3689052],[13.138119,52.369227],[13.137773,52.3689748],[13.137463,52.368929],[13.1370746,52.368683],[13.1373637,52.3688551],[13.1372272,52.3687713],[13.1382075,52.3694118],[13.1383596,52.3695012],[13.1386134,52.3696682],[13.138498,52.3695895]],"Gustav-Meyer-Straße":[[13.0459015,52.4236497],[13.0471338,52.4235781],[13.0467719,52.4235838],[13.0464869,52.4234615]],Gutenbergstraße:[[13.0582139,52.4018554],[13.0583816,52.4019818],[13.0585847,52.4020079],[13.058778,52.4020329],[13.0604659,52.4021393],[13.0602322,52.4022184],[13.0600671,52.4020891],[13.0598644,52.4020635],[13.0596413,52.4020354],[13.0617261,52.4024075],[13.0619844,52.4023308],[13.0621699,52.4023542],[13.0623555,52.4023776],[13.0625457,52.4024016],[13.0611999,52.4022319],[13.0563982,52.4017282],[13.0566207,52.4016519],[13.0562723,52.4014761],[13.0564557,52.401499],[13.056634,52.4015213],[13.0568708,52.4015508],[13.0570572,52.401574],[13.0572318,52.4015958],[13.0573998,52.4015339],[13.0572048,52.4018342],[13.0570125,52.4018102],[13.0562049,52.4017041],[13.0568393,52.4017886],[13.0565872,52.4017517],[13.0551747,52.4014695],[13.0549706,52.4014435],[13.0543484,52.4013646],[13.0556838,52.4012996],[13.0552495,52.4013424],[13.0551057,52.4012171],[13.0545152,52.4011431],[13.0542974,52.4012238],[13.0545598,52.4013914],[13.0546966,52.4016345],[13.0548291,52.4016514],[13.0548852,52.401694],[13.0546507,52.4015071],[13.0543825,52.4014977],[13.0570125,52.4018102],[13.0571612,52.4018288],[13.0572118,52.4019923],[13.0592091,52.4022823],[13.0617261,52.4024075],[13.0503645,52.4009648],[13.0506505,52.401],[13.0508478,52.4010242],[13.0510344,52.4010472],[13.0513255,52.401083],[13.0515133,52.4011061],[13.0639685,52.4026239],[13.0525576,52.4010048],[13.0528039,52.4010349],[13.0530322,52.4010628],[13.0500616,52.4006835],[13.0502504,52.4007083],[13.050437,52.4007329],[13.0506799,52.4007649],[13.0508747,52.4007905],[13.0510718,52.4008164],[13.0513077,52.4008475],[13.0514999,52.4008728],[13.068187,52.4029683],[13.0679852,52.4029897],[13.0696217,52.4023766],[13.0691658,52.4025414],[13.0688609,52.4025687],[13.0682955,52.4027281],[13.0613878,52.4022556],[13.0503062,52.4013693],[13.0502171,52.4016118],[13.0482667,52.4004524],[13.059206,52.4020879],[13.0508106,52.4011368],[13.0552668,52.4015848],[13.0505077,52.4016526],[13.0504379,52.4016348],[13.0503624,52.4016322],[13.0502918,52.4016165],[13.0507638,52.401429],[13.0506876,52.4014191],[13.0506113,52.4014091],[13.050535,52.4013992],[13.0504588,52.4013892],[13.0503825,52.4013792],[13.0615338,52.4023836],[13.0620387,52.4025837],[13.0545258,52.4014913],[13.054737,52.4015181],[13.057204,52.4015639],[13.0566712,52.4016915],[13.0570742,52.4017085],[13.0560893,52.4016192],[13.0563748,52.4016215],[13.0564604,52.4016653],[13.0555537,52.4013803],[13.0552016,52.4013364],[13.0550479,52.4013004],[13.0561217,52.4014573],[13.0616338,52.4023667],[13.0663651,52.4029754],[13.0663516,52.4030417],[13.0583089,52.4017338],[13.0687451,52.4029072],[13.0685459,52.402929],[13.0547112,52.4012217],[13.0532096,52.4010862],[13.0563793,52.4014525],[13.0588931,52.401941],[13.0545405,52.4013889],[13.0569822,52.4017751],[13.0572218,52.401727],[13.0572677,52.4017331],[13.0658676,52.4029981],[13.0589756,52.4019788],[13.0564166,52.402001],[13.049236,52.400713],[13.0490434,52.4006897],[13.0488998,52.4006723],[13.0487308,52.4006519],[13.0485457,52.4006295],[13.0485838,52.4004925],[13.0487363,52.4005118],[13.0489159,52.4005346],[13.0490986,52.4005577],[13.0492977,52.4005829],[13.0603915,52.4022175],[13.0655154,52.4029644],[13.0649481,52.4028915],[13.0645686,52.4028604],[13.0640791,52.4028024],[13.0645995,52.4027344],[13.0515928,52.4010604],[13.0617568,52.4024953],[13.0545655,52.4012572],[13.0544472,52.4012167],[13.0543527,52.4012049],[13.0542719,52.4011973],[13.0543061,52.4010705],[13.052968,52.4011927],[13.0528533,52.401041],[13.0528091,52.4009835],[13.0527353,52.4009741],[13.0529772,52.4012324],[13.0531794,52.4012188],[13.0527555,52.4011665],[13.0601404,52.4021806],[13.0506002,52.400937],[13.0543788,52.4013684],[13.0510189,52.400989],[13.054948,52.401283],[13.0551284,52.4013273],[13.054852,52.4016257],[13.0570283,52.4015402],[13.0569058,52.4017207],[13.0668383,52.4029792],[13.0509325,52.400768],[13.0549342,52.4014466],[13.0565694,52.4016789],[13.0568126,52.4015435],[13.0516838,52.4010717],[13.0548192,52.4014614],[13.0683202,52.4029537],[13.0619202,52.4023525],[13.0585565,52.401925],[13.053,52.4010589],[13.0529775,52.4008941],[13.0541785,52.4011837],[13.0566007,52.4014824],[13.0566672,52.4015254],[13.0571145,52.4015518],[13.0573866,52.401615],[13.064104,52.4027061],[13.0655336,52.4028902],[13.0663329,52.4031127],[13.0618349,52.4026001],[13.0620521,52.4025363],[13.0617996,52.4023373],[13.0620414,52.4025678],[13.0603556,52.402274],[13.0604096,52.4021626],[13.0601164,52.402125],[13.0599658,52.4020763],[13.0596817,52.4020859],[13.0588397,52.4020129],[13.0587595,52.401951],[13.0584375,52.4019603],[13.058258,52.4019384],[13.0574108,52.401751],[13.0572754,52.4018104],[13.0573526,52.4018207],[13.0568496,52.4018522],[13.0569159,52.4018431],[13.0566564,52.4017404],[13.0567838,52.4017539],[13.056812,52.4016758],[13.0546074,52.4014678],[13.0547047,52.4014098],[13.0546346,52.4014009],[13.0548953,52.4015099],[13.0547623,52.4015676],[13.0543661,52.4014416],[13.0516776,52.4011022],[13.0515865,52.4010869],[13.0511219,52.4010018],[13.0512851,52.4010221],[13.0507128,52.400951],[13.0504473,52.400918],[13.0501272,52.4008315],[13.0502854,52.400851],[13.0501867,52.40062],[13.0506454,52.4006821],[13.0510287,52.4007792],[13.0510432,52.4007359],[13.0509478,52.400723],[13.0512673,52.4008069],[13.0511342,52.4007914],[13.0514856,52.4007958],[13.0513784,52.4007813],[13.0514733,52.4008693],[13.0515576,52.4008555],[13.0516457,52.4008646],[13.0634028,52.4026158],[13.0610582,52.4022708],[13.055261,52.4014928],[13.0528675,52.4010343],[13.0690695,52.4026211]],Gutsstraße:[[13.0076767,52.4247612],[13.0076812,52.4249832],[13.0080648,52.4246984],[13.0099496,52.4271817],[13.0082485,52.425441],[13.0084243,52.4251359],[13.0095537,52.4260603],[13.0098128,52.4263689],[13.0098267,52.4270698],[13.0096155,52.4266972],[13.0086694,52.4258108],[13.0089382,52.4253316],[13.0089422,52.4255214],[13.0105781,52.4271368],[13.0099254,52.4266793],[13.0095341,52.4262412],[13.0094303,52.4267627],[13.0097079,52.4269629],[13.0102058,52.4269463],[13.0085006,52.425535],[13.0085471,52.4252595],[13.0086765,52.4252178],[13.0077469,52.4248514],[13.0093788,52.4261225]],"Gärtner-Schmidt-Straße":[[13.0488755,52.4478875],[13.0489376,52.447476],[13.0478495,52.4480487],[13.0486104,52.4479835],[13.0493467,52.4476849],[13.0479902,52.4478682],[13.048309,52.4480927],[13.0480426,52.4482374],[13.0483988,52.4484064],[13.0482429,52.44777],[13.0491553,52.4476475],[13.0481399,52.4485037],[13.0491809,52.4481216],[13.0483497,52.4474739],[13.0487501,52.447799],[13.047732,52.4483627],[13.0489203,52.4482163],[13.0496234,52.4478663],[13.0475483,52.4481449],[13.0487501,52.447799],[13.0491553,52.4476475],[13.0489376,52.447476],[13.0483929,52.4475988],[13.0482753,52.4475108],[13.0476441,52.4483953],[13.0487589,52.4484057],[13.0481262,52.4483237],[13.0490191,52.4483158],[13.0484274,52.4481799],[13.0492768,52.4482221],[13.0482399,52.4486027],[13.0481118,52.4479562],[13.0494912,52.4479323],[13.0495573,52.4478993],[13.0483673,52.4478597],[13.0492809,52.4477198],[13.0486104,52.4479835],[13.0489978,52.4479784],[13.0476359,52.4482397],[13.0484986,52.4485055],[13.0479388,52.4481456]],"Günther-Simon-Straße":[[13.1398588,52.3660726],[13.1405476,52.3659446],[13.1397885,52.3663937],[13.1398712,52.3663438],[13.1407127,52.3658473],[13.1402485,52.366121],[13.1403982,52.3660327],[13.1400621,52.366231]],Güntherweg:[[13.1061339,52.4724742],[13.1058826,52.472445],[13.1058471,52.4721443],[13.1068228,52.4719977],[13.1066774,52.4718804],[13.1069644,52.4718575],[13.1062575,52.4721818],[13.106169,52.472187]],Habichthorst:uo,Habichtweg:fo,Haeberlinweg:go,Haeckelstraße:[[13.0225121,52.3887259],[13.0233483,52.3901377],[13.0251587,52.3901996],[13.0245722,52.3896749],[13.0237706,52.3901586],[13.0264263,52.3897972],[13.0245529,52.3898052],[13.0240015,52.3883467],[13.0245332,52.3899355],[13.0271185,52.3898313],[13.0235795,52.3883162],[13.0243006,52.3887422],[13.0234215,52.3897043],[13.0245143,52.3900658],[13.0239818,52.3901691],[13.0232115,52.3896882],[13.023633,52.389716],[13.0251837,52.3900372],[13.0231372,52.3901272],[13.0252088,52.3898747],[13.0240538,52.3897393],[13.0244241,52.3883787],[13.0235595,52.3901482],[13.0242128,52.3883626],[13.024249,52.389003],[13.0237903,52.3883311],[13.0238436,52.3897273],[13.0244952,52.3901962],[13.0242746,52.3888727],[13.0268877,52.3898199],[13.026657,52.3898086],[13.0241984,52.3892629],[13.0242237,52.3891331],[13.0252338,52.3897123],[13.0280101,52.3897851],[13.0277937,52.3897744],[13.0275771,52.3897637],[13.0272317,52.3890662],[13.0272012,52.3892426],[13.0267582,52.3894831],[13.0278006,52.3895533],[13.0268533,52.3895706],[13.0272271,52.3895935],[13.0236221,52.3893508],[13.0236513,52.3891995],[13.0236805,52.3890483],[13.0237096,52.388897],[13.0237388,52.3887458],[13.0226422,52.3888727]],Hainbuchenweg:_o,Hainholzstraße:[],Handelshof:mo,"Hannes-Meyer-Straße":[[13.0419826,52.4149288],[13.0414705,52.4150275],[13.0409525,52.4151215],[13.0410636,52.4146749],[13.0414902,52.4145873],[13.0419462,52.4145092],[13.042469,52.4144965]],"Hannoversche Straße":[[13.0473546,52.4567338],[13.0473114,52.4566585],[13.0475368,52.4569561],[13.0476139,52.457032],[13.0471697,52.45643],[13.0471338,52.4563268],[13.0470654,52.4560886],[13.0470329,52.4559934],[13.046958,52.4557671]],"Hans-Albers-Straße":[[13.138811,52.3705431],[13.1390871,52.3703843],[13.1394946,52.37015],[13.1388817,52.3706476],[13.1396525,52.3696951],[13.1390242,52.3700712],[13.1388877,52.3701546],[13.139352,52.3698777],[13.1391595,52.3699865],[13.1395057,52.3697789]],"Hans-Georg-Straße":[[13.125893,52.4835972],[13.127012,52.4834543],[13.1271978,52.4835692],[13.1269127,52.4833706]],"Hans-Grade-Ring":[[13.1240278,52.3786682],[13.1225477,52.3787862],[13.1229016,52.379338],[13.1236955,52.3788644],[13.1231979,52.3784792],[13.1239084,52.3792013],[13.1236395,52.3791469],[13.1227445,52.3791021],[13.1225071,52.379009],[13.1238413,52.3787122],[13.1242407,52.3790051],[13.1223185,52.3787054],[13.1234266,52.37881],[13.1230794,52.3786249],[13.1240542,52.3790491],[13.1226724,52.3792572],[13.1237991,52.3783374],[13.1223906,52.3785503],[13.1233081,52.3789558],[13.1234669,52.3785335],[13.1221532,52.3784573],[13.123521,52.3792927],[13.1229839,52.3794615],[13.1232625,52.3777388],[13.1238623,52.3775958],[13.123518,52.3777852],[13.1221538,52.3780021],[13.1224093,52.3780486],[13.1236628,52.3776433],[13.1225542,52.3779064],[13.1220048,52.3781449],[13.1231134,52.377882],[13.122754,52.3778593],[13.1263637,52.381423],[13.1265279,52.3816235],[13.1263188,52.3813288],[13.1230559,52.3805591],[13.1228796,52.3808445],[13.1233381,52.3809325],[13.1231835,52.3810056],[13.1230218,52.3810431],[13.1228407,52.3810873]],"Hans-Marchwitza-Ring":[[13.0792921,52.39431],[13.0797645,52.3941504],[13.080028,52.3940362],[13.0803017,52.3939177],[13.0805423,52.3938135],[13.0809563,52.3938791],[13.0793095,52.3944549],[13.0794257,52.3944045],[13.0796858,52.3943405],[13.0816876,52.3945926],[13.0812574,52.394056],[13.0814699,52.3942387],[13.0816167,52.3944407],[13.0816566,52.3950685],[13.0814927,52.3951392],[13.0812808,52.3952307],[13.0810913,52.3953693],[13.0809137,52.3954459],[13.0807215,52.3955288],[13.0805738,52.3955926],[13.0804029,52.3956663],[13.0802714,52.395723],[13.0801084,52.3957934],[13.079086,52.3966267],[13.0792506,52.3965575],[13.0794152,52.3964882],[13.0795797,52.3964189],[13.0797443,52.3963497],[13.0799088,52.3962804],[13.0800734,52.3962112],[13.0802379,52.3961419],[13.0775136,52.395279],[13.0780492,52.3950429],[13.0784604,52.3948616],[13.080424,52.3946281],[13.0798235,52.3948892],[13.0808321,52.3949826],[13.0802054,52.3952181],[13.0793433,52.3942879],[13.0806961,52.3948644],[13.0799508,52.3949989],[13.0805601,52.3947463],[13.0800781,52.3951085],[13.0774594,52.3951678]],"Hans-Paasche-Straße":[[13.0517949,52.4219996],[13.0512474,52.4219951]],"Hans-Sachs-Straße":[[13.0325704,52.3960989],[13.031446,52.3951578],[13.0314605,52.3950141],[13.0314756,52.3948714],[13.0313037,52.3952134],[13.0312375,52.3956871],[13.031027,52.3955058],[13.031041,52.3953698],[13.0325556,52.3939464],[13.0322455,52.3942233],[13.0324286,52.3952216],[13.0324006,52.3954888],[13.0323783,52.3957157],[13.0324997,52.3966611],[13.0324895,52.3967698],[13.0324792,52.3968787],[13.032469,52.3969874],[13.0324588,52.3970961],[13.0318385,52.3971056],[13.0318468,52.3970101],[13.0318552,52.3969145],[13.0318635,52.396819],[13.031901,52.3965055],[13.0319105,52.3964097],[13.0319199,52.3963138],[13.0319294,52.396218],[13.0320785,52.3958569],[13.0320965,52.3956813],[13.0321252,52.3954001],[13.0321403,52.395253],[13.0321553,52.3951059],[13.0321703,52.3949588],[13.0321854,52.3948118],[13.0322004,52.3946647],[13.0322154,52.3945176],[13.0322305,52.3943705],[13.0322608,52.3940741],[13.0322771,52.3939141],[13.0324866,52.3946269],[13.032602,52.3944465],[13.0326127,52.3942845],[13.0326217,52.3941366],[13.0329636,52.3946753],[13.0329783,52.3944905],[13.032907,52.3948569],[13.0327853,52.3950506],[13.032824,52.3947911],[13.0326383,52.3940103],[13.0328895,52.3949898],[13.0327689,52.3951759],[13.0328886,52.3952328],[13.0328782,52.3953222],[13.0327412,52.3953697],[13.0316773,52.3944478],[13.0317219,52.394035],[13.031517,52.3941577],[13.0315045,52.3943135]],"Hans-Thoma-Straße":[[13.0667059,52.4034987],[13.0662172,52.4044327],[13.0675087,52.4042056],[13.0674393,52.4039371],[13.0675862,52.4034834],[13.0677171,52.4034397],[13.0668259,52.404353],[13.0668259,52.404353],[13.0668863,52.4046077],[13.0669788,52.4033878],[13.0668285,52.4035492],[13.0671155,52.4030436],[13.0670128,52.4033027]],Haseleck:po,Haselnussring:yo,Hasensprung:xo,Hasensteg:Eo,Hauptstraße:[[12.9662176,52.4567734],[12.9659343,52.4574529],[12.9658959,52.4575403],[12.9661794,52.4576976],[12.9658362,52.4563219],[12.9653078,52.4570928],[12.9648854,52.4581899],[12.9665167,52.4562298],[12.9661717,52.4564413],[12.9657462,52.4578232],[12.9659551,52.4566369],[12.965966,52.4564019],[12.9656673,52.4566921],[12.9655175,52.456692],[12.9658279,52.4565155],[12.9626652,52.4580044],[12.9631381,52.4623466],[12.9630421,52.4626769],[12.9630748,52.4628916],[12.9639607,52.4602556],[12.965044,52.4587637],[12.9625479,52.4625827],[12.9624554,52.4627839],[12.9632224,52.4620754],[12.9628079,52.4632127],[12.965532,52.4582218],[12.9627833,52.4626334],[12.9626966,52.4628267],[12.9627259,52.463471],[12.9656603,52.4581014],[12.9635833,52.4614622],[12.963537,52.461578],[12.9634906,52.4616938],[12.9668171,52.4567134],[12.9650304,52.4591108],[12.9649792,52.4592388],[12.9650816,52.4589828],[12.9646471,52.4589297],[12.9645992,52.4590575],[12.9645514,52.4591853],[12.9643075,52.4594163],[12.9642598,52.4595438],[12.964212,52.4596713],[12.9555649,52.4687522],[12.9617861,52.4656955],[12.9616738,52.466297],[12.9615323,52.4667494],[12.9639222,52.4603832],[12.9639022,52.4604398],[12.9638432,52.4605545],[12.9638218,52.4606137],[12.962453,52.4584318],[12.9637254,52.4589327],[12.9655485,52.4583918],[12.9661957,52.4570502],[12.9644411,52.4578035],[12.9642251,52.4600829],[12.9635657,52.4580325]],"Havelstr.":[],Havelstraße:[[13.0731002,52.3965538],[13.0740004,52.398796],[13.0738649,52.3980757],[13.073516,52.396328]],Havelwelle:wo,Hebbelstraße:[[13.0627132,52.4027389],[13.0626609,52.4028966],[13.0626316,52.402985],[13.062602,52.4030741],[13.0624242,52.4035884],[13.062448,52.4035102],[13.0624008,52.403665],[13.0623079,52.4034152],[13.0624008,52.403665],[13.0623365,52.4038759],[13.062313,52.4039531],[13.0622886,52.4040329],[13.0622589,52.4041311],[13.0623212,52.4031628],[13.0632805,52.4027791],[13.0630128,52.4038388],[13.062785,52.4037682],[13.0621858,52.4043571],[13.0616558,52.4048115],[13.0620851,52.404724],[13.0619992,52.4049632],[13.0617378,52.4051127],[13.0624378,52.4048239],[13.0625604,52.4044903],[13.0623583,52.4050977],[13.0623583,52.4050977],[13.0632941,52.4023454],[13.0618364,52.4074939],[13.0628444,52.4088817],[13.0623336,52.408038],[13.063274,52.4086039],[13.0624986,52.4082136],[13.0627073,52.4079311],[13.0620984,52.4057078],[13.0625291,52.4077536],[13.0624667,52.4081936],[13.0621984,52.4078832],[13.0619027,52.406807],[13.0618347,52.4063572],[13.0619343,52.4062122],[13.0620411,52.4077161],[13.0633014,52.4083604],[13.0634038,52.4015966],[13.0615444,52.4057692],[13.061567,52.4055967],[13.0616665,52.4059367],[13.0618119,52.405422],[13.0624977,52.4054947],[13.0621228,52.4056589],[13.0615162,52.4063487],[13.0612482,52.4065792],[13.0629391,52.4081454],[13.0616824,52.4072784],[13.062863,52.4053698],[13.0632001,52.40501],[13.0616665,52.4059367],[13.0623491,52.4036993],[13.0623238,52.4037713],[13.0642798,52.4013932],[13.0623173,52.4039389],[13.0615728,52.4061741],[13.0629337,52.4044812],[13.0623689,52.4074363],[13.062837,52.4035447],[13.0642543,52.40128],[13.0641373,52.4011782],[13.0623412,52.4038604],[13.0632624,52.4010453],[13.0626944,52.4027957],[13.0626367,52.4029697],[13.0626257,52.4030027],[13.0625967,52.40309],[13.0625673,52.4031789],[13.0622938,52.4040159],[13.0634002,52.4009546],[13.0635085,52.4022069],[13.0622942,52.4038557],[13.0623673,52.4033901],[13.0624886,52.4033773],[13.0623686,52.4027135],[13.0625678,52.4048076],[13.0625859,52.4047679],[13.0624773,52.4047565],[13.0624397,52.4052253],[13.0626476,52.4085756],[13.0626783,52.4045524],[13.0626551,52.4025941],[13.0627012,52.4045294],[13.0626798,52.4045847]],Hechtsprung:Co,Heckenstraße:[[12.9985757,52.4256381],[12.9950256,52.4260533],[12.9988357,52.4256123],[12.9983647,52.4257686],[12.9981384,52.425818],[12.9975584,52.4259397],[12.9978142,52.425876],[12.9969426,52.4260477],[12.9960307,52.4261974],[12.9963932,52.4260906],[12.9951145,52.4263553],[12.9948609,52.426399],[12.9946949,52.4263701],[12.9943884,52.4263412],[12.9940073,52.4264137],[12.9992374,52.4254945],[12.9957023,52.4261393],[12.9971444,52.4259037],[12.9997515,52.4253152]],Hegelallee:So,Hegemeisterweg:To,Heidereiterweg:Ro,Heideweg:Io,"Heilig-Geist-Straße":[[13.0698544,52.3977568],[13.0698545,52.3977026],[13.0698615,52.3976477],[13.0698617,52.3975907],[13.0695315,52.398677],[13.0695261,52.3985076],[13.0695422,52.3983349],[13.0695449,52.398177],[13.0695435,52.3979986],[13.0695382,52.3978259],[13.0695623,52.3976549],[13.069561,52.3974716],[13.0695751,52.3973329],[13.0698433,52.3984032],[13.069843,52.3985284]],Heimrode:vo,Heinestraße:[[13.1083647,52.3979703],[13.1085821,52.3987576],[13.108074,52.3978575],[13.1083229,52.3981734],[13.108562,52.3985935],[13.1084648,52.398452],[13.1089243,52.3977022],[13.1085866,52.3975113],[13.1084505,52.3973473],[13.1077117,52.3970595],[13.1077051,52.39725],[13.107849,52.3973919],[13.1072578,52.3964475],[13.1077612,52.3966785],[13.1073597,52.3965975],[13.1078631,52.3968325],[13.1075014,52.3967556],[13.1081487,52.3969892],[13.1075922,52.3968988],[13.1080623,52.3970973],[13.1087257,52.3980409],[13.1087694,52.3981001],[13.1091282,52.3983929]],"Heinrich-Heine-Weg":[[13.0494423,52.4434338],[13.0500444,52.4432842],[13.0497524,52.4433619],[13.0517492,52.442999],[13.0488262,52.4435866],[13.051073,52.4430905],[13.048227,52.4437607],[13.0485202,52.4436569],[13.0507864,52.4431595],[13.049133,52.4435068],[13.0505189,52.4432229],[13.047821,52.4439266],[13.0474753,52.4435743],[13.0536275,52.4426883],[13.0542873,52.4430308],[13.0567947,52.4445294]],"Heinrich-Mann-Allee":[[13.0691452,52.386074],[13.0782767,52.3802333],[13.0782902,52.3809616],[13.0806697,52.3811936],[13.0811921,52.3806938],[13.0810471,52.3816742],[13.080942,52.3800269],[13.0819294,52.3797737],[13.0785937,52.3808682],[13.0791754,52.3804522],[13.0825389,52.3772884],[13.0835891,52.3765107],[13.0821684,52.3774489],[13.0690896,52.3868604],[13.0692096,52.3873929],[13.0690579,52.3875082],[13.0671218,52.3886695],[13.0665945,52.3885323],[13.0668287,52.3884392],[13.0675006,52.3876293],[13.0831921,52.3777662],[13.0663467,52.3889787],[13.068303,52.3890256],[13.0682088,52.3878408],[13.0820289,52.3807939],[13.0818313,52.3802341],[13.0818313,52.3802341],[13.0821621,52.3792341],[13.0821796,52.3786675],[13.0835918,52.379339],[13.0840307,52.3760609],[13.0845314,52.3756075],[13.0844013,52.3757772],[13.0846798,52.3754554],[13.0841718,52.3759106],[13.0838624,52.3761894],[13.0849269,52.3752408],[13.0827665,52.3771927],[13.0830152,52.3771395],[13.0825932,52.3769254],[13.0834618,52.3766089],[13.0831047,52.3769225],[13.0834139,52.3767751],[13.0850512,52.3751007],[13.0848099,52.3747852],[13.0852727,52.3747816],[13.0861743,52.373691],[13.0866352,52.3736859],[13.0861884,52.3739382],[13.0858607,52.3742345],[13.0866638,52.3734801],[13.0871149,52.3732325],[13.0869797,52.3733873],[13.0867655,52.3730725],[13.0873062,52.3730658],[13.0876032,52.3729833],[13.0875774,52.3726873],[13.0883014,52.3707556],[13.0702662,52.3855341],[13.070599,52.3871196],[13.085578,52.3745547],[13.0859624,52.374586],[13.0686776,52.3874946],[13.0843076,52.3754984],[13.0694728,52.3870343],[13.075359,52.3824669],[13.0831541,52.3779406],[13.0977496,52.359699],[13.0700014,52.3868094],[13.0694206,52.3867769],[13.0871598,52.3730029],[13.0864615,52.381132],[13.0878416,52.3725964],[13.0827,52.3791382],[13.0736621,52.385109],[13.0660946,52.3892254],[13.0827858,52.3766195],[13.0761853,52.3832855],[13.077781,52.3818224],[13.0885901,52.3712649],[13.083214,52.3787846],[13.0781501,52.380473],[13.0781471,52.380318],[13.0778629,52.3801616],[13.077999,52.3800333],[13.0781437,52.3799353],[13.078289,52.3798369],[13.0786866,52.3798405],[13.078493,52.3797339],[13.0794004,52.3797306],[13.0750081,52.3824994],[13.0792973,52.3797279],[13.0899416,52.3714402],[13.0691314,52.3874109],[13.0688683,52.3875232],[13.0666301,52.3889542],[13.067535,52.3884211],[13.0676975,52.3883281],[13.0678252,52.388255],[13.0680519,52.3881286],[13.068191,52.3880459],[13.0683743,52.3879378],[13.0685145,52.3878548],[13.0687062,52.3877419],[13.0697031,52.3870303],[13.0673626,52.3885198],[13.0658383,52.3894639],[13.0812087,52.3782766],[13.0795383,52.3794847],[13.0802003,52.3790386],[13.0790351,52.3799113],[13.0804955,52.3788818],[13.0806065,52.3788075],[13.0807866,52.3786868],[13.0809908,52.3785501],[13.0810927,52.3784818],[13.0755452,52.3822674],[13.0757045,52.3821583],[13.0759095,52.3820178],[13.0761175,52.3818753],[13.0762749,52.3817675],[13.0765488,52.3815859],[13.0765819,52.3815635],[13.0767459,52.3814675],[13.0768227,52.3814154],[13.0769861,52.3812891],[13.0770243,52.3812632],[13.0770939,52.3811984],[13.0772113,52.3811189],[13.0773415,52.3810308],[13.0774391,52.3809832],[13.0774736,52.3809599],[13.0776476,52.3808533],[13.0777223,52.3808027],[13.0778861,52.3806798],[13.0779311,52.3806493],[13.0820126,52.377858],[13.0657452,52.389517],[13.0657975,52.389502],[13.0658858,52.3894195],[13.0659312,52.3893769],[13.0659744,52.3893366],[13.0660302,52.3892845],[13.0852817,52.3749678],[13.0853342,52.3749203],[13.0661654,52.3889873],[13.0687617,52.3876049],[13.0684547,52.3873531],[13.0661477,52.3887072],[13.0661848,52.3885757],[13.06643,52.3889134],[13.0661339,52.3885428],[13.066278,52.3888219],[13.0662015,52.3887722],[13.0662386,52.3887963],[13.0662229,52.3886642],[13.0663985,52.3889317],[13.0661675,52.3884795],[13.0660664,52.3889585],[13.0661209,52.3889427],[13.0666098,52.3886818],[13.0666907,52.388635],[13.0666989,52.3887578],[13.0667489,52.3887288],[13.0667959,52.3887016],[13.0664634,52.3888941],[13.0662761,52.3889858],[13.0667588,52.3888797],[13.0793656,52.3796813],[13.0790624,52.3814058],[13.0792997,52.3794961],[13.0689559,52.3875767],[13.0673055,52.3885318],[13.067265,52.3885077],[13.0751335,52.38257],[13.0750491,52.3825513],[13.0781929,52.3804713],[13.0792825,52.3796915],[13.079364,52.3796457],[13.0663792,52.389099],[13.077826,52.3814834]],"Heinrich-Zeininger-Straße":[[13.0442924,52.4208507],[13.0429076,52.4216074],[13.0445757,52.4206221],[13.0430707,52.4214803],[13.0432574,52.4213672],[13.044075,52.4209903],[13.045033,52.4203742],[13.0428746,52.4217801]],"Heinrich-von-Kleist-Straße":[[13.0987502,52.3886265],[13.0986703,52.3884834],[13.0982019,52.3881059],[13.0983199,52.3878206],[13.098703,52.3876138],[13.0982331,52.3876745],[13.0991751,52.3884775],[13.0993834,52.3888802],[13.0993174,52.3887491],[13.0990554,52.3883404],[13.0986164,52.3877941],[13.0981546,52.387527],[13.0992534,52.3886192],[13.0989761,52.3882327],[13.0974145,52.3865391],[13.0976136,52.3869095],[13.0988089,52.3887317],[13.0982541,52.3854616],[13.0971058,52.3855498],[13.0975617,52.3865099],[13.0973018,52.3867724],[13.0972159,52.386789],[13.097136,52.3868044],[13.0970486,52.3868213],[13.0970297,52.3865783],[13.0969372,52.386597],[13.0969071,52.3863334],[13.0968151,52.3863516],[13.0969337,52.3860559],[13.0968471,52.386074],[13.0967719,52.3860897],[13.0966889,52.3861071],[13.0971618,52.3861276],[13.0973194,52.3860951],[13.0975961,52.3854231],[13.0989181,52.389252],[13.097482,52.3866658],[13.0976819,52.3870302],[13.0984758,52.387404],[13.0981017,52.3868018],[13.0980192,52.3866556],[13.0979345,52.3865055],[13.0978472,52.3863508],[13.0977626,52.3862008],[13.0976806,52.3860553],[13.097703,52.3858171],[13.0980069,52.3857533],[13.0968552,52.3857952]],"Heinz-Rühmann-Weg":[[13.116625,52.3908314],[13.1165264,52.3906166],[13.1162697,52.3899806],[13.1163331,52.3901215],[13.1162033,52.3898329],[13.1159888,52.3893729],[13.115882,52.3891356]],"Heinz-Sielmann-Ring":[[13.1270874,52.4861326],[13.1272271,52.4866142],[13.1290973,52.4861488],[13.1264964,52.4869808],[13.1273724,52.4861646],[13.1286191,52.4862836],[13.1283075,52.4858992],[13.1281271,52.4863458],[13.1298811,52.4856285],[13.1294486,52.486112],[13.1262524,52.4867334],[13.1274712,52.4866114],[13.1275584,52.4861424],[13.1283995,52.486473],[13.1295386,52.4856706],[13.1281877,52.4865979],[13.1276967,52.486848],[13.1285911,52.4858593],[13.1295069,52.4861729],[13.1286582,52.4864958],[13.1271384,52.4867914],[13.1266742,52.4870115],[13.1263137,52.4862128],[13.1297201,52.4858532],[13.1289006,52.4859093],[13.1252858,52.4864949],[13.1297893,52.4859923],[13.1284465,52.4862334],[13.1266369,52.4868428],[13.1290132,52.4855833],[13.1294252,52.4835732],[13.1293789,52.4833287],[13.129174,52.4824304],[13.1265859,52.486677],[13.1278855,52.4860852],[13.1289988,52.4836198],[13.1279975,52.4818064],[13.1269775,52.4863956],[13.1263714,52.4864471],[13.1287547,52.482777],[13.1259238,52.4863113],[13.127575,52.486297],[13.1284726,52.4821594],[13.1284923,52.4822214],[13.1284163,52.4819765],[13.128436,52.4820385],[13.1285343,52.482344],[13.128554,52.482406],[13.1285253,52.4825597],[13.1277314,52.4815821],[13.1260872,52.4863182],[13.1271815,52.4868792],[13.127557,52.4868367],[13.128076,52.486203],[13.1289089,52.4819096],[13.1290446,52.4821497],[13.1291236,52.4823175],[13.1288504,52.4821692],[13.1289315,52.4823382],[13.124034,52.4862421],[13.1240741,52.4863519],[13.1243339,52.4861041],[13.1250009,52.4860278]],Heisenbergstraße:[[13.036325,52.4146411],[13.0361214,52.4148483],[13.0358842,52.4146228]],"Helene-Lange-Straße":[[13.0550405,52.4070755],[13.0552326,52.407043],[13.0555034,52.4069934],[13.0557703,52.4069468],[13.0563049,52.4068627],[13.0565218,52.4068259],[13.0569542,52.4067434],[13.0571987,52.4067008],[13.0571459,52.4069137],[13.0563214,52.4072974],[13.0571112,52.4069222],[13.0552828,52.4072301],[13.0549353,52.407292],[13.0565803,52.4070023],[13.054551,52.4074786],[13.0566973,52.4069898],[13.0559874,52.4071046],[13.055352,52.4072183],[13.0568176,52.4073047],[13.0560959,52.4073355],[13.0564445,52.4065325],[13.0562898,52.4071144],[13.0574225,52.4071799],[13.0558333,52.4071387],[13.0555002,52.4071942],[13.0561553,52.4071668],[13.0574682,52.4065982],[13.0579189,52.4068149],[13.0577516,52.406853],[13.0550134,52.4073115]],Helmertweg:Ao,Helmholtzstraße:[[13.0722243,52.407022],[13.0720734,52.4068778],[13.0719241,52.4067344],[13.0717682,52.4073134],[13.0733658,52.4080401],[13.073469,52.4078308],[13.0722659,52.4075522],[13.0720318,52.4073656],[13.0740231,52.4082196],[13.0722854,52.4079962],[13.0725565,52.4084113],[13.0719661,52.4078125],[13.071392,52.4068012],[13.0716311,52.407011],[13.0731734,52.4085012],[13.073195,52.407587],[13.0731409,52.4076082],[13.0726952,52.4080473],[13.0727704,52.4081159]],"Helmut-Just-Straße":[[13.1119598,52.4752548],[13.111139,52.4753625],[13.1107711,52.4754712]],"Henning-von-Tresckow-Straße":[[13.0552815,52.3945474],[13.0528683,52.39477],[13.0556492,52.3946191],[13.0553182,52.3946599],[13.0564728,52.3945176],[13.0564728,52.3945176],[13.053886,52.3948582],[13.0530828,52.3940182],[13.0525491,52.3940755]],Herderstraße:[[13.112832,52.3962222],[13.1131342,52.395987],[13.1118882,52.3956317],[13.1137335,52.3959655],[13.1132452,52.3957443],[13.1121524,52.3956539],[13.1118021,52.3959764],[13.1128638,52.3958997],[13.1123197,52.3960094],[13.1120864,52.3962757],[13.1120628,52.3960188],[13.1123169,52.3961798]],"Hermann-Elflein-Straße":[[13.0499919,52.3990095],[13.0501302,52.3991182],[13.0499143,52.3992441],[13.0498741,52.3993646],[13.0497004,52.3996907],[13.0503451,52.3991501],[13.0502949,52.3992967],[13.050255,52.3994135],[13.050205,52.3995597],[13.05037,52.3995815],[13.0492725,52.4011378],[13.0492329,52.4012574],[13.0491406,52.4015361],[13.0491406,52.4015361],[13.0497036,52.4010436],[13.0499134,52.400934],[13.0497036,52.4010436],[13.0495192,52.401594],[13.0500334,52.4000649],[13.0500334,52.4000649],[13.0499822,52.4002099],[13.0501007,52.3998747],[13.0497252,52.4002925],[13.0498113,52.4000396],[13.049774,52.3991366],[13.0492535,52.4011348],[13.0490369,52.4011681],[13.0499433,52.4003199],[13.0496759,52.4004376],[13.049589,52.4006218],[13.0503092,52.3995083],[13.0498052,52.4000573],[13.0497754,52.3998374],[13.0492225,52.4003039],[13.0493859,52.3991133],[13.0498599,52.3998967],[13.0496438,52.4005319],[13.0498321,52.3999785],[13.0498716,52.4005225],[13.0503191,52.399479],[13.0507339,52.3992559],[13.0493707,52.4013492],[13.0494584,52.4010846],[13.0494993,52.400961],[13.0495416,52.4008333],[13.0497703,52.4008448],[13.0496302,52.4012628],[13.0495868,52.4013924],[13.0495419,52.4015264],[13.0536746,52.3994948],[13.0506105,52.3992248],[13.0508579,52.3992616],[13.0497305,52.4002771],[13.0508034,52.3993093],[13.0498393,52.4008957],[13.0493304,52.4012398],[13.0488932,52.4003135],[13.049309,52.4002685],[13.0487832,52.4002178],[13.0493975,52.4003086],[13.0497837,52.3998946],[13.0499822,52.3993275],[13.0503343,52.3991815],[13.0502991,52.399538],[13.0501567,52.3999585],[13.0501031,52.4001167],[13.0500148,52.4003775],[13.0499647,52.4005254],[13.0499355,52.4006117],[13.0498453,52.4005971],[13.0497515,52.4011604],[13.0497727,52.4010964],[13.0498177,52.4009608],[13.0493224,52.3990673]],"Hermann-Göritz-Straße":[[13.0417185,52.4179469],[13.0411968,52.4178182],[13.0417484,52.4176114],[13.0419781,52.4173489],[13.0411709,52.4176656],[13.0416029,52.4174963],[13.0417556,52.4174363],[13.0418298,52.4174072],[13.0419039,52.4173781],[13.0413138,52.4176086],[13.0413861,52.4175805],[13.0414583,52.4175525],[13.0415306,52.4175244],[13.0409429,52.4177535],[13.0410189,52.4177242],[13.0410949,52.4176949],[13.0421018,52.4175538],[13.0421629,52.4176117],[13.0422239,52.4176696],[13.0419326,52.4177863],[13.0418712,52.417728],[13.0418098,52.4176697],[13.0415345,52.4177704],[13.0415958,52.4178293],[13.0416571,52.4178881],[13.0413791,52.4179968],[13.0413183,52.4179372],[13.0412576,52.4178777]],"Hermann-Kasack-Straße":[[13.0522977,52.4162439],[13.0517963,52.4163298],[13.0512371,52.4164282],[13.0527908,52.4163543],[13.0523485,52.4164339],[13.0518968,52.4165155],[13.0478332,52.4169592],[13.0489879,52.4172064],[13.0513587,52.4166036],[13.050945,52.4166892],[13.0508952,52.4164998],[13.0490204,52.4168721],[13.049841,52.4167218],[13.0493221,52.4168196],[13.0484967,52.4169591],[13.0482125,52.4170178]],"Hermann-Krome-Weg":[[13.106056,52.470591],[13.1060514,52.4705363],[13.1060474,52.4704892],[13.1060426,52.4704319],[13.1060386,52.470385],[13.1060333,52.4703215],[13.1065232,52.4705735],[13.1065278,52.4706157],[13.106513,52.470479],[13.1065069,52.4704232],[13.1065008,52.4703671],[13.1064942,52.4703063]],"Hermann-Maaß-Straße":[[13.1061874,52.4009796],[13.1065187,52.4007089],[13.1068507,52.400406],[13.1058363,52.4012533],[13.1056374,52.4015994],[13.1068847,52.4003193],[13.1073313,52.4000799],[13.1051182,52.4019641],[13.1059052,52.4013483],[13.106356,52.4009857],[13.1055682,52.4015063],[13.1052626,52.4018227],[13.107622,52.3997845],[13.110561,52.3985394],[13.1055254,52.4023489],[13.1057533,52.4018468],[13.1053374,52.4025781],[13.1042735,52.4034401],[13.1045415,52.403323],[13.1051376,52.4027878],[13.1056773,52.4019426],[13.1054317,52.4030029],[13.1039341,52.403052],[13.1055497,52.4020841],[13.1048764,52.4029818],[13.1046921,52.4036937],[13.1054383,52.4024033],[13.107247,52.4007656],[13.1069441,52.4008681],[13.1073937,52.4004649],[13.1083754,52.3997854],[13.1082796,52.3996579],[13.1048182,52.4024144],[13.1098433,52.3981529],[13.1095637,52.3981832],[13.1093502,52.3988682],[13.1104215,52.3980401],[13.110104,52.3980531],[13.1093518,52.3982889],[13.1095161,52.398673],[13.1111822,52.3980242],[13.1107723,52.3980271],[13.1102879,52.3983936],[13.1098341,52.3983821],[13.1097203,52.3984168],[13.111242,52.3984113],[13.1104185,52.3984172],[13.1042827,52.403675],[13.1059221,52.4016777],[13.104685,52.4026845],[13.1046065,52.4027338],[13.1042945,52.4026757],[13.1039496,52.4029471],[13.1051837,52.4031578],[13.1047091,52.4031748],[13.1049543,52.4033049],[13.1105859,52.3986978],[13.1075589,52.4011567],[13.1071524,52.4001332],[13.1069181,52.4010162],[13.1070889,52.400201],[13.1068405,52.4010797],[13.1084771,52.3989931],[13.1083658,52.3990976],[13.1081667,52.3992927],[13.1080884,52.3993681],[13.1084305,52.3995096],[13.108387,52.3995523],[13.1083465,52.3995922],[13.1083152,52.3996229],[13.1080746,52.3998592],[13.1079894,52.3998999],[13.107829,52.4000377],[13.1077671,52.4000982]],"Hermann-Mattern-Promenade":[[13.0405641,52.417674],[13.0403169,52.4174308],[13.0408292,52.4179653],[13.0395514,52.4167077],[13.0411325,52.4182436],[13.0441218,52.4213278],[13.0437933,52.4214314],[13.0446409,52.4217442],[13.0446626,52.4218518],[13.0439545,52.4215914],[13.0436192,52.4212848],[13.0440397,52.4212251],[13.0444331,52.4215402],[13.0385651,52.4166373],[13.044529,52.4223432],[13.0449379,52.4220518],[13.0391826,52.4165397],[13.0428015,52.4200113],[13.0432748,52.4204704],[13.0429554,52.4201649],[13.0421049,52.4200323],[13.0424559,52.4203564],[13.0431185,52.4203179],[13.0426476,52.4198658],[13.0407646,52.4188305],[13.0424925,52.4197276],[13.0418433,52.4198574],[13.0386001,52.4165308],[13.0454996,52.4226698],[13.0456591,52.4228293],[13.0457993,52.4229641],[13.0459511,52.4231015],[13.03931,52.4172438],[13.0392388,52.4172719],[13.0391677,52.4172996],[13.0390994,52.4173264],[13.0390266,52.4173551],[13.0389559,52.4173834],[13.0389559,52.4173834],[13.0388064,52.4174418],[13.0393869,52.4163681],[13.0461188,52.4232602],[13.0424428,52.41968],[13.0425996,52.41982],[13.0398946,52.4170393],[13.0398458,52.4169931],[13.0397969,52.4169469],[13.0396453,52.4167974],[13.0395983,52.4167526],[13.0393276,52.416677],[13.0392793,52.4166313],[13.0392309,52.4165855],[13.0404135,52.4175232],[13.0403652,52.417477],[13.0406651,52.4177669],[13.0406146,52.4177205],[13.0413188,52.4184151],[13.0412567,52.4183579],[13.0411946,52.4183007],[13.0410202,52.418144],[13.0409565,52.4180844],[13.0408929,52.4180249],[13.0432261,52.4204213],[13.0430677,52.4202714],[13.0429054,52.4201151],[13.0427514,52.4199637],[13.038883,52.4169455],[13.0388376,52.4169014],[13.0387921,52.4168574],[13.0387467,52.4168134],[13.0387013,52.4167694],[13.0386559,52.4167254],[13.0386105,52.4166813],[13.0379965,52.4166402],[13.0380827,52.4166245],[13.0381689,52.4166089],[13.0382551,52.4165933],[13.0383414,52.4165777],[13.0384276,52.4165621],[13.0385138,52.4165464],[13.0426367,52.4205262],[13.0425915,52.4204837],[13.0425463,52.4204413],[13.0425011,52.4203988],[13.042327,52.4202438],[13.0422826,52.4202015],[13.0422381,52.4201592],[13.0421937,52.4201169],[13.0421493,52.4200746],[13.0460014,52.4237794],[13.0461342,52.4240947],[13.0460444,52.4239484],[13.0465627,52.4248516],[13.0464658,52.4246681],[13.0474998,52.4255799],[13.0465379,52.4244546],[13.0471385,52.4250269],[13.0469316,52.425491],[13.0473885,52.4254085],[13.0465922,52.4239815],[13.0451985,52.4227473],[13.0451194,52.4227798],[13.045047,52.4228096],[13.0449838,52.4228356],[13.0449022,52.4228691],[13.0448323,52.4228979],[13.045396,52.4228859],[13.0454481,52.4229346],[13.045501,52.422984],[13.0455512,52.4230309],[13.0456614,52.4231512],[13.0457149,52.4231999],[13.0457618,52.4232426],[13.0458088,52.4232854],[13.0414672,52.4186784],[13.0415191,52.4187417],[13.0411875,52.4190093],[13.0416054,52.4188291],[13.0416724,52.4188916],[13.0413456,52.4191619],[13.0417524,52.41896],[13.0418226,52.41903],[13.0415002,52.4193156],[13.0419048,52.4191064],[13.0419543,52.4191557],[13.0416563,52.4194627],[13.0420357,52.4192368],[13.0420974,52.4192937],[13.0421676,52.4193643],[13.0422434,52.4194321],[13.0410158,52.4192818],[13.0410976,52.4192546],[13.0411,52.4190436],[13.0413307,52.4195941],[13.0414058,52.4195639],[13.0411671,52.4194445],[13.0412503,52.4194117],[13.0414233,52.4193479],[13.041257,52.4191942],[13.0468078,52.4249326],[13.0468436,52.4249941],[13.0471869,52.4256064],[13.0471486,52.4255446],[13.046929,52.4251675],[13.0465015,52.424438],[13.0472395,52.425795],[13.0475614,52.4257395],[13.0464413,52.4237421],[13.0463861,52.423632],[13.0463406,52.423525],[13.0469148,52.4245954],[13.0468834,52.4245424]],"Hermann-Muthesius-Straße":[[13.0861855,52.3766604],[13.0852529,52.3779069],[13.0853797,52.377803],[13.0857973,52.3774848],[13.0863209,52.3767349],[13.0864666,52.3768157],[13.0842366,52.3776771],[13.0846166,52.37786],[13.084772,52.3779332],[13.0859098,52.3773834]],"Hermann-Mächtig-Straße":[[13.0413209,52.4220277],[13.0436174,52.4202705],[13.0438242,52.4201201],[13.0441681,52.4199172],[13.0436971,52.4202395],[13.0438991,52.4200908],[13.04409,52.4199484],[13.0442868,52.4197877],[13.0419046,52.4215914],[13.0419426,52.4215632],[13.0419855,52.4215312],[13.0420286,52.421499],[13.0421796,52.4213817],[13.0422194,52.4213527],[13.0422638,52.4213204],[13.0423098,52.4212871],[13.0426121,52.4210673],[13.0426564,52.4210331],[13.0426981,52.4210009],[13.0427355,52.420972],[13.0428924,52.4208579],[13.0429242,52.4208337],[13.0429652,52.4208025],[13.0430042,52.4207727],[13.0410928,52.4221207]],"Hermann-Struve-Straße":[[13.0118926,52.4238266],[13.0114403,52.4240273],[13.0117321,52.4236534],[13.0114961,52.4237301],[13.0111426,52.4237435],[13.0124263,52.4235887],[13.0126969,52.4243482],[13.0123134,52.4234769],[13.0121887,52.4238282],[13.0127207,52.4245377],[13.012522,52.4241719],[13.0126408,52.4238299],[13.0127505,52.4239016],[13.0130557,52.4240619],[13.0130854,52.4242994],[13.0131204,52.4246158],[13.0123753,52.4238268]],"Hermann-Weyl-Straße":[[13.05924,52.4304864],[13.0587569,52.4309184],[13.0584045,52.4310453],[13.0611592,52.4298597],[13.0613759,52.4300868],[13.0579479,52.4312],[13.0580594,52.4311708],[13.0577783,52.4312476],[13.0576642,52.4312699],[13.057466,52.4313218],[13.0573505,52.431341],[13.0571613,52.431382],[13.0570414,52.4313982],[13.0600122,52.4302909],[13.059567,52.4305274]],Hermannswerder:Mo,"Herta-Hammerbacher-Straße":[[13.0401098,52.4203049],[13.0426151,52.4193328],[13.0428695,52.4192442],[13.0431143,52.4191118],[13.0433676,52.4190095],[13.0439307,52.4195796],[13.0438225,52.4195869],[13.043133,52.4196114],[13.0432399,52.4195478],[13.0433882,52.4196945],[13.0436287,52.4193816],[13.0437075,52.4193376],[13.0398921,52.4205802],[13.0390233,52.4207253],[13.0431908,52.4198223],[13.0434503,52.4189781],[13.0431964,52.4190807],[13.0429479,52.4192144],[13.0426953,52.4193037],[13.04068,52.4199511],[13.0405824,52.4201057],[13.040475,52.4201455],[13.0403934,52.4201757],[13.0415772,52.4194971],[13.0417226,52.419639],[13.0418093,52.41961],[13.0415571,52.4197078],[13.0414668,52.4197374],[13.0412286,52.4198326],[13.0413224,52.4197996]],"Hertha-Thiele-Weg":[[13.1400927,52.3676239],[13.1393706,52.3680495],[13.1402733,52.3675175],[13.1395511,52.3679431],[13.1397317,52.3678367],[13.1399796,52.3681041],[13.1398704,52.3681682],[13.1406469,52.3677121],[13.1404985,52.3677993],[13.140332,52.3678971],[13.1401582,52.3679992]],Herthastraße:[[13.1054407,52.3995215],[13.1061401,52.3990388],[13.1060401,52.3987907],[13.1063407,52.3990916],[13.1057168,52.3985939],[13.1062165,52.3992516],[13.1054104,52.3989232],[13.1066379,52.3988653],[13.1052776,52.3986859],[13.1055691,52.3991957],[13.1057257,52.399463],[13.1050394,52.3989041],[13.1064979,52.3989202],[13.1051497,52.3988835],[13.1062045,52.3987285],[13.1055797,52.3994927],[13.1052358,52.3991687],[13.1058094,52.3985743]],Herzbergstraße:[[12.9950512,52.4148413],[12.9979417,52.4151856],[12.9963608,52.4164669],[12.9975778,52.4154008],[12.9968177,52.4173711],[12.9968896,52.4170928],[12.9966112,52.4168705],[12.9964943,52.4167341],[12.9971408,52.4174801],[12.9981617,52.4159813],[12.9977579,52.414827]],Hessestraße:[[13.0607223,52.4145],[13.0605163,52.4147987],[13.0606411,52.4140249],[13.0611005,52.4136251],[13.0609137,52.4142295],[13.0615543,52.4130948],[13.0611897,52.4132463],[13.0617112,52.4133765],[13.0617136,52.4135674],[13.0595074,52.4144412],[13.0615486,52.4137486],[13.0612664,52.4139327],[13.0606887,52.4141623],[13.0611019,52.4137662],[13.0607057,52.4141344],[13.0605664,52.4143241],[13.0604634,52.414453],[13.0603402,52.4146071],[13.0602125,52.4146677],[13.0599719,52.414823],[13.0597248,52.4147054],[13.0595005,52.4146377],[13.0594112,52.4149786],[13.0597108,52.4150811],[13.0598539,52.4151744],[13.0597204,52.4155113],[13.0595145,52.4153932],[13.0592709,52.4153124],[13.0591021,52.4156043],[13.0592956,52.4156726],[13.0595075,52.4157474],[13.059797,52.4158797],[13.0599547,52.4159996],[13.0600833,52.4160974],[13.0603981,52.4159337],[13.0602699,52.4158358],[13.0601305,52.4157293],[13.060594,52.4156638],[13.0604423,52.4155484],[13.0603158,52.4154521],[13.0607482,52.4153834],[13.0606339,52.4152779],[13.0605231,52.4151757]],Hoffbauerstraße:[[13.0529232,52.3951266]],"Hoher Weg":[[13.0988383,52.4012772],[13.0984962,52.4011194],[13.0991592,52.4010195],[13.0981982,52.4013591],[13.0987831,52.4013409],[13.099043,52.4008557],[13.0993268,52.4008032],[13.0986575,52.4006905],[13.0991436,52.4005614]],Holzmarktstraße:[[13.0703148,52.4006719],[13.0704185,52.4010621],[13.0708323,52.401095],[13.0713256,52.4010964],[13.0714578,52.400997],[13.0710199,52.4014626],[13.069369,52.4002609],[13.0702319,52.4012436],[13.0701074,52.4010366],[13.0708451,52.4009788],[13.0704134,52.4007638],[13.0693477,52.4003742]],"Horst-Bienek-Straße":[[13.0466493,52.4158107],[13.0467822,52.416093],[13.0470759,52.4167044],[13.0469474,52.4164282],[13.0471879,52.4161316],[13.0477919,52.4162407],[13.0470764,52.4169349],[13.0471462,52.4170734],[13.0470707,52.4154547],[13.0470064,52.4153195]],Horstweg:Lo,Hubertusdamm:Po,Hugstraße:[[12.9980883,52.4231823],[12.9991919,52.4235368],[12.9989638,52.423651],[12.9973254,52.4230276],[12.9974395,52.4229355],[12.9967058,52.4216862],[12.9997027,52.4187957],[12.9967131,52.4211728],[12.9970993,52.4199932],[13.0005577,52.4183282],[12.9971367,52.4212188],[12.9980299,52.4197711],[12.9969481,52.4207478],[12.9967382,52.4201235],[12.9988565,52.4192318],[12.9970656,52.4214635],[12.997083,52.4197131],[12.9971028,52.4216278],[12.9994461,52.4189355],[12.9977825,52.4196385],[12.9981942,52.4196891],[12.9967488,52.4200614],[13.0003463,52.4185825],[12.9978811,52.4200252],[12.9974186,52.4205762],[12.9982081,52.4195434],[12.9999802,52.4186491],[12.9972755,52.4207121],[12.9985362,52.4195236],[12.999312,52.4191313],[12.9970972,52.4205381],[12.9970591,52.4210486],[12.9965272,52.4209499],[12.9965449,52.4214995],[12.9968552,52.4215167],[12.9975963,52.4203019],[12.9973743,52.4199866],[12.9970987,52.4201347],[12.9964917,52.4213119],[12.9970975,52.4199092],[12.9989535,52.4191778],[12.9972557,52.4228974],[12.9971809,52.4224522],[12.9976479,52.4229044],[12.9971196,52.4227426],[12.997786,52.4231209],[12.9967592,52.4223174],[12.9957927,52.4220435],[12.997136,52.4222737],[12.9967739,52.4219281],[12.9968138,52.4221144],[12.9974517,52.4222194],[12.9976461,52.4222645],[12.9962975,52.4217198],[12.9985831,52.4234198],[12.9964917,52.4213119],[12.9984369,52.4236069],[12.9971869,52.4219789],[12.9984157,52.4240338],[12.9990251,52.4239226],[12.9986746,52.4238496],[12.9989749,52.423881],[12.9983635,52.4239708],[12.998592,52.4238752],[12.9990908,52.4239751],[12.9991389,52.4240133]],Humboldtring:bo,Humboldtstraße:[[13.0616716,52.3949268],[13.0616565,52.3951572],[13.0614488,52.3947959],[13.0616741,52.3944038],[13.0616565,52.3951572],[13.0620594,52.3948542],[13.0614058,52.394677],[13.062278,52.3948515],[13.062221,52.3948142],[13.062153,52.3948003],[13.0615644,52.3950082],[13.0622325,52.3954808],[13.0614932,52.3945122],[13.0614659,52.3948432],[13.0614144,52.3947009]],Höhenstraße:[[13.0645239,52.4227731],[13.0658267,52.4235558],[13.0647184,52.4230368],[13.0656792,52.4222817],[13.0650296,52.4233904],[13.06492,52.4225154],[13.0670673,52.4235918],[13.0660431,52.4231268],[13.0665468,52.4244912],[13.066189,52.4223267],[13.0659072,52.4240481],[13.0656709,52.4242782],[13.0667443,52.423591],[13.0658002,52.4234757],[13.0659844,52.423393]],Hügelweg:[[13.0115195,52.4231068],[13.0120529,52.4230321],[13.0050224,52.4245224],[13.0064898,52.4242018],[13.0052796,52.4244743],[13.0067007,52.4241593],[13.0062718,52.4242607],[13.0018937,52.4253429],[13.0017562,52.425812],[13.0019664,52.4255957],[13.0021956,52.4258695],[13.0025469,52.4258652],[13.0022534,52.4256232],[13.0022851,52.4252592],[13.0025882,52.4253688],[13.0048523,52.4249771],[13.0046879,52.4246139],[13.0039985,52.425259],[13.0033724,52.425448],[13.0027795,52.4252291],[13.0043524,52.42514],[13.004494,52.425106],[13.0038704,52.4252901],[13.0035968,52.4254794],[13.0051913,52.4249594],[13.0044124,52.4248247],[13.0055459,52.4244191],[13.0142733,52.4228461],[13.0147119,52.423372],[13.0135635,52.423012],[13.0134746,52.4230374],[13.0058887,52.4244459],[13.0115308,52.4234472],[13.0103584,52.4233933],[13.0078637,52.4242319],[13.0090665,52.4240158],[13.0107085,52.4236841],[13.0100767,52.4237165],[13.0117294,52.4233187],[13.0121979,52.4233157],[13.0130337,52.4231342],[13.0110408,52.4235572],[13.0081332,52.4241417],[13.0129345,52.423227],[13.0084305,52.424114],[13.0093439,52.4238719],[13.0113369,52.4235521],[13.0095494,52.4240134],[13.0098257,52.4238376],[13.008998,52.4242488],[13.0138303,52.4225591],[13.0099198,52.4239308],[13.0043304,52.4247363],[13.0020583,52.4256922],[13.0122518,52.4226159],[13.0092695,52.4236557],[13.0086007,52.4238215],[13.0088719,52.4237494],[13.0076716,52.4240309],[13.008335,52.4238608],[13.0079851,52.4239638],[13.0074122,52.4240787],[13.0105473,52.4232007],[13.0094299,52.4235076],[13.0134402,52.4226833],[13.0132658,52.4226047],[13.012957,52.4226787],[13.012957,52.4226787],[13.0089666,52.4235916],[13.0086806,52.4236585],[13.0080553,52.4238],[13.0077433,52.4238679],[13.0139896,52.4233635]],"Ida-Wüst-Weg":[[13.1261788,52.4826015],[13.1260034,52.4824349],[13.1264683,52.4823577],[13.1259091,52.4822259]],"Im Apfelgarten":[[13.0507206,52.4477507],[13.0498355,52.4473837],[13.0504902,52.447827],[13.0502797,52.4474438],[13.050129,52.4472533],[13.0514964,52.4488661],[13.0501774,52.4475331],[13.0512147,52.4481234],[13.0500179,52.447399],[13.0520044,52.4485273],[13.0503499,52.4476828],[13.051725,52.4485547],[13.0499093,52.4470951],[13.0507332,52.4475323]],"Im Bogen":[[13.0210942,52.3844512],[13.0208613,52.3845662],[13.0206215,52.3846699],[13.0203757,52.3847648],[13.0215311,52.3846135],[13.0213882,52.3846335],[13.0212458,52.3847096],[13.0210497,52.3847989],[13.0208447,52.3848871],[13.0206348,52.3849698],[13.0204244,52.3850485],[13.0181854,52.3856644],[13.0184211,52.3856468],[13.019467,52.3853813],[13.0197288,52.3853238],[13.0170698,52.3853076],[13.0144971,52.3854324],[13.0139364,52.3854183],[13.0157635,52.3852804],[13.0142777,52.3851415],[13.0150611,52.3852975],[13.0171976,52.3853962],[13.0153939,52.3853402],[13.0161299,52.3853039],[13.0142547,52.3853931],[13.016676,52.3853192],[13.0147329,52.385226],[13.0147725,52.3854777],[13.0180367,52.3852219],[13.0154502,52.3856888]],"Im Französischen Quartier":[[13.0608109,52.3990946],[13.0610813,52.3988266],[13.0606004,52.398849],[13.0604791,52.3991444],[13.0603577,52.3994375],[13.0608816,52.3995662],[13.0613781,52.3994677],[13.0613424,52.3990498],[13.0615567,52.3988689],[13.0613781,52.3994677],[13.0617818,52.3991196],[13.0614936,52.3990728],[13.0609289,52.3988035],[13.06096,52.3991172],[13.0608403,52.3994143]],"Im Hirschen":[[13.0968937,52.4602504],[13.096412,52.4602961],[13.0965005,52.4601422],[13.0969812,52.4611683],[13.097019,52.4613564],[13.0965259,52.4608596],[13.0969991,52.4605172],[13.0970656,52.4615907],[13.0963382,52.4606484],[13.0965742,52.459764],[13.0961093,52.4610145],[13.0963275,52.4614685],[13.0972502,52.460901],[13.0971421,52.4607384]],"Im Königswald":[[13.0997967,52.4483991]],"Im Neuen Garten":[[13.0741496,52.4183845],[13.0714564,52.4157586],[13.0694682,52.4221073],[13.0665386,52.4146711],[13.0642717,52.4099835],[13.0644752,52.4100728],[13.0669699,52.4113643],[13.0655588,52.4106974],[13.0647475,52.4111956],[13.0638845,52.4090789],[13.0669189,52.406371],[13.0654662,52.4105141],[13.0659966,52.4108743],[13.0631001,52.4097311],[13.0657146,52.4133889],[13.0652882,52.413062],[13.0743082,52.4185535],[13.0677708,52.4179819],[13.0654237,52.4130287],[13.0657952,52.4135224],[13.0657146,52.4133889],[13.0696141,52.4221964],[13.0705502,52.4190974],[13.0695623,52.4220073]],"Im Nikolaiquartier":[[13.0545792,52.3981908],[13.0540342,52.3985153],[13.0539888,52.3983636],[13.0543451,52.3984875],[13.0542893,52.3982855],[13.0544399,52.3986894],[13.0544282,52.3987265],[13.0544164,52.3987635],[13.0544047,52.3988007],[13.0543929,52.3988377],[13.0543812,52.3988748],[13.0547686,52.3986563],[13.0547571,52.3986929],[13.0547456,52.3987296],[13.0547341,52.3987662],[13.0547227,52.3988029],[13.0547112,52.3988395],[13.0546997,52.3988761],[13.0546882,52.3989128]],"Im Park Sansssouci":[[13.0403361,52.404426],[13.0390073,52.4042182]],"Im Park":[[12.9631778,52.4564819],[12.9588778,52.4528969],[12.9648912,52.4565882],[12.9584279,52.4529648],[12.9654711,52.4570693]],"Im Schäferfeld":[[13.1249679,52.375381],[13.1241749,52.3751467],[13.1239478,52.3750791],[13.1244678,52.3752365],[13.1234076,52.3748911],[13.1254102,52.3756016],[13.1250232,52.3754545],[13.1246276,52.3754445],[13.1236658,52.3750035],[13.1261876,52.3757141],[13.1257937,52.3752063],[13.1235629,52.3745709],[13.1262258,52.3753488],[13.1247063,52.3749282],[13.1218993,52.3744611],[13.1263938,52.3753865],[13.1254331,52.3749605],[13.1240438,52.374717],[13.1269619,52.3756119],[13.1266666,52.3755564],[13.1256613,52.375675],[13.1221178,52.3746084],[13.1267224,52.3759354],[13.1240094,52.375319],[13.1264016,52.3759412],[13.126592,52.3758565]],"Im Wildpark":[],"Im Winkel":[[12.9811041,52.4922109],[12.9800019,52.4920169],[12.980467,52.4918425],[12.9796158,52.4922503]],Immenseestraße:[[13.015393,52.384467],[13.0151314,52.3843936],[13.0152975,52.384659],[13.0149458,52.3847874],[13.0152233,52.384194],[13.0149838,52.3847044],[13.015678,52.3841754],[13.0151658,52.3838711],[13.015136,52.3840638],[13.015293,52.3836896]],"In den Neuen Höfen":[[13.1287108,52.3626059]],"In der Aue":[[13.1273645,52.3857708],[13.1276575,52.3857753],[13.1280188,52.3857511],[13.1283032,52.3857121],[13.1284542,52.3858066],[13.1294805,52.3857097],[13.1298689,52.3858849],[13.1299907,52.3858748],[13.1304928,52.3858305],[13.1307979,52.3860174],[13.1310971,52.3859281],[13.1313699,52.3858978],[13.1317215,52.3859151],[13.1342238,52.3861542],[13.1331194,52.3860249],[13.1334054,52.3860817],[13.1345878,52.3859368],[13.134861,52.3860376],[13.1351455,52.3859703],[13.1354648,52.3859443],[13.1357822,52.3859774],[13.1361809,52.3860134],[13.1365442,52.386006],[13.1370277,52.3859708],[13.1373394,52.3859055],[13.1334994,52.385398],[13.1313271,52.3853098],[13.1358169,52.3855823],[13.1306827,52.3855441],[13.1289206,52.3854162],[13.1343117,52.3853319],[13.1286158,52.3854277],[13.1351802,52.3853461],[13.1299002,52.3854377],[13.1349144,52.3854872],[13.1297489,52.385551],[13.136053,52.3855681],[13.1303077,52.3855282],[13.1359233,52.3852764],[13.1338722,52.385377],[13.1280392,52.3853726],[13.1299752,52.3855232],[13.1356989,52.3855918],[13.1343786,52.385586],[13.1294172,52.38545],[13.1313346,52.3854844],[13.1347345,52.3852836],[13.1347205,52.3852249],[13.1346726,52.3850202],[13.1346586,52.3849615],[13.1336396,52.3861264],[13.1342238,52.3861542],[13.1275786,52.3854205],[13.1352518,52.3851325],[13.135533,52.3854877],[13.1377253,52.3857813],[13.1332608,52.3854443],[[13.1348169,52.3855804],[13.1347987,52.3854971],[13.1346888,52.3855068],[13.1347086,52.3855905],[13.1348169,52.3855804]],[13.1371229,52.3854385],[13.1370426,52.3854409],[13.1327324,52.3855618],[13.1343948,52.3858797],[13.1343915,52.3859316],[13.1339799,52.3858307],[13.1339007,52.3858288]],"In der Feldmark":[[12.9769644,52.4125886],[12.9783424,52.412842],[12.9787903,52.4129264],[12.9774259,52.4126719],[12.977872,52.4127555],[12.9862256,52.4111767],[12.9861659,52.4112843],[12.9754154,52.4126217],[12.9863914,52.4114231],[12.9766678,52.4118528],[12.9767508,52.411396],[12.9853602,52.4118579],[12.982455,52.4126286],[12.9855924,52.4117616],[12.9843128,52.4116683],[12.9844025,52.4116449],[12.9845753,52.4115893],[12.984665,52.411566],[12.9848359,52.4115444],[12.9849256,52.4115211],[12.9851671,52.4114522],[12.9852568,52.4114289],[12.9854239,52.411383],[12.9855136,52.4113597],[12.9856769,52.4113106],[12.9857666,52.4112873],[12.9829241,52.4120501],[12.9831009,52.4120051],[12.9831706,52.4119822],[12.9828535,52.4120716],[12.9835165,52.411889],[12.9834468,52.4119119],[12.9839121,52.4122404],[12.9847706,52.4119906],[12.9836924,52.4118408],[12.9837618,52.4118179],[12.9839298,52.4117696],[12.9839992,52.4117467],[12.9813523,52.4120893],[12.9764816,52.4123346],[12.9769993,52.4121469],[12.9771821,52.4121808],[12.9775025,52.4122351],[12.9768654,52.412122],[12.9761579,52.4123563],[12.975909,52.4123112],[12.9759002,52.4118291],[12.9755851,52.4118118],[12.9755618,52.4117168],[12.9755373,52.4116169],[12.9755108,52.4115088],[12.9758301,52.4115987],[12.9758519,52.4116706],[12.9760126,52.4118515],[12.976209,52.4118906]],"In der Heide":[[12.98526,52.4099309],[12.9854732,52.4099909],[12.9853042,52.4099118],[12.9858413,52.4098032],[12.9848401,52.40963],[12.9852166,52.410037],[12.9862604,52.4100769],[12.9859669,52.4105055],[12.9860158,52.4104358],[12.9839083,52.4097727],[12.986447,52.4103175],[12.9841566,52.4100509],[12.9855373,52.4103727],[12.9841459,52.4103241],[12.9845611,52.4104108],[12.9844417,52.4104266]],Inselhof:Fo,Inselweg:Do,Interessentenweg:ko,Isoldestraße:[[13.1048001,52.4566201],[13.1042617,52.4569275],[13.1040612,52.4571341],[13.1039662,52.4577673],[13.1036572,52.4580965],[13.1046261,52.4575689],[13.1044355,52.4586999],[13.1047143,52.4606616],[13.1042052,52.4584204],[13.1044233,52.460083],[13.1044039,52.4598944],[13.1045342,52.4607954],[13.1042767,52.4585871],[13.1043429,52.4597088],[13.1053837,52.4570184],[13.1051963,52.4572335],[13.1054375,52.4567817],[13.1037934,52.4595347],[13.103525,52.4587683],[13.1038573,52.4597078],[13.1035901,52.4586233],[13.1037557,52.4591656],[13.1035091,52.4589835],[13.1038791,52.4600775],[13.1039127,52.459877],[13.1038335,52.4605245],[13.1041633,52.4606978],[13.1038722,52.4574345],[13.103928,52.4602484],[13.1042687,52.4588706],[13.1045066,52.4604661],[13.1042971,52.4590996],[13.1048574,52.4573368],[13.1037081,52.4604018],[13.1040048,52.4611279],[13.1045496,52.4610663],[13.1046266,52.4578037],[13.104031,52.45789],[13.1040037,52.4579501]],"Jacques-Russ-Straße":[[13.0951905,52.3872493],[13.0950901,52.3872721],[13.0955064,52.3871782],[13.0954058,52.3872018],[13.0952163,52.3874893]],Jagdhausstraße:[[13.1422668,52.3799894],[13.1457307,52.3774057],[13.1446745,52.377821],[13.1477425,52.375926],[13.146226,52.3771122],[13.1444745,52.378579],[13.1459572,52.3771902],[13.1444054,52.3781489],[13.144699,52.3783068],[13.1452815,52.3767025],[13.1449637,52.3769796],[13.145011,52.3764956],[13.1461877,52.3764336],[13.1442701,52.3791328],[13.145058,52.3781838],[13.1447582,52.3784711],[13.1452367,52.3780126],[13.1443735,52.3788355],[13.1449731,52.3771674],[13.1460074,52.3769231],[13.1449765,52.3767625],[13.143168,52.3791566],[13.1436375,52.3790764],[13.1460254,52.3767498]],Jahnstraße:[[13.0919973,52.3890391],[13.0918691,52.3892432],[13.0915864,52.3889815],[13.0916597,52.3891315],[13.0917906,52.3885624]],"Jakob-von-Gundling-Straße":[[13.0479004,52.4108838],[13.0502305,52.4118174],[13.0461468,52.411948],[13.0484515,52.4118058],[13.0467826,52.4120635],[13.0482079,52.4118061],[13.0478768,52.4118655],[13.0476655,52.4119034],[13.0480797,52.4118291],[13.0469765,52.4120284],[13.0471761,52.4119923],[13.046587,52.4120989]],"Jochen-Klepper-Straße":[[13.0514622,52.4146087],[13.0528461,52.4143712],[13.0519853,52.4146476],[13.0511868,52.4151601],[13.0517226,52.4150542],[13.0483026,52.415703],[13.0479696,52.4157209],[13.0489246,52.4155483],[13.0492453,52.4155331],[13.0482718,52.4152367],[13.0476322,52.4152052],[13.0487246,52.4150089],[13.0482067,52.4151009],[13.04879,52.4151434],[13.0476979,52.4153406],[13.0492944,52.4149072],[13.0493583,52.4150422],[13.0508943,52.4148381],[13.0510021,52.4148187],[13.051129,52.4147959]],"Joe-May-Straße":[],"Johann-Goercke-Allee":[[13.0511552,52.4087697],[13.0497777,52.4083906],[13.0500438,52.4085041],[13.0511195,52.4089927],[13.0503645,52.4084946],[13.0476166,52.4078312],[13.0506341,52.4086068],[13.0478444,52.4079735],[13.0509565,52.4091972],[13.0481638,52.4079979],[13.0504075,52.4090464],[13.0504447,52.4089721],[13.0504861,52.4088893],[13.0505284,52.4088045],[13.050564,52.4087334]],"Johann-Strauß-Platz":[[13.1089961,52.4022783],[13.1099718,52.4017849],[13.1096649,52.4024475],[13.1088779,52.4016182],[13.1105355,52.4022209],[13.110195,52.4026159],[13.1094871,52.4018355],[13.1100481,52.4018333],[13.1094497,52.4018116]],"Johanna-Just-Straße":[[13.1305623,52.3631836],[13.1303737,52.3638423],[13.1312075,52.3636464],[13.1311877,52.3635532],[13.1321055,52.3643856],[13.1323894,52.3645741],[13.1326316,52.3646458],[13.1309584,52.3639197],[13.1312414,52.3641541],[13.1314717,52.3643002],[13.1312144,52.3642306],[13.1313126,52.3643011]],"Johannes-Kepler-Platz":[[13.130219,52.3764868],[13.1296205,52.3762792],[13.1297881,52.3766416],[13.12979,52.3767855],[13.1286643,52.3757483],[13.1298668,52.3760346],[13.1298704,52.3757334],[13.1298683,52.3759127],[13.130578,52.3761681],[13.1286623,52.3759198],[13.1286633,52.3758338],[13.1286612,52.3760074],[13.1291704,52.3760868],[13.130261,52.3767175],[13.1287418,52.3758319]],"Johannes-Lepsius-Straße":[[13.0531027,52.4116386],[13.0533514,52.4107661],[13.053151,52.4119646],[13.0528798,52.4110234],[13.0534085,52.4109452],[13.0528229,52.410846],[13.0531461,52.4117677],[13.0528481,52.4125824],[13.0527806,52.4124287],[13.052713,52.4122751],[13.0526455,52.4121214],[13.0525119,52.4118758],[13.0531751,52.4132963],[13.0524426,52.4117218],[13.0523733,52.4115678],[13.052304,52.4114137],[13.0531043,52.413143],[13.0530334,52.4129896],[13.0529626,52.4128363],[13.0530568,52.4104176],[13.0541165,52.4119532],[13.0544257,52.4118324],[13.0543709,52.4116608],[13.0536228,52.4116701],[13.053708,52.411416],[13.054142,52.4113989],[13.053428,52.4113381],[13.0538533,52.4119845]],"Johannes-R.-Becher-Straße":[[13.0943967,52.3664963],[13.0928589,52.3685484],[13.092909,52.3684797],[13.0929999,52.3683553],[13.0938173,52.3665544],[13.0921258,52.3694778],[13.0923171,52.3695372],[13.0925083,52.3695965],[13.092224,52.3690601],[13.0924205,52.3691153],[13.0926169,52.3691705],[13.0928134,52.3692256],[13.0937234,52.3684272],[13.0938219,52.368305],[13.0939204,52.3681828],[13.0940189,52.3680606],[13.0941994,52.3678285],[13.094294,52.367706],[13.0943886,52.3675835],[13.0944832,52.3674609],[13.0916638,52.3697957],[13.0918605,52.3698471],[13.0920571,52.3698984],[13.0930709,52.3682579],[13.0922538,52.3699497],[13.0919345,52.3694185],[13.0941119,52.3669438],[13.0938054,52.3670217],[13.0937247,52.3671392],[13.0936439,52.3672567],[13.0935632,52.3673743],[13.0934677,52.3676492],[13.0933951,52.3677613],[13.0933225,52.3678733],[13.09325,52.3679854],[13.0939845,52.3664075],[13.0932195,52.3689852],[13.0933195,52.3688713],[13.0934195,52.3687573],[13.0935195,52.3686434],[13.0957522,52.365582],[13.0959361,52.3656636],[13.09612,52.3657451],[13.096304,52.3658267],[13.0964879,52.3659082],[13.0960732,52.365233],[13.0962747,52.3653188],[13.0964762,52.3654046],[13.0966777,52.3654905],[13.0968792,52.3655763],[13.0964996,52.3649268],[13.0966964,52.3650101],[13.0968932,52.3650935],[13.09709,52.3651768],[13.0972868,52.3652601],[13.0969377,52.3646006],[13.0971322,52.3646875],[13.0973267,52.3647744],[13.0975211,52.3648613],[13.0977156,52.3649482],[13.0964854,52.3644837],[13.0963444,52.3645856],[13.0961975,52.3646917],[13.0960591,52.3647917],[13.0958007,52.3650218],[13.095464,52.3659326],[13.095655,52.3660159],[13.0958459,52.3660992],[13.0960369,52.3661826],[13.0962278,52.3662659],[13.0956825,52.3651325],[13.0955631,52.3652445],[13.0954302,52.365369],[13.0952055,52.3655932],[13.0951134,52.3657065],[13.0950162,52.3658262],[13.0949172,52.365948],[13.093867,52.3664886],[13.0936963,52.3667148],[13.0915992,52.3701124],[13.0915646,52.3701011],[13.0916781,52.370138],[13.0915072,52.3700825]],Johannsenstraße:[[13.0831043,52.3910737],[13.0830081,52.3909538],[13.0856985,52.3910033],[13.0855325,52.3908967],[13.0850608,52.3909704]],"Joliot-Curie-Straße":[[13.0627148,52.3972171],[13.062875,52.3968377],[13.0627695,52.3970875],[13.062822,52.3969633]],"Julius-Posener-Straße":[[13.0845182,52.3775584],[13.0850236,52.377609],[13.0854005,52.3773174],[13.0846025,52.3771414],[13.084802,52.3770706],[13.0850202,52.3769753],[13.0851905,52.3769411],[13.085546,52.3771173],[13.0857035,52.3771902]],Jutestraße:[[13.0901437,52.3979955],[13.0899232,52.3982335],[13.0907002,52.3977951],[13.0902785,52.3978187],[13.090088,52.3979052],[13.088924,52.3982831],[13.0908443,52.3977273],[13.0897442,52.3980608]],Jägerallee:[[13.0530824,52.4031806],[13.0543662,52.4063918],[13.0551208,52.40646],[13.054217,52.4064676],[13.054407,52.4072027],[13.0532425,52.4060398],[13.0526179,52.4093815],[13.051904,52.4076003],[13.048171,52.407031],[13.0539747,52.4079862],[13.0520219,52.4033321],[13.0519822,52.4035458],[13.0519369,52.4037651],[13.0520193,52.4040611],[13.0516238,52.4041908],[13.0514151,52.4041821],[13.0515002,52.4040605],[13.0515807,52.403466],[13.0516227,52.4033832],[13.0524271,52.4032915],[13.0527955,52.4035424],[13.0526327,52.4040168],[13.0529448,52.404511],[13.0529876,52.4039776],[13.0530859,52.4043093],[13.0531393,52.4044895],[13.0532306,52.4046543],[13.0531711,52.4052266],[13.0532373,52.4055219],[13.0532003,52.4057655],[13.0546214,52.4076289],[13.0520171,52.4042244],[13.0526778,52.4036347],[13.0538059,52.4047659],[13.0535737,52.406223],[13.0548791,52.4077567],[13.0555164,52.4048112],[13.0532789,52.403024],[13.0527651,52.4033994],[13.0530629,52.40456],[13.0507788,52.4039317],[13.054649,52.4066562],[13.0537766,52.4075425],[13.0509086,52.4033728],[13.0510221,52.403193],[13.0508754,52.4037779],[13.0539921,52.405006],[13.0541369,52.4054118],[13.0547753,52.4078556],[13.05374,52.4071987],[13.0535549,52.4065933]],Jägersteig:[[13.1252965,52.3892502],[13.1235827,52.3894169],[13.1235827,52.3894169],[13.1256472,52.388928],[13.1247225,52.3896452],[13.1242963,52.3891643],[13.1245593,52.3893165],[13.1242378,52.3894448],[13.1245354,52.389052],[13.1243862,52.389778],[13.1237708,52.3891231],[13.1259678,52.3889094],[13.1245395,52.3896127],[13.1239907,52.3898921],[13.1240994,52.389607],[13.1244208,52.3894773],[13.1246786,52.3891287],[13.1242032,52.3897455],[13.1252952,52.3889928],[13.123914,52.3891998],[13.1238534,52.3898114],[13.1239164,52.3895745],[13.1251786,52.388997],[13.1241531,52.3890875],[13.1247423,52.389349],[13.1232719,52.3891646],[13.1261174,52.3884615],[13.124325,52.3887588],[13.1233441,52.388817],[13.1244618,52.3887316],[13.1238547,52.3887893],[13.1254015,52.3886204],[13.1251031,52.388751],[13.1236594,52.3897995],[13.1236594,52.3897995],[13.1258335,52.3885773]],Jägerstraße:[[13.0562302,52.4008521],[13.05593,52.4012333],[13.0561447,52.4011078],[13.0561093,52.4014056],[13.0558994,52.4013249],[13.0555083,52.4025036],[13.0563706,52.3999031],[13.0563205,52.4000517],[13.0562811,52.4001686],[13.0562314,52.4003162],[13.0557664,52.4010525],[13.0557155,52.4012048],[13.0559134,52.4006134],[13.0558803,52.4007122],[12.967415,52.4041377],[12.9683988,52.403932],[12.9681165,52.4040174],[12.9678197,52.4041052],[12.9677837,52.4035742],[12.9674225,52.4036855],[12.9681104,52.4036691],[12.9676294,52.4039182],[13.055849,52.4007337],[13.055513,52.4015828],[13.0561726,52.3998341],[13.0561303,52.3999629],[13.0557626,52.4017401],[13.0560897,52.4000865],[13.0560513,52.4002036],[13.0560085,52.4003339],[13.0554605,52.4019831],[13.055509,52.401841],[13.0555524,52.4017138],[13.0555927,52.4015955],[13.0553005,52.4024524],[13.0553692,52.402251],[13.0554129,52.4021228],[13.0555798,52.4022886],[13.0552292,52.4026625],[13.0554437,52.4026959],[13.0554865,52.4025685],[13.0551917,52.4027839],[13.0554131,52.4027885],[13.0556233,52.4021573],[13.0556706,52.4020142],[13.0557189,52.4018703],[13.0559741,52.4016233],[13.0559519,52.400274],[13.0558316,52.4006032],[13.0561495,52.3998542],[13.0558146,52.4009087],[13.0565311,52.4012497],[13.0559825,52.4001936],[13.0555131,52.4026006],[13.0562565,52.4002403],[13.056389,52.3998338],[13.0560136,52.4000438],[13.0555694,52.4023199],[13.0555324,52.4025283],[13.0561669,52.3998014],[13.0560131,52.4000975],[13.0564795,52.4020744],[13.0554294,52.4028346],[13.0559865,52.4020305],[13.0547957,52.4018609],[13.0562179,52.4025896],[13.0553672,52.4021485],[13.05539,52.4020834],[13.0558192,52.4021937]],Kahlenbergstraße:[[12.9915743,52.4075314],[12.9920542,52.4071378],[12.9908626,52.4072636],[12.9917707,52.4071102],[12.9925275,52.406866],[12.9915754,52.4071609],[12.9915242,52.4072725],[12.9915346,52.4074402],[12.9918891,52.4073839],[12.9919288,52.407475],[12.9935257,52.4071332],[12.9936884,52.4072005]],"Kaiser-Friedrich-Straße":[[12.9904201,52.4046425],[13.0065855,52.4058582],[13.0097724,52.4056061],[12.9807325,52.40325],[13.0086751,52.4047581],[12.9896556,52.4046396],[12.9907476,52.4045498],[12.9914388,52.4043303],[12.9924325,52.4051699],[12.991069,52.4045749],[12.9906519,52.4047606],[12.9902638,52.4048661],[12.9891322,52.4045646],[12.9924377,52.4048642],[12.986133,52.4044693],[12.9973383,52.4053],[12.9856526,52.4040382],[12.9855725,52.4040013],[13.0038898,52.4053143],[13.0045412,52.4052144],[12.9978131,52.4056452],[12.9973352,52.4057181],[12.9995426,52.4051372],[12.9996127,52.4049157],[12.9994787,52.4053624],[12.9992487,52.405623],[13.0046265,52.4048573],[13.0035736,52.4053978],[12.9988048,52.4053825],[13.0004454,52.4051783],[13.0000867,52.4050946],[12.9999628,52.4048708],[13.0006482,52.4049723],[13.0006901,52.4047132],[13.0000315,52.4046675],[13.0001454,52.4043696],[13.0007134,52.4044024],[13.0014186,52.4049147],[13.0014186,52.4049147],[13.001353,52.4045038],[13.0015462,52.4045167],[13.0015543,52.4044255],[13.0021542,52.405116],[13.0021542,52.405116],[13.0021751,52.4050115],[13.0022598,52.4048758],[13.0023062,52.4047367],[13.0023576,52.4045904],[13.0025946,52.405106],[13.0028293,52.4049253],[13.0029138,52.4047873],[13.002959,52.4046477],[13.0045412,52.4052144],[13.0046265,52.4048573],[13.0015405,52.4057238],[13.0012716,52.4057238],[13.0010026,52.4057238],[13.0004502,52.4056811],[13.0000878,52.4056816],[13.0034674,52.4051161],[13.0040166,52.4048883],[13.0040537,52.4046815],[13.0032772,52.4051732],[13.0034857,52.4050149],[13.0037418,52.4046609],[12.9968768,52.4055985],[12.9962868,52.4054407],[12.9950751,52.4051561],[12.9963472,52.4050629],[12.9959639,52.40552],[12.9958507,52.4055072],[12.9966188,52.4055016],[12.9960031,52.4047839],[12.9964762,52.4048562],[12.9957675,52.4050743],[12.9966143,52.4051641],[12.9967752,52.4052743],[12.9945794,52.4052984],[12.9945356,52.4049508],[12.9951331,52.4055311],[12.9970169,52.4052737],[12.9979132,52.4052826],[12.9983291,52.4053141],[12.9809728,52.4028233],[12.9911536,52.4047401],[12.9915542,52.4047533],[12.9917177,52.404769],[12.9922154,52.4048143],[12.99344,52.4048618],[12.9909564,52.4047463],[12.991999,52.4046263],[12.9876786,52.4044262],[12.9892246,52.4043672],[12.9888133,52.404582],[12.9878344,52.4047759],[12.9880297,52.404455],[12.9866517,52.4043599],[12.988585,52.4045031],[12.9868981,52.4044079],[12.9887996,52.404529],[12.9873218,52.4044659],[12.9871388,52.4046282],[12.9873977,52.4044751],[12.986333,52.4042558],[12.9865556,52.4043269],[12.9901072,52.4047584],[12.9898467,52.4049299],[12.9944357,52.4052575],[12.9889378,52.404727],[12.9866907,52.4045285],[12.9869618,52.4046195],[12.9932016,52.4050741],[12.9892598,52.4047456],[12.9891523,52.4047411],[12.9841928,52.4040652],[12.9847931,52.4036809],[12.9818058,52.4030213],[12.983957,52.4035389],[12.9823313,52.4031418],[12.984353,52.4036429],[12.9841946,52.4036011],[12.9845601,52.4037083],[12.9831306,52.4033174],[12.9829459,52.4032913],[12.9833799,52.4034022],[12.9852652,52.4039205],[12.9850059,52.4038344],[12.9819356,52.4030469],[12.9814669,52.4027946],[12.995604,52.4047247],[12.9959284,52.4050239],[12.995859,52.4052111],[12.9829419,52.4030266],[12.9822749,52.4030451],[12.9829564,52.4031351],[12.9830572,52.4025341],[12.983198,52.4022865],[12.9898257,52.4054396],[12.9896675,52.4052105],[12.9896947,52.4056406],[12.9876803,52.4048364],[12.987195,52.4049461],[12.9859534,52.4040699],[13.0030427,52.4061008],[12.9992235,52.4052944],[12.988513,52.4057533],[13.0015704,52.4060824],[12.9844735,52.4038421],[12.9848347,52.4040837],[12.9851229,52.404065],[12.9851189,52.4040804],[12.9856948,52.404529],[12.9812775,52.4027901],[12.9824419,52.403169],[12.9855033,52.4043294],[12.9854336,52.4043012],[12.9838179,52.4033333],[12.9858255,52.4043688],[12.9859193,52.4043988],[12.9851988,52.4042472],[12.9984161,52.4053317],[13.0081335,52.4047391],[13.008314,52.4047454],[13.0084946,52.4047518],[12.9868987,52.4047095],[13.0092357,52.4048343],[13.0099708,52.4048728],[13.010744,52.4048838],[[13.0060846,52.4055627],[13.0060847,52.4055435],[13.0057712,52.4055431],[13.0057573,52.4055431],[13.0055807,52.4055445],[13.0052728,52.4055431],[13.0049949,52.4055418],[13.0029023,52.4055321],[13.0026976,52.4055314],[13.0017469,52.4055303],[13.0017421,52.4057465],[13.0017398,52.4058545],[13.0017334,52.406144],[13.0015276,52.4061494],[13.0012667,52.4059614],[13.0010985,52.4058401],[13.0007364,52.4058401],[12.9997219,52.4058401],[12.9996788,52.4058401],[12.9998735,52.4064096],[13.0003134,52.40766],[13.0003246,52.4076919],[13.0003365,52.4077256],[13.0004402,52.4079458],[13.0011414,52.4089175],[13.0014484,52.4095368],[13.0055388,52.4114972],[13.0066992,52.4099833],[13.0073656,52.4089465],[13.007479,52.4087701],[13.0076924,52.4084381],[13.0078052,52.4084496],[13.0078362,52.4083179],[13.0081148,52.4070207],[13.007437,52.4070215],[13.0074326,52.4068974],[13.0071612,52.4068954],[13.0061439,52.4068524],[13.0061449,52.4068099],[13.0061465,52.4067413],[13.0061672,52.405863],[13.0060527,52.4058633],[13.0060523,52.4058138],[13.0059951,52.4058139],[13.0059941,52.4056741],[13.005994,52.4056608],[13.0060845,52.4056608],[13.0060846,52.4055762],[13.0060846,52.4055627]],[12.9903063,52.4045905],[12.9936831,52.4048575],[12.9927192,52.4046894],[12.9899408,52.4046069],[13.0104068,52.4058077],[13.00796,52.4054326],[12.9883624,52.4050049],[12.9925232,52.4046601],[12.9924187,52.4046455],[12.9922417,52.4045535],[12.9924907,52.404581],[12.9927025,52.4046044],[12.9897198,52.4046215],[12.9923231,52.4048784],[13.0109429,52.404655],[12.989945,52.4045073],[13.0049765,52.4053213],[12.9823134,52.4028906]],Kamblystraße:[[13.1330545,52.361506],[13.132943,52.3616854]],Kanalweg:Oo,Kantstraße:[[13.0291987,52.3910582],[13.0294661,52.3910759],[13.0262418,52.3908495],[13.0266834,52.3908782],[13.0281977,52.39099],[13.0275676,52.391203],[13.0275682,52.390953],[13.0271409,52.3909201],[13.0289287,52.3910403],[13.0273722,52.3909383],[13.0285696,52.3910154],[13.0250186,52.3907164],[13.0252137,52.3907289],[13.0254088,52.3907414],[13.025604,52.3907539],[13.0239733,52.3906446],[13.0241672,52.3906569],[13.0243612,52.3906692],[13.0245551,52.3906816],[13.025064,52.3911339],[13.0252755,52.3911493],[13.0254869,52.3911646],[13.0256984,52.39118],[13.0259099,52.3911953],[13.0261214,52.3912106],[13.0263329,52.391226],[13.0265443,52.3912413],[13.0296976,52.3912426],[13.0294305,52.3912255],[13.0291635,52.3912083],[13.0288965,52.3911912],[13.0286295,52.3911741],[13.0283624,52.391157],[13.0302457,52.3911151],[13.0304737,52.391132],[13.0307018,52.391149],[13.0309298,52.391166],[13.0311558,52.3913857],[13.0311224,52.3915558],[13.0310878,52.3917321],[13.0310563,52.391893],[13.0310228,52.3920637],[13.0306739,52.3916758],[13.0306288,52.3918587],[13.0305854,52.3920352],[13.0277322,52.3909081]],"Karen-Jeppe-Straße":[[13.0519902,52.4110936]],"Karl-Foerster-Straße":[[13.0794995,52.3953679],[13.0793537,52.395241],[13.0792078,52.3951141],[13.0790619,52.3949872]],"Karl-Gruhl-Straße":[[13.1001612,52.3944075],[13.1005237,52.3945227],[13.1005352,52.3949215],[13.1008015,52.3944289],[13.0999161,52.3945248],[13.1007184,52.3948738],[13.1011506,52.3947401],[13.1006935,52.3944654],[13.1003226,52.3944984],[13.0997633,52.3947902],[13.0973936,52.3959369],[13.0962025,52.3963656],[13.096813,52.3961455],[13.0957444,52.3965298],[13.0976355,52.3958528],[13.0970991,52.3961593],[13.0972746,52.395978],[13.0958668,52.3964892],[13.0957154,52.3966231],[13.0972367,52.3960822],[13.0954312,52.3967559],[13.0968894,52.3962254],[13.0963598,52.3959852],[13.0973924,52.3956186],[13.0984767,52.3959928],[13.0958917,52.3961458],[13.097023,52.3957505],[13.0965371,52.3959234],[13.0967486,52.3958514],[13.0973924,52.3956186],[13.0949471,52.3964914],[13.0952691,52.3963721],[13.0987028,52.3955675],[13.0990096,52.3947228],[13.0992648,52.394849],[13.0983679,52.3952735],[13.0993296,52.3948109],[13.0991822,52.3953009],[13.1002405,52.3949283],[13.0986867,52.3951627],[13.0986682,52.3948488],[13.100394,52.3948735],[13.0988853,52.3947847],[13.0996973,52.3947196],[13.0996806,52.395124],[13.0995703,52.3951672],[13.1000473,52.3949972],[13.0989608,52.3950691],[13.0993586,52.3953117],[13.1000019,52.3950999],[13.0986257,52.3951018],[13.0953507,52.3966694],[13.0977883,52.3954796],[13.0977093,52.3953935],[13.0948763,52.3963664],[13.095462,52.3960103],[13.0961114,52.3960733],[13.0961928,52.396047],[13.0965118,52.3963704],[13.0963667,52.396473],[13.0959493,52.3967581],[13.0999239,52.3943941],[13.0971309,52.3962315],[13.0971449,52.3953246],[13.0956859,52.3962316],[13.0964863,52.3962669],[13.0973236,52.3959611],[13.0949563,52.3968094],[13.0948771,52.3968362]],"Karl-Krieger-Straße":[[13.0407755,52.4167969],[13.0402664,52.4169663],[13.040297,52.4166761],[13.0400963,52.4164799],[13.0404166,52.4164524],[13.0405043,52.4168731],[13.0400538,52.4167677],[13.0405947,52.416621],[13.0398518,52.4162874],[13.040188,52.4169955],[13.0404259,52.4169019],[13.0402206,52.4167053],[13.0399767,52.4167973],[13.0397727,52.4166036],[13.0400165,52.4165111],[13.0408699,52.4167621],[13.0406877,52.4165861],[13.0405083,52.4164163]],"Karl-Liebknecht-Straße":[[13.0935615,52.3991504],[13.0908667,52.3923465],[13.0932401,52.3952753],[13.0930367,52.3951946],[13.0929851,52.3951159],[13.0930795,52.3953138],[13.0932964,52.3956605],[13.0925022,52.3950641],[13.0918258,52.3922678],[13.0918837,52.3923662],[13.0919581,52.3924929],[13.092167,52.3925986],[13.0922144,52.3926796],[13.0923209,52.3930256],[13.0924728,52.3930406],[13.0925421,52.3931513],[13.0926678,52.3932937],[13.0930534,52.3934667],[13.0929305,52.3936347],[13.0929682,52.3937005],[13.093019,52.3937988],[13.0930903,52.3939946],[13.0931971,52.3941055],[13.0933586,52.3941077],[13.0932582,52.3942207],[13.0934397,52.3944356],[13.093493,52.3945443],[13.0936382,52.3947103],[13.0930039,52.3948888],[13.093727,52.3951645],[13.0941769,52.3958811],[13.09424,52.3959797],[13.0943287,52.3961195],[13.0943784,52.3961974],[13.0944865,52.3963631],[13.0945581,52.3964751],[13.0913385,52.3926346],[13.0916302,52.3931016],[13.0917242,52.3932521],[13.0919022,52.3934915],[12.9756657,52.4063835],[12.9720824,52.4089455],[13.0949573,52.3970632],[13.0951037,52.3973288],[13.094728,52.3978215],[13.0947147,52.397571],[13.0946629,52.3974874],[13.094599,52.3973869],[13.0945334,52.3972876],[13.0943887,52.3970614],[13.0943887,52.3970614],[13.0941521,52.3966907],[13.0940494,52.3965316],[13.0939818,52.3964286],[13.0937855,52.3961199],[13.0936462,52.3959048],[13.0935523,52.3957613],[13.093461,52.3956202],[13.0930521,52.3957213],[13.0937392,52.3960463],[13.0940898,52.3967924],[13.0927031,52.3944396],[13.0926639,52.3946439],[13.0926386,52.3943426],[13.0925257,52.3941802],[13.0924393,52.3940551],[13.0923771,52.3939623],[13.092263,52.3938463],[13.0929395,52.3947927],[13.0909936,52.3917803],[13.0910767,52.3917143],[13.0906811,52.3904327],[13.0909358,52.3909844],[13.0913515,52.3915462],[13.0908399,52.3908232],[13.09592,52.3985394],[13.0926389,52.3934741],[13.0957464,52.3982978],[13.0954565,52.3978618],[13.0956229,52.3978228],[13.0957142,52.3979888],[13.093756,52.3952146],[13.0924825,52.3951732],[13.0948691,52.3962109],[13.0895859,52.390673],[13.089166,52.3907041],[13.0902644,52.3905126],[12.9787508,52.4084394],[12.9716986,52.4059732],[12.9717318,52.4059359],[12.9715363,52.4057974],[12.9735889,52.411438],[13.0981147,52.4012692],[13.0953557,52.3976913],[13.0961882,52.3986844],[13.0954254,52.3975571],[13.09573,52.3976276],[13.0916302,52.3931016],[12.9727414,52.4064312],[12.972743,52.4065708],[12.9733586,52.4067203],[12.9734917,52.4067197],[12.9738805,52.4067209],[12.9740076,52.4067217],[12.9743955,52.4067205],[12.9745169,52.4067214],[12.9733647,52.4062769],[12.9734891,52.406278],[12.9738832,52.4062853],[12.97404,52.4062856],[12.9744029,52.4062959],[12.9745248,52.4062745],[12.9727397,52.4062916],[13.0959629,52.399099],[13.0903563,52.3906746],[13.0930903,52.3939946],[13.094796,52.3961176],[13.0951147,52.3961388],[13.0950416,52.3960455],[13.0953557,52.3960677],[13.0952826,52.3959743],[13.0939207,52.3963345],[13.0938587,52.3962356],[13.0938297,52.3961893],[13.0945334,52.3972876],[13.0914799,52.3917459],[12.9724111,52.4093901],[12.9724111,52.4093901],[12.9721216,52.4058148],[12.9721216,52.4058148],[12.9721123,52.4053493],[12.9722677,52.4053471],[12.9720957,52.4050366],[12.9722483,52.404878],[12.9721238,52.4064567],[12.9723004,52.4062966],[12.9713728,52.4061364],[13.094035,52.3956594],[13.0968627,52.3995168],[13.0941211,52.3957967],[12.9716144,52.405455],[12.973082,52.4073257],[12.973082,52.4073257],[12.973818,52.407584],[12.9736493,52.4086533],[13.090652,52.3915459],[13.0912995,52.3914654],[13.0918132,52.3931341],[13.0912435,52.3913417],[13.0929895,52.3939659],[13.091269,52.3914179],[13.0917086,52.3929385],[13.0908793,52.3908919],[13.091608,52.3927813],[13.092397,52.3931217],[13.0927708,52.3937045],[13.0927174,52.3936112],[13.0930933,52.395387],[13.0915316,52.3926211],[13.092993,52.3939236],[12.9787272,52.4081285],[13.0925025,52.3941466],[13.0924613,52.394087],[13.0930717,52.3941571],[13.0940577,52.3956155],[13.0931106,52.3942304],[13.0935012,52.3956831],[13.0952165,52.3980376],[13.0934449,52.3938808],[13.0951594,52.3979548],[13.0952723,52.3981186],[13.0918883,52.3938502],[13.0916522,52.3939037],[13.0948683,52.396935],[13.0940315,52.3955596],[13.0921207,52.3936345],[13.0931439,52.3939038],[13.093964,52.3955462],[13.094016,52.3956292],[13.0913403,52.3915288],[13.0931414,52.3941589],[13.0911689,52.3917691],[13.0936486,52.3945759],[13.093356,52.3946424],[13.0924744,52.3932486],[12.9716401,52.4056323],[12.9716358,52.4055725],[13.0928638,52.3938669],[13.0919277,52.3918066]],"Karl-Marx-Straße":[[13.1229933,52.3959648],[13.1216852,52.3959768],[13.1202214,52.397472],[13.1189955,52.3982045],[13.1169199,52.3984814],[13.119436,52.3977361],[13.1199266,52.396843],[13.1167997,52.3992836],[13.1221991,52.3965144],[13.1201735,52.396626],[13.121582,52.3960354],[13.1220523,52.3971171],[13.1183748,52.3983307],[13.1218368,52.396339],[13.1218666,52.3967371],[13.1092587,52.4041712],[13.1122002,52.4025833],[13.1116282,52.4026132],[13.1106619,52.4029818],[13.1071169,52.4059004],[13.1088558,52.4045036],[13.1125754,52.4019755],[13.1098753,52.4035062],[13.1085099,52.4051945],[13.1075775,52.4056392],[13.1124975,52.4021608],[13.1099963,52.4031373],[13.1110434,52.4027129],[13.1097523,52.403808],[13.1058505,52.4060372],[13.1079256,52.404109],[13.1096868,52.4027165],[13.1115841,52.4025183],[13.1131528,52.4005961],[13.1093146,52.4031692],[13.109531,52.4029735],[13.1120329,52.40151],[13.1108363,52.4017192],[13.1127954,52.4010743],[13.1113074,52.4016315],[13.1112686,52.4019574],[13.1109169,52.4020448],[13.1089152,52.4033949],[13.1131796,52.4008552],[13.1154172,52.3999757],[13.1150503,52.3996853],[13.1172973,52.3989572],[13.1148137,52.399924],[13.115188,52.4001008],[13.1167098,52.3993324],[13.1160853,52.4000336],[13.1156938,52.3992924],[13.1147307,52.4004931],[13.1159244,52.399821],[13.1153911,52.4002541],[13.1156936,52.3999598],[13.115265,52.399554],[13.1136697,52.4012378],[13.1160669,52.3996136],[13.1182187,52.3985201],[13.1130928,52.4014044],[13.1176336,52.3987456],[13.1139252,52.4004952],[13.1147802,52.4000022],[13.1177983,52.3980312],[13.115093,52.4003709],[13.122725,52.3953817],[13.1238179,52.3956394],[13.1051676,52.4063223],[13.1037962,52.4065317],[13.1192875,52.3972132],[13.1210952,52.3962309],[13.1213599,52.3961362],[13.109028,52.4040267],[13.1215426,52.3965108],[13.1220542,52.3955101],[13.120408,52.3968355],[13.1143441,52.4009257],[13.1145586,52.4007133],[13.114,52.4010325],[13.1115029,52.4014747],[13.1119684,52.4016063],[13.1166669,52.3988467],[13.1146018,52.3995742],[13.1106395,52.4021628],[13.1122957,52.4018765],[13.1054095,52.4067778],[13.1064869,52.4061804],[13.1059032,52.4063369],[13.1089904,52.4033339],[13.1089178,52.4046109],[13.1173252,52.3984127],[13.1174147,52.3983538],[13.119405,52.3968644],[13.1192609,52.3968536],[13.1093764,52.4030563],[13.1227826,52.3952912],[13.1092859,52.4030773],[13.1092995,52.4031336],[13.111,52.4028087]],"Karoline-Schulze-Straße":[[13.1314187,52.3630696],[13.1311677,52.3631858],[13.1316061,52.3633503],[13.1311877,52.3635532]],"Kartzower Dorfstraße":[[12.9788356,52.4914691],[12.9803923,52.4931172],[12.9793558,52.4930228],[12.9797963,52.4912737],[12.9761452,52.4927827],[12.9787976,52.4924178],[12.9756749,52.4932256],[12.9764197,52.4926821],[12.9777762,52.4917853],[12.9784163,52.4914046],[12.9754523,52.4933613],[12.9753013,52.4935353],[12.9761753,52.493428],[12.9774345,52.4919929],[12.9769675,52.4922913],[12.9773895,52.4925818],[12.9766177,52.4931722],[12.9789019,52.4914196],[12.9783407,52.4913228],[12.9781358,52.4915726],[12.979013,52.4917895],[12.9792433,52.4918949],[12.9794261,52.4920472],[12.9779933,52.4916907],[12.9778226,52.492109],[12.9757708,52.4936063],[12.9787578,52.4911378],[12.9758879,52.4935049],[12.9783744,52.4918944]],Kastanienallee:Go,Kastanienweg:No,Katharinastraße:[[13.1253519,52.3758181],[13.1253273,52.376277],[13.1249964,52.3768459],[13.1255767,52.3760351],[13.1256058,52.3759802],[13.1258209,52.3764839],[13.1253803,52.3771237],[13.1258079,52.3770639],[13.1260602,52.3758772],[13.1257349,52.3766191],[13.125988,52.3764035],[13.1255474,52.3769684],[13.1258047,52.3768636],[13.126078,52.3738358],[13.1258711,52.3749432],[13.1263414,52.375044],[13.126506,52.3740874],[13.125622,52.3746628],[13.1261919,52.3751597],[13.126129,52.3736759],[13.1260336,52.3740424],[13.125908,52.3747118],[13.1259925,52.3742144],[13.1262674,52.3748304],[13.1250572,52.3765857],[13.1263013,52.3746608],[13.1266919,52.3748083],[13.1263905,52.3744187],[13.1258367,52.3767695],[13.1260009,52.3768439],[13.1266872,52.3742123],[13.1268524,52.3744147],[13.1264107,52.3743452],[13.1258046,52.3747088],[13.1257885,52.3749441],[13.1255278,52.3743941],[13.1254782,52.3744517],[13.125953,52.3744992],[13.1259066,52.3745534]],Katharinenholzstraße:[[13.0228361,52.410982],[13.0233442,52.4104397],[13.0228499,52.4112277],[13.0242755,52.4105253],[13.0241743,52.4107853],[13.0228306,52.4106191],[13.0232242,52.4109763],[13.0229376,52.4103633],[13.0232767,52.4112415],[13.0232369,52.4106886],[13.0237646,52.4107145],[13.0248779,52.4105723],[13.0245196,52.4109448],[13.0254829,52.4104922],[13.025131,52.4106048],[13.0246438,52.4111823],[13.0246201,52.4104195],[13.0246896,52.4108522],[13.0250539,52.411281],[13.0260428,52.4100865],[13.0257345,52.4101834],[13.0245188,52.4115598],[13.0250052,52.4111113],[13.0242623,52.4116369],[13.0248231,52.4107005],[13.024196,52.4110819],[13.0202761,52.4135318],[13.0205376,52.4134182],[13.0228301,52.4120849],[13.0219402,52.4125376],[13.0232222,52.4121779],[13.0214621,52.4129552],[13.0216114,52.4127164],[13.0201315,52.4132653],[13.0212077,52.4129576],[13.0219582,52.4129592],[13.0203564,52.4131741],[13.0227353,52.4121323],[13.0215979,52.4121319],[13.0219783,52.4123348],[13.021197,52.4121983],[13.023607,52.4113475],[13.0235282,52.4121806],[13.0226748,52.4118325],[13.0223755,52.4119938],[13.0221338,52.4120893],[13.0220905,52.4115696],[13.0220481,52.4113094],[13.0222529,52.4124034],[13.0216844,52.412368],[13.021449,52.4126307],[13.0207181,52.4131871],[13.0207778,52.4131431],[13.0196886,52.4134248],[13.0232859,52.4126195],[13.0234651,52.4111176],[13.023348,52.4109724],[13.0234182,52.4109808],[13.0235235,52.4108886],[13.0235631,52.4108769],[13.0236589,52.4108634],[13.0237569,52.4108721],[13.0237228,52.4111044],[13.024086,52.4112843],[13.020766,52.4128509],[13.0198879,52.4133474],[13.0232651,52.4119788],[13.0194519,52.4133204],[13.0234415,52.4115747],[13.023887,52.4116036],[13.0198428,52.4136113],[13.0227109,52.4126181],[13.0212537,52.4133387]],Kellerstraße:[[13.133751,52.3806837],[13.1337054,52.3800507],[13.1337298,52.3804266],[13.1341025,52.3802229],[13.1336942,52.3798678],[13.1340321,52.3800065],[13.1337167,52.3802404],[13.1340894,52.3804186]],"Ketziner Straße":[[12.997116,52.4771145],[12.9983383,52.4777751],[12.995316,52.4771786],[12.9965824,52.4764435],[13.0004192,52.4734988],[12.995761,52.4767335],[13.013477,52.468355],[13.0131432,52.4681254],[13.0132482,52.4678654],[13.0137935,52.4678889],[13.0125856,52.468396],[13.0118753,52.4691873],[13.0129211,52.4683903],[13.0144101,52.4667528],[13.0153861,52.4666769],[13.0179448,52.4663435],[13.0195535,52.4662416],[13.0186704,52.4662916],[13.0189923,52.466261],[13.0191979,52.466271],[13.0197391,52.4662524],[13.012599,52.4686951],[13.01611,52.4665098],[13.0152227,52.4667591],[13.0155884,52.4666034],[13.0224026,52.4657381],[13.0221637,52.4658777],[13.0133917,52.4677342],[13.0219103,52.4660492],[13.0147985,52.4670424],[13.0212332,52.4661266],[13.0215075,52.465995],[13.0142671,52.4672484],[13.0225478,52.465844],[13.0206819,52.4661004],[13.0149494,52.4663962],[13.0181454,52.4660328],[13.0169763,52.4661834],[13.0175432,52.4658918],[13.0184458,52.4660068],[13.0166073,52.4661956],[13.0191583,52.4659452],[13.018765,52.4659796],[13.0173117,52.4661662],[13.017893,52.466049],[13.0159855,52.4662151],[13.0201709,52.4658618],[13.0152185,52.4662661],[13.0155433,52.4662776],[13.0172969,52.4664142],[13.0170072,52.4664963],[13.0176164,52.4663657],[13.0104007,52.4694226],[13.0116229,52.4696071],[13.0102272,52.4695575],[13.0124493,52.4694081],[13.0119847,52.4696262],[13.0112777,52.4701432],[13.0109178,52.4702245],[13.0107546,52.4705619],[13.0099165,52.4707123],[13.0102545,52.4702892],[13.0102948,52.4706507],[13.0096798,52.4707175],[13.0109858,52.4704178],[13.0096396,52.4703689],[13.0066396,52.4702751],[13.0075992,52.4703888],[13.0069417,52.4703636],[13.0071422,52.4709109],[13.0086665,52.4703643],[13.0074977,52.470789],[13.0059576,52.4703879],[13.0063942,52.4709996],[13.0063021,52.4701712],[13.0048731,52.4719943],[12.9963678,52.4777205],[12.994418,52.4778437],[12.9940292,52.4781807],[12.9963531,52.4760626],[12.9990517,52.4737086],[12.9985564,52.4738153],[12.9993154,52.4731602],[12.998461,52.4738803],[12.9982134,52.473988],[12.9976187,52.4743461],[12.9971244,52.4777045],[12.997529,52.4778525],[13.0099662,52.4699128],[13.0098867,52.4703525],[13.0177878,52.4660572],[12.9978072,52.4740637],[12.99811,52.4740491],[12.9972538,52.4745333],[12.9994907,52.4735341],[13.0068042,52.4709011],[12.9927642,52.4775144],[12.9929828,52.4775691],[12.9931572,52.4777194],[12.9943695,52.4771166],[12.9936333,52.4772024],[12.9945077,52.4768863],[12.9958924,52.4755372],[12.9953828,52.4759922],[12.9957516,52.4757512],[12.9954391,52.4753877],[12.9953117,52.4755503],[12.9976753,52.4751316],[12.9971564,52.4756397],[12.9973299,52.4752938],[13.0069259,52.4716963],[13.0197632,52.4657334],[13.0127204,52.4688576],[12.9990717,52.4743619],[12.9989865,52.4743061],[12.9986222,52.4743107],[12.998522,52.474361],[12.9980214,52.4751794],[13.0202418,52.4656685],[[13.0113452,52.4702434],[13.0115038,52.4701535],[13.0115497,52.4701838],[13.011526,52.4701967],[13.0115769,52.4702316],[13.0114375,52.4703071],[13.0113452,52.4702434]],[13.0154045,52.4665955],[13.0114431,52.4699579],[13.0115164,52.4698725],[13.017377,52.4657926],[12.9982812,52.4759919],[13.0206166,52.4660732],[12.9935834,52.4773486],[12.9937872,52.4776901],[12.993975,52.4775528]],Kiefernring:zo,Kienhorststraße:[[13.0226138,52.4668753],[13.0214983,52.4668138],[13.0222663,52.4665108],[13.022094,52.4668008],[13.0227609,52.4666322],[13.0211426,52.4665108],[13.0223723,52.4669283],[13.0219383,52.4664302],[13.0235224,52.4668182],[13.0247447,52.4679063],[13.0254592,52.4681293],[13.024417,52.467474],[13.0247858,52.4674235],[13.0245677,52.4676696],[13.0249386,52.4681535],[13.0256124,52.4684338],[13.0252004,52.4683651],[13.0252771,52.4679112],[13.0255296,52.4681948],[13.0216122,52.4666129],[13.0252185,52.4678412],[13.0250547,52.4676686]],Kiepenheuerallee:Wo,"Kietzer Straße":[[13.0116218,52.468674],[13.0124784,52.4668565],[13.0119472,52.467402],[13.0120766,52.4678092],[13.011944,52.4679998],[13.0118763,52.4677851],[13.0123319,52.4675514],[13.0121395,52.4676784],[13.0114253,52.468237],[13.0109269,52.4692044],[13.0117929,52.4675764],[13.0112022,52.4690525],[13.0120275,52.4672272],[13.0107798,52.4693835],[13.0116054,52.4678614],[13.0113206,52.4684868],[13.0112525,52.4693957],[13.0117745,52.4683071]],Kiezstraße:[[13.0492908,52.3950788],[13.0494014,52.3949911],[13.0495122,52.3949034],[13.0496554,52.3947901],[13.0497799,52.3946915],[13.0498591,52.395134],[13.050753,52.3935674],[13.0506917,52.3937851],[13.050683,52.3939491],[13.0505159,52.3940861],[13.0498104,52.3945253],[13.0507036,52.3943711],[13.0507036,52.3943711],[13.0504204,52.3946015],[13.0503047,52.3946956],[13.0503047,52.3946956],[13.0500677,52.3948884],[13.0500677,52.3948884],[13.0510283,52.3942558],[13.0503168,52.3948477],[13.0499901,52.3942702],[13.0498529,52.3951148],[13.0491993,52.3951514],[13.0505113,52.3940149],[13.0509223,52.3942801],[13.0508278,52.3937616],[13.0507077,52.3944618],[13.050229,52.394848],[13.0489561,52.3952567]],Kirchstraße:[[13.1286481,52.3607694],[13.1296591,52.3603255],[13.1294791,52.3604737],[13.134912,52.357492],[13.1356471,52.3567984],[13.135506,52.3571436],[13.1349652,52.3573628],[13.1356911,52.3570223],[13.1283222,52.3607963],[13.1284329,52.3611219],[13.1282021,52.3611319],[13.1310026,52.3597378],[13.131056,52.3597037],[13.1311993,52.3596214],[13.131524,52.3593882],[13.1317135,52.3593171],[13.1318848,52.359216],[13.1322177,52.359029],[13.1320216,52.3591215],[13.1323651,52.3589175],[13.1324677,52.3588927],[13.132569,52.3587778],[13.1326863,52.3587433],[13.1330131,52.3585653],[13.1333343,52.3584018],[13.133558,52.358273],[13.1339317,52.3580405],[13.1341287,52.3579416],[13.1343361,52.3578418],[13.1354176,52.3557307],[13.1349184,52.3571877],[13.1351912,52.3573089]],Kirschallee:Bo,Kirschenstieg:Ko,Kirschweg:Xo,"Kladower Straße":[[13.1016536,52.4325394],[13.1024789,52.434016],[13.1003214,52.4320667],[13.1000497,52.4313019],[13.099749,52.4316701],[13.1009545,52.4320739],[13.1003293,52.4315237],[13.1006919,52.4325845],[13.1004008,52.4316118],[13.099802,52.4300134],[13.1006295,52.4325941],[13.0999331,52.4307376],[13.1006431,52.4316803],[13.103416,52.4338439],[13.0995434,52.4312928],[13.1025359,52.4332143],[13.0993632,52.4302298],[13.0977576,52.4322445],[13.0993957,52.4316802],[13.0994519,52.4314164],[13.0996085,52.4311841],[13.1021626,52.4336454],[13.1021866,52.4330567],[13.103145,52.4335856],[13.10302,52.4334925],[13.0997354,52.4308732],[13.0997528,52.4309865]],Kleewall:Vo,Kleiberweg:Yo,"Kleine Fischerstraße":[[13.0699541,52.397998],[13.0702073,52.3981305],[13.0701649,52.3979973]],"Kleine Gasse":[[13.0518954,52.3987251],[13.0519508,52.3988355],[13.0520236,52.3988843],[13.0522027,52.3989709],[13.0521207,52.3989608]],"Kleine Straße":[[13.1114681,52.386533],[13.1109783,52.3866178],[13.1112918,52.3859833],[13.1112254,52.3861552],[13.1114575,52.3862687],[13.1107949,52.3862592],[13.1107204,52.3864258],[13.1105732,52.3861673]],"Kleine Weinmeisterstraße":[[13.0611668,52.4127347],[13.0608994,52.413176],[13.0609366,52.4130772],[13.0608086,52.413607],[13.0620202,52.4126738],[13.0604481,52.4136475],[13.0596694,52.4137314],[13.0600245,52.4137741],[13.0600185,52.4138678],[13.0600119,52.4139725],[13.0600016,52.4140756],[13.0599949,52.4141803],[13.0605644,52.4136086],[13.060191,52.4139827]],Klopstockstraße:[[13.1076645,52.393612],[13.1074293,52.3936098]],Knobelsdorffstraße:[[13.0206637,52.3856102],[13.0199051,52.3854975],[13.0202496,52.3853724],[13.020911,52.3861302],[13.0207659,52.3860345],[13.0275816,52.3886513],[13.0268517,52.3885796],[13.0210553,52.3862253],[13.0272363,52.3885092],[13.0206198,52.3859382],[13.0203568,52.385415],[13.0204405,52.3855832],[13.0198558,52.3853041],[13.0263724,52.3881133],[13.0222588,52.3878336],[13.0197095,52.385975],[13.0258343,52.3876099],[13.0258038,52.3877379],[13.0257734,52.387865],[13.0257426,52.3879939],[13.0225919,52.3876156],[13.0262759,52.3876467],[13.0220144,52.3871903],[13.0210041,52.3865195],[13.0211484,52.3866153],[13.0212928,52.3867112],[13.0214374,52.3868072],[13.021582,52.3869032],[13.0217267,52.3869993],[13.0218715,52.3870954],[13.0220869,52.3873278],[13.022231,52.3874234],[13.022376,52.3875197],[13.0225205,52.3876156]],"Kohlhasenbrücker Straße":[[13.1468306,52.3821876],[13.1461942,52.3789551],[13.1465872,52.3796145],[13.1472184,52.3788688],[13.1465672,52.3798076],[13.1460354,52.3799479],[13.147149,52.3791599],[13.1468722,52.3794188],[13.1471894,52.3794372],[13.1469387,52.3787062],[13.1460426,52.3786788],[13.1469919,52.3790602],[13.1462253,52.3793834],[13.1462939,52.3775361],[13.1462965,52.3773626],[13.1467787,52.3788684],[13.1471293,52.3786373],[13.1469194,52.3785311],[13.1473441,52.378729],[13.1467448,52.3784226],[13.1466683,52.3793302],[13.1471468,52.3797168],[13.1466884,52.3786721],[13.1470473,52.3793127],[13.1474511,52.3810829]],Kohlmeisenweg:Zo,"Kolonie Daheim":[[13.0793928,52.3845075],[13.0798424,52.3843627],[13.0803057,52.384218],[13.0807562,52.384071],[13.0811745,52.3839455],[13.0817387,52.3837608],[13.0801352,52.3842703],[13.0796857,52.3844148],[13.0792436,52.3845557],[13.0805787,52.3841272],[13.0810334,52.3839886],[13.0814883,52.3838401],[13.0762072,52.3858992],[13.0763125,52.3859812],[13.0767556,52.3857654],[13.0777178,52.3869358],[13.0783765,52.3875451],[13.0789468,52.3846477],[13.0772689,52.3865217],[13.0771105,52.3864344],[13.0776878,52.3868051],[13.0783901,52.3876606],[13.0767393,52.3862195],[13.07658,52.3861302],[13.078272,52.3866157],[13.077934,52.3877033],[13.0769067,52.3858476],[13.0767902,52.3861665],[13.0776021,52.386364],[13.0775465,52.385995],[13.077525,52.3858532],[13.0781134,52.3860777],[13.0781328,52.3861634],[13.0775554,52.3855788],[13.0776041,52.3854548]],"Kolonie Eigenland":[[13.0986903,52.3994929],[13.0984277,52.3992719],[13.0986636,52.3996396],[13.0988424,52.4000985],[13.0988505,52.39989]],"Konrad-Wachsmann-Straße":[[13.0386036,52.4154047],[13.0380469,52.4153253],[13.0391834,52.4151783],[13.039119,52.4152035],[13.0390546,52.4152287],[13.0389902,52.4152538],[13.0389257,52.4152789],[13.0388613,52.4153041],[13.0387969,52.4153292],[13.0387324,52.4153544],[13.038668,52.4153795],[13.0384962,52.4158689],[13.0384468,52.41582],[13.0383974,52.4157712],[13.0382242,52.4154988],[13.0381799,52.4154555],[13.0381356,52.4154121],[13.0380912,52.4153687],[13.0390936,52.4154837],[13.0393126,52.415704],[13.0397183,52.4156168],[13.0394291,52.4153386],[13.0396784,52.4155784],[13.0396364,52.415538],[13.039593,52.4154963],[13.0395492,52.4154541],[13.0395059,52.4154124],[13.0394658,52.4153738],[13.03927,52.4156612],[13.0392209,52.4156117],[13.0391734,52.415564],[13.0391308,52.4155211]],"Konrad-Wolf-Allee":[[13.1398237,52.368786],[13.130415,52.3658465],[13.1388768,52.3688022],[13.1411656,52.3694367],[13.138925,52.3683006],[13.1419206,52.3698946],[13.1369816,52.3669759],[13.1412456,52.3695016],[13.1419154,52.3701641],[13.1416601,52.3699757],[13.1380439,52.3685945],[13.1396854,52.3687789],[13.137895,52.3684987],[13.1395839,52.3687142],[13.1377421,52.3684061],[13.1394579,52.368634],[13.137545,52.3682784],[13.1393305,52.3685528],[13.1374256,52.3681949],[13.1372969,52.3681245],[13.1374084,52.3673322],[13.1375315,52.3674093],[13.1382746,52.3678874],[13.1383956,52.3679607],[13.1385238,52.3680384],[13.1386562,52.3681186],[13.1366429,52.3668774],[13.1367722,52.3669565],[13.1369015,52.3670355],[13.1370229,52.3671097],[13.1366139,52.3667743],[13.1380894,52.3677547],[13.1379633,52.3676778],[13.1378385,52.3676016],[13.1377212,52.36753],[13.1371647,52.3671795],[13.1372805,52.3672521],[13.1388094,52.3682314],[13.141467,52.3698203],[13.1354479,52.3669336],[13.1361666,52.3673564],[13.1393427,52.3694089],[13.1362638,52.3674181],[13.1353071,52.3668413],[13.1392096,52.3693234],[13.1346816,52.3664286],[13.136687,52.3676864],[13.1364754,52.3675522],[13.1360473,52.3672808],[13.1366023,52.3676327],[13.135168,52.3667512],[13.1349314,52.3665799],[13.1348123,52.3665074],[13.138916,52.3691433],[13.139033,52.3692168],[13.1350528,52.3666608],[13.1387931,52.3690698],[13.1394727,52.3694946],[13.1365722,52.3667936]],"Konrad-Zuse-Ring":[[13.0556731,52.434552],[13.0543476,52.4353242],[13.054163,52.4355769],[13.0539932,52.4354787],[13.0557354,52.4322276],[13.0530566,52.4353935],[13.0557009,52.432177],[13.0533238,52.4346807],[13.0540904,52.4327848],[13.0538965,52.434859],[13.0567132,52.433317],[13.0565498,52.4337457],[13.0537743,52.4355881],[13.0543983,52.4354691],[13.0541371,52.4354423],[13.0545144,52.4352763]],Konsumhof:Ho,Kopernikusstraße:[[13.0990211,52.3899941],[13.0967764,52.3905246],[13.0970748,52.3903162],[13.0970894,52.3906295],[13.0966836,52.3905536],[13.0972775,52.3903507],[13.0950723,52.3909395],[13.0953502,52.3908451],[13.0949098,52.3909903],[13.0981816,52.3898766],[13.0986179,52.3895178],[13.0987795,52.389434],[13.0978759,52.3900344],[13.0976733,52.3901422],[13.0981828,52.3897942],[13.1008268,52.3894085],[13.0992918,52.3890365],[13.1012516,52.3881],[13.0999498,52.3889607],[13.1002396,52.3887851],[13.1016939,52.3878633],[13.0997194,52.3890542],[13.1001154,52.3888564],[13.0962957,52.3909756],[13.0965521,52.3909328],[13.098384,52.3896363],[13.0988858,52.389377],[13.1010928,52.388185],[13.1015302,52.3879492],[13.0969686,52.3906928],[13.0985297,52.3899341],[13.1007191,52.3892203],[13.0977479,52.3900857],[13.102225,52.3877574],[13.1012064,52.3886113],[13.0955821,52.3911162],[13.1007815,52.3890965],[13.1018994,52.3883462],[13.102134,52.3882199],[13.1023529,52.388102],[13.1026484,52.3879562],[13.1006101,52.3885104],[13.1008088,52.388415],[13.1020508,52.3878519],[13.100861,52.3892816],[13.1008053,52.3891518],[13.1013737,52.3885302],[13.1010436,52.3887223],[13.1015648,52.3884515],[13.1026795,52.387771],[13.1030648,52.3875881],[13.1028573,52.3876779],[13.0961006,52.3909988]],Kossätenweg:[[12.9696047,52.409869],[12.9700035,52.4098366],[12.9693986,52.4098721],[12.9708573,52.4097644],[12.9650834,52.4102053],[12.9653273,52.4101707],[12.968262,52.4092675],[12.96873,52.4092216],[12.9686245,52.4098496],[12.9684185,52.4097183],[12.9661982,52.4106892],[12.9671316,52.4102678],[12.9681212,52.4105093],[12.967736,52.4105453],[12.9673525,52.4105813],[12.9665814,52.4106532],[12.9683656,52.409653],[12.9711868,52.4097293],[12.965257,52.4100265],[12.9671984,52.4100756],[12.9666737,52.410092],[12.9664109,52.4101111],[12.9670301,52.4098735],[12.9670036,52.4097412],[12.9669624,52.4096118],[12.9666835,52.4097564],[12.9663055,52.4096916],[12.9663163,52.4098369],[12.9663752,52.4099689],[12.9668372,52.4100753],[12.9685139,52.4093529],[12.9685234,52.4094069]],Kottmeierstraße:[[13.0782114,52.3772694],[13.078275,52.3767196],[13.0785345,52.3768979],[13.0778407,52.3775972],[13.0775157,52.3775996],[13.0776645,52.3774852],[13.0779266,52.377236],[13.0780425,52.3770984]],"Krampnitzer Straße":[[13.0926717,52.4284963],[13.0938146,52.4278421],[13.0876398,52.4294923],[13.0878764,52.4293006],[13.0881817,52.4290714],[13.0883912,52.4289786],[13.0891542,52.4287274],[13.0887019,52.4288966],[13.0902578,52.4285231],[13.090586,52.4285039],[13.090957,52.4284989],[13.091533,52.4286629],[13.0913123,52.4285597],[13.091912,52.428753],[13.0921544,52.4287547],[13.0945324,52.4288381],[13.0941549,52.4287012],[13.0942615,52.4289853],[13.087967,52.4290195],[13.0924508,52.4285009],[13.0930513,52.4293475],[13.0908348,52.4284755],[13.0900244,52.4286295]],Kreuzstraße:[[13.0973325,52.3948436],[13.0971447,52.3946601],[13.0969282,52.3944613],[13.0974675,52.3949698],[13.0979604,52.3953077],[13.0981728,52.3953409],[13.0977685,52.3947308],[13.0979118,52.3948985],[13.0971826,52.3941068],[13.0980186,52.3950166],[13.0972858,52.3942084],[13.0975268,52.3943915],[13.097634,52.3945841],[13.0970524,52.394571],[13.0978129,52.3951439],[13.0972132,52.3945812],[13.0974734,52.39483]],"Krumme Straße":[[12.9928891,52.40773],[12.992098,52.4077427],[12.9928243,52.4077705],[12.9918448,52.4077163],[12.9925647,52.4078595],[12.9917792,52.4077558],[12.9924826,52.4078864],[12.9915938,52.4079138],[12.9922276,52.4079727],[12.9915731,52.4079671],[12.9928729,52.4072433],[12.9921485,52.4079981],[12.9919498,52.4081144],[12.9919776,52.4081672],[12.992514,52.4073585],[12.9928964,52.4072962],[12.9925028,52.4076063],[12.9930823,52.4075149],[12.9924233,52.4076333],[12.9930626,52.4075714],[12.9921791,52.4077153]],Kuckucksruf:Uo,Kuhfortdamm:jo,"Kunersdorfer Straße":[[13.0790328,52.3786338],[13.0780059,52.3783673],[13.078244,52.378201],[13.0763967,52.377717],[13.0775959,52.3778838],[13.0779949,52.3780934],[13.0775473,52.3781627],[13.0770124,52.378048],[13.0794479,52.3791799],[13.0792755,52.379084],[13.0790983,52.3789853],[13.079182,52.3787268],[13.0793484,52.3788197],[13.0795213,52.3789162],[13.0796907,52.3790108],[13.0789379,52.378896],[13.0731563,52.3800463],[13.0730197,52.3798575],[13.0737634,52.3811688],[13.0735963,52.3810901],[13.0734488,52.3809941],[13.0731068,52.3807611],[13.0730102,52.3806329],[13.0729162,52.3805081],[13.0727963,52.3802275],[13.0726821,52.3800892],[13.0725671,52.3799498],[13.0758441,52.3780589],[13.0752182,52.3781483],[13.0748809,52.3782057],[13.0743237,52.3783967],[13.0740596,52.3785366],[13.0737293,52.3787605],[13.0735732,52.3788837],[13.0734141,52.3790093],[13.0731578,52.3792705],[13.0730285,52.3794607],[13.0725058,52.3796608],[13.0725879,52.3794625],[13.0727899,52.3791817],[13.0729184,52.3790539],[13.0730548,52.3789181],[13.0732893,52.3786975],[13.073447,52.3785752],[13.0736035,52.3784538],[13.0739651,52.3782477],[13.0742364,52.3781233],[13.0747812,52.3779302],[13.0751105,52.377867],[13.0757522,52.3778298],[13.0759915,52.3777896],[13.0762651,52.3780077],[13.0767484,52.3776855],[13.0770542,52.3776955]],Kurfürstenstraße:[[13.0638346,52.4050846],[13.0597932,52.4035776],[13.0591421,52.4035572],[13.059369,52.4036006],[13.059498,52.4036252],[13.0596226,52.403649],[13.0585735,52.4034485],[13.0587672,52.4034843],[13.0588931,52.4035096],[13.0590142,52.4035327],[13.0618657,52.4040731],[13.0617251,52.4040464],[13.0615882,52.4040205],[13.0614535,52.4039949],[13.0612409,52.4039545],[13.0610992,52.4039277],[13.0609617,52.4039016],[13.0608239,52.4038754],[13.0606919,52.4037429],[13.0631169,52.4042634],[13.059219,52.4040721],[13.0612427,52.4043217],[13.0639512,52.4044165],[13.0636666,52.404348],[13.0637313,52.4042195],[13.063546,52.4048548],[13.0669501,52.4053646],[13.0667822,52.4052121],[13.0666081,52.4050476],[13.0665823,52.4047958],[13.0657531,52.4047757],[13.065825,52.4046306],[13.0604362,52.4039833],[13.0607992,52.4041039],[13.0671406,52.4054758],[13.0620068,52.40408],[13.0587916,52.403489],[13.0613068,52.4047025],[13.0604529,52.4041654],[13.0610511,52.403892],[13.0627431,52.4040349],[13.0655741,52.4061326],[13.0667431,52.4056881],[13.0627616,52.4039808],[13.0628984,52.4040013],[13.0629582,52.4042109],[13.0627057,52.4041662],[13.0628815,52.4040635],[13.0627205,52.4041012],[13.0628477,52.404188],[13.0630195,52.4041516],[13.0631129,52.4041674],[13.0630754,52.4042353],[13.0590469,52.403539],[13.0663816,52.4053218],[13.0648166,52.4045765],[13.064531,52.4045215],[13.0646944,52.4045743],[13.0646331,52.404563],[13.0619154,52.404067]],"Kurt-von-Plettenberg-Straße":[[13.0469715,52.4102327],[13.0464374,52.4103526],[13.047259,52.4104507],[13.0475221,52.4094977],[13.0464319,52.4096867],[13.0466812,52.4096401],[13.0456016,52.4098585],[13.0476535,52.409748],[13.0471386,52.4095566],[13.0459732,52.4097685],[13.0469809,52.4099783],[13.0472334,52.4099329],[13.0464661,52.4100803],[13.0462231,52.4101246]],"Kurze Straße":[[13.0765263,52.3875819],[13.0767396,52.3875503],[13.0769345,52.3875215],[13.0771632,52.3874876],[13.0773977,52.3874529]],Kutscherweg:qo,"Käthe-Haack-Weg":[[13.127481,52.4822322],[13.1268197,52.4822086],[13.1269213,52.4813907],[13.1267819,52.4812447],[13.1268248,52.481542],[13.1276563,52.4823131],[13.127329,52.4824045]],"Käthe-Kollwitz-Straße":[[13.0935102,52.3733457],[13.0907289,52.3733792],[13.0929138,52.3721532],[13.0930655,52.3720408],[13.0932625,52.3719127],[13.090908,52.3732621],[13.0910743,52.3731586],[13.0911734,52.3735087],[13.09129,52.3737125],[13.0913865,52.373001],[13.0913751,52.3738562],[13.090965,52.3739492],[13.0907163,52.3740244],[13.0904183,52.3740983],[13.091603,52.3728726],[13.0918177,52.3727465],[13.0921664,52.3725701],[13.0923875,52.3724488],[13.0926119,52.3723178],[13.0932254,52.37244],[13.0933819,52.3723473],[13.0936402,52.3722103],[13.0937952,52.3721275],[13.0936758,52.3726726],[13.0938469,52.3725858],[13.0940874,52.3724607],[13.0942391,52.3723808],[13.09406,52.3729387],[13.0942537,52.3728539],[13.0944845,52.3727406],[13.0946734,52.3726558],[13.0928203,52.3727015],[13.0929749,52.3729847],[13.0931229,52.3732507],[13.0922611,52.3729686],[13.092368,52.3731584],[13.0924749,52.3733451],[13.0925605,52.3735108],[13.0920391,52.3736644],[13.0919684,52.3735219],[13.0918664,52.3733562],[13.0917875,52.3732126]],Käuzchenweg:[[12.98281,52.4114191],[12.9833716,52.4112752],[12.9831133,52.4117846],[12.9830795,52.4117331],[12.983019,52.4116269],[12.9829868,52.4115754],[12.9833729,52.41143],[12.9834585,52.4116318],[12.9834703,52.4116852],[13.0988067,52.3705133],[13.1004756,52.3696426],[13.1007735,52.3694929],[13.1008763,52.3694388],[13.1011757,52.3692861],[13.1012813,52.3692312],[13.101568,52.3690793],[13.1016774,52.3690237],[13.1014891,52.368894],[13.1013699,52.3689509],[13.1010947,52.3690961],[13.0989209,52.3704538],[13.1009778,52.3691539],[13.1006829,52.3693028],[13.1005907,52.3693497],[13.1002866,52.3695106],[13.1001868,52.3695623],[13.0999088,52.3697097],[13.09979,52.3697693],[13.0995027,52.3699158],[13.0993603,52.3699884],[13.0991114,52.3701232],[13.0992005,52.3703105],[13.0990115,52.3701761],[13.0987262,52.3703187],[13.0986155,52.3703768],[13.0992885,52.3702637],[13.0995785,52.3701079],[13.0996854,52.3700526],[13.0999822,52.3699022],[13.1000944,52.3698439],[13.1003683,52.3696999]],Königsdamm:[],Körnerweg:[[13.1104193,52.3954476],[13.1090507,52.3953913],[13.1098572,52.3948986],[13.1097193,52.3950108],[13.1103733,52.3951823],[13.1091153,52.3951284],[13.1094789,52.3951726],[13.1092907,52.3953913],[13.1098932,52.3952769],[13.1096082,52.3954005],[13.1091199,52.3952534]],Küsselstraße:[[13.0448346,52.3882042],[13.0452088,52.3877072],[13.0456201,52.3879361],[13.0458474,52.3880408],[13.0470476,52.3884216],[13.0463721,52.388611],[13.0485382,52.3883696],[13.0484799,52.3885185],[13.0490188,52.3881926],[13.0490993,52.3882407],[13.0494705,52.3883326],[13.0491854,52.3888301],[13.0491955,52.3890703],[13.0483419,52.3891931],[13.0465677,52.3893924],[13.0495432,52.3892294],[13.0495162,52.3893602],[13.0494519,52.3895411],[13.049307,52.3898609],[13.0493476,52.3899943],[13.0493454,52.3902749],[13.0486106,52.3899806],[13.0487208,52.3902559],[13.0486399,52.3894467],[13.048918,52.3895292],[13.0493568,52.3885919],[13.0455522,52.388395],[13.0465687,52.3888576],[13.0454088,52.3883442],[13.0449005,52.3882679],[13.0452355,52.3887115],[13.0464421,52.3879332],[13.0474112,52.3889052],[13.0479638,52.3885926],[13.0481998,52.3881771],[13.0479608,52.3881608],[13.0456163,52.3887435],[13.0458791,52.3888224],[13.047173,52.3895236],[13.0477966,52.3894652],[13.0477914,52.3895884],[13.0458702,52.3893584],[13.0456135,52.3891601],[13.046223,52.3890311],[13.0445396,52.3875028],[13.0476549,52.3882777],[13.0468325,52.3880192],[13.046376,52.3882779],[13.0472132,52.3879834],[13.0479552,52.3888718],[13.0474723,52.3885292],[13.0481017,52.3892035]],Landhausstraße:[[13.1104529,52.4570522],[13.1102969,52.4574158],[13.1106401,52.4581257],[13.1106477,52.4579405],[13.1106428,52.45863],[13.1105776,52.4576091],[13.1108427,52.4582062],[13.1108416,52.4582904],[13.1108941,52.4583671],[13.110878,52.4584467],[13.1106242,52.457118],[13.1106423,52.4572234]],"Lange Brücke":[[13.0610055,52.3936264],[13.0603209,52.3934682]],Langhansstraße:[[13.0658855,52.417631],[13.0659516,52.4183377],[13.0657645,52.4178201],[13.0653363,52.4181012],[13.0661001,52.4194329],[13.0657233,52.4184412],[13.0668851,52.4196599],[13.0658108,52.4186153],[13.0663181,52.4198446],[13.0658069,52.4189082],[13.0665148,52.4192976],[13.0664917,52.4189529],[13.0660596,52.4193529],[13.0663316,52.4186753],[13.0660866,52.4185483],[13.0668558,52.4203871],[13.0662795,52.4181165],[13.0655013,52.4176188],[13.0651915,52.4178831],[13.0664068,52.4190741],[13.0661734,52.4195834],[13.066644,52.4195387],[13.0670141,52.4199825],[13.0661483,52.4200709],[13.0655354,52.4184095],[13.0672065,52.420173],[13.0669716,52.4200861],[13.0665636,52.4202824],[13.0663567,52.420026]],Lankestraße:[],Lankeweg:$o,Laplacering:Jo,Laubenweg:Qo,Leiblstraße:[[13.0641932,52.4033135],[13.0643524,52.403338],[13.0646548,52.4033809],[13.0648115,52.4034045],[13.0649693,52.4034292],[13.0652739,52.4034762],[13.0654288,52.4034993],[13.0664051,52.4036089],[13.0656871,52.4036248],[13.0644384,52.4037953],[13.0642156,52.4039137],[13.064002,52.4038261],[13.064237,52.4038629],[13.063519,52.4035562],[13.0646815,52.4037023],[13.0662117,52.4039338],[13.0660944,52.4036859],[13.0630372,52.403429],[13.0649248,52.4040103],[13.0649573,52.4037435],[13.0653767,52.4037853],[13.0661669,52.4037109],[13.063007,52.4036094],[13.0663082,52.4037039]],Leibnizring:ea,"Leipziger Straße":[[13.0565797,52.3850109],[13.0581924,52.3868531],[13.0567561,52.3855699],[13.0567391,52.3854847],[13.0541359,52.3855381],[13.0596225,52.3884266],[13.0595619,52.3882552],[13.0594777,52.3879804],[13.0594453,52.3878855],[13.0589481,52.3872972],[13.0591293,52.3874818],[13.0596504,52.3883034],[13.0591163,52.3879098],[13.0588953,52.3877323],[13.0542622,52.383662],[13.0581924,52.3868531],[13.0562498,52.3851381],[13.0564115,52.3850748],[13.0605919,52.3895526],[13.0552812,52.3853708],[[13.0598114,52.3889127],[13.0599941,52.3891483],[13.060118,52.3891125],[13.0599353,52.3888769],[13.0598114,52.3889127]],[13.0550543,52.3840317],[13.0551184,52.3840972],[13.0552796,52.3842037],[13.055491,52.384283],[13.0556004,52.3843081],[13.0577607,52.3865617],[13.0579544,52.3866922],[13.0548305,52.3844283],[13.0547474,52.3843315],[13.054554,52.383859],[13.0545725,52.383967],[13.0545245,52.384059],[13.054472,52.3837846],[13.0546342,52.3842762],[13.0548343,52.3845182],[13.0549596,52.3838694],[13.0559856,52.3843733],[13.0560881,52.3844846],[13.0563603,52.3847864],[13.0564594,52.3848939],[13.0563091,52.3845478],[13.0528795,52.3852207],[13.0610962,52.389777],[13.059567,52.3887637],[13.0597341,52.3891841],[13.060303,52.3896619],[13.06036,52.3893016],[13.0605395,52.3888979],[13.0596113,52.3888998],[13.0595295,52.3886487],[13.0594959,52.3885453],[13.0598677,52.3893341],[13.0563883,52.3846338],[13.0610439,52.3900178]],Leistikowstraße:[[13.0649772,52.416407],[13.0657744,52.4161561]],Leiterstraße:[[13.0496688,52.3826711],[13.0502471,52.3821111],[13.0502414,52.3823904],[13.0501379,52.3827046],[13.0497335,52.3821669],[13.0497766,52.3820767],[13.0500514,52.3828629],[13.0496734,52.3828341],[13.04961,52.382979],[13.0500733,52.3830179],[13.049097,52.3816896],[13.0490638,52.3818162],[13.0483237,52.3817539],[13.0485897,52.3816913],[13.0495632,52.3817085],[13.0496442,52.3817144],[13.0497187,52.3817184],[13.0497964,52.3817243]],Lendelallee:ta,Lennéstraße:[[13.0449495,52.3986287],[13.0428656,52.3982899],[13.0430784,52.3982923],[13.0433244,52.3982952],[13.0425218,52.3982859],[13.0420223,52.3982888],[13.0416823,52.3982844],[13.0401645,52.3986498],[13.0403746,52.3986002],[13.0412484,52.3985486],[13.0414255,52.3985502],[13.0411272,52.3988545],[13.0411905,52.3987511],[13.0396899,52.398575],[13.0392493,52.3987163],[13.0398598,52.3981523],[13.0405141,52.3981634],[13.0401073,52.398269],[13.0409756,52.3982697],[13.0404238,52.399797],[13.0312507,52.398525],[13.0305877,52.3984149],[13.0320519,52.3976573],[13.0282648,52.3987922],[13.0328033,52.3976872],[13.0332847,52.3977383],[13.0330503,52.3977431],[13.0334707,52.3977358],[13.0336723,52.3977666],[13.0341385,52.397906],[13.0341943,52.3980209],[13.0344037,52.3977275],[13.0343395,52.3975492],[13.0381861,52.3984869],[13.0370519,52.3985294],[13.0366022,52.3985004],[13.0384107,52.3982233],[13.038173,52.3982165],[13.0371226,52.3978911],[13.0367233,52.3977888],[13.0367415,52.3982857],[13.0349921,52.3975795],[13.0334914,52.397941],[13.0332561,52.3980679],[13.0324026,52.3973942],[13.0318177,52.397565],[13.0394011,52.3986354],[13.0364437,52.3982266],[13.0357237,52.3979242],[13.0357237,52.3979242],[13.0361783,52.3980291],[13.0394063,52.3982542],[13.0398564,52.3982526],[13.0405141,52.3981634],[13.0407537,52.3982678],[13.0346992,52.3973592],[13.0347269,52.3971658],[13.0345846,52.3979102],[13.0440929,52.3985741],[13.040645,52.397879],[13.0352802,52.3978594],[13.0352165,52.3980808],[13.0333626,52.3989309],[13.0338063,52.3985235],[13.0350894,52.3986584],[13.0339886,52.3984397],[13.0281393,52.3975023],[13.0406602,52.398541],[13.0408525,52.3985434],[13.0410261,52.3985456],[13.0415516,52.3982826],[13.0414075,52.3982809],[13.0318914,52.397886],[13.0319092,52.3977221],[13.0362537,52.3976952],[13.0427718,52.3982689],[13.0446889,52.3981505],[13.0372621,52.3979559],[13.0374383,52.3979894],[13.0376302,52.3980402],[13.0378091,52.3980726],[13.0379958,52.398107],[13.0362359,52.3978485],[13.044538,52.3983087],[13.0443958,52.398308],[13.044125,52.3981955],[13.0438326,52.3983008],[13.0436468,52.3982995],[13.0346026,52.3977067],[13.0437417,52.3980045],[13.0351884,52.3983008],[13.0352142,52.3981789],[13.0348698,52.3977029],[13.0347248,52.3977163],[13.0329893,52.3981595],[13.0330383,52.3979859],[13.0328307,52.3980037],[13.0358013,52.3983639],[13.035828,52.3981551],[13.0365538,52.3976435],[13.0365261,52.3979138]],"Leo-Bauer-Straße":[[13.1251736,52.4837822],[13.1255843,52.4841777],[13.1253168,52.4840401],[13.1256336,52.4843584],[13.1253561,52.4835922],[13.124966,52.482251],[13.1248614,52.4818998],[13.1249566,52.482447],[13.1249452,52.4829182],[13.1251554,52.4828923],[13.1249985,52.4830956],[13.1252088,52.4830697],[13.1250457,52.4832717],[13.1252559,52.4832459],[13.1250949,52.4834516],[13.1253052,52.4834258],[13.1251459,52.483618]],"Leonardo-da-Vinci-Straße":[[13.0788184,52.4111914],[13.0784501,52.4123438],[13.0797691,52.4108979],[13.0801035,52.4105642],[13.0790214,52.4116759],[13.0791368,52.4108338],[13.0788308,52.4109253],[13.0778174,52.4120004],[13.0795748,52.4110414],[13.0791881,52.4111959],[13.0789924,52.4114032],[13.0786692,52.4118647],[13.078175,52.41149],[13.0792766,52.4111012]],Lerchensteig:ia,Lessingstraße:[[13.1038984,52.3947392],[13.1060284,52.3948406],[13.105802,52.3947101],[13.1034912,52.3945983],[13.1030913,52.3945876],[13.104238,52.3946154],[13.1052749,52.394662],[13.1038093,52.3946015],[13.103393,52.3945943],[13.1055116,52.3949912],[13.1054422,52.3948631],[13.1064656,52.3947023],[13.1025342,52.3946752],[13.1103799,52.3947487],[13.1107686,52.3947564],[13.111157,52.3947487],[13.1101213,52.3945021],[13.1102712,52.3947493],[13.1106599,52.3947569],[13.1082533,52.3949075],[13.1097915,52.3945059],[13.1075992,52.3949172],[13.1094105,52.3945522],[13.1110483,52.3947492],[13.1102775,52.3945449],[13.1105925,52.3945388],[13.1091801,52.3947465],[13.1094117,52.3948673],[13.1079121,52.3948978],[13.1067419,52.3944639],[13.1064279,52.3944441],[13.1038095,52.3943757],[13.1076551,52.3944666],[13.1050876,52.3943925],[13.1071876,52.3944518],[13.1034805,52.3943367],[13.1080601,52.3946088],[13.103283,52.3944699],[13.1048891,52.394498],[13.1058956,52.3944272],[13.1078471,52.3944701],[13.1046167,52.3944958],[13.1054738,52.3944016],[13.1043672,52.3944876],[13.1054855,52.394074],[13.1045024,52.3947564],[13.1057301,52.3943148],[13.1049288,52.3950433],[13.10602,52.394537],[13.1040809,52.3943712],[13.1097212,52.3948538],[13.1051427,52.3952152],[13.1062587,52.3947289],[13.104321,52.3950534],[13.1086483,52.3947594],[13.1089415,52.3945122],[13.1088323,52.3945111]],"Liefelds Grund":[[13.0933932,52.3598993],[13.0933193,52.3600039],[13.0931679,52.3602015],[13.0930924,52.3603054],[13.0930082,52.3604214],[13.0949398,52.360028],[13.0947756,52.3599825],[13.0946096,52.3599365],[13.0944452,52.3598909],[13.0934243,52.3606192],[13.0934985,52.3605196],[13.093572,52.3604211],[13.0937095,52.3602378],[13.0937786,52.3601431],[13.0938659,52.3600233],[13.0939413,52.35992],[13.09197,52.3592947],[13.0921371,52.3593405],[13.0923161,52.3593896],[13.0924659,52.3594306],[13.0927574,52.3595158],[13.0929376,52.3595653],[13.0931059,52.3596116],[13.0932636,52.359655],[13.0925588,52.3592621],[13.0921972,52.3591522],[13.093832,52.3594711],[13.0934748,52.3593853],[13.0935171,52.3593323],[13.0939087,52.359424]],Lilienthalstraße:[[13.1258577,52.3790534],[13.1261067,52.3790969],[13.125715,52.3791912],[13.1268055,52.3789274],[13.1265531,52.3788868],[13.1269442,52.3787927],[13.1264106,52.3790224],[13.1254608,52.3791489],[13.1253199,52.3792863],[13.1272778,52.3798246],[13.1272065,52.3797154],[13.127124,52.3795892],[13.1270319,52.3794482],[13.1269384,52.3793052],[13.1287138,52.3790169],[13.1284094,52.3790975],[13.1282155,52.3791447],[13.1280145,52.3791936],[13.1278186,52.3792413],[13.1276196,52.3792897],[13.1293091,52.3795196],[13.1292412,52.3794158],[13.1291668,52.3793019],[13.1290886,52.3791821],[13.1290104,52.3790625],[13.1289219,52.3789663],[13.1281846,52.3785943],[13.1279856,52.3786422],[13.1277884,52.3786896],[13.1275887,52.3787377],[13.1273918,52.3787851],[13.1262702,52.3794386],[13.1263576,52.3795725],[13.1264463,52.3797084],[13.1265384,52.3798496],[13.1266208,52.3799759]],Lilienweg:na,Lindengrund:sa,Lindenstraße:[[13.0511788,52.396222],[13.0507003,52.3961876],[13.051897,52.3989364],[13.05125,52.397865],[13.0512126,52.3977477],[13.0511793,52.3976432],[13.0511107,52.3974282],[13.0510708,52.397303],[13.0510708,52.397303],[13.0509977,52.3985967],[13.0509977,52.3985967],[13.0509175,52.3982321],[13.0507604,52.3979208],[13.0508656,52.3976572],[13.050975,52.3988195],[13.0515024,52.3978643],[13.0518115,52.3993571],[13.0518587,52.399501],[13.0518937,52.3996081],[13.0519414,52.3997528],[13.0519801,52.3998714],[13.0521627,52.400418],[13.0511967,52.3992071],[13.0511967,52.3992071],[13.0514348,52.399414],[13.0518128,52.4010414],[13.0519057,52.4013268],[13.051946,52.40145],[13.0530294,52.4022291],[13.0521069,52.4021601],[13.0521631,52.4021022],[13.0521949,52.4016899],[13.0520486,52.4017575],[13.0522896,52.4008274],[13.0523947,52.4011223],[13.0524315,52.4012385],[13.0524699,52.4013598],[13.0528818,52.4021211],[13.0527194,52.4021365],[13.0526779,52.40201],[13.0526386,52.4018905],[13.05251,52.4014845],[13.051937,52.4009285],[13.0519,52.4008086],[13.051614,52.400463],[13.0517777,52.4004426],[13.0516932,52.40019],[13.0512828,52.3994665],[13.0513204,52.3995797],[13.051369,52.3997261],[13.0521067,52.3996511],[12.9813605,52.476547],[12.9828279,52.4765166],[12.9825833,52.4765337],[12.9802904,52.4765881],[12.9838105,52.4764463],[12.9809145,52.4765771],[12.9805541,52.4765818],[12.9822417,52.476527],[12.9820744,52.4765483],[12.9834816,52.4764762],[12.9817503,52.4765428],[12.9831568,52.476497],[12.9836767,52.4767554],[12.9819423,52.4768583],[12.9833677,52.4767576],[12.9824838,52.4768444],[12.9827302,52.4767805],[12.980365,52.4768536],[12.9816222,52.4768236],[12.9821973,52.4768243],[12.9830785,52.4766686],[13.05125,52.397865],[13.051289,52.3979872],[13.0513292,52.3981133],[13.0517706,52.3992325],[13.0508656,52.3976572],[13.0493816,52.3966273],[13.0518667,52.4012083],[13.0522844,52.4019598],[13.0516495,52.400569],[13.0517288,52.4002966],[13.0518338,52.3989264],[13.0513234,52.3990775],[13.0522701,52.4019172],[13.0523195,52.4009078],[13.0522951,52.4019922],[13.0520052,52.4011205],[13.0521435,52.4015359],[13.0524106,52.4011732],[13.0507945,52.3974454],[13.0521701,52.4016157],[13.0515633,52.4000648],[13.0522354,52.4018127],[13.0520973,52.4013974],[13.0516705,52.4001126],[13.0518762,52.3995544],[13.0515144,52.3996535],[13.0521774,52.4004654],[13.0522682,52.4007581],[13.0526535,52.401814],[13.0518523,52.3993828],[13.0518377,52.4006222],[13.0517898,52.400479],[13.0517424,52.4003371],[13.0517247,52.4002843],[13.0517622,52.4003963],[13.0518014,52.4005137],[13.0516881,52.4001727],[13.0516984,52.4002057],[13.0519256,52.4008935],[13.051907,52.400836],[13.0518563,52.4006779],[13.0518934,52.4007888],[13.0512568,52.3988318],[13.0521813,52.4016492],[13.0514137,52.3983931],[13.0513794,52.3982588],[13.0513819,52.3980402],[13.0511833,52.397444],[13.051156,52.3973621],[13.0527403,52.4022],[13.0521564,52.4000016],[13.0511863,52.3993856],[13.0505573,52.3995002],[13.0515001,52.3996104],[13.0509342,52.3993917],[13.0509116,52.3993235],[13.0518668,52.4007094],[13.052041,52.4012289],[13.0518664,52.4013437],[13.0525222,52.4013899],[13.0525394,52.4014456],[13.0525643,52.4015259],[13.0525444,52.4015948],[13.0525649,52.4016584],[13.0525819,52.4017138],[13.0526845,52.401914],[13.0527033,52.4019746],[13.0526922,52.4020537],[13.0530356,52.4022489],[13.0513127,52.4005957],[13.0523399,52.4021869],[13.0513538,52.3991693],[13.0513885,52.3992746],[13.0519725,52.399848],[13.0520967,52.3996061],[13.0511722,52.4015356],[13.0511994,52.4014516],[13.0522112,52.40174],[13.0515389,52.3997272],[13.0523139,52.4020486],[13.0520032,52.4017418],[13.0510591,52.4015213],[13.0515343,52.4014784],[13.0516894,52.4014946],[13.052124,52.4014774],[13.0519697,52.4014104],[13.0520792,52.4013432],[13.0520234,52.401284],[13.0519261,52.4012333],[13.0520204,52.4011667],[13.0514409,52.4004758],[13.0512381,52.3996814],[13.0511905,52.3993553],[13.0512509,52.3991573],[13.0511101,52.3986369],[13.0511355,52.3987056],[13.0509719,52.3980878],[13.0510001,52.3981696],[13.0513085,52.3962499],[13.0512442,52.3963022],[13.0513099,52.396344],[13.0508941,52.3964274],[13.05087,52.3963415],[13.0520032,52.399771],[13.0520916,52.4002021],[13.0521495,52.4003819],[13.0521275,52.4003135],[13.0523808,52.4008675],[13.0524618,52.4013349],[13.052592,52.4013167],[13.0526911,52.4016704],[13.052774,52.4019675],[13.0527575,52.4019066],[13.0527379,52.4018377],[13.0527178,52.4017656],[13.0527054,52.4020937],[13.0528428,52.4021611],[13.0530555,52.4023123],[13.0509382,52.3995294],[13.051062,52.399387],[13.0514296,52.3995364],[13.0518437,52.3993204]],"Lindstedter Chaussee":[[13.0106358,52.4113055]],"Lindstedter Straße":[[12.9874294,52.4073885],[12.9881933,52.4077054],[12.9881321,52.4071018],[12.9880663,52.4072752],[12.9879864,52.4078287],[12.987669,52.4071777],[12.987105,52.4072423],[12.9886993,52.4075978],[12.9879841,52.4074993],[12.9878041,52.4075858],[12.9889455,52.4072837],[12.9885928,52.4073168],[12.9872538,52.4077374],[12.9884377,52.4070344],[12.9882347,52.4076013],[12.9888228,52.4071085],[12.98992,52.4068438],[12.9887469,52.4071434],[12.9898132,52.4065965],[12.9897298,52.4066223],[12.9859605,52.4072897],[12.9868669,52.4071069],[12.9867316,52.4071153],[12.9862694,52.407228],[12.9863911,52.4077616],[12.9868581,52.4079176],[12.9876057,52.4069686],[12.9877884,52.4069064],[12.9881272,52.406755],[12.9882868,52.4068282],[12.9889317,52.4067494],[12.9890469,52.406585],[12.9867153,52.4073523],[12.9880193,52.407129],[12.9887211,52.4065241],[12.986066,52.4075572],[12.9896725,52.4068235]],Lisdorf:ra,"Lise-Meitner-Straße":[[13.1324388,52.3610244],[13.1315737,52.3618905],[13.1324343,52.3613083],[13.136,52.3595563],[13.1363586,52.3595908],[13.1366234,52.359597],[13.1359598,52.359792],[13.1363632,52.3597867],[13.1355197,52.3598175],[13.1352402,52.3597596],[13.1348985,52.3597762],[13.1345216,52.3599929],[13.1342659,52.3601491],[13.1332359,52.3608083],[13.1333695,52.3607188],[13.1335324,52.3605614],[13.1339173,52.3604553],[13.1322603,52.3618329],[13.1322646,52.3616126],[13.1328991,52.3610349],[13.1319326,52.3616629],[13.1318425,52.3613123],[13.1329527,52.3606535],[13.1335748,52.3600111],[13.1332448,52.3604074],[13.1345652,52.3596527],[13.1339119,52.3598024],[13.1338398,52.3598382],[13.1333055,52.3603194],[13.1333311,52.360276],[13.1346635,52.359634],[13.1334789,52.3600884],[13.1344765,52.3596724],[13.1343905,52.3596903],[13.1332753,52.3603648],[13.1337773,52.359869],[13.1339893,52.3597619],[13.1336217,52.3599718],[13.1335253,52.3600507],[13.1354319,52.3595388],[13.1350431,52.3595588],[13.1355854,52.3595398],[13.1351223,52.3595441],[13.1355073,52.3595401],[13.1349743,52.3595697],[13.1353572,52.35954]],Lortzingstraße:[[13.1291077,52.3825081],[13.1298717,52.3831343],[13.1291424,52.3826019],[13.1298782,52.3833047],[13.1291748,52.3827631],[13.1300556,52.3834619],[13.1292397,52.382911],[13.1295384,52.3824606],[13.1296098,52.382635],[13.1296617,52.3828212],[13.1297873,52.3829797],[13.1288036,52.3820672],[13.1292453,52.3819085],[13.1292719,52.3821026],[13.128708,52.381854],[13.1290323,52.382246]],"Lotte-Laserstein-Straße":[[13.0956595,52.3873286],[13.0958015,52.3870855],[13.0958305,52.3871352],[13.0959297,52.3873187],[13.0956921,52.3873813],[13.095993,52.3874506],[13.0958941,52.3872622]],"Lotte-Pulewka-Straße":[[13.0809985,52.3914607],[13.0827065,52.3937975],[13.0754358,52.3947781],[13.0794123,52.3933669],[13.0794123,52.3933669],[13.0796039,52.3932846],[13.0781825,52.3946635],[13.0774564,52.3946706],[13.0801624,52.3917774],[13.0739655,52.3945147],[13.0801413,52.3930577],[13.078893,52.3935644],[13.0771852,52.3946274],[13.0775057,52.3943],[13.0774887,52.3946987],[13.0777387,52.3938127],[13.0775465,52.3938941],[13.077242,52.3940231],[13.077039,52.394109],[13.0768637,52.3941833],[13.0766557,52.3942714],[13.0798991,52.39302],[13.07762,52.3936874],[13.0818397,52.3924746],[13.0773345,52.3944958],[13.0826044,52.3924514],[13.077615,52.3944056],[13.0782398,52.394639],[13.0817806,52.3912706],[13.0819052,52.391811],[13.0822124,52.3920612],[13.0819917,52.3915173],[13.0819701,52.3922334],[13.0814725,52.3924649],[13.0813218,52.3925345],[13.0809108,52.3921744],[13.0810891,52.3920921],[13.0811547,52.3923356],[13.0815109,52.391898]],"Louis-Nathan-Allee":[[13.1011174,52.4098071],[13.1038892,52.4097305],[13.1030913,52.4098573],[13.1042697,52.4093776]],"Ludwig-Boltzmann-Straße":[[13.0367154,52.4132939],[13.0370946,52.4134701],[13.0336261,52.4148034]],"Ludwig-Lesser-Straße":[[13.0426123,52.4223641],[13.0430691,52.4218577],[13.0443311,52.4221108],[13.0432615,52.4219315],[13.0428645,52.422132],[13.0433694,52.4222678],[13.0441278,52.4222532],[13.0435448,52.4220441],[13.0430421,52.4219625],[13.0439608,52.4222174],[13.0442266,52.4219674],[13.0437566,52.4225615],[13.0440676,52.4224643],[13.0431223,52.4222759]],"Ludwig-Richter-Straße":[[13.0744698,52.4127669],[13.0747659,52.4130606],[13.074404,52.4128762],[13.0752702,52.4123507],[13.0756022,52.4125404],[13.0753624,52.4127624],[13.0751401,52.4130609],[13.075664,52.4119593],[13.0761508,52.4114582],[13.0783819,52.4098681],[13.0781436,52.4098674],[13.0766749,52.4109413],[13.0767619,52.4106084],[13.0767562,52.4104097],[13.0769726,52.4103698],[13.0780314,52.4099861],[13.077254,52.4103168],[13.0773736,52.4101939],[13.0775626,52.4097298],[13.0779702,52.4103847],[13.0766582,52.4113476],[13.0769023,52.4111303],[13.0775281,52.4107473],[13.0764574,52.4117916],[13.0776454,52.4111293],[13.076781,52.4116033],[13.0761508,52.4114582],[13.0762475,52.4112345],[13.0778721,52.4095328],[13.076777,52.4113476],[13.0763751,52.4119872],[13.0762531,52.4119528],[13.0762021,52.4121598],[13.0760989,52.4121214]],Luisenhof:oa,Luisenplatz:aa,Lutherplatz:la,Lutherstraße:[[13.0946208,52.3944227],[13.0938455,52.3947288],[13.0946208,52.3944227]],Luzernstraße:[[13.0463076,52.4224041],[13.0460968,52.4225921],[13.0464266,52.4229067],[13.0466401,52.4231062],[13.0468482,52.4233494],[13.0472692,52.4233384],[13.0470676,52.4231002],[13.0468914,52.4229503],[13.046722,52.422783],[13.0464799,52.4225747],[13.0465212,52.4225212]],"Magnus-Zeller-Platz":[[13.0921884,52.3755916],[13.093236,52.3751729],[13.0932312,52.3750398],[13.0932528,52.3753119]],"Maimi-von-Mirbach-Straße":[[13.1388446,52.3627347],[13.138243,52.3632112],[13.1377796,52.3629121],[13.1385457,52.3634967],[13.1385715,52.3633203],[13.1389187,52.3629208],[13.1380587,52.3627349],[13.1392647,52.3634825],[13.1394205,52.3629012],[13.1394042,52.3626781],[13.1394138,52.3629812],[13.1394364,52.3628085],[13.137919,52.3632765],[13.1380654,52.3631892]],"Maly-Delschaft-Weg":[[13.12552,52.4824885],[13.1252745,52.4817152]],Mangerstraße:[[13.0748466,52.4085848],[13.0729851,52.4086063],[13.0741273,52.4086264],[13.0742932,52.4084412],[13.071827,52.4082323],[13.0720359,52.4083862],[13.0709016,52.4074438],[13.0718596,52.4080163],[13.0715169,52.4077233],[13.0706603,52.4072267],[13.0715169,52.4077233],[13.0712455,52.4082429],[13.0692518,52.4070433],[13.0703923,52.4076265],[13.069994,52.4071756],[13.0718325,52.4086168],[13.0720138,52.4088849],[13.0696384,52.4070193],[13.0714305,52.408572],[13.0707492,52.4078186],[13.0736444,52.4092076],[13.0742868,52.4090069],[13.073119,52.4089854],[13.0732286,52.4089519],[13.0754438,52.4087316],[13.0748582,52.4087772],[13.0750123,52.4084414],[13.0728445,52.4085954],[13.0722028,52.4083128],[13.0738143,52.4090095],[13.0738941,52.4089897],[13.0739174,52.4089917],[13.0711699,52.408236],[13.0730229,52.4089858],[13.0736014,52.4090461],[13.0739803,52.4090238],[13.0739693,52.4090711],[13.0738032,52.4090572]],"Margarete-Buber-Neumann-Straße":[[13.1317629,52.3638896],[13.1319101,52.3642564],[13.1322293,52.364044],[13.1326622,52.363714],[13.1325284,52.3635301],[13.131562,52.3639767]],"Margarethe-Gottliebe-Weg":[[13.1276575,52.4838135],[13.1275778,52.4835817],[13.1279207,52.4842349],[13.1274319,52.4834175],[13.1281723,52.4842389],[13.1278128,52.4836509],[13.1276108,52.4831371],[13.1273452,52.4827396],[13.1278371,52.4837783],[13.1282034,52.4839155],[13.1280112,52.4837596],[13.1278686,52.4826773]],"Marie-Hannemann-Straße":[[13.1306346,52.3601438],[13.1317106,52.3607552],[13.1336035,52.361114],[13.134377,52.3612754],[13.1340873,52.3613477],[13.1340345,52.3615972],[13.1333613,52.3612357],[13.1315054,52.3601647],[13.1319941,52.3604327],[13.1313762,52.3597509],[13.1314546,52.3597971],[13.1315364,52.3598454],[13.1316238,52.359897],[13.1318847,52.360043],[13.1319701,52.3600959],[13.1320583,52.3601506],[13.1321707,52.360211],[13.1322534,52.3602622],[13.1323604,52.3603285],[13.1324547,52.3603789],[13.1325522,52.3604358],[13.1326221,52.3604766]],"Marie-Juchacz-Straße":[[13.1359443,52.3579752],[13.1352513,52.357961],[13.1336786,52.3591123],[13.1357817,52.3578368],[13.1339484,52.358955],[13.1360596,52.3578027],[13.1350221,52.358036],[13.135762,52.358007],[13.1338793,52.3589921],[13.1338064,52.3590312],[13.133606,52.3591509],[13.1363459,52.3578167],[13.1364588,52.3579523],[13.1319368,52.3597491],[13.1319602,52.3595435],[13.1323717,52.3594378],[13.1323114,52.3594709],[13.1322511,52.3595039],[13.1342644,52.358492],[13.1339901,52.3584098],[13.1339652,52.3586691],[13.1346718,52.3582279],[13.1326855,52.3592852],[13.1335705,52.3588498],[13.1338463,52.3584881],[13.1330334,52.3589208],[13.1335993,52.3585974],[13.1343307,52.3584555],[13.1328081,52.3592168],[13.132434,52.3592814],[13.1341974,52.3582669],[13.1347354,52.3581923],[13.1328694,52.3591826],[13.1324025,52.3592997],[13.1328852,52.3590305],[13.1331726,52.3588415],[13.1334448,52.3589216],[13.1327468,52.359251],[13.1319267,52.3595638],[13.1329177,52.3590104],[13.1335077,52.3588857],[13.1346082,52.3582635],[13.1319032,52.3597688],[13.1343388,52.3581874],[13.1321908,52.359537],[13.1334599,52.3586801],[13.1339047,52.358702]],"Marlene-Dietrich-Allee":[[13.1193739,52.3892846],[13.1212666,52.3903707],[13.1222996,52.3911158],[13.1165676,52.3901682],[13.1181176,52.3905974],[13.1168704,52.3905847],[13.1178308,52.3909365],[13.1182613,52.3907478],[13.1187891,52.3907593],[13.1193201,52.3907671],[13.1197302,52.3909803],[13.1184097,52.3885941],[13.1168136,52.3889853],[13.1225658,52.3908219],[13.1169891,52.3905064],[13.1173849,52.3907135],[13.1175128,52.3904822],[13.1171526,52.3909599],[13.1173339,52.3909624]],"Marquardter Chaussee":[[12.9828781,52.4489943],[12.9840611,52.4499944],[12.9842077,52.4494017],[12.981961,52.4509059],[12.9821033,52.4497573],[12.9814593,52.4503519],[12.983939,52.4487358]],"Marquardter Straße Ausbau":[[13.0105335,52.4651813],[13.0100755,52.4657808],[13.0095606,52.4660878],[13.0095985,52.4650492],[13.0096713,52.4648517],[13.0091263,52.4653332],[13.0085462,52.465623],[13.0094191,52.46574],[13.0095606,52.4660878],[13.0105639,52.4653165],[13.0101411,52.4649689],[13.0104969,52.4656939]],"Marquardter Straße":[[13.0137782,52.4673511],[13.0141701,52.4668582],[13.0140229,52.4668951],[13.0125699,52.4670343],[13.0129706,52.4670515],[13.0129517,52.4666661],[13.01352,52.4668855],[13.0131937,52.4667599],[13.0136763,52.4669022],[13.0090402,52.4640877],[13.0091016,52.4641523],[13.0093747,52.4646007],[13.0087953,52.4639723],[13.0099449,52.464685],[13.009223,52.4644469],[13.0085909,52.4644306],[13.0009153,52.4591301],[12.9999469,52.4610097],[12.9996417,52.4606332],[13.0008477,52.4603028],[13.0008352,52.4602264],[13.0014234,52.4601288],[13.0007644,52.4600443],[13.0134703,52.4673448],[13.000158,52.4589076]],Martinsweg:ha,Mauerstraße:[[13.0490101,52.4035057],[13.0483933,52.4035532],[13.0488118,52.4032348],[13.0486781,52.4039765],[13.0497325,52.4025611],[13.0493447,52.4029689],[13.0492397,52.4026954],[13.0483452,52.403895],[13.0488342,52.4028165]],Maulbeerallee:ca,"Max-Born-Straße":[[13.1385089,52.3747126],[13.1385038,52.374954],[13.1386673,52.3745929],[13.1386622,52.3748344],[13.1386572,52.3750709],[13.1378776,52.3738828],[13.1377251,52.3737566],[13.1370325,52.3732802],[13.1378846,52.3731821],[13.135854,52.3732715],[13.1378833,52.3736264],[13.136828,52.3731744],[13.1366126,52.3732771],[13.1377191,52.3740293],[13.1376125,52.37318],[13.136383,52.3731712],[13.1372616,52.3731775],[13.1360783,52.373169]],"Max-Eyth-Allee":[[13.011643,52.4396305],[13.0096898,52.4379611],[13.0098528,52.4380341],[13.0102566,52.4378905],[13.0104196,52.4379635],[13.0103971,52.4373012],[13.0096327,52.4368465],[13.0148911,52.4391743],[13.013773,52.4372806],[13.0091359,52.4380227],[13.009861,52.437163],[13.0097006,52.4371551],[13.0126204,52.4385653],[13.010963,52.4378126],[13.0088515,52.4377932],[13.0119324,52.4377805],[13.009299,52.4380957],[13.0115729,52.4374236],[13.010963,52.4378126],[13.0089418,52.4361669],[13.0119606,52.437391],[13.0111477,52.4376083],[13.0131086,52.437134],[13.0110918,52.4386724],[13.0113378,52.4388488],[13.0088538,52.4383079],[13.0081923,52.436326],[13.0078773,52.436354],[13.0080185,52.4366623],[13.0080605,52.4368023],[13.0083686,52.4372583],[13.008412,52.4373985],[13.008322,52.4376055],[13.0083649,52.4377482],[13.0111013,52.4372841],[13.0110157,52.4372368],[13.0112194,52.4369942],[13.0111066,52.436816],[13.010444,52.4366573],[13.0086775,52.4356446],[13.0087006,52.4358383],[13.0091028,52.4348359],[13.0105411,52.4365969],[13.0077943,52.435782],[13.0096046,52.4352025],[13.0135647,52.4368152],[13.0081798,52.4357531],[13.0091095,52.4385098],[13.0103382,52.4374567],[13.0118699,52.4379338],[13.0119458,52.4396314],[13.0100719,52.4366898],[13.0100165,52.4366573],[13.0097222,52.4364863],[13.0096398,52.4364381],[13.0093319,52.4359255],[13.0093386,52.4359868],[13.0093154,52.4357674],[13.0093078,52.4357108],[13.0094923,52.4369198],[13.0092345,52.4369236],[13.0093027,52.4368226],[13.0088173,52.4366868],[13.0091156,52.436646],[13.0090313,52.4365971]],"Max-Planck-Straße":[[13.0609804,52.3891284],[13.0619958,52.3894394],[13.0610094,52.3891929]],"Max-Volmer-Straße":[[13.0784126,52.3932237],[13.0777293,52.3925955],[13.078923,52.3920777],[13.0787891,52.3921341],[13.0786194,52.3922067],[13.0784378,52.3922885],[13.0782145,52.3923848],[13.0779466,52.3924956],[13.0793305,52.3924157],[13.079116,52.3925012],[13.0789043,52.3925934],[13.0787365,52.3926658],[13.0785222,52.3927573],[13.0783038,52.3928503],[13.0780804,52.3929492],[13.078514,52.3933076]],"Max-Wundel-Straße":[[13.0449399,52.4207073],[13.0454279,52.4210904],[13.0447236,52.421331],[13.044727,52.421253],[13.0453417,52.4214575],[13.0448738,52.4211145],[13.0451644,52.4206883],[13.0450261,52.4209717],[13.0448818,52.4215129],[13.0456517,52.4210836],[13.0448909,52.4205573],[13.0449927,52.421551],[13.0451923,52.4216345]],"Maxie-Wander-Straße":[[13.1342377,52.3635462],[13.1342377,52.3635462],[13.1344176,52.3637906],[13.1361034,52.3633024],[13.1356663,52.3632085],[13.1358488,52.363481],[13.1357334,52.3634729],[13.1360576,52.3632241],[13.135602,52.3632521],[13.1349808,52.3633854],[13.1365816,52.3636154],[13.1363319,52.3637715]],Maybachstraße:[[13.0271768,52.3921014],[13.0249795,52.3915438],[13.0251907,52.3915591],[13.0254019,52.3915745],[13.0256131,52.3915898],[13.0258243,52.3916052],[13.0260355,52.3916205],[13.0262467,52.3916358],[13.0264579,52.3916512],[13.0287711,52.3920597],[13.0284823,52.3920502],[13.0294617,52.3920806],[13.0292321,52.3920729],[13.0290013,52.3920655]],Mehlbeerenweg:ua,Meisenweg:da,Meistersingerstraße:[[13.0366507,52.3968437],[13.0367927,52.3962956],[13.0369564,52.3965756],[13.0345807,52.3961747],[13.0348289,52.3961856],[13.0351629,52.3961982],[13.0344743,52.396376],[13.0348698,52.3960154],[13.0346287,52.3960033],[13.0346442,52.395888],[13.0368084,52.3953161],[13.0332431,52.3959446],[13.0330467,52.3959362],[13.0329534,52.3961144],[13.0335066,52.3961366],[13.0335848,52.3959591],[13.0326872,52.3961036],[13.0331493,52.3961222],[13.032515,52.3959136],[13.0327721,52.3959245],[13.0337707,52.3959671]],"Melchior-Bauer-Straße":[[13.0407839,52.417351],[13.0413234,52.417283],[13.0385453,52.4179066],[13.0414467,52.4170896],[13.0406468,52.4175466],[13.0410854,52.4173756],[13.0375898,52.4181974],[13.038023,52.4179916],[13.0380789,52.4179706],[13.0381374,52.417948],[13.0381953,52.4179251],[13.0382499,52.4179048],[13.039041,52.4177323],[13.0390085,52.4176076],[13.0391782,52.4176795],[13.0392495,52.4176521],[13.0393182,52.4176257],[13.0393882,52.4175985],[13.0394563,52.4175722],[13.0395239,52.4175462],[13.0395911,52.4175205],[13.0399449,52.4172726],[13.0400247,52.4172416],[13.0400952,52.4172143],[13.0401693,52.4171854],[13.0403442,52.4171227],[13.0404245,52.4170918],[13.0404955,52.4170645],[13.0405685,52.4170367],[13.040896,52.4168814],[13.0409768,52.4168512],[13.0410584,52.4168205],[13.0411405,52.4167896],[13.0413026,52.4167277],[13.0379699,52.4185072],[13.0370359,52.4184052],[13.0367618,52.4185217],[13.0407344,52.4175128],[13.0408679,52.417318],[13.041171,52.4173426],[13.0414084,52.4172501],[13.0415321,52.4170569]],"Mendelssohn-Bartholdy-Straße":[[13.132354,52.3846767],[13.1324027,52.3849897],[13.1320632,52.3861355],[13.1323303,52.3862772],[13.1332562,52.3866261],[13.1329868,52.3864308],[13.1321997,52.3859291],[13.1329921,52.3861543],[13.1322335,52.3860233],[13.132985,52.3859881],[13.1317762,52.3849079],[13.131991,52.385567],[13.1319349,52.3852906],[13.1317413,52.3851323],[13.1321808,52.3843051],[13.13218,52.3842067],[13.1320165,52.3838219],[13.1320858,52.384016],[13.1315655,52.3840679],[13.131652,52.384288],[13.1305382,52.3812445],[13.1309866,52.3821974],[13.131516,52.3823448],[13.1310179,52.382314],[13.1318771,52.382457],[13.1309584,52.3825511],[13.1316755,52.3826287],[13.1308102,52.3827578],[13.1317087,52.3828478],[13.1311352,52.3829131],[13.1317951,52.3830722],[13.1305961,52.3814453],[13.1312652,52.3830938],[13.1318372,52.3832426],[13.1312887,52.3832564],[13.1319268,52.3834395],[13.1313576,52.3834543],[13.131652,52.384288],[13.1306087,52.3816011],[13.1313399,52.3817816],[13.1313133,52.3816045],[13.130864,52.3817742],[13.1312779,52.3820047],[13.1308875,52.3819297],[13.1315149,52.3821318],[13.1324383,52.385605]],Menzelstraße:[[13.0826431,52.4144051],[13.0835431,52.4135193],[13.0839445,52.4131545],[13.0840189,52.4133896],[13.0842189,52.4129107],[13.0830032,52.4142151],[13.0824446,52.4149711],[13.0843225,52.4135084],[13.0846329,52.4132424],[13.0828347,52.4150014],[13.0843317,52.4137599],[13.0838894,52.4139093],[13.0837653,52.4144521],[13.0832693,52.4145985],[13.0837653,52.4144521],[13.0851402,52.4130901],[13.0820835,52.4151061],[13.0839108,52.4134761],[13.0843,52.413217],[13.082626,52.4152967],[13.0826245,52.4152504]],Merkurstraße:[[13.123099,52.3842856],[13.1244634,52.3858444],[13.1241833,52.3859536],[13.1237297,52.3857195],[13.1237248,52.3859497],[13.1232812,52.3858294],[13.1231538,52.3858311],[13.1230359,52.38586],[13.1229171,52.3855257],[13.1230073,52.3856056],[13.1235337,52.3855923],[13.12337,52.3852788],[13.1231962,52.3849962],[13.1230605,52.3845658],[13.1229223,52.3846681],[13.1232974,52.3846149],[13.1232356,52.3847565],[13.1234005,52.3849559],[13.1236728,52.3850964],[13.1238076,52.385253],[13.1239501,52.3854153],[13.1244026,52.3855645]],"Mertz-von-Quirnheim-Straße":[[13.0327501,52.3895172],[13.0329572,52.3894806],[13.0328692,52.3897868],[13.0326939,52.3893586],[13.0322352,52.389155],[13.0330741,52.3900323],[13.0331435,52.3899758],[13.0332129,52.3899193],[13.0332822,52.3898628],[13.0333516,52.3898063],[13.033421,52.3897499],[13.0334904,52.3896934],[13.0335597,52.3896369],[13.0325792,52.3893077],[13.0324645,52.3892568],[13.0323499,52.3892059],[13.0322985,52.3895704],[13.0320273,52.3894673]],"Michendorfer Chaussee":[[13.0548643,52.3834406],[13.0549549,52.3831816],[13.0551279,52.3829976],[13.0549497,52.3827238],[13.0549087,52.3825433],[13.0540341,52.3830283],[13.0540028,52.3827863],[13.0541855,52.3822866],[13.0543945,52.3832199],[13.054764,52.3776046],[13.0499852,52.3706135],[13.0507692,52.3759819],[13.0545679,52.3751109],[13.0475368,52.3471579],[13.0484316,52.3699435],[13.0539503,52.3823652],[13.0539718,52.3825372],[13.051538,52.3783185],[13.055876,52.3784858],[13.0562917,52.37752],[13.0519047,52.3771612],[13.0549154,52.383348],[13.0558113,52.3749913]],"Mies-van-der-Rohe-Straße":[[13.0406015,52.4130688],[13.0403603,52.4129843],[13.0404466,52.4131621],[13.0397665,52.413152],[13.0393963,52.4132239],[13.0391201,52.4133092],[13.0390736,52.412724]],Milanhorst:fa,Milanring:ga,"Mildred-Harnack-Straße":[[13.1364908,52.3605295],[13.1360209,52.3606992]],Mitschurinstraße:[[12.9884956,52.4252785],[12.9973983,52.4234587],[12.9914394,52.4243039],[12.9909447,52.4243906],[12.9917735,52.4242331],[12.9906041,52.4245229],[12.99041,52.4244696],[12.9911923,52.4243186],[12.99703,52.4233129],[12.9937881,52.4240162],[12.9949212,52.4238056],[12.9960763,52.4236047],[12.9941553,52.4239509],[12.9951935,52.4237554],[12.9959138,52.4236315],[12.9929993,52.4241241],[12.9966544,52.423501],[12.995557,52.4236945],[12.9933265,52.4240961],[12.9946017,52.4238632],[12.9965074,52.4234286],[12.9921966,52.4241073],[12.9936755,52.4240341],[12.9971873,52.4233841],[12.9894964,52.4247186],[12.9900853,52.4246138],[12.9898598,52.4246544],[12.9896008,52.4246269],[12.9903764,52.424584],[12.9900085,52.4246424],[12.989074,52.4247838],[12.9890818,52.4247998],[12.9970882,52.4235451],[12.9918461,52.4240301],[12.9916625,52.424254]],Mitteldamm:_a,Mittelstraße:[[13.0585194,52.4026696],[13.0586532,52.4026867],[13.0587842,52.4027034],[13.0589127,52.4027199],[13.0590486,52.4027372],[13.0591806,52.4027541],[13.0593154,52.4027714],[13.0594426,52.4027876],[13.0595743,52.4028045],[13.0602223,52.4028873],[13.0621307,52.4031393],[13.0620007,52.4031232],[13.0618661,52.4031066],[13.0617369,52.4030906],[13.0615265,52.4030646],[13.0613972,52.4030487],[13.0611315,52.4030159],[13.0611315,52.4030159],[13.0593065,52.4030122],[13.0594284,52.4030277],[13.0589394,52.4029653],[13.0590618,52.4029809],[13.0598098,52.4030765],[13.0595489,52.4030431],[13.06105,52.4032378],[13.0614842,52.4031874],[13.0612195,52.4031528],[13.0613163,52.4032731],[13.0618286,52.4032324],[13.0611833,52.4032556],[13.0620908,52.4032666],[13.0619599,52.4032495],[13.0620908,52.4032666],[13.0585604,52.4029168],[13.0599361,52.4030926],[13.0588141,52.4029493],[13.0586848,52.4029327],[13.0584342,52.4029007],[13.0595743,52.4028045],[13.0597092,52.4028217],[13.0598426,52.4028388],[13.059948,52.4028523],[13.0612618,52.403032],[[13.059584,52.4029408],[13.0597168,52.4029578],[13.0598449,52.4029741],[13.0598098,52.4030765],[13.0596817,52.4030601],[13.0595489,52.4030431],[13.059584,52.4029408]],[13.061834,52.4031026],[13.0600624,52.4030308],[13.0619709,52.4031195],[13.0616301,52.4030774],[13.0617279,52.4032374],[13.0585946,52.4026556],[13.0584649,52.4026383],[13.0611455,52.4031675],[13.0587306,52.4026712],[13.0612763,52.403202]],Mittelweg:ma,Moosglöckchenweg:[[13.0901446,52.3580235],[13.0902331,52.3579051],[13.0903207,52.357788],[13.0904185,52.3576572],[13.0898751,52.3583902],[13.0897716,52.3585314],[13.0896714,52.3586683],[13.0895714,52.3588048],[13.0898951,52.3590846],[13.0899709,52.358982],[13.090051,52.3588739],[13.090133,52.358763],[13.0902172,52.3586492],[13.0902892,52.3585518],[13.0905906,52.3583549],[13.0907855,52.3584089],[13.0909778,52.3584621],[13.0911629,52.3585133],[13.0914096,52.3581863],[13.0912179,52.3581338],[13.0910235,52.3580806],[13.0908298,52.3580275]],"Moritz-von-Egidy-Straße":[[13.0492545,52.4086696],[13.0493928,52.4085348],[13.04937,52.4085835],[13.049257,52.4088364],[13.0486836,52.4084798],[13.0484967,52.4083619],[13.0492814,52.4087843],[13.0487232,52.4086059],[13.0484724,52.4085483],[13.0489498,52.4084746]],Mozartstraße:[[13.1276752,52.3831534],[13.1272776,52.3819288],[13.1270268,52.3828771],[13.1274297,52.3829548],[13.1271243,52.3830082],[13.1270124,52.383086],[13.1272128,52.3832173],[13.126852,52.3820059],[13.1268186,52.3823208],[13.1273293,52.3820875],[13.1269925,52.382361],[13.1273767,52.3822669],[13.1269293,52.3825566],[13.1274092,52.3824193],[13.1270667,52.3828284],[13.1273699,52.3827425]],Märkerring:[[13.0253762,52.4699359],[13.0244247,52.4693657],[13.0266888,52.4704165],[13.0260704,52.469884],[13.0262727,52.4705404],[13.0266153,52.4692672],[13.0238758,52.4704858],[13.0246054,52.4705977],[13.0251805,52.4706104],[13.0235527,52.4705299],[13.0262741,52.4691258],[13.0245255,52.4686828],[13.0240773,52.4702256],[13.0248934,52.4706063],[13.0233119,52.4705252],[13.0266555,52.4697202],[13.0261781,52.4689804],[13.0245018,52.4688557],[13.0238133,52.4702109],[13.0267302,52.4699027],[13.0256159,52.4689729],[13.0244776,52.4690249],[13.0235459,52.4701977],[13.0268046,52.4700852],[13.0232825,52.4701829],[13.0257366,52.4705824],[13.026406,52.468825],[13.0263515,52.4693048],[13.0265709,52.4690805],[13.0243408,52.4702405],[13.0244505,52.4691955],[13.0243383,52.4705843],[13.0245458,52.4685132],[13.0262893,52.470186],[13.0248884,52.4702631],[13.0259534,52.470224],[13.0256292,52.4702489],[13.0258659,52.4702309],[13.0251263,52.4702658],[13.0248035,52.4702628],[13.0255419,52.4702555],[13.026203,52.470196],[13.0252149,52.4702661],[13.0244643,52.4699067],[13.0243766,52.4699019],[13.0241785,52.4698816],[13.0240906,52.4698766],[13.0249499,52.4699435],[13.0250351,52.469942],[13.0259864,52.469892],[13.025902,52.4699],[13.0258176,52.469908],[13.0257329,52.469916],[13.0256254,52.4698333],[13.0255346,52.4689873],[13.0253485,52.4690917],[13.02512,52.4699405],[13.0252632,52.469095],[13.0250505,52.4690962],[13.024965,52.469094],[13.0252057,52.469939],[13.0254378,52.4686331],[13.0251938,52.4686515],[13.0242664,52.4683247],[13.0252914,52.4699375],[13.0244249,52.4702453],[13.0241611,52.4702303],[13.0238973,52.4702157],[13.0236333,52.4702027],[13.0233696,52.4701877],[13.0267837,52.4700342],[13.0267093,52.4698517],[13.0266274,52.4696702]],Möbelhof:[[13.1129973,52.3642104],[13.1125115,52.3629114],[13.1137347,52.3635658],[13.1136569,52.3632399],[13.1143337,52.3640171],[13.1097583,52.3616118],[13.110336,52.361945],[13.1108916,52.3623567],[13.1149064,52.3635725],[13.113962,52.3635705],[13.1131652,52.3640314],[13.1130834,52.3641479],[13.1132577,52.3639181],[13.1130596,52.3627717],[13.1112191,52.3630204]],Mövenstraße:[[13.0982525,52.412541],[13.0983732,52.4126027],[13.0981967,52.4124864],[13.0974147,52.4125824],[13.0974561,52.4126424]],Mühlendamm:[[12.9388,52.4156722],[12.9386431,52.4158017],[12.9388951,52.4248069],[12.9382154,52.4160529],[12.9389644,52.415505]],Mühlenring:[[13.0239699,52.4686993],[13.0231269,52.4694722],[13.0237021,52.4691685],[13.0238878,52.4685291],[13.0224818,52.4695579],[13.0239992,52.4688812],[13.0239403,52.4690537],[13.0237061,52.4683881],[13.0220428,52.469347],[13.022158,52.4690637],[13.0219404,52.4695005],[13.0228728,52.4701218],[13.0220437,52.4688286],[13.0232565,52.4682445],[13.0229993,52.4696442],[13.0228986,52.4700038],[13.0226885,52.4684561],[13.0229364,52.4698294],[13.0233238,52.4685822],[13.0223805,52.4697209],[13.0218924,52.4696789],[13.0238721,52.4678581],[13.0236538,52.4679662],[13.0213441,52.4694697],[13.0216483,52.4700899],[13.0220907,52.4701391],[13.0218683,52.4701133],[13.0223438,52.4701667],[13.0216006,52.4690532],[13.0215599,52.469101],[13.0214696,52.4692298],[13.021436,52.4692795],[13.0213005,52.4696083],[13.0212863,52.4696593],[13.0212606,52.4697989],[13.0212525,52.4698505],[13.0212228,52.4699787],[13.0212105,52.4700298],[13.022587,52.4693232],[13.0225257,52.4692862],[13.0224644,52.4692491],[13.0224032,52.469212],[13.0223419,52.469175],[13.0222806,52.4691379],[13.0222193,52.4691008],[13.0231743,52.4694272],[13.0213665,52.4694177],[13.0228625,52.4701751],[13.0229085,52.4699525],[13.0229506,52.4697784],[13.0230323,52.4695945],[13.0239374,52.4678256],[13.0238167,52.4680071],[13.0234923,52.4680358]],Mühlenstraße:[[13.0859486,52.3965567],[13.0852513,52.3958532],[13.0851003,52.3957377],[13.0848598,52.3957028],[13.0851171,52.3955782],[13.0857501,52.3964001],[13.0857501,52.3964001],[13.0855644,52.3962444],[13.0852983,52.3960409],[13.0875047,52.3976248],[13.0877782,52.3979476],[13.0875939,52.3976929],[13.0866508,52.3970822],[13.0868265,52.3972219],[13.0870816,52.3974265],[13.0865342,52.3970014],[13.0863082,52.3968336],[13.0862061,52.3965998],[13.0876241,52.3978574],[13.0881889,52.3982643],[13.0880188,52.3981342],[13.0879717,52.39798],[13.0883029,52.3983581],[13.084103,52.3951251],[13.084103,52.3951251],[13.084655,52.3944229],[13.0846065,52.3953252],[13.0865342,52.3970014],[13.0870563,52.3972336],[13.0872778,52.397467],[13.0844887,52.3950835],[13.0845628,52.3950489],[13.0846405,52.3950123],[13.0848731,52.3947357],[13.0847948,52.3947732],[13.0847179,52.3948102],[13.0862166,52.3965256],[13.08615,52.3964718]],Mühlenweg:[[13.0737901,52.4096414],[13.0737619,52.4094186]],Müllerstraße:[[13.0991469,52.3959949],[13.0989499,52.3958038],[13.1002489,52.396711],[13.0997268,52.3962306],[13.0997897,52.396345],[13.0996235,52.3964623],[13.0999889,52.3963952],[13.099383,52.3963297],[13.1000657,52.3964876]],Müllerweg:[[13.0226102,52.4674888],[13.0218727,52.4677599],[13.0223215,52.4671907],[13.0220711,52.4673951],[13.0216183,52.4675556]],Nansenstraße:[[13.0360523,52.394554],[13.0360351,52.3949971],[13.035985,52.3953434],[13.0362399,52.3967575],[13.035604,52.3965996],[13.0361568,52.3969739],[13.0364226,52.3966677],[13.0358019,52.3968666],[13.0360836,52.3972728],[13.0359445,52.3958082],[13.0355522,52.3971636],[13.0360732,52.397326],[13.035516,52.397563],[13.0355945,52.3968369],[13.0353936,52.3958087],[13.0354137,52.3956379],[13.0354419,52.3953981],[13.0353633,52.3951845],[13.0354987,52.39492],[13.0355258,52.394738],[13.0355463,52.3945581],[13.0360045,52.3947972],[13.0360523,52.394554],[13.0361903,52.3953145],[13.0356797,52.3972443],[13.0355294,52.3955609],[13.036568,52.3948232],[13.0364796,52.3948191],[13.0363983,52.3948153]],"Nattwerder Weg":[[12.9542728,52.4298042],[12.954044,52.4297583],[12.9532592,52.4297919],[12.9535197,52.4298581],[12.953695,52.4299844],[12.9534975,52.4301033],[12.9534729,52.4299447],[12.9538804,52.4296667],[12.9533777,52.4305171],[12.9526938,52.4304554],[12.9524786,52.4302777],[12.9525236,52.430095],[12.9526651,52.4300831],[12.9526612,52.4299334],[12.952698,52.4298356],[12.9535794,52.4290728],[12.9538533,52.4290524],[12.9538848,52.4291645],[12.9539136,52.4292527],[12.9539165,52.4293446],[12.9537504,52.4295427]],"Nedlitzer Holz":[[13.0526849,52.4261941],[13.0538672,52.4261058],[13.0536297,52.4264625],[13.053881,52.4264607],[13.0526912,52.4265082],[13.0533696,52.4261103],[13.052688,52.4263495],[13.0536184,52.4261081],[13.0528604,52.4256851],[13.0528576,52.4265069],[13.0532237,52.4257632],[13.0534923,52.4257606],[13.0537469,52.4257581],[13.0521769,52.4257875],[13.0524322,52.4257868],[13.0526788,52.4257862]],"Nedlitzer Straße":[[13.0539178,52.4224063],[13.0541958,52.4229251],[13.0533101,52.4242671],[13.0540326,52.4242894],[13.0537188,52.4246881],[13.0542229,52.4244147],[13.055025,52.4204495],[13.0548821,52.4201708],[13.0550459,52.4202885],[13.0556829,52.4216362],[13.0557117,52.4214547],[13.0518986,52.4363552],[13.0547662,52.4212948],[13.0546393,52.4213698],[13.054659,52.4216717],[13.0547015,52.4217774],[13.0550964,52.4190165],[13.0545162,52.4190749],[13.0539049,52.4190624],[13.0533471,52.4191225],[13.0546525,52.4205218],[13.0549841,52.4206407],[13.0543998,52.4253825],[13.0544008,52.4255014],[13.0544019,52.4256203],[13.0544029,52.4257391],[13.0544039,52.425858],[13.054405,52.4259769],[13.0544162,52.4262399],[13.0544179,52.4263727],[13.0544197,52.4265054],[13.0544214,52.4266382],[13.0544232,52.426771],[13.0559276,52.420587],[13.055915,52.4207668],[13.0558941,52.4209377],[13.0553386,52.4224327],[13.0553282,52.4225233],[13.0553073,52.4226559],[13.0552968,52.4227349],[13.056216,52.4180522],[13.056261,52.4178524],[13.0559124,52.4189085],[13.0561666,52.4182835],[13.0560767,52.4184805],[13.0559803,52.4186831],[13.0548092,52.4208226],[13.0543118,52.4236826],[13.0531945,52.4237309],[13.0538582,52.423662],[13.0541133,52.4236736],[13.0534101,52.4236417],[13.052057,52.4362595],[13.0567601,52.4177579]],"Nelly-Sachs-Straße":[[13.1336119,52.3635755],[13.1323898,52.3626481],[13.1329009,52.3630491],[13.1325329,52.3629861],[13.1319513,52.3626262],[13.1316208,52.3629653],[13.1319082,52.3632025],[13.1321047,52.3632102],[13.1326485,52.3638229],[13.1331122,52.3643639],[13.1327974,52.3638021],[13.1335875,52.3643533],[13.1337446,52.3636282],[13.1338356,52.363863],[13.1336629,52.3639979],[13.1333064,52.364058]],"Neue Dorfstraße":[[12.9531889,52.4321948],[12.9535744,52.4313393],[12.9530593,52.4315516],[12.9536587,52.4307455],[12.9540264,52.4302022],[12.9529875,52.4311872],[12.9536222,52.4302418],[12.9535324,52.4317257],[12.9543663,52.4303632],[12.9540355,52.4319485],[12.9531717,52.4318851],[12.9531265,52.4317785],[12.9542335,52.4305367],[12.9539522,52.4305776]],"Neue Kirschallee":[[13.0319609,52.4152656],[13.0312323,52.4153151],[13.0314652,52.4150192],[13.0317084,52.4149652],[13.031582,52.4149159],[13.0312323,52.4153151],[13.0322153,52.4152145],[13.0320845,52.4153211],[13.0317126,52.4160562],[13.0315058,52.4156058],[13.0311192,52.4159842],[13.030896,52.4160831],[13.0306728,52.4161819],[13.0304496,52.4162808],[13.0302264,52.4163797],[13.029989,52.416531]],"Neue Plantage":[[13.0546378,52.3972062]],"Neue Straße":[[13.0851614,52.3952971],[13.0854232,52.3949579],[13.0863379,52.394644],[13.0851877,52.3950706],[13.0851523,52.3952184],[13.0852175,52.3952607],[13.0850823,52.3954401],[13.0861139,52.3947497],[13.0853969,52.3949905],[13.084722,52.3954083],[13.0859239,52.3948405],[13.0858378,52.3948817],[13.0861825,52.3949229],[13.0863322,52.3948529],[13.0864446,52.3948003]],"Neuendorfer Anger":[[13.0891297,52.388787],[13.0877281,52.3880346],[13.0879312,52.3881271],[13.0883808,52.3882518],[13.088684,52.3884522],[13.0889319,52.3886437],[13.0892307,52.3890087],[13.0890776,52.3892392],[13.0888988,52.3895538],[13.0884538,52.3893416],[13.0881395,52.3891788],[13.0878196,52.3890141],[13.0876337,52.3889168],[13.087439,52.3888187],[13.0868927,52.3883273],[13.0871704,52.3883106],[13.0872561,52.3882438],[13.0872216,52.388925],[13.0887256,52.3883727],[13.0877708,52.3876859],[13.0868873,52.389053],[13.0868156,52.3890117],[13.0867351,52.3889653],[13.0868458,52.3889431],[13.0869304,52.3888886],[13.0870273,52.3888261],[13.0887492,52.3883324],[13.0888601,52.3882701],[13.088953,52.3882179],[13.0889979,52.3881927],[13.0890137,52.3881604],[13.0889419,52.3881429],[13.0888885,52.3881418],[13.0888019,52.3880873],[13.0883549,52.3883204]],"Neuendorfer Straße":[[13.1285832,52.3781316],[13.1283894,52.3778347],[13.127829,52.3760483],[13.1279327,52.3767636],[13.1280364,52.3771531],[13.128193,52.3774612],[13.1278519,52.3764451],[13.1275829,52.3741756],[13.1278333,52.3745039],[13.1278395,52.3747401],[13.1271162,52.3741522],[13.1278549,52.3749236],[13.1277856,52.3744079],[13.1276572,52.3753436],[13.1273525,52.3731369],[13.1274835,52.3725565],[13.1277786,52.3727924],[13.1279013,52.3724668],[13.1275221,52.3667602],[13.1276229,52.371148],[13.1273937,52.3701847],[13.1259066,52.3689925],[13.1276187,52.3684783],[13.1273075,52.3673348],[13.1274456,52.365516],[13.1271936,52.367686],[13.1272339,52.3649643],[13.1275039,52.3652667],[13.1270995,52.3685245],[13.1271153,52.366864],[13.1279215,52.3687307],[13.1272761,52.3671928],[13.1268697,52.3686487],[13.1270417,52.3658985],[13.1271833,52.3675492],[13.1264537,52.369276],[13.1272352,52.3704471],[13.1266611,52.3693238],[13.1271222,52.3669202],[13.1270314,52.3655286],[13.1273064,52.3698549],[13.1275916,52.3682637],[13.1276761,52.3663897],[13.1266261,52.3688522],[13.1273923,52.366043],[13.1259997,52.3692107],[13.1275762,52.366983],[13.1277436,52.367248],[13.1271547,52.3706829],[13.1276721,52.3674921],[13.1271031,52.3682726],[13.1272569,52.3646246],[13.1271407,52.3680953],[13.1270785,52.3663728],[13.1275661,52.36925],[13.1260307,52.3686304],[13.1267122,52.3681568],[13.1269728,52.36657],[13.1276493,52.3688473],[13.125925,52.3687981],[13.1272026,52.3667069],[13.1271649,52.3650765],[13.1272949,52.3699461],[13.1263274,52.3687327],[13.1277037,52.3686572],[13.1263744,52.3685996],[13.1275385,52.3709986],[13.1277039,52.3714544],[13.1268945,52.3705089],[13.1274298,52.3657223],[13.1266306,52.3684147],[13.1274682,52.3654145],[13.1271632,52.3678367],[13.1264396,52.3693613],[13.127495,52.3647055],[13.1269483,52.3662822],[13.1295703,52.3772852],[13.1292532,52.3771719],[13.1296485,52.3770336],[13.1277274,52.3738348],[13.1259678,52.3731806],[13.127767,52.3649859],[13.1280228,52.3670308],[13.1280774,52.3671004],[13.127403,52.3747415],[13.1274712,52.3747012]],Neuhainholz:pa,Newtonstraße:[[13.1316408,52.3774222],[13.1311194,52.3742113],[13.1311072,52.3746994],[13.1311133,52.3744522],[13.1309686,52.3738637],[13.1309508,52.3745767],[13.1309627,52.3741014],[13.1309567,52.3743422],[13.1311041,52.3748222],[13.1311251,52.3739816],[13.1323957,52.3775935],[13.1316481,52.3777883],[13.1299815,52.3780911],[13.1300655,52.3778788],[13.1300654,52.3775225],[13.1301661,52.3772363],[13.1304763,52.3771966],[13.1300654,52.3777113],[13.1312278,52.3767729]],Nibelungenstraße:[[13.1032821,52.4561744],[13.1027899,52.4556834],[13.1045762,52.4562015],[13.1031082,52.4557417],[13.1048776,52.4561868],[13.1039681,52.4563613],[13.1012266,52.4555491],[13.1008568,52.4551018],[13.104259,52.4565725]],"Niels-Bohr-Ring":[[13.1363719,52.3741051],[13.1355169,52.374362],[13.135663,52.3749628],[13.1368301,52.3741082],[13.1356778,52.3741049],[13.1356705,52.3744966],[13.1356586,52.3752204],[13.1366,52.374014],[13.1356753,52.3742392],[13.1375713,52.3741171],[13.1358457,52.3739967],[13.1356681,52.3746271],[13.1361582,52.3740108],[13.137344,52.3740264],[13.1354965,52.3748281],[13.1370298,52.374017],[13.137437,52.3749162],[13.1364631,52.3748072],[13.1376309,52.3748212],[13.1360728,52.3744943],[13.1372542,52.3744112],[13.136274,52.3744967],[13.1374496,52.3745109],[13.1368471,52.3748118],[13.1366664,52.3749069],[13.1364757,52.3744018],[13.1376434,52.3744159],[13.1370608,52.3749117],[13.1366789,52.3745016],[13.1360603,52.3748996],[13.1372416,52.3748165],[13.1370734,52.3745063],[13.1368597,52.3744064],[13.1362614,52.3749021]],Nietnerstraße:[[13.0450489,52.4245317],[13.044506,52.4246327],[13.044027,52.4247179],[13.0437447,52.4246839],[13.0439398,52.424896],[13.044161,52.4248511],[13.0437039,52.424944],[13.0435884,52.4249919],[13.0455339,52.4243235],[13.0458162,52.4242675],[13.047622,52.4240205],[13.0471172,52.4241722],[13.0462774,52.4242649],[13.0478123,52.4243884],[13.0468316,52.4244556],[13.0435385,52.4248295],[13.0468819,52.4241887],[13.0467593,52.4241907]],Nuthedamm:ya,Nuthestraße:[[13.1334682,52.3712192],[13.1327391,52.3714202],[13.1332398,52.3712157],[13.1352948,52.3713188],[13.1357773,52.3713274],[13.1340319,52.3712196],[13.1338978,52.3712196],[13.1337959,52.371218],[13.1336832,52.3712188],[13.1335853,52.371218],[13.1333626,52.3712176],[13.1331347,52.371214],[13.1330234,52.3712123],[13.1334673,52.3712862],[13.1331535,52.3712806],[13.1330153,52.3713359],[13.1331393,52.3713375],[13.1332385,52.3713387],[13.1334733,52.3713417],[13.1335752,52.371343],[13.1338274,52.3713461]],Nuthewinkel:xa,"Obere Donarstraße":[],"Obere Planitz":[],"Olympischer Weg":[[13.0183141,52.3773903],[13.0199112,52.3805166],[13.0191095,52.38021],[13.0202471,52.3794629],[13.0209463,52.3811518],[13.0164612,52.3798635],[13.0187583,52.3817356],[13.0196166,52.3796547],[13.0199145,52.3796492],[13.0209459,52.3810122]],Opolestraße:[[13.0468891,52.422341],[13.0470289,52.4224544],[13.0472381,52.4226645],[13.0473899,52.4228487],[13.0476072,52.4226341],[13.0474391,52.422452],[13.0472689,52.4223033],[13.0470805,52.4221385],[13.0469054,52.4219646],[13.0478683,52.4229981],[13.0478524,52.4228628],[13.0479262,52.4235407],[13.047568,52.4236042],[13.0476836,52.4230517],[13.0485862,52.4250478],[13.0482197,52.4240183],[13.0479544,52.4240303],[13.0459604,52.4268181],[13.0478329,52.4245666],[13.0477603,52.4259597],[13.0479416,52.4254731],[13.046697,52.4264361],[13.0480062,52.4243928],[13.0463162,52.4264665],[13.0472309,52.4262931],[13.047881,52.4232022],[13.0478873,52.4232651],[13.0477701,52.4239101],[13.047763,52.4238399],[13.0477242,52.4234615],[13.04773,52.4235317],[13.0479493,52.4238222],[13.0479529,52.4239048],[13.0479272,52.4236223],[13.0479334,52.423695],[13.0480137,52.4245445],[13.0480068,52.4244659],[13.0465069,52.4268004],[13.0470587,52.4264394],[13.046321,52.4269141],[13.0467453,52.4266108]],"Orenstein-&-Koppel-Straße":[[13.11318,52.3788901],[13.1093272,52.3800436],[13.1076839,52.3799503],[13.1082965,52.3791753],[13.1095912,52.3797209],[13.1124638,52.3795769],[13.1130818,52.379043],[13.1147186,52.3786513],[13.1078679,52.3797183]],"Orville-Wright-Straße":[[13.0369373,52.4172983],[13.0380532,52.4185208],[13.0359228,52.4170917],[13.0371932,52.417525],[13.0370051,52.4170029],[13.0377521,52.4177117],[13.0363724,52.4169173],[13.0370094,52.4174514],[13.0382615,52.4189047],[13.0400558,52.4199174],[13.0365473,52.4169228],[13.0444088,52.424461],[13.0442251,52.4241443],[13.0441513,52.4240048],[13.0423693,52.4221348],[13.0428339,52.4226391],[13.0443053,52.4242922],[13.0432206,52.4229438],[13.0426963,52.4225123],[13.0414645,52.4216596],[13.0427428,52.4229054],[13.043988,52.424512],[13.0422899,52.4224364],[13.0446329,52.4254146],[13.0446335,52.4260608],[13.0387914,52.4193752],[13.0373883,52.4166627],[13.036798,52.4171693],[13.043369,52.4230743],[13.0430886,52.4228143],[13.044262,52.4250954],[13.0424546,52.4226606],[13.0434401,52.4237621],[13.0384015,52.4183587],[13.0383774,52.4182517],[13.0384307,52.4182312],[13.0384844,52.4182102],[13.0385406,52.4181886],[13.0385343,52.4184512],[13.0390559,52.4189489],[13.0437369,52.4238846],[13.039243,52.4201949],[13.0397679,52.4196394],[13.0394584,52.4193374],[13.0390188,52.4200549],[13.0392703,52.4199225],[13.0392884,52.419736],[13.0388976,52.4198795],[13.0386877,52.4197415],[13.0390785,52.4195473],[13.0387156,52.4193316],[13.038265,52.4193095],[13.0370381,52.4181371],[13.0374349,52.417983],[13.037568,52.418112],[13.0411953,52.4215137],[13.0407333,52.4216876],[13.0426732,52.4231036],[13.043123,52.4235249],[13.0436091,52.4239994],[13.0445588,52.4256143],[13.0455217,52.4274205],[13.0400558,52.4199174],[13.0399801,52.4198422],[13.0399045,52.4197671],[13.0439803,52.4243846],[13.0451994,52.4275484],[13.0426277,52.4227687],[13.0446223,52.4248427],[13.0446849,52.4250054],[13.0447757,52.4251561],[13.0448466,52.4253047],[13.0449525,52.4254598],[13.0446608,52.4258928],[13.0448394,52.4262075],[13.0453472,52.4269634],[13.0450914,52.426615],[13.0395996,52.4200507],[13.036985,52.417682],[13.044753,52.4266937],[13.0446044,52.4264683],[13.0445267,52.4262484],[13.0387455,52.4186533],[13.0387032,52.4186129],[13.038661,52.4185725],[13.0386187,52.4185321],[13.0385765,52.4184916],[13.0388871,52.4187859],[13.0389293,52.4188267],[13.0389715,52.4188674],[13.0390137,52.4189082],[13.039256,52.4191504],[13.0393235,52.4192127],[13.0393909,52.4192751],[13.039575,52.4194592],[13.0396393,52.4195193],[13.0397036,52.4195793],[13.0374728,52.4166306],[13.0368708,52.4167583],[13.0369571,52.4167423],[13.0370433,52.4167264],[13.0371296,52.4167105],[13.0372158,52.4166946],[13.037302,52.4166786],[13.0372675,52.4172487],[13.03723,52.4172136],[13.0371925,52.4171785],[13.037155,52.4171434],[13.0371176,52.4171083],[13.0370801,52.4170732],[13.0370426,52.417038],[13.03766,52.4176186],[13.0376234,52.4175838],[13.0375868,52.417549],[13.0375502,52.4175143],[13.0375136,52.4174795],[13.037477,52.4174447],[13.0374404,52.4174099],[13.0374038,52.4173751],[13.0378716,52.4178229],[13.0378318,52.4177858],[13.0377919,52.4177488],[13.0449903,52.4264021],[13.0449495,52.4270509],[13.0452242,52.4267428],[13.0455651,52.4265238],[13.0449934,52.427235],[13.0454156,52.4271085],[13.0452564,52.4259635],[13.0453556,52.4261393],[13.0454526,52.4263606],[13.0451451,52.4257757],[13.0382772,52.4187045],[13.0422496,52.4222847],[13.0457107,52.4267938],[13.0436508,52.4233433],[13.0437257,52.4233135],[13.043803,52.4232827],[13.0438826,52.423251],[13.0437998,52.4235496],[13.0438425,52.4235915],[13.0438842,52.4236326],[13.0439145,52.4236952],[13.0439516,52.4237316],[13.0439893,52.4237688],[13.0402716,52.4206879],[13.0404448,52.4207871],[13.0405079,52.4209452],[13.0406565,52.4210523],[13.0408032,52.4211732],[13.0407866,52.420553],[13.0408454,52.4205916],[13.0408822,52.4206331],[13.0409263,52.420678],[13.0409763,52.4207165],[13.041016,52.4207587],[13.0409539,52.4212806],[13.0411048,52.4208563],[13.0411534,52.4208965],[13.0411961,52.4209432],[13.0412402,52.4209845],[13.0412976,52.421029],[13.0414195,52.4211078],[13.0414622,52.4211464],[13.0415018,52.4211877],[13.0415483,52.4212232],[13.0416033,52.4212711],[13.041643,52.421325],[13.0407804,52.4202952],[13.0407358,52.4203123],[13.0406834,52.4203325],[13.0406276,52.420354],[13.0405812,52.4203718],[13.0366649,52.4177],[13.0365717,52.4177366]],"Oskar-Meßter-Straße":[[13.1329496,52.3670004],[13.1339056,52.3663454],[13.1340664,52.36663],[13.1334486,52.3669872],[13.1337221,52.366825],[13.1333044,52.3670768],[13.1338976,52.3667188],[13.1343707,52.3664464],[13.1335934,52.3669077],[13.1342096,52.3665448]],Otterkiez:Ea,Otterweg:wa,"Otto-Braun-Platz":[[13.061848,52.3943792]],"Otto-Erich-Straße":[[13.1180551,52.3958278],[13.1180438,52.3955471],[13.1180718,52.396469],[13.1174339,52.3964683],[13.1176389,52.396752],[13.1176989,52.3962807],[13.1177464,52.3960961],[13.1182045,52.3949835],[13.117741,52.3957605],[13.117606,52.3949093],[13.1182307,52.3951536],[13.117716,52.3951534],[13.1182353,52.3953097],[13.1176635,52.3954646],[13.117726,52.3955378],[13.1183138,52.3967072]],"Otto-Hahn-Ring":[[13.1406667,52.3748197],[13.1389543,52.3742634],[13.1391229,52.3739173],[13.1395956,52.3743647],[13.1408402,52.3743605],[13.1390729,52.3734843],[13.1394345,52.373831],[13.1396052,52.3734882],[13.1398176,52.3742701],[13.1391745,52.3743614],[13.1406614,52.3750833],[13.1393851,52.3733902],[13.1387469,52.3739144],[13.1408236,52.3749566],[13.1400264,52.3734916],[13.138941,52.373821],[13.1400175,52.3739306],[13.139813,52.3733935],[13.1406882,52.3738948],[13.1387425,52.374358],[13.1393823,52.3742667],[13.1385398,52.3738178],[13.1408501,52.3737679],[13.1406837,52.3742238],[13.1387974,52.3733853],[13.1396415,52.3739277],[13.1385262,52.37426],[13.1399869,52.3743678],[13.1398357,52.3738343],[13.1391732,52.3734847],[13.1408083,52.3740343],[13.1406931,52.3736313],[13.1407942,52.374627],[13.1407935,52.3752234],[13.1406442,52.3734705],[13.1404283,52.3734738]],"Otto-Haseloff-Straße":[[13.1443296,52.3773533],[13.144265,52.3773169],[13.146124,52.3783403],[13.1417836,52.3759606],[13.1456977,52.3780735],[13.1453455,52.3778289],[13.1455224,52.377579],[13.1425659,52.3763962],[13.1460736,52.3779545],[13.14577,52.3777986],[13.1437988,52.3773542],[13.1424319,52.375908],[13.1441704,52.3766169],[13.1459476,52.378224],[13.1460286,52.3782686],[13.1454879,52.377954],[13.1424582,52.3759571]],"Otto-Nagel-Straße":[[13.0712185,52.4063683],[13.0715857,52.4062986],[13.0699867,52.4064218],[13.0704568,52.4065427],[13.0705364,52.4063277],[13.0708067,52.4062982],[13.0709328,52.4067559],[13.0707845,52.4066738],[13.0706611,52.4070247],[13.0709914,52.406186],[13.071139,52.4060739],[13.0715118,52.4058595],[13.0715118,52.4058595],[13.0718416,52.4061441],[13.0719873,52.4059891],[13.0718863,52.4055542],[13.0721454,52.4058371],[13.0723842,52.405626],[13.0703116,52.4066746],[13.0709684,52.4060998]],"Paarener Dorfstraße":[[12.9349148,52.4864889],[12.9347994,52.4861551],[12.9355961,52.4880565],[12.9374163,52.4891698],[12.9378429,52.4906822],[12.9352513,52.4873541],[12.934692,52.4859502],[12.9354783,52.4877917],[12.9354567,52.4883868],[12.9370705,52.489048],[12.9349388,52.4877377],[12.9373961,52.4893503],[12.9362954,52.4889439],[12.9367041,52.4888879],[12.9351726,52.4869829],[12.9356692,52.4885569],[12.9362892,52.4885742],[12.9346588,52.4869466],[12.9347281,52.4872568],[12.9359742,52.4886844],[12.935114,52.4878941],[12.934987,52.4875158],[12.9376096,52.4894805],[12.9375467,52.4893948],[12.9353162,52.4881776],[12.9350926,52.4881289],[12.9372191,52.4897382],[12.9358081,52.488176],[12.9366581,52.4892642],[12.93691,52.4895262],[12.9348606,52.486299]],"Paarener Mühlenweg":[[12.9359153,52.4871906],[12.9418908,52.487652],[12.9358504,52.4872616],[12.9388541,52.4872315],[12.9421493,52.4878177],[12.9406037,52.4875042],[12.9354872,52.4871137],[12.9357078,52.4872577],[12.9414166,52.4877195],[12.9410313,52.4876593],[12.937835,52.4873042]],Paetowstraße:[[13.0514994,52.3824469],[13.0515312,52.3822684],[13.0514647,52.3826289],[13.0515695,52.3820888],[13.0519394,52.382115],[13.0517409,52.3829691],[13.0511806,52.3829297],[13.0514565,52.3829469],[13.0508376,52.3827325],[13.0526996,52.3822905],[13.0522999,52.3827494],[13.0523951,52.3823541],[13.0524049,52.3821612],[13.0523499,52.3825499],[13.051835,52.3826544],[13.0519017,52.3822962],[13.0508858,52.3825653],[13.0509224,52.3823962],[13.0509585,52.3822255],[13.0509927,52.3820578],[13.0518702,52.3824731],[13.0521063,52.3818339],[13.0518343,52.3817948],[13.0515589,52.3817813],[13.0512871,52.3818009],[13.053092,52.3831154],[13.0531167,52.3829981],[13.0531409,52.382883],[13.0531663,52.3827618],[13.0531901,52.3826488],[13.0532149,52.3825309],[13.0535261,52.3825797],[13.0535027,52.3826937],[13.0534726,52.3828398],[13.0534498,52.3829508],[13.0534315,52.3822866],[13.0535986,52.3822986],[13.0528753,52.3822105]],Pannenbergstraße:[[13.0087897,52.4209958],[13.0092717,52.4214367],[13.0086097,52.4214696],[13.009551,52.4214163],[13.0089248,52.4213682],[13.0081674,52.4216379],[13.0092441,52.4211823],[13.0065016,52.4228101],[13.0059683,52.4234484],[13.0062008,52.4239842],[13.0058316,52.4241228],[13.0054026,52.4237382],[13.0060162,52.4236298],[13.0068939,52.4225398],[13.0058077,52.4238998],[13.0075641,52.4221485],[13.0059256,52.4238758],[13.006476,52.4239435],[13.0058316,52.4236548],[13.0071984,52.4225124],[13.0076074,52.4224412],[13.0063461,52.4237716],[13.005394,52.4238893],[13.0075008,52.4224924],[13.0054291,52.4242175],[13.006663,52.422688],[13.005447,52.4235798],[13.0073271,52.4223429],[13.0060669,52.4226936],[13.0118636,52.4204319],[13.0111531,52.4205637],[13.0114182,52.4205419],[13.0116219,52.4204703],[13.0052957,52.4241473],[13.0052181,52.4234852],[13.0068784,52.422283],[13.0108498,52.4207218],[13.0071232,52.4221557],[13.0090161,52.4216456],[13.0064982,52.422403],[13.0081262,52.4210724],[13.0082308,52.4211947],[13.0122071,52.4206253],[13.0124624,52.4205705],[13.0104612,52.4207187],[13.0093387,52.4208177],[13.0077951,52.421791],[13.0096802,52.4210903],[13.0095616,52.4211306]],Pappelallee:Ca,Pappelhof:Sa,Parallelweg:Ta,"Park Babelsberg":[[13.0876957,52.4069992],[13.0929166,52.4067948],[13.0994979,52.4069744],[13.0925775,52.3989432],[13.085487,52.4042724],[13.0847721,52.401488],[13.0791977,52.4002776],[13.0865165,52.403112],[13.0765586,52.4002636],[13.0789151,52.4003042],[13.0793547,52.4010212],[13.0927449,52.4074686],[13.0871681,52.399642],[13.0861122,52.400797]],Parkstraße:[[13.0452282,52.406266],[13.0448217,52.4060843],[13.0445903,52.4059954],[13.0450316,52.4061611],[13.0440193,52.4060092],[13.0438011,52.4059533]],Parzivalstraße:[[13.1018704,52.4580847],[13.1015712,52.4581762],[13.1021965,52.4581966],[13.0985141,52.4581151],[13.0991086,52.4581078],[13.1005719,52.4580768],[13.100321,52.4584102],[13.1002297,52.4580673],[13.1008766,52.4580895],[13.1006476,52.458421],[13.0988332,52.4581261],[13.0993906,52.4580823],[13.1036002,52.458331],[13.1031949,52.4585865],[13.1020148,52.4585876],[13.0974149,52.4582862],[13.0999571,52.4580684],[13.0983116,52.4581656],[13.100534,52.4583991],[13.1002072,52.4583886],[13.1032186,52.4582338],[13.0971137,52.4583738],[13.1029668,52.4587222],[13.0974959,52.4580375]],Pasteurstraße:[[13.0981597,52.3971026],[13.0986682,52.3971083],[13.098463,52.3970463],[13.0972473,52.3975342],[13.0959369,52.3978433],[13.0994952,52.3968993],[13.0996556,52.3970067],[13.0961438,52.3977013],[13.0967604,52.3975589],[13.0978038,52.3974031],[13.0978583,52.3973014],[13.0958781,52.3977653],[13.0980738,52.3973402],[13.0969883,52.3975955],[13.0975043,52.3974726],[13.0993074,52.3970651],[13.0999194,52.3969373],[13.0972913,52.3973293],[13.0993296,52.3969384],[13.0964481,52.3976316],[13.0973411,52.397422],[13.0974652,52.3975773],[13.0991605,52.3969784],[13.098103,52.3972416],[13.0975928,52.3972472],[13.0961562,52.3977913],[13.0977968,52.3972009],[13.098645,52.3972068],[13.0996604,52.3968605],[13.0989831,52.3966494],[13.0969389,52.3976069],[13.0990173,52.3972571],[13.0984537,52.3973432],[13.1004717,52.3965452],[13.1016064,52.3966279],[13.1005317,52.3966358],[13.1008709,52.3967099],[13.1027101,52.3962849],[13.1013586,52.396697],[13.1003538,52.3968348],[13.1010922,52.396384],[13.1004466,52.3969153],[13.098463,52.3970463],[13.1007502,52.3965822],[13.0977586,52.3971355],[13.1022428,52.396495],[13.1019801,52.3964628],[13.1018347,52.3965939],[13.097586,52.3973541],[13.1008521,52.3967222]],"Pastor-Moritz-Straße":[[13.0147853,52.4725293],[13.0145609,52.4725895],[13.0144803,52.4726079],[13.0142693,52.4726503],[13.0141877,52.4726696],[13.0139109,52.4726471],[13.0137506,52.4726994],[13.0139734,52.4724177],[13.0139293,52.4724683],[13.0143784,52.4722907],[13.0142498,52.4723123],[13.0149346,52.4721996],[13.0148061,52.4722208],[13.0153038,52.4721302],[13.0155585,52.4723042],[13.01552,52.4722537],[13.0157405,52.4725461],[13.0157021,52.4724959],[13.0147472,52.4728229],[13.0141783,52.4729327],[13.0152868,52.4730302],[13.0153854,52.4728834],[13.0149207,52.4730239],[13.0142906,52.4732611],[13.0136502,52.4733296],[13.0134622,52.4730038],[13.0129303,52.4730123],[13.0114569,52.4732537],[13.0116697,52.4731621],[13.0111546,52.4731275],[13.0123068,52.4729789],[13.0127477,52.4733304],[13.0129517,52.4732302],[13.0125479,52.473201],[13.0145174,52.4728701],[13.0144326,52.4728857],[13.0143479,52.4729014],[13.0142631,52.472917],[13.0138423,52.472976],[13.0137473,52.472983],[13.0136523,52.4729899],[13.0135572,52.4729969],[13.0132191,52.4730102],[13.0131229,52.4730109],[13.0130266,52.4730116],[13.0126907,52.473001],[13.0125947,52.4729955],[13.0124988,52.4729899],[13.0124028,52.4729844],[13.0150699,52.4727336],[13.0149892,52.4727559],[13.0149086,52.4727783],[13.0148279,52.4728006],[13.0154614,52.4725928],[13.0154263,52.4725466],[13.0153912,52.4725005],[13.0153562,52.4724543],[13.0153211,52.4724081],[13.015286,52.472362],[13.0152509,52.4723158]],Patrizierweg:Ra,"Paul-Engelhard-Straße":[[13.0377562,52.4170896],[13.0400226,52.4192448],[13.0403043,52.4195141],[13.039752,52.4189775],[13.037851,52.4171612],[13.0385837,52.4171097],[13.0410841,52.4203199],[13.0415138,52.4201495],[13.037727,52.4170623],[13.0376956,52.417029],[13.0376572,52.4169916],[13.0376255,52.4169601],[13.0375886,52.4169234],[13.037549,52.4168852],[13.038866,52.4182101],[13.0392702,52.4185245],[13.0396134,52.4188417],[13.0403879,52.4190322],[13.0405589,52.4197564],[13.040508,52.4197079],[13.040457,52.4196595],[13.0404061,52.419611],[13.0403552,52.4195625],[13.0401956,52.4194094],[13.0401524,52.4193682],[13.0401091,52.4193271],[13.0400659,52.4192859],[13.0399059,52.4191272],[13.0398546,52.4190773],[13.0398033,52.4190274],[13.0393935,52.4186348],[13.0394375,52.4186762],[13.0394815,52.4187176],[13.0395254,52.4187589],[13.0395694,52.4188003],[13.0390459,52.4183102],[13.0390908,52.4183531],[13.0391356,52.4183959],[13.0391805,52.4184388],[13.0392254,52.4184816],[13.038352,52.4176409],[13.0383155,52.4176057],[13.0382791,52.4175705],[13.038127,52.4174246],[13.0380876,52.417387],[13.0380482,52.4173493],[13.0380087,52.4173117],[13.0379693,52.4172741],[13.0379299,52.4172364],[13.0378904,52.4171988],[13.0382292,52.4167692],[13.0382735,52.4168118],[13.0383178,52.4168543],[13.0383621,52.4168969],[13.0384064,52.4169395],[13.0384508,52.416982],[13.0384951,52.4170246],[13.0385394,52.4170672],[13.041589,52.4202409],[13.0416381,52.4202855],[13.0413299,52.4203537],[13.0413699,52.4203919],[13.0416848,52.4203278],[13.0417318,52.4203705],[13.041413,52.4204329],[13.0414557,52.4204737],[13.0414924,52.4205087],[13.0418823,52.4204927],[13.0419278,52.420535],[13.0416113,52.4206147],[13.0416543,52.4206559],[13.0419741,52.420578],[13.0416976,52.4206975],[13.0417357,52.420734],[13.0417783,52.4207748],[13.0421115,52.4207071],[13.042161,52.4207526],[13.0418906,52.4208766],[13.0419302,52.4209131],[13.042208,52.4207959],[13.0422481,52.4208328],[13.0419747,52.4209542],[13.0420228,52.4209986],[13.042066,52.4210386],[13.0405402,52.419096],[13.0408379,52.4193441],[13.0406608,52.4192192],[13.0407548,52.4193731],[13.0411591,52.419653],[13.0410705,52.4196849],[13.0410035,52.4195033],[13.0409244,52.4195369]],"Paul-Lange-Bey-Straße":[[13.0132381,52.4720599],[13.0131615,52.4720365],[13.0128894,52.4719741],[13.0128115,52.4719504],[13.012553,52.4718715],[13.0124761,52.4718478],[13.0127409,52.471668],[13.0126653,52.4716448],[13.0131138,52.4717808],[13.0130364,52.4717573],[13.013556,52.4718096],[13.0134084,52.4718718],[13.0139286,52.4719237],[13.0137798,52.4719845],[13.0144568,52.4718665],[13.0140332,52.4717617],[13.0136576,52.4716492],[13.0132789,52.4715344],[13.0129005,52.4714183],[13.012453,52.471272],[13.0122093,52.4712396],[13.0122686,52.4714081],[13.012222,52.4715392],[13.0122491,52.4717789],[13.0121216,52.4719131],[13.0120783,52.4719648],[13.013072,52.4723382],[13.0129554,52.4723017],[13.0126671,52.4722145],[13.0125489,52.4721796],[13.0124717,52.472348],[13.0124161,52.4725158],[13.0122461,52.4724636],[13.0122204,52.4725413],[13.0116453,52.4725079],[13.0113389,52.4724649],[13.0112478,52.4724524],[13.0119102,52.4728281],[13.0118329,52.4728163],[13.0115756,52.4727821],[13.0114951,52.4727708],[13.0112347,52.4727354],[13.0111559,52.4727243],[13.0135872,52.4721608],[13.0143735,52.4718411],[13.0139505,52.4717364],[13.0135736,52.4716232],[13.0131967,52.4715088],[13.012819,52.4713933]],"Paul-Neumann-Straße":[[13.1047141,52.391606],[13.1074121,52.3873878],[13.1075676,52.3875171],[13.1129791,52.38674],[13.1099603,52.3870195],[13.1132281,52.3866309],[13.1109546,52.3870474],[13.112648,52.3863354],[13.1111665,52.3872765],[13.1119024,52.3869527],[13.1134956,52.3865868],[13.1090079,52.3875611],[13.1057924,52.3900812],[13.1091335,52.3874339],[13.1051639,52.3898832],[13.1087756,52.3875073],[13.1084882,52.3875583],[13.1093697,52.3874869],[13.1042701,52.3913824],[13.1087951,52.3870255],[13.1054891,52.3904173],[13.1092896,52.3868995],[13.1086411,52.3873008],[13.1049167,52.3911146],[13.1106765,52.3871075],[13.1090384,52.3872159],[13.109272,52.3871673],[13.1114132,52.3872232],[13.1094921,52.3868561],[13.1116599,52.3871698],[13.1096947,52.3868126],[13.1121769,52.3868934],[13.1101851,52.386971],[13.1107418,52.3867539],[13.1107418,52.3867539],[13.1123729,52.3863949],[13.1041104,52.3915427],[13.1069805,52.3879984],[13.1045017,52.3904663],[13.1118295,52.3865874],[13.104618,52.390166],[13.105616,52.3895981],[13.1055084,52.3897193],[13.1054012,52.3898399],[13.1060528,52.389075],[13.1059005,52.3892465],[13.1057914,52.3893693],[13.1059441,52.3896877],[13.1058596,52.389783],[13.1057778,52.389875],[13.1061716,52.38948],[13.1062868,52.3893502],[13.1064048,52.3892159],[13.1069495,52.3886869],[13.1068469,52.3888025],[13.1067583,52.3889022],[13.1066634,52.3890092],[13.1078946,52.3879075],[13.1077078,52.3879479],[13.1075096,52.3879908],[13.1073361,52.3881444],[13.1072487,52.3882442],[13.1071474,52.3883599],[13.1070517,52.388469],[13.106119,52.388852],[13.1062141,52.3887449],[13.1063128,52.3886338],[13.1064101,52.3885242],[13.1067774,52.3882393],[13.1068818,52.3881161],[13.1066705,52.3883559],[13.1044123,52.3909769],[13.1070802,52.3878572],[13.1042834,52.3911251],[13.1060367,52.3889427],[13.1045278,52.3906507],[13.1044736,52.3908052],[13.105431,52.39047],[13.1070044,52.3877049],[13.1130491,52.3863727],[13.1133127,52.3863158],[13.1128792,52.3858378],[13.1129803,52.3860171]],"Paul-Wegener-Straße":[[13.1435531,52.3689947],[13.1431767,52.368755],[13.142813,52.3685234],[13.1434276,52.3689148],[13.1430555,52.3686778],[13.1436785,52.3690746],[13.1433022,52.3688349],[13.1432407,52.3683262],[13.1434977,52.368491],[13.1441004,52.3688057]],Persiusstraße:[[13.0619953,52.4150715],[13.0610483,52.4149291],[13.0621342,52.4150515],[13.0614052,52.4151505],[13.0619251,52.4147244],[13.0624713,52.4145366],[13.0621484,52.4145169],[13.0624634,52.4148205],[13.0611859,52.4149224],[13.0624346,52.4150288],[13.0615245,52.4147761],[13.0629829,52.4144669]],Pestalozzistraße:[[13.1034615,52.3880033],[13.104092,52.3890006],[13.1041178,52.3892601],[13.1040475,52.3892057],[13.104285,52.3897134],[13.1042563,52.3895222],[13.1040657,52.3888168],[13.1048139,52.3889025],[13.1044723,52.3885651],[13.104728,52.3887585],[13.1043742,52.3883716],[13.1046549,52.3892556],[13.1033222,52.3877617],[13.1046497,52.3900129],[13.1038725,52.3884242],[13.1038083,52.3875872],[13.1040325,52.3880433],[13.1047011,52.3893617],[13.1048692,52.3896926],[13.1045481,52.3898093],[13.1045986,52.3899105],[13.1048122,52.3895803],[13.1047567,52.3894712],[13.103945,52.3885698],[13.103912,52.3877983]],"Peter-Altmann-Straße":[[13.011743,52.424094],[13.010926,52.4244644],[13.0104626,52.4243993]],"Peter-Behrens-Straße":[[13.040428,52.4142777],[13.0407045,52.4140209],[13.0408915,52.4141943],[13.0411051,52.4139323],[13.0412951,52.4141117],[13.0415207,52.4138368],[13.0417184,52.414031],[13.0410152,52.4134064],[13.0411028,52.4135746],[13.0407792,52.4134209],[13.0408694,52.4135951],[13.0402194,52.4138545],[13.0399653,52.4139002],[13.0397112,52.4139459],[13.0394304,52.4138715]],"Peter-Huchel-Straße":[[13.0521968,52.4241952],[13.0523934,52.4215979],[13.0518233,52.4215455],[13.0512467,52.4215402],[13.0523052,52.4233853],[13.0521508,52.4237998],[13.0523722,52.4245066]],"Pierre-de-Gayette-Straße":[[13.1367973,52.358624],[13.1368049,52.3589097],[13.1367929,52.3590745],[13.136791,52.3593689],[13.136767,52.3598603],[13.1367614,52.3600074],[13.1367365,52.3609303],[13.1367082,52.3611827]],Pietschkerstraße:[[13.1273653,52.377934],[13.1261964,52.3777955],[13.1264404,52.3781552],[13.1266541,52.3776845],[13.126448,52.378586],[13.127605,52.3783036],[13.1269047,52.3780442],[13.1268524,52.3783834],[13.1271392,52.3784173],[13.1266168,52.3780141],[13.1268194,52.3775395],[13.1270811,52.3779031],[13.1273173,52.3782699],[13.1271071,52.3775746],[13.125974,52.3778494],[13.1266794,52.3785295],[13.1262061,52.3782112],[13.1251087,52.377662],[13.1251672,52.3782125],[13.1259262,52.3787038],[13.1255708,52.3787917]],Pilzweg:Ia,Pirolweg:va,Plantagenhof:Aa,Plantagenplatz:Ma,Plantagenstraße:[[13.1026704,52.3948039],[13.101692,52.3960271],[13.1023534,52.3951544],[13.1011445,52.3958664],[13.1026039,52.3948006],[13.1020163,52.3957234],[13.1022875,52.3953247],[13.1023135,52.3950046],[13.1006867,52.3959787],[13.1033694,52.3928796],[13.1031756,52.3931898],[13.10238,52.3939224],[13.1029367,52.3940847],[13.1031679,52.3939694],[13.1028265,52.3937665],[13.1031911,52.3936965],[13.1039106,52.3933804],[13.1035464,52.3934365],[13.1028347,52.3942065],[13.1027832,52.3943364],[13.1038977,52.3930794],[13.1011075,52.3963605],[13.1010075,52.3962459],[13.1014506,52.3953726],[13.1023059,52.3953336],[13.102025,52.3954336],[13.1006867,52.3959787],[13.1036564,52.3936238],[13.1028863,52.3950092],[13.1029545,52.3931292],[13.1030736,52.3942105],[13.1036848,52.3931907],[13.1014523,52.3955815],[13.1013712,52.3959928],[13.1024673,52.3948464],[13.1016879,52.3953518],[13.1026171,52.3940276],[13.1026799,52.3939368],[13.1029484,52.393568],[13.1030278,52.393439],[13.1029667,52.3933765]],Plantagenweg:La,"Platz der Einheit":[[13.0588672,52.3994081],[13.0590516,52.3993825],[13.0602441,52.398195],[13.060309,52.3983076],[13.0602537,52.3984423],[13.0602002,52.3985725],[13.0601481,52.3986993],[13.0600705,52.3988886],[13.0600152,52.3990206],[13.0599551,52.3991641],[13.0599014,52.3992922],[13.0598202,52.3994878],[13.0597668,52.3996224],[13.0597125,52.3997592],[13.0591556,52.3996362],[13.0590329,52.3994292]],Pomonaring:Pa,Posthofstraße:[[13.0634486,52.3989447],[13.0635056,52.3991032],[13.0639031,52.399278],[13.0645038,52.3995579],[13.0646948,52.3996006],[13.0649885,52.3997703],[13.0650121,52.3994209],[13.0648577,52.3993605],[13.0646579,52.3991298],[13.0637163,52.3988428],[13.0643447,52.3994942],[13.0628542,52.3985197],[13.063345,52.3990331],[13.0645449,52.3992299],[13.0642041,52.3996115],[13.064467,52.3993875],[13.0649926,52.399383],[13.063367,52.3987246],[13.0650594,52.3997377],[13.0641177,52.3996198],[13.065087,52.3994163]],"Potsdamer Chaussee":[[13.098901,52.4690031],[13.098273,52.4690857],[13.1049765,52.4708668],[13.1084075,52.4716814],[13.1059059,52.4711224],[13.1073944,52.4714745],[13.1071609,52.4713749],[13.107027,52.4709305],[13.1067073,52.4712075],[13.1067538,52.470843],[13.1071498,52.4712772],[13.1072262,52.4709208],[13.1074096,52.4712877],[13.1102805,52.4719776],[13.1099326,52.4723355],[13.1111149,52.4725248],[13.1106118,52.4721409],[13.1116297,52.4726263],[13.1104452,52.4725469],[13.1107205,52.4731792],[13.1107581,52.4736598],[13.1091672,52.4731551],[13.1106229,52.4732861],[13.0726712,52.459945],[13.1027064,52.4709694],[13.1029391,52.4711091],[13.1044744,52.4714526],[13.1087145,52.471949],[13.1089854,52.4720797],[13.1123837,52.4719488],[13.1076004,52.4716584],[13.1011587,52.4700197],[13.1015192,52.4700732],[13.1009412,52.4699636],[13.1078098,52.471762],[13.1082993,52.471993],[13.1092313,52.4721161],[13.1008456,52.4699392],[13.0964329,52.4688504],[13.1104506,52.4729425],[13.1037649,52.470595],[13.1038813,52.4706212],[13.1039964,52.4706472],[13.1041005,52.4706707],[13.1074598,52.4714624],[13.1046817,52.4707733],[13.1042167,52.4713942],[13.1043675,52.4714284],[13.1040442,52.4713551],[13.1006189,52.4698951],[13.1007079,52.4699157],[13.1008286,52.4699435],[13.1009293,52.4699668],[13.1010141,52.4699863],[13.1010915,52.4700042],[13.1011912,52.4700271],[13.101266,52.470044],[13.1013551,52.4700641],[13.1014393,52.4700832],[13.0994979,52.4696428],[13.0991605,52.4694712],[13.1056993,52.471034],[13.105622,52.4710184],[13.1054069,52.4709694],[13.1053236,52.4709527]],"Potsdamer Straße":[[13.0181708,52.4177884],[13.0182754,52.4179309],[13.0295268,52.4133369],[13.0308904,52.4124327],[13.027947,52.4138309],[13.0292187,52.4139559],[13.0286516,52.4142283],[13.0279701,52.4144929],[13.0283978,52.4142198],[13.0289705,52.4140099],[13.0230003,52.4157964],[13.0226207,52.4159315],[13.0220782,52.4160921],[13.0216298,52.4162836],[13.0218775,52.4161898],[13.0248871,52.4151676],[13.0245553,52.4152286],[13.0239478,52.4154468],[13.0236357,52.4155526],[13.0313009,52.4122754],[13.0314681,52.412171],[13.0225292,52.415962],[13.0222783,52.4160243],[13.0226839,52.4170666],[13.0258882,52.4154925],[13.026718,52.4152324],[13.0254962,52.4157232],[13.0264078,52.4153321],[13.0251851,52.4166447],[13.0252913,52.416215],[13.0246321,52.416122],[13.0265217,52.414941],[13.0232706,52.4164255],[13.0261658,52.4154056],[13.0253627,52.4158016],[13.0205081,52.4174179],[13.020554,52.4166556],[13.0150218,52.4190691],[13.019048,52.4175023],[13.014605,52.4191242],[13.0155586,52.4185899],[13.0227216,52.4164611],[13.0154939,52.4186138],[13.0216291,52.4168832],[13.0150845,52.4187333],[13.0189547,52.4176158],[13.0213243,52.4168932],[13.021147,52.417099],[13.0202115,52.4166397],[13.0208405,52.4171641],[13.0210459,52.4164642],[13.0152079,52.4192782],[13.016401,52.4183294],[13.0219005,52.4167635],[13.0161385,52.4184035],[13.0223384,52.4170431],[13.0159152,52.4184824],[13.0149977,52.4188241],[13.020666,52.4171478],[13.0172983,52.4181875],[12.9353426,52.4854265],[12.9351295,52.4854226],[12.9355739,52.4852011],[12.9356594,52.4852441],[13.0002322,52.4232224],[13.0000698,52.4233273],[13.0099574,52.4200996],[13.0090066,52.4203076],[13.008682,52.4203774],[13.0097144,52.4201608],[13.010205,52.4200483],[13.0094294,52.4202449],[13.0083315,52.4205526],[13.001061,52.4233071],[13.0005987,52.4232867],[13.0014365,52.422709],[13.0005864,52.4235162],[13.0031667,52.4217323],[13.0114872,52.4199078],[13.0113276,52.4199423],[13.0117885,52.4200712],[13.0120511,52.4197471],[13.0108993,52.4199563],[13.0126558,52.4198729],[13.0105015,52.4199939],[13.0317019,52.4119175],[13.0242837,52.4150615],[13.024342,52.4153029],[13.0235662,52.4145451],[13.0238396,52.4147728],[13.0244577,52.4147603],[13.0247494,52.4147966],[13.0241031,52.4147122],[13.0245553,52.4152286],[13.0136625,52.4196619],[13.0140424,52.4191833],[13.0137025,52.4193126],[13.0133603,52.4194525],[13.0257225,52.4147977],[13.0269889,52.4143379],[13.0272492,52.4142457],[13.0263751,52.4145607],[13.0261402,52.4145544],[13.026836,52.4143878],[13.0274543,52.4141676],[13.0277574,52.4144416],[13.0274497,52.4145531],[13.0267456,52.4148178],[13.0271002,52.4152523],[13.0271597,52.414664],[13.0293668,52.4144396],[13.00325,52.4226426],[13.0260606,52.4156085],[13.0244765,52.4139686],[13.0047919,52.4214425],[13.0041691,52.4217712],[13.003903,52.4218127],[13.0036097,52.4219564],[13.0079407,52.4206365],[13.0011032,52.4222439],[13.0076361,52.4207249],[13.0078407,52.4206636],[13.0018729,52.4227915],[13.0017508,52.4228513],[13.0007373,52.4229129],[13.0003627,52.4231979],[13.00205,52.4227194],[13.0020178,52.4220239],[13.0005703,52.4229889],[13.0067738,52.4209543],[13.0022568,52.4226142],[13.0005578,52.4231097],[13.0074501,52.4207696],[13.003257,52.4222513],[13.0055694,52.4212459],[13.0069586,52.4208938],[13.0063466,52.4211062],[13.0053783,52.4212732],[13.0009017,52.4228385],[13.0019355,52.4221005],[13.0011894,52.423174],[13.0049622,52.4214164],[13.0052993,52.4215268],[13.0061523,52.4211693],[13.0027662,52.4224902],[13.0032831,52.4221039],[13.0043941,52.421523],[13.0072178,52.4208348],[13.0059566,52.4211742],[13.0066453,52.4211542],[13.0016512,52.422491],[13.011036,52.4201463],[13.0290465,52.4140919],[13.0240423,52.4162252],[13.0237188,52.4161784],[13.0235593,52.4163211],[13.021249,52.4173098],[13.0247151,52.4160054],[13.0244461,52.4161795],[13.0251139,52.4162721],[13.0250359,52.4165937],[13.0252633,52.4167463],[13.029134,52.4147546],[13.0259446,52.4150735],[13.023281,52.4153101],[12.9358936,52.4850222],[13.0058673,52.4214853],[13.0059528,52.4214576],[13.0057805,52.4215133],[13.0242624,52.4140858],[13.0296793,52.4125955],[13.0222767,52.4165136],[13.0226288,52.4142551],[13.0222524,52.4139373],[13.0254364,52.4149031],[13.0245617,52.4143525],[13.0206259,52.4160679],[13.0213548,52.4162459],[13.021456,52.416353],[13.0287414,52.4144844],[13.0245636,52.4144465],[13.0298955,52.4130663],[13.0225516,52.4149152],[13.0244453,52.4152669],[13.0221945,52.416472],[13.0029472,52.4225296],[12.9988851,52.4240951],[12.9987429,52.4241467],[12.9984603,52.424103],[13.0244228,52.4159911],[13.0254315,52.4148595]],"Prager Straße":[[13.1073856,52.3826798],[13.1078906,52.3826419],[13.1076947,52.382618],[13.1074847,52.3825085],[13.1072897,52.3824868],[13.1077584,52.3823972],[13.1077862,52.3824511],[13.1072475,52.3822514],[13.1073055,52.3823651],[13.1076144,52.3821817],[13.1076723,52.3822954],[13.106622,52.382167],[13.1070921,52.3826047],[13.1071543,52.3827371],[13.1072592,52.3829112],[13.1072389,52.38316],[13.1067614,52.3822934],[13.1068785,52.382462]],Priesterstraße:[[13.0155673,52.4670638],[13.0153154,52.4673903],[13.0156041,52.4670291],[13.0150842,52.4677597],[13.0145942,52.467954],[13.0142364,52.4683997],[13.014692,52.4678659],[13.0137969,52.4685341],[13.0148954,52.4674286],[13.0132155,52.4688129],[13.0131874,52.4691132],[13.015797,52.4667917],[13.0132194,52.4692053],[13.0138565,52.4694724],[13.0143643,52.4693933],[13.0142873,52.4696365],[13.0141227,52.4692763],[13.0156486,52.4669778],[13.0136682,52.4686089],[13.0136024,52.4692628],[13.0134652,52.4691951],[13.0133918,52.4691589]],Priesterweg:ba,Privatweg:Fa,"Prof.-Dr.-Helmert-Straße":[[13.1282876,52.3936737],[13.1290162,52.3935558],[13.1335236,52.3938],[13.1328983,52.3943812],[13.131179,52.3932775]],Puschkinallee:Da,Ratsweg:ka,Ravensberggestell:Oa,Ravensbergweg:Ga,Rehsprung:Na,Reiherbergstraße:[[12.9714833,52.404654],[12.9717349,52.404467],[12.9719009,52.4040521],[12.9709875,52.4048805],[12.9715924,52.404166],[12.9724969,52.4038688],[12.9718977,52.4043256],[12.9709488,52.4050819],[12.9716258,52.4048948],[12.9759278,52.4034983],[12.9756238,52.4035313],[12.9739835,52.4037294],[12.9742751,52.4032843],[12.9736252,52.4037301],[12.9732016,52.4037994],[12.9723008,52.4042902],[12.974767,52.403607],[12.9750879,52.4035763],[12.9725756,52.4036886],[12.9729798,52.403636],[12.9733591,52.4034968],[12.9736498,52.4034665],[12.9738322,52.4033632],[12.9742014,52.4033205],[12.9747432,52.4032065],[12.9754177,52.4032657],[12.963406,52.4086397],[12.9783106,52.4029842],[12.9760559,52.4032028],[12.9767522,52.4031328],[12.9764789,52.403161],[12.9771523,52.4030948],[12.979847,52.4028537],[12.9785732,52.4029646],[12.9669323,52.4060718],[12.9802953,52.4027624],[12.9779181,52.4029383],[12.9778083,52.4029017],[12.9788933,52.4029422],[12.9774454,52.4030689],[12.9775728,52.4030568],[12.9643798,52.4077163],[12.9646591,52.4075573],[12.964998,52.4074875],[12.9652139,52.4072627],[12.9634891,52.4082189],[12.976115,52.403881],[12.9757105,52.4039787],[12.9744545,52.4037238],[12.9731099,52.4035604],[12.9685877,52.4056729],[12.9691367,52.405159],[12.9633821,52.408036],[12.9638932,52.40798],[12.9673681,52.4059705],[12.9676647,52.4058644],[12.9683099,52.4058932],[12.9679879,52.4059756],[12.9677826,52.4061602],[12.9641573,52.4081685],[12.9640494,52.4083211],[12.9793604,52.4029009],[12.9794505,52.4028892],[12.9753425,52.4032656],[12.9742251,52.4030762],[12.9658333,52.4075896],[12.9749843,52.4030477],[12.9756088,52.4032489],[12.9695708,52.4055416],[12.9693758,52.4055388],[12.9672552,52.4055236],[12.9741158,52.4030839],[12.9748325,52.4038396],[12.9796506,52.4025997],[12.9795753,52.4028842],[12.9776486,52.4028979],[12.9768896,52.4028762],[12.97527,52.4035831],[12.9745751,52.4032508],[12.9674812,52.4065489],[12.968141,52.4065779],[12.9683262,52.4063526],[12.9678165,52.4065706],[12.9674837,52.4064924],[12.9683754,52.4065826],[12.9678506,52.4062379],[12.9677887,52.406307],[12.9697898,52.4066044],[12.9702206,52.4066159],[12.969386,52.4065934],[12.9657582,52.4075104],[12.9667746,52.4069395],[12.9666523,52.4070069],[12.967923,52.4062719],[12.9730132,52.4043792],[12.9728635,52.4043003],[12.9727441,52.4042348],[12.9725775,52.4041465],[12.9742661,52.4038581],[12.9676056,52.4053625]],Reiherweg:za,"Reinhold-Schneider-Straße":[[13.0517358,52.4154986],[13.0526463,52.4157369],[13.0521337,52.415832],[13.0510624,52.4160162],[13.051597,52.4159261],[13.0493423,52.4161557],[13.0487334,52.416666],[13.048486,52.4165736],[13.0487912,52.4164365],[13.0490469,52.4163866],[13.048838,52.4159397],[13.0477184,52.4167536],[13.047974,52.4165879],[13.0496832,52.415883],[13.0482,52.4165467],[13.0480932,52.41612],[13.0480345,52.4161041],[13.047633,52.416587],[13.0489597,52.4159676]],Reitbahnstraße:[[13.0466249,52.4088244],[13.0470218,52.4087516],[13.045733,52.4089889],[13.0453629,52.4090526],[13.0469383,52.409279],[13.0468628,52.409292],[13.0466574,52.4093339],[13.0465862,52.4093465],[13.0461794,52.4094202],[13.0461064,52.4094332],[13.0458942,52.4094748],[13.0458133,52.4094887],[13.0459766,52.4091369],[13.0459967,52.4091817],[13.0465004,52.4090379],[13.0465208,52.4090837]],Reiterweg:Wa,Rembrandtstraße:[[13.0837661,52.4121209],[13.0832123,52.4123177],[13.0822298,52.4132953],[13.081165,52.4141444],[13.0820265,52.4134937],[13.0839211,52.4123072],[13.0821589,52.4133535],[13.0833431,52.4119593],[13.0831885,52.4129457],[13.0829577,52.4131395],[13.08243,52.4137735],[13.0813758,52.4147553],[13.0826242,52.4133419],[13.0819581,52.4139284],[13.0816676,52.4142336],[13.08145,52.4144343],[13.080726,52.4145134],[13.0810367,52.4141886],[13.0814656,52.4137516],[13.0811139,52.4124135],[13.083183,52.412617],[13.0825042,52.4128014],[13.0829071,52.4124885],[13.0827762,52.4126742]],Reuterstraße:[[13.1088296,52.3951405],[13.1087107,52.3954706],[13.1080341,52.3952603],[13.1081207,52.3953724],[13.1087357,52.3960046],[13.1085715,52.3959222],[13.1080429,52.3955062],[13.108786,52.3949483],[13.108561,52.3940462],[13.1087308,52.3938898],[13.108091,52.3941735],[13.1085387,52.3937133],[13.1082685,52.3939734],[13.1077823,52.3957739],[13.1085839,52.3942765],[13.1082622,52.3938476],[13.1080176,52.3951051],[13.1080155,52.3951751]],Ribbeckstraße:[[13.0303269,52.4077251],[13.0307322,52.4075393],[13.0306815,52.4121343],[13.0306604,52.4120978],[13.0304574,52.4123139],[13.0298313,52.4117131],[13.0296917,52.4115244],[13.0296084,52.4113117],[13.0303121,52.4116161],[13.0300761,52.4111111],[13.0303509,52.412221],[13.0300768,52.4120937],[13.0301555,52.4119425],[13.0299254,52.4118472],[13.0304355,52.4072562],[13.0299138,52.4067525],[13.0303666,52.4076298],[13.0300741,52.407163],[13.0299651,52.4073888],[13.0300613,52.4070214],[13.0301713,52.4066635],[13.0304506,52.4069321],[13.0300709,52.4089386],[13.029496,52.408864],[13.0299844,52.4094338],[13.0295411,52.4097238],[13.0296701,52.4087204],[13.030099,52.4098045],[13.0296087,52.4102699],[13.0300318,52.4099781],[13.0298995,52.4096217],[13.0303547,52.4116828],[13.029417,52.4101538],[13.029483,52.4104511],[13.0292709,52.4065157],[13.0289946,52.4065275],[13.0296565,52.4076942],[13.0296199,52.4082358],[13.029538,52.4086185],[13.0294401,52.4108282],[13.029412,52.4106195],[13.029131,52.4108671],[13.0291011,52.4106347],[13.0303699,52.4112546],[13.031373,52.408756],[13.0301787,52.4101074],[13.0291094,52.4106997],[13.0294251,52.4107203],[13.0294185,52.4106699],[13.0294529,52.4109305],[13.0294465,52.4108794],[13.0291396,52.4109321],[13.0308274,52.4084425],[13.030538,52.4087367],[13.0302855,52.4085134],[13.0300438,52.4106863],[13.0300061,52.410207],[13.0300524,52.4107768],[13.0300166,52.4103078],[13.0310128,52.4087685],[13.0307445,52.4087372],[13.0304359,52.4074184],[13.0304475,52.407476],[13.0303773,52.4069684],[13.0300085,52.4097406],[13.0303497,52.4115514],[13.0304226,52.4124403],[13.0298581,52.4116065],[13.0295233,52.4100111],[13.0300364,52.4079142],[13.0299777,52.4081994],[13.0293442,52.4064808]],Ribbeckweg:Ba,"Ricarda-Huch-Straße":[[13.1375453,52.3627314],[13.1375366,52.3628641],[13.1361306,52.3639526],[13.1367621,52.3627109],[13.136743,52.3633013],[13.1367498,52.3630911],[13.1367555,52.3629147],[13.1369153,52.3634893],[13.1353478,52.3647736],[13.1300132,52.3648403],[13.1315178,52.3646321],[13.1345043,52.3646592],[13.1351145,52.3645311],[13.1328462,52.3646368],[13.1331579,52.3646467],[13.1337523,52.3646443],[13.1341441,52.3646536],[13.134791,52.3646549],[13.1317063,52.3646181],[13.1356227,52.3646246],[13.1368821,52.3641282],[13.1369729,52.3640764],[13.1370456,52.364032],[13.1373714,52.3630777],[13.1305859,52.3644629],[13.1309322,52.3646091],[13.1313155,52.3646291],[13.136228,52.3639169],[13.1368196,52.3635681]],"Richard-Schäfer-Straße":[[13.0538797,52.410702]],"Richard-Wagner-Straße":[[13.1025174,52.4615448],[13.1005859,52.461661],[13.1008807,52.4614455],[13.1020079,52.4611311],[13.100556,52.461072],[13.0982834,52.4617977],[13.0992562,52.4615608],[13.0994501,52.4609792],[13.1051943,52.461115],[13.1058778,52.46116],[13.1052783,52.4614153],[13.1049229,52.4616183],[13.1045707,52.4614638],[13.1034271,52.4615901],[13.1037765,52.461497],[13.1031281,52.4614115],[13.0986695,52.4617054],[13.0988459,52.4615981],[13.0973256,52.4617409],[13.0981787,52.4619384],[13.0975768,52.4614391],[13.0981158,52.4613034],[13.0978163,52.4614071],[13.1024787,52.4611116],[13.1055783,52.461142],[13.1022761,52.4611104],[13.1054743,52.4611411],[13.1039321,52.4610155],[13.0964112,52.4620434],[13.0965534,52.4618506],[13.1056233,52.4617108],[13.0989446,52.4622824],[13.0987951,52.462119],[13.0985459,52.4620359],[13.0995626,52.461404],[13.0966808,52.4618151],[13.1049344,52.4610844]],Ringstraße:[[13.0344688,52.4435437],[13.0346594,52.4454871],[13.0340731,52.4440105],[13.0348701,52.4459267],[13.0323884,52.4431261],[13.0337977,52.4430445],[13.0344471,52.4428835],[13.0309742,52.4435627],[13.0341479,52.4447363],[13.0347477,52.4457408],[13.0340255,52.443784],[13.0343729,52.444991],[13.0344918,52.4437421],[13.0357307,52.4461441],[13.0348184,52.444514],[13.0348443,52.4445773],[13.0348748,52.4444535],[13.0346607,52.44408],[13.0356022,52.4458727],[13.0334465,52.4430883],[13.0319476,52.4430385],[13.0321267,52.4432709],[13.0315132,52.4430094],[13.0315686,52.4432774],[13.0313184,52.4431373],[13.0354019,52.4458502],[13.0353513,52.4456491],[13.0353276,52.4451762],[13.0312979,52.4437711],[13.0316133,52.4437404],[13.0324214,52.4435248],[13.0328441,52.4435487],[13.0332529,52.4434838],[13.0352683,52.4451024],[13.0343195,52.4441701],[13.0343107,52.4443725],[13.0342945,52.4445214],[13.034987,52.4449868],[13.0349189,52.4448151],[13.0306717,52.4437056],[13.0306204,52.443885],[13.0307401,52.444198],[13.0306045,52.4433158],[13.0331774,52.4431403],[13.0311039,52.447338],[13.030935,52.4432693],[13.0303299,52.4433052],[13.0310169,52.4436829],[13.0299306,52.4432673],[13.0302571,52.4436115],[13.0295899,52.4435664],[13.0299154,52.443905],[13.0303257,52.4449148],[13.0302331,52.4447264],[13.0300035,52.4445451],[13.0299361,52.4443072],[13.0298895,52.4441106],[13.0309731,52.4448891],[13.0305684,52.445425],[13.0305745,52.4455538],[13.030653,52.4458092],[13.0312229,52.4457919],[13.030721,52.4459959],[13.0312814,52.4459565],[13.0313414,52.446189],[13.0307798,52.4461711],[13.0308648,52.4463759],[13.0308961,52.446563],[13.0314557,52.4465506],[13.0309355,52.4467417],[13.0309868,52.4469561],[13.0310908,52.4471332],[13.0315955,52.4470123],[13.0311095,52.4454577],[13.0339105,52.4434095],[13.0336299,52.4434159],[13.031999,52.4436908],[13.0312916,52.4453592],[13.034466,52.4452051],[13.0307569,52.4443657],[13.0305022,52.4438598],[13.0316042,52.4463887],[13.0315907,52.4468078],[13.0349984,52.4438607],[13.034459,52.4430992],[13.0344314,52.4430245],[13.0354592,52.445756],[13.0308779,52.4447201],[13.0308442,52.4446436],[13.0307641,52.4444931],[13.0350523,52.4459922],[13.0307195,52.4439094],[13.0346894,52.4441748],[13.0347223,52.4442702],[13.0350824,52.4460494]],Ritterspornweg:Ka,Ritterstraße:[[12.9664706,52.4080392],[12.9668372,52.4081791],[12.9659825,52.4079867],[12.9659358,52.4077903],[12.9665472,52.4076278],[12.9668298,52.4087438],[12.9661407,52.408021],[12.9666027,52.4081354],[12.9670447,52.409073],[12.9671745,52.4091451],[12.9673164,52.4094223],[12.96736,52.4096175],[12.9678494,52.4100017],[12.9674952,52.4100554],[12.9663951,52.4091611],[12.9659338,52.4085139],[12.967741,52.4096366],[12.9678067,52.4098369],[12.9669805,52.4093677],[12.9669715,52.4092111],[12.9661021,52.4094501],[12.9664099,52.4093626],[12.9666709,52.4093048],[12.9660812,52.4093122],[12.9662581,52.4091792],[12.9668799,52.409005],[12.9665253,52.4077521],[12.9669061,52.4088302],[12.9667868,52.4088617],[12.9667153,52.4087583],[12.966546,52.4085302],[12.9662658,52.4082096],[12.966371,52.4078925],[12.9660304,52.4088578],[12.9662181,52.4087997],[12.9663496,52.4089912],[12.9660451,52.4090754],[12.9662824,52.4085073],[12.9666223,52.4084173],[12.9657977,52.4082985],[12.9661957,52.4077489],[12.9663658,52.4076603]],"Robert-Baberske-Straße":[[13.1356799,52.3672153],[13.1355466,52.3672936],[13.1355797,52.3677705],[13.1347289,52.3673961],[13.135308,52.3675981],[13.1354436,52.3676841],[13.1344767,52.3675505],[13.1357199,52.3678593]],"Robert-Koch-Straße":[[13.1143438,52.3985191],[13.1136263,52.3978311],[13.1150388,52.3988836],[13.1137913,52.3978266],[13.1138713,52.3986259],[13.1137888,52.3981118],[13.1150896,52.3981076],[13.1162247,52.4002809],[13.1133488,52.3984703],[13.1141838,52.3982704],[13.1163138,52.4001154],[13.1163703,52.3997493],[13.1166648,52.3995735],[13.1160972,52.3986016],[13.1157701,52.3985671],[13.1156499,52.3983352],[13.1147696,52.3978628],[13.1163102,52.3990632]],"Rosa-Luxemburg-Straße":[[13.1075335,52.4023367],[13.1069942,52.4036433],[13.1053032,52.4039379],[13.1056421,52.4036713],[13.1077989,52.4028181],[13.1070994,52.4034928],[13.1059356,52.4030597],[13.1064995,52.4032968],[13.106829,52.4027356],[13.1047464,52.4037636],[13.1073946,52.4033322],[13.1059596,52.4035623],[13.1094946,52.4014144],[13.1087825,52.4011818],[13.1089767,52.4001733],[13.1078236,52.4014239],[13.1097661,52.4010067],[13.1101998,52.4003096],[13.1100214,52.4001022],[13.1082651,52.4014973],[13.1091038,52.4007891],[13.1092955,52.4004277],[13.1105884,52.4000105],[13.1097092,52.4010532],[13.1097906,52.4002383],[13.1080298,52.4012239],[13.109039,52.4014591],[13.1092595,52.4003292],[13.1128389,52.3979989],[13.1114643,52.3994322],[13.111489,52.3991393],[13.1109568,52.3996687],[13.1127864,52.3982216],[13.111786,52.3988977],[13.110869,52.3988714],[13.1105805,52.3995196],[13.1125141,52.3975383],[13.1121989,52.397962],[13.110952,52.3991527],[13.1114816,52.3987095],[13.1099235,52.3991806],[13.1118027,52.39846],[13.1105528,52.3993766],[13.1111368,52.3989835],[13.110357,52.3996858],[13.1103526,52.3995564],[13.1085567,52.4021525],[13.1077195,52.4016649],[13.1097584,52.4007902],[13.1100287,52.4005236],[13.1098551,52.4006341],[13.1053026,52.40458],[13.1062482,52.4040002],[13.1062817,52.4042732],[13.1058741,52.4043557],[13.1083088,52.4005499],[13.1125042,52.398361]],Roseggerstraße:[[13.0267562,52.3892423],[13.0254829,52.3891144],[13.025202,52.3894753],[13.026313,52.3904835],[13.0258351,52.3895221],[13.0252709,52.3890982],[13.025695,52.3891306],[13.0249905,52.3894597],[13.0267848,52.3889143],[13.0267914,52.3890662],[13.0247791,52.3894442],[13.0248469,52.3890657],[13.0263414,52.3903489],[13.0263971,52.3900797],[13.0260854,52.3885873],[13.0250588,52.3890819],[13.025907,52.3891468],[13.0254131,52.3894908],[13.026814,52.3887682],[13.0266652,52.3895853],[13.0256241,52.3895064],[13.0268422,52.3886271],[13.0264244,52.389945],[13.0263694,52.3902143],[13.0261128,52.3884272],[13.0267256,52.3893955]],Rosenstieg:Xa,Rosenstraße:[[13.1115257,52.3900042],[13.1104642,52.389829],[13.1105667,52.390095],[13.1146019,52.3889624],[13.1149273,52.3888918],[13.1079089,52.3902735],[13.1093851,52.3903201],[13.1060529,52.3903948],[13.1059584,52.3905653],[13.1089767,52.3904261],[13.1095377,52.3900418],[13.1074394,52.3900467],[13.1063825,52.3907123],[13.1089842,52.3901605],[13.107599,52.390123],[13.1084833,52.3905145],[13.1096935,52.3900856],[13.1067824,52.3907192],[13.1086361,52.3905621],[13.1062798,52.3906224],[13.1091399,52.3902043],[13.1073461,52.3902421],[13.1066437,52.3906348],[13.1085122,52.3902615],[13.1072307,52.3903275],[13.108665,52.3903091],[13.1098614,52.3902614],[13.1080242,52.3901881],[13.1095378,52.3903677],[13.1067485,52.3903838],[13.1060209,52.3906682],[13.1058575,52.3905357],[13.1134556,52.3904611],[13.1147482,52.3893235],[13.112369,52.3901472],[13.1124446,52.3902807],[13.1125203,52.3904143],[13.1125959,52.3905478],[13.1061879,52.390446],[13.1103462,52.3898556],[13.1124181,52.3897917],[13.1126386,52.3897471],[13.1128592,52.3897025],[13.1133015,52.3900396],[13.1133529,52.3901801],[13.1134042,52.3903206],[13.1100059,52.3900291],[13.1091672,52.3904517],[13.1101217,52.3902175],[13.1092898,52.3904263],[13.109998,52.3902413],[13.1104523,52.3901766],[13.1103333,52.3902039],[13.1063827,52.3904488],[13.1131827,52.3892799],[13.1129671,52.3893253],[13.1127514,52.3893708],[13.1125358,52.3894162],[13.1121044,52.389507],[13.1118956,52.389551],[13.1116787,52.3895967],[13.1114644,52.3896419]],Rosenweg:Va,Rotdornweg:Ya,"Rote-Kreuz-Straße":[[13.1264675,52.3902832],[13.1268331,52.3909729],[13.1267725,52.3906354],[13.1267104,52.3904387],[13.1266543,52.3900242]],Rotkehlchenweg:Za,Roßkastanienstraße:[[12.9905883,52.4099386],[12.9888429,52.4107609],[12.9883827,52.4112663],[12.9934619,52.408952],[12.9915831,52.4097606],[12.9924626,52.4091945],[12.9913492,52.4098748],[12.9921781,52.4092787],[12.9920892,52.4091723],[12.9917729,52.4094408],[12.9917729,52.4094408],[12.994123,52.40904],[12.9915452,52.4095494],[12.9881693,52.4112198],[12.9915452,52.4095494],[12.9881693,52.4112198],[12.9913073,52.4096651],[12.9913073,52.4096651],[12.9910724,52.4097797],[12.9931429,52.4090368],[12.9931429,52.4090368],[12.9910724,52.4097797],[12.9907569,52.409689],[12.9907019,52.4097992],[12.9901506,52.4098619],[12.9901293,52.4099172],[12.9900507,52.410061],[12.9937722,52.4092147],[12.9900293,52.4101163],[12.9900426,52.4104541],[12.9896646,52.4106086],[12.9894382,52.4106665],[12.9927935,52.4091145],[12.9884314,52.4108997],[12.9883468,52.4109043],[12.9882621,52.4109089],[12.9878048,52.4109373],[12.987721,52.4109451],[12.9926749,52.4094312],[12.9876372,52.410953],[12.9927935,52.4091145],[12.9924626,52.4091945],[12.9878665,52.4112993],[12.9878665,52.4112993],[12.9884638,52.4112636],[12.9923522,52.4094455]],Rubensstraße:[[13.0745143,52.4109282],[13.0747423,52.4111374],[13.0758034,52.409512],[13.0762241,52.4091133],[13.0758396,52.4101381],[13.0748244,52.411247],[13.0764581,52.4091664],[13.075216,52.4107158],[13.0748367,52.4098929],[13.0758418,52.4095606]],"Rudi-Ball-Straße":[[13.1261004,52.4814028],[13.1260118,52.4814134],[13.1259232,52.4814239],[13.1258347,52.4814344],[13.1257461,52.4814449],[13.1256575,52.4814555],[13.1255689,52.481466],[13.1254803,52.4814765],[13.1253917,52.4814871],[13.1253031,52.4814976],[13.1252146,52.4815081],[13.125126,52.4815186],[13.1250374,52.4815292]],"Rudolf-Breitscheid-Straße":[[13.0971992,52.3920508],[13.0974303,52.3920707],[13.0977101,52.3920458],[13.0979477,52.3920676],[13.0985518,52.3922056],[13.0988441,52.3921458],[13.0990683,52.3921992],[13.099322,52.392187],[13.0995467,52.3922524],[13.1002469,52.392268],[13.1007313,52.3923118],[13.1009775,52.3923313],[13.101063,52.3924408],[13.1008816,52.3926373],[13.1013302,52.3924891],[13.1016717,52.3923953],[13.1019082,52.3924168],[13.1016459,52.392725],[13.1021482,52.3924373],[13.1023942,52.3924605],[13.1025756,52.3925714],[13.1027421,52.3925856],[13.1029687,52.3925097],[13.1030519,52.3926132],[13.1032171,52.3925309],[13.1002618,52.3924376],[13.0955008,52.3920506],[13.0955008,52.3920506],[13.0957017,52.391995],[13.094832,52.3919353],[13.0948152,52.3917963],[13.0944372,52.3917633],[13.0943258,52.3917536],[13.0938642,52.3917037],[13.0958595,52.3919868],[13.0929968,52.3918479],[13.0931781,52.3919141],[13.0933412,52.3918764],[13.0927425,52.3919093],[13.0927425,52.3919093],[13.0925696,52.3919484],[13.0924016,52.3919864],[13.1284393,52.3948253],[13.1273769,52.395018],[13.1278731,52.3953007],[13.1211551,52.3946373],[13.1287884,52.3948692],[13.1262503,52.3954311],[13.1257564,52.3955085],[13.1245303,52.3955861],[13.0912854,52.3919805],[13.0890313,52.3922963],[13.0885598,52.3922273],[13.090675,52.3921206],[13.0895917,52.3924129],[13.0885598,52.3922273],[13.091847,52.3918816],[13.090714,52.3925056],[13.090933,52.3924565],[13.0901039,52.3926421],[13.0904849,52.392557],[13.0890079,52.3928708],[13.0893082,52.3928034],[13.0891559,52.3928376],[13.0894171,52.3926808],[13.0892115,52.3944359],[13.0868373,52.3934377],[13.0880874,52.3940919],[13.0897528,52.3936521],[13.0883368,52.3935297],[13.0896327,52.3934798],[13.0889572,52.3934446],[13.0862661,52.3929359],[13.1347031,52.3963565],[13.129995,52.3957198],[13.133628,52.3962565],[13.1287832,52.3955789],[13.1326446,52.3955912],[13.1348522,52.3958286],[13.1302609,52.3957942],[13.1321403,52.395527],[13.1305543,52.3958693],[13.1314315,52.3954506],[13.1305747,52.395374],[13.1345017,52.3957758],[13.1306215,52.3953794],[13.1317397,52.3954872],[13.1304347,52.3951314],[13.1294036,52.3955394],[13.1310349,52.395428],[13.1339242,52.3954109],[13.1325697,52.3960386],[13.1292019,52.3954938],[13.129631,52.3956858],[13.1329206,52.3959554],[13.1350013,52.3963767],[13.1323674,52.3958741],[13.1332166,52.3959968],[13.0925895,52.3917064],[13.0914799,52.3917459],[13.0925895,52.3917064],[13.0923499,52.3917629],[13.1186469,52.3961057],[13.118945,52.3954424],[13.117125,52.3946611],[13.119702,52.3952842],[13.1171375,52.3949006],[13.1145442,52.3945377],[13.1184784,52.3948532],[13.1206319,52.395116],[13.1165734,52.3946301],[13.11714,52.3950943],[13.1210898,52.3955131],[13.1176598,52.3947613],[13.1159375,52.3945564],[13.1186741,52.394745],[13.11693,52.3952072],[13.1220223,52.3951217],[13.115242,52.394427],[13.1164198,52.3946018],[13.1149938,52.3945957],[13.1182071,52.394725],[13.1141394,52.3943397],[13.1239753,52.3955753],[13.1251391,52.3948783],[13.1125943,52.3940392],[13.1138055,52.3948627],[13.1140704,52.3953269],[13.1122955,52.3940047],[13.1133085,52.3942021],[13.1119779,52.39405],[13.114078,52.3951255],[13.1138269,52.3955904],[13.114129,52.3948583],[13.1139448,52.3955866],[13.1130398,52.3941179],[13.1002521,52.392485],[13.1003961,52.3925541],[13.1002282,52.3925986],[13.1003721,52.3926684],[13.1002057,52.3927053],[13.1007613,52.3927606],[13.1006174,52.3926908],[13.1007853,52.3926463],[13.1006413,52.3925772],[13.1006513,52.3925298],[13.1108571,52.3939099],[13.1104443,52.3937919],[13.1107566,52.3939416],[13.1200643,52.3953574],[13.1000041,52.39252],[13.0998138,52.3925648],[13.099748,52.3925596],[13.0998918,52.3926294],[13.0997254,52.3926663],[13.0998378,52.3924511],[13.0898559,52.3922843],[13.090188,52.392033],[13.1288354,52.3954763],[13.1001522,52.392264],[13.1189829,52.3951396],[13.1195129,52.3948577],[13.1096028,52.3935818],[13.1097177,52.3939351],[13.1220491,52.3947651],[13.0900403,52.392268],[13.1160036,52.3952064],[13.1159546,52.3950442],[13.1164494,52.3948454],[13.1164377,52.3952254],[13.1159831,52.3948117],[13.1191663,52.3951969],[13.1164416,52.39503],[13.1337306,52.3963548],[13.1261587,52.3950416],[13.0888316,52.3929384],[13.125011,52.3948757],[13.1245168,52.3948646],[13.1237282,52.3950592],[13.1027023,52.3930476],[13.0978448,52.3925486],[13.0980711,52.3924793],[13.0983851,52.392106],[13.0944222,52.3923184],[13.0919558,52.3922394],[13.0874151,52.3945043],[13.1286716,52.3949781],[13.128402,52.3949459],[13.1286764,52.3948622],[13.1285256,52.394961],[13.1167048,52.3950641],[13.094832,52.3919353],[13.0912902,52.3919732],[13.1107065,52.3938125],[13.092035,52.3918372],[13.0945389,52.3917722],[13.0895079,52.3926875],[13.0910777,52.3920291],[13.0921731,52.3918046],[13.089067,52.3927594],[13.0946423,52.3917812],[13.0955898,52.3918639],[13.094305,52.3917518],[13.0942444,52.3917465],[13.0917481,52.3921356],[13.0933431,52.3917665],[13.0922199,52.3920785],[13.1274506,52.3954079],[13.0947281,52.3917887],[13.0928544,52.3916206],[13.1251546,52.3953196],[13.1253414,52.3953164],[13.0923511,52.3919978],[13.0927683,52.3919035],[13.0924355,52.3919787],[13.0930885,52.3918825],[13.0877279,52.39306],[13.0861963,52.3934325],[13.0865311,52.393355],[13.0868304,52.3932873],[13.0871553,52.3932158],[13.1213753,52.395027],[13.1354277,52.3964051],[13.1014275,52.3926153],[13.1014103,52.3926774],[13.1013947,52.39275],[13.1013868,52.3928245],[13.1014729,52.3924213],[13.0924616,52.3917171],[13.0934882,52.3917698],[13.0927076,52.3919172],[13.0890948,52.392499],[13.1260244,52.3950472],[13.0937712,52.3916978],[13.088396,52.393026],[13.1353434,52.3963765],[13.0886377,52.392553],[13.0861957,52.3929679],[13.0991658,52.3922071],[13.0957929,52.3918816],[13.0949061,52.3918042],[13.0965604,52.3920334],[13.0965447,52.3920762],[13.1180698,52.3962562],[13.1315819,52.3953045],[13.0954848,52.3918547],[13.0966184,52.3919501],[13.0967653,52.3919648],[13.1189493,52.3960489],[13.1250559,52.3946794],[13.0932149,52.3918249],[13.1196216,52.3964126],[13.1194782,52.3964117],[13.11978,52.3963978],[13.1195482,52.3964137],[13.1196982,52.3964066],[13.1188165,52.3960522],[13.091897,52.3918698],[13.1273888,52.3954476],[13.0898331,52.3921853],[13.1318632,52.3954569],[13.1315596,52.3953693],[13.1315417,52.3954214],[13.090163,52.3936052],[13.0904075,52.3935439],[13.1106258,52.3937955],[13.1107249,52.3937958],[13.1106635,52.3939681],[13.0905282,52.3924224],[13.0902605,52.3924825],[13.1192879,52.3959678]],"Rudolf-Moos-Straße":[[13.0961458,52.3848281],[13.0964046,52.383716],[13.0966537,52.3855511],[13.0962466,52.3852905],[13.0972276,52.3851044],[13.0970462,52.3844468],[13.101311,52.3839219],[13.0990232,52.3847086],[13.1000447,52.3847422],[13.0994587,52.3843459],[13.1009932,52.3844272]],Ruinenbergstraße:[[13.0441699,52.4110457],[13.0443871,52.4105838],[13.0451465,52.4109342],[13.0441856,52.4102565],[13.043955,52.4106887],[13.0437474,52.4103534],[13.0440297,52.4100013],[13.0435829,52.4101144],[13.0438356,52.4097427],[13.043419,52.4098507],[13.0431735,52.4095303],[13.0436932,52.4093991],[13.0429626,52.4091366],[13.0433988,52.409033],[13.0427635,52.4084319],[13.0432715,52.4083188],[13.0431935,52.4082116],[13.044102,52.4106525],[13.0435749,52.4092155],[13.0443471,52.4102179],[13.0436932,52.4093991],[13.0441757,52.4099674],[13.0441386,52.4099079],[13.0430591,52.4093503],[13.0445354,52.4105481],[13.0441028,52.4098506],[13.0430591,52.4093503],[13.0436611,52.4099578],[13.0438895,52.4103217],[13.0436997,52.4100196],[13.0437366,52.4100787],[13.0441699,52.4110457],[13.045294,52.4109002],[13.0447737,52.4108998],[13.0432992,52.40886],[13.0427563,52.4075464],[13.0428436,52.4089629],[13.0429798,52.4088459],[13.0429375,52.4087778],[13.0427093,52.408747],[13.0431648,52.4086441],[13.043393,52.4086749],[13.0434353,52.408743]],"Russische Kolonie":[[13.0577105,52.4151929],[13.0569746,52.4132767],[13.0588645,52.4130752],[13.0571866,52.4110654],[13.0555399,52.4088181],[13.0574357,52.4085546],[13.0562246,52.4099663],[13.0567619,52.411739],[13.0560203,52.4101026],[13.0563753,52.4116607],[13.0581351,52.411566],[13.0583655,52.4114564],[13.0579253,52.4099723],[13.0575767,52.4098458],[13.0572025,52.4109946]],Röhrenstraße:[[13.1325664,52.3804994],[13.1325598,52.380331],[13.1325827,52.3807033],[13.1325396,52.3800817],[13.131767,52.3800896],[13.1314198,52.3800276],[13.1320438,52.3801949],[13.1325962,52.3797595],[13.1324035,52.3800536],[13.1322581,52.3795823]],"Rönsahler Straße":[[13.0202293,52.4686745],[13.0200977,52.4686351],[13.0205391,52.4687364],[13.0200848,52.4688727],[13.0199482,52.4688396],[13.02033,52.4690179],[13.0199641,52.4690776],[13.0198241,52.4690506],[13.0202597,52.469157],[13.0197276,52.4692674],[13.0197276,52.4692674],[13.0201294,52.469458],[13.0198074,52.4694817],[13.0196627,52.4694678],[13.0201037,52.4696019],[13.0195961,52.46973],[13.0195961,52.46973],[13.0199896,52.4700409],[13.0195437,52.469929],[13.0195437,52.469929],[13.0199896,52.4700409],[13.0195966,52.4701554],[13.0194574,52.4701291],[13.0209304,52.4683506],[13.0209304,52.4683506],[13.0199478,52.4673618],[13.0203906,52.468418],[13.020165,52.4676156],[13.0201275,52.4673887],[13.0202833,52.4676685],[13.0201244,52.4676491],[13.0200839,52.4676827],[13.0200433,52.4677162],[13.0200028,52.4677498],[13.0198401,52.4674387],[13.0200735,52.4674272],[13.0199655,52.4675041],[13.0197863,52.467477],[13.0197324,52.4675154],[13.0196785,52.4675538],[13.0206371,52.4680198],[13.0207978,52.4680406],[13.0206779,52.4679863],[13.0205553,52.4680868],[13.0205962,52.4680533],[13.0205145,52.4681203],[13.0203211,52.4678907],[13.0204799,52.4679102],[13.0203616,52.4678572],[13.02024,52.4679579],[13.0202806,52.4679243],[13.0201995,52.4679914],[13.0202511,52.4683746],[13.0204256,52.4683763],[13.0204606,52.4683345]],Rückertstraße:[[13.0018761,52.4265369],[13.0017512,52.426098],[13.0014476,52.4255722],[13.0014201,52.4254749],[13.0015418,52.4259146],[13.0022411,52.4265682],[13.0011939,52.4257071],[13.0011677,52.4262166],[13.0010017,52.4261124],[13.0017874,52.4269254],[12.9993191,52.4243895],[13.0004384,52.4238567],[13.0008549,52.4252614],[13.0009017,52.4252957],[12.9995567,52.424572],[13.0004548,52.425879],[13.000431,52.4246619],[13.0008176,52.4246394],[13.0001678,52.4251631],[13.0005706,52.4258639],[13.0013825,52.4265156],[12.9990898,52.4244568],[13.0014006,52.4264757],[13.0006814,52.4257529],[12.9996839,52.425678],[13.0013019,52.424347],[13.0004488,52.4241729],[13.0006341,52.4249401],[13.0027592,52.4277727],[13.0030766,52.4273942],[13.0037547,52.4290385],[13.0041668,52.4289257],[13.0029225,52.4279421],[13.0039442,52.4287416],[13.0026405,52.4282996],[13.0055634,52.4293516],[13.005838,52.4290873],[13.0061643,52.429427],[13.0030872,52.428114],[13.0027503,52.4286001],[13.0049588,52.4290855],[13.0053378,52.4287842],[13.0047493,52.4294013],[13.0036696,52.4287403],[13.0035301,52.4280889],[13.0048736,52.4288344],[13.0053578,52.4291701],[13.0040602,52.428877],[13.0059358,52.4295882],[13.003787,52.4286092],[13.0045006,52.4291962],[13.0060619,52.4292735],[13.0034384,52.4285148],[13.0058465,52.429473],[13.0018454,52.4272139],[13.001385,52.4269367],[13.0024393,52.4267863],[13.0024709,52.427177],[13.0030353,52.4277746],[13.0014691,52.4272873],[13.0031106,52.4289365],[13.0026225,52.4273048],[13.0029303,52.4271703],[13.0022084,52.4261149],[13.003442,52.4276705],[13.0032899,52.4280223],[13.0046353,52.4290126],[13.0042961,52.4285285],[13.0042288,52.4284814],[13.0017277,52.427509],[13.0018296,52.4274706],[13.0038028,52.4289545],[13.0035053,52.4292791],[13.0025101,52.427571],[13.0025534,52.4276126],[13.002526,52.4282116],[13.002481,52.4281638],[13.0024329,52.4281126],[13.002386,52.4280627],[13.0032869,52.4283372],[13.0033346,52.428393],[12.9999451,52.4262346],[12.9998801,52.4261611]],"Saarmunder Straße":[[13.0917464,52.3644414],[13.0923693,52.3645187],[13.0927921,52.3640578],[13.0935501,52.3636711],[13.0950315,52.3626154],[13.093438,52.3654613],[13.0946342,52.3611829],[13.0899629,52.3687127],[13.093141,52.3640442],[13.0932816,52.363849],[13.0934185,52.3634355],[13.0929009,52.3639977],[13.0957179,52.3599743],[13.088972,52.369825],[13.0898894,52.3688142],[13.0900364,52.3686112],[13.09011,52.3685097],[13.0901835,52.3684083],[13.0933617,52.3622932],[13.0935803,52.365262],[13.0939396,52.362807],[13.0950114,52.3610475],[13.0950835,52.3609501],[13.0951592,52.3608478],[13.0952348,52.3607456],[13.0952929,52.3605425],[13.0953811,52.3604242],[13.0954544,52.3603259],[13.095615,52.3601115],[13.0955675,52.3612367],[13.0956385,52.3611401],[13.0957099,52.3610431],[13.0957729,52.3609574],[13.0958414,52.3608078],[13.0959259,52.3606929],[13.0960031,52.360588],[13.0961081,52.3604465],[13.0961867,52.3603395],[13.0962795,52.360213],[13.0924801,52.3639223],[13.0925556,52.3638179],[13.0926387,52.363703],[13.0927132,52.3636001],[13.0931144,52.3627962],[13.0936156,52.3629343],[13.0943417,52.362347],[13.0898728,52.3695359],[13.0895855,52.3692828],[13.0896942,52.3696308],[13.0919247,52.3669565],[13.0918561,52.3670515],[13.0917975,52.3671327],[13.0917278,52.3672294],[13.0921962,52.3666632],[13.0921318,52.3667526],[13.0922527,52.3665849],[13.0920622,52.366849],[13.0925368,52.3661903],[13.0924769,52.3662734],[13.0924083,52.3663685],[13.0923534,52.3664447],[13.0906735,52.3678915],[13.0905976,52.3679945],[13.0907562,52.367779],[13.090838,52.3676678],[13.0909156,52.3675625],[13.0911674,52.3672273],[13.091085,52.3673398],[13.091471,52.3668266],[13.0915414,52.3667305],[13.0916238,52.366618],[13.0917035,52.3665091],[13.0917711,52.3664167],[13.0919327,52.3661905],[13.0920165,52.3660743],[13.0912618,52.3678702],[13.0911901,52.3679657],[13.0911157,52.3680649],[13.0910527,52.3681488],[13.0915407,52.3674797],[13.09148,52.3675642],[13.0914171,52.3676515],[13.0913538,52.3677395],[13.0936104,52.365345],[13.0933915,52.3624637],[13.0938816,52.3625979],[13.0942359,52.3617407],[13.094769,52.3612188],[13.0931832,52.3638932],[13.0931644,52.3638269],[13.0935496,52.3635524],[13.093442,52.3635296],[13.0933656,52.3635169],[13.093501,52.363609],[13.0933311,52.3635701],[13.0934127,52.3635879],[13.093364,52.3636849],[13.0932987,52.36362],[13.0935915,52.3635034],[13.0932639,52.3636736],[13.0933299,52.3637527],[13.0932283,52.3637285],[13.0938419,52.3627806]],"Sacrower Allee":[[13.1017902,52.4665113],[13.1010496,52.4657601],[13.1020068,52.4686246],[13.1010181,52.466352],[13.102,52.4668496],[13.1019865,52.466712],[13.1007351,52.4665022],[13.101238,52.4685203],[13.1020634,52.4688446],[13.1011007,52.4634798],[13.1012145,52.4683226],[13.1007601,52.4638649],[13.1010527,52.4645005],[13.1009336,52.4666242],[13.1008424,52.4652769],[13.1020462,52.4651343],[13.1020047,52.4647881],[13.1018063,52.4638536],[13.1017963,52.4655855],[13.101938,52.4653835],[13.1017833,52.4646134],[13.1019124,52.4642327],[13.102118,52.4644166],[13.1018686,52.4640649],[13.1017707,52.4637002],[13.1018343,52.4649145],[13.1018954,52.4620125],[13.1018484,52.4624021],[13.101953,52.4621455],[13.1008839,52.4630961],[13.101159,52.461836],[13.1011187,52.462028],[13.1007723,52.4618314],[13.1019131,52.4626007],[13.1019042,52.4616374],[13.1018957,52.4618493],[13.1006407,52.4620163],[13.1010805,52.4626241],[13.1010062,52.4624397],[13.1018042,52.4630096],[13.1011019,52.4629383],[13.1018077,52.4628331],[13.1017398,52.458977],[13.1019825,52.4578816],[13.1020834,52.4571417],[13.1017752,52.4576947],[13.1017662,52.4575119],[13.1022331,52.4560772],[13.1020066,52.4569512],[13.1023746,52.4558866],[13.1007548,52.4590474],[13.1022324,52.455012],[13.1024537,52.4548025],[13.1005184,52.4575067],[13.1019551,52.4551961],[13.101155,52.460906],[13.1009963,52.4597995],[13.100918,52.4586677],[13.1017965,52.4663421],[13.1017596,52.4661032],[13.1019922,52.4659187],[13.1008192,52.4676744],[13.1010529,52.4648992],[13.1010359,52.4642745],[13.1010655,52.4640993],[13.1010483,52.4650344],[13.101152,52.4615503],[13.1011132,52.4614884],[13.1011054,52.4610826],[13.1010699,52.4602985],[13.101081,52.4606737],[13.1018613,52.4602406],[13.1020916,52.4595151],[13.1018965,52.4603977],[13.1018933,52.458794],[13.1009033,52.458372],[13.1022493,52.4607459],[13.1018607,52.4593061],[13.1020686,52.4566144],[13.1027302,52.4553408],[13.101861,52.4553926],[13.1009625,52.4567044],[13.1006188,52.4572585],[13.1008656,52.4568495],[13.1013084,52.4563349],[13.1005654,52.4570997],[13.1008256,52.4562773],[13.1013479,52.4559749],[13.1009637,52.457281],[13.1009807,52.4570751],[13.1010716,52.4655833],[13.101103,52.462882],[13.1019011,52.4596896],[13.1035815,52.4546184],[13.1037596,52.4548357],[13.1033356,52.4546689],[13.1020578,52.4598709],[13.1020764,52.4600489],[13.1006619,52.4564688],[13.1012037,52.4565251],[13.1016588,52.4585755],[13.1030172,52.4551216],[13.1012161,52.4647146],[13.1011763,52.4561352],[13.1019175,52.4544179],[13.1022715,52.4544827],[13.102684,52.4545399],[13.1016699,52.4591581],[13.1012402,52.4602342],[13.1010632,52.4601594],[13.1021056,52.4605757],[13.1030751,52.4554022],[13.1021497,52.4608189],[13.1013018,52.4557702],[13.1011695,52.4660879],[13.1011118,52.462215],[13.1007957,52.4588883],[13.1021341,52.4572976],[13.1023391,52.4562966],[13.10125,52.4635796],[13.1008676,52.4592726],[13.1019126,52.4677268],[13.1011468,52.4594595],[13.1011464,52.4595237],[13.1015374,52.4689212],[13.1015371,52.4689458],[13.1015368,52.4689703],[13.1015365,52.4689949],[13.1015362,52.4690195],[13.1015359,52.4690441],[13.1015355,52.4690686],[13.1015352,52.4690932],[13.1015349,52.4691178],[13.1015346,52.4691424],[13.1015343,52.4691669],[13.101534,52.4691915],[13.1019009,52.4556286],[13.1018629,52.4556832],[13.1020401,52.4567343]],Salzmannweg:Ha,Sattlerstraße:[[13.0440245,52.4086322],[13.0441662,52.4088781],[13.0440475,52.4083171],[13.0449675,52.4101576],[13.0444684,52.4085192],[13.0446119,52.4086419],[13.0447728,52.4089373],[13.04451,52.4090453],[13.0446387,52.4090232],[13.0448063,52.4090019],[13.0443209,52.4090526],[13.0446293,52.4088358],[13.0447465,52.4095139],[13.0448789,52.4097151],[13.0449996,52.4099379],[13.0446494,52.4092768],[13.0451834,52.4090126],[13.0451509,52.4090714],[13.0455238,52.4098371],[13.0457519,52.4102812],[13.0459209,52.4106477]],"Satzkorner Bergstraße":[[12.9866248,52.4758576],[12.9784885,52.4658685],[12.9782694,52.4656553],[12.9786526,52.4660079],[12.9812827,52.4682203],[12.9873231,52.4759829],[12.9812318,52.4689606]],"Satzkorner Ringstraße":[[12.9897151,52.4750792],[12.9892135,52.47489],[12.9896721,52.4748065],[12.9897556,52.4752607],[12.9893789,52.4754946],[12.9883468,52.4763994],[12.9898469,52.4748279],[12.9889262,52.4755824],[12.9889011,52.4756384],[12.9886252,52.4761858],[12.9886479,52.4761397],[12.9889911,52.4758462],[12.9888982,52.4758996]],"Satzkorner Weg":[[12.9603424,52.4740881],[12.9601324,52.4742242],[12.9590905,52.4739769],[12.9652415,52.4743863],[12.9647526,52.4743032],[12.9629177,52.4743315]],Sauerbruchstraße:[[13.1122068,52.4010421],[13.1107307,52.4004491],[13.1119993,52.4008429],[13.1118344,52.4012603],[13.1124907,52.4008834],[13.1125509,52.4012135],[13.1115054,52.400965],[13.1097286,52.3998578],[13.1106432,52.4003911],[13.1088268,52.3992946],[13.1090763,52.3994105],[13.1090817,52.399564],[13.10944,52.3995861],[13.1092376,52.3991306],[13.1094189,52.3992217],[13.1098046,52.3993861],[13.1113236,52.4001433],[13.1116055,52.400404],[13.1121828,52.4004226],[13.1093367,52.3990391]],Schadowstraße:[[13.1325059,52.3598982],[13.1325892,52.3598528],[13.1330111,52.3602288],[13.1329417,52.3602656],[13.1327956,52.3603433],[13.1328511,52.3600099],[13.1327379,52.3600753],[13.1326963,52.3600993],[13.1325553,52.3601807],[13.1324257,52.3599419],[13.132326,52.3599962],[13.1334214,52.35984],[13.1331263,52.359736],[13.1330402,52.3597837],[13.1332599,52.3599287],[13.1333436,52.3598828],[13.1329094,52.3595897],[13.1332103,52.3596937],[13.1329924,52.3595405],[13.1328211,52.3596382]],Scheffelstraße:[[13.1019166,52.3984178],[13.1018192,52.3984326],[13.1041113,52.3986986],[13.1040152,52.3983172],[13.1042546,52.3988228],[13.1039188,52.3983324],[13.1041498,52.3989056],[13.1060288,52.3984176],[13.1064022,52.3985384],[13.1076385,52.3981077],[13.1051018,52.3985869],[13.1008707,52.3983985],[13.1033281,52.3983576],[13.1032298,52.3983712],[13.1028588,52.3983599],[13.1027601,52.3983752],[13.1022865,52.3983896],[13.102183,52.3984059],[13.1064395,52.3984032]],Schiffbauergasse:Ua,Schilfhof:ja,Schillerplatz:qa,Schillerstraße:[[13.0378579,52.3911894],[13.0378247,52.3913562],[13.0377915,52.3915229],[13.0377583,52.3916897],[13.0370972,52.3909555],[13.0370639,52.3911233],[13.0370306,52.3912911],[13.0369973,52.3914589],[13.036964,52.3916267]],Schinkelstraße:[[13.1341172,52.3591555],[13.1340527,52.359191],[13.1339223,52.359265],[13.1338485,52.3593032],[13.1341194,52.3594573],[13.1341841,52.3594193],[13.1342516,52.3593796],[13.1337723,52.35964],[13.1334713,52.3595371],[13.1335466,52.3594886],[13.133606,52.3597283],[13.1332445,52.3594049],[13.1334896,52.3597577],[13.1336919,52.3596864],[13.1330618,52.3594758],[13.1332723,52.3596182],[13.1333852,52.3595885],[13.1333385,52.3593512],[13.1331703,52.3594452]],Schlaatzstraße:[[13.0775993,52.3879435],[13.0773901,52.3879885],[13.077149,52.3880406],[13.0768635,52.3881025],[13.0775299,52.3881475],[13.0770997,52.3881972],[13.0767792,52.3883355],[13.0760308,52.3883717],[13.0763367,52.3883791],[13.0761549,52.3884744],[13.075762,52.3885128],[13.0755856,52.3886042],[13.0759338,52.3885922],[13.0753887,52.3887062],[13.0757205,52.3887058],[13.0755171,52.3888141],[13.0750254,52.3888946],[13.0751731,52.388818],[13.0765592,52.3881703]],Schlaatzweg:$a,Schlegelstraße:[[13.045979,52.406138],[13.0459747,52.4061057],[13.0459181,52.4058455],[13.0463955,52.4055283],[13.044751,52.4052223],[13.0458675,52.405462],[13.0463133,52.4053302],[13.0465541,52.4061963],[13.0466055,52.4064635],[13.0466495,52.4066993],[13.0455661,52.4055114],[13.045499,52.4055095],[13.0454239,52.4055074],[13.0453473,52.4055053],[13.0452816,52.4055035],[13.0451999,52.4055013]],Schlehenstieg:Ja,Schloßstraße:[[13.0565232,52.3953966],[13.0570998,52.3958035],[13.0570656,52.3957007],[13.0562849,52.3948864],[13.0584871,52.3955279],[13.0566227,52.395556],[13.0567583,52.3956181]],"Schlänitzseer Weg":[[12.9541894,52.4330556],[12.9547439,52.4330405],[12.9549318,52.433324],[12.9543633,52.4334673],[12.9542782,52.4335877]],Schlüterstraße:[[13.0132876,52.3884723],[13.0129109,52.3884019],[13.0124386,52.3883195],[13.0126872,52.3882679],[13.0142171,52.3885333]],Schmidtshof:Qa,Schmidtweg:el,Schmiedegasse:tl,Schneiderweg:il,Schopenhauerstraße:[[13.0486909,52.3969418],[13.0480335,52.3968435],[13.0481104,52.3974584],[13.0481104,52.3974584],[13.0481315,52.3976581],[13.0481221,52.3979446],[13.0481327,52.3982333],[13.0485403,52.3984105],[13.0485504,52.3979345],[13.0474484,52.3971526],[13.0470937,52.3975834],[13.0466382,52.3980291],[13.0472621,52.397624],[13.0475839,52.3971852],[13.0466566,52.4013879],[13.0468537,52.4012902],[13.0480473,52.4004246],[13.0481159,52.400223],[13.048284,52.4002442],[13.0483185,52.4001428],[13.048349,52.4000532],[13.0484649,52.3992562],[13.0486731,52.3991775],[13.048533,52.399051],[13.0486968,52.3989501],[13.0472486,52.4002086],[13.0470365,52.400292],[13.0466662,52.4006802],[13.0471603,52.4007545],[13.0457734,52.4016561],[13.0487262,52.397568],[13.0446902,52.4031317],[13.0482172,52.3975781],[13.0423054,52.4037887],[13.0472911,52.4001189],[13.047437,52.4000877],[13.0465664,52.4015552],[13.0473507,52.4001495],[13.0482123,52.3979],[13.0482119,52.3979279],[13.0482127,52.397869],[13.0482136,52.3977993],[13.0482289,52.3984779],[13.0482239,52.3975118],[13.04713,52.4008112],[13.0486235,52.3983102],[13.0475348,52.4000624],[13.0460426,52.402454],[13.0488083,52.3979742],[13.0472648,52.4005628],[13.0473354,52.4004392],[13.0465801,52.4019841],[13.0465313,52.4019889],[13.0465127,52.4019797],[13.0482141,52.3977653],[13.0482133,52.397824],[13.0486225,52.3983432],[13.048621,52.3983947]],"Schoriner Weg":[[12.9665227,52.4596923],[12.9664143,52.4598948],[12.9671535,52.4600063],[12.9663836,52.4600732],[12.9675956,52.459967],[12.9673233,52.460215],[12.9666251,52.4600999],[12.9660323,52.4596442],[12.966852,52.4601356],[12.9662636,52.4596576],[12.9661113,52.4598734],[12.9669318,52.4599606],[12.9669717,52.4595965],[12.966113,52.4600105]],Schornsteinfegergasse:nl,"Schräger Weg":[[13.0028633,52.4256626],[13.0032783,52.4259243],[13.0093956,52.4269569],[13.0120408,52.4272366],[13.011312,52.4272134],[13.0111316,52.4271359],[13.0106962,52.427087],[13.0096715,52.4275126],[13.0095733,52.4275448],[13.0090972,52.4276104],[13.0029771,52.4263331],[13.0027614,52.4261993],[13.0115899,52.4272074],[13.012526,52.4271498]],Schubertstraße:[[13.1284628,52.3830947],[13.1283438,52.3831211],[13.1280819,52.3833932],[13.1270961,52.3836653],[13.1277854,52.383409],[13.1271921,52.3839903],[13.1272769,52.3834619],[13.1271921,52.3840537],[13.1267618,52.3835101],[13.1269983,52.3839684],[13.126541,52.3835266],[13.1269382,52.3836759],[13.1293415,52.3831779],[13.1263051,52.3835444],[13.1267153,52.3836944],[13.1282561,52.3835946],[13.1290082,52.3833192],[13.1278817,52.3836475],[13.1287182,52.3833509],[13.1276318,52.3837611],[13.1283849,52.3833813],[13.1273169,52.3836415],[13.1277179,52.384083]],Schulplatz:sl,Schulstraße:[[13.0919771,52.3909425],[13.0915262,52.3908065],[13.0925246,52.391056],[13.0922684,52.3910296],[13.0913876,52.3906456],[13.0917838,52.3908839],[12.9622576,52.4614937],[13.0939605,52.390978],[13.0940991,52.3911258],[13.0937074,52.3910348],[13.0942561,52.3909592],[13.0909637,52.3903073],[13.0931332,52.3907772],[13.0917377,52.3906008],[13.0926262,52.3906979],[13.0907614,52.3901898],[13.091205,52.3904422],[13.0927895,52.3903959],[13.0931184,52.3910785],[12.9628719,52.461583],[12.9626671,52.4615533],[12.9624623,52.4615235],[13.0944601,52.3911788],[13.0922423,52.3905188]],Schulzenlandweg:rl,Schusterweg:ol,Schwalbenhof:al,Schwalbenweg:ll,Schwanenallee:hl,"Schwarzer Weg":[[12.9360078,52.4841908],[12.9356144,52.4842277],[12.9355412,52.4838375],[12.9359313,52.4838058],[12.9560778,52.4301001],[12.9578265,52.4301097],[12.9558923,52.4300309],[12.9576617,52.4300586],[12.9572175,52.4300229],[12.9568619,52.4300672],[12.9552247,52.4299934],[12.9567795,52.430046]],Schwarzschildstraße:[[13.1330583,52.3796398],[13.133161,52.3794621],[13.1330095,52.3797261],[13.1336832,52.3790893],[13.1322899,52.3794139],[13.1331421,52.3791329],[13.1333879,52.3794764],[13.1347347,52.3787733],[13.1327449,52.3793764],[13.1310784,52.3799248],[13.1312925,52.3797888],[13.1308662,52.3799539],[13.1310018,52.3799379],[13.1305842,52.3800959],[13.1314911,52.3797762],[13.1344096,52.3784635],[13.1344852,52.3782917],[13.1339476,52.378559],[13.1325788,52.3787134],[13.131869,52.3789005],[13.1351261,52.3784199],[13.1326597,52.3792512],[13.1331421,52.3791329],[13.1336832,52.3790893],[13.1338066,52.3793291],[13.1312159,52.3784244],[13.1308296,52.3792965],[13.1306317,52.3793442],[13.1304338,52.3793919],[13.1307949,52.3788898],[13.1306053,52.3789358],[13.1304018,52.3789851],[13.1302042,52.3790331],[13.1301567,52.3786274],[13.1303534,52.3785792],[13.1305523,52.3785306],[13.1307473,52.3784829],[13.1299593,52.3786756],[13.134729,52.3785038],[13.1304192,52.3797589]],Schwarzschildweg:cl,Schwertfegerstraße:[[13.0582598,52.3961566],[13.0582682,52.3961842],[13.0584691,52.3960579]],Schäferweg:[[13.1241344,52.3745864],[13.1252401,52.373504],[13.1251485,52.3736348],[13.1245286,52.3740345],[13.1242677,52.3743909],[13.1251397,52.3738349],[13.1248127,52.3735704],[13.1247376,52.3734899],[13.1243765,52.3742291],[13.1251523,52.374007],[13.1245957,52.3738481],[13.1248236,52.3742336],[13.124554,52.3744166],[13.1244552,52.374558]],"Seeburger Chaussee":[[13.1243874,52.4836027],[13.1237836,52.4828191],[13.1238971,52.4820352]],Seepromenade:ul,Seestraße:[[13.0740274,52.4119572],[13.0776736,52.4137563],[13.0776533,52.4139665],[13.0768719,52.4146318],[13.0772725,52.4140528],[13.0771203,52.4142197],[13.072133,52.4094231],[13.0723399,52.409236],[13.0721808,52.4098576],[13.0735877,52.4104499],[13.0732843,52.4099939],[13.0735466,52.4113002],[13.0738745,52.4114347],[13.0731182,52.4106678],[13.0742043,52.4126801],[13.074938,52.4122304],[13.0734613,52.4110277],[13.0762913,52.4127791],[13.0770465,52.4138988],[13.0759799,52.4126536],[13.0767851,52.4133124],[13.0770692,52.4136868],[13.0765868,52.4129057],[13.0768851,52.4134711],[13.076954,52.4131725],[13.0750605,52.4118227],[13.0752525,52.4119917],[13.0748045,52.4115874],[13.0777995,52.4121625],[13.0771901,52.4126059],[13.0771112,52.4127226],[13.0759611,52.4123918],[13.0776622,52.4130188],[13.0775092,52.4133204],[12.96388,52.4591762],[12.963543,52.4593583],[12.9634973,52.4594803],[12.9634516,52.4596022],[12.9630263,52.4592758],[12.9629791,52.4594018],[12.9629319,52.4595278],[12.9624961,52.459202],[12.9624497,52.4593257],[12.9624034,52.4594495],[12.962357,52.4595732],[12.96366,52.4591456],[12.96344,52.459115],[12.9630554,52.4588636],[12.9628348,52.458833],[12.9626143,52.4588023],[12.964019,52.4594108],[12.9639713,52.4595381],[12.9639237,52.4596653],[13.076544,52.4125136],[13.076637,52.4125492],[13.0758898,52.4123647],[13.0745096,52.4113721],[13.072671,52.4099737],[13.0740205,52.4124589],[13.0775747,52.4137759],[13.0776935,52.4143046],[13.0776288,52.4141854]],Sellostraße:[[13.0392143,52.3952249],[13.0394076,52.3981445],[13.0392459,52.3977972],[13.0394952,52.3976499],[13.039263,52.3976403],[13.0389611,52.3977416],[13.0386623,52.3978946],[13.0387588,52.3980398],[13.0386444,52.3982282],[13.0388449,52.3967194],[13.0389655,52.3958748],[13.0389421,52.3960429],[13.0390325,52.3952659],[13.0390119,52.3955123],[13.0388753,52.3965174],[13.0389901,52.3970784],[13.0390851,52.3963557],[13.0391422,52.395859],[13.0395303,52.395649],[13.0394244,52.3965468],[13.0394093,52.3966838],[13.0395638,52.3953907],[13.0394741,52.3960785],[13.0394329,52.3964996],[13.0393591,52.3971393],[13.0394651,52.3962259],[13.0394794,52.3961035],[13.0393774,52.3969679],[13.0394978,52.3958462],[13.0395368,52.3969926],[13.0388586,52.396663],[13.0388112,52.3970238],[13.0390108,52.3954832],[13.0392212,52.3982337],[13.0389299,52.3971654],[13.0395588,52.3970329],[13.0392303,52.3954223],[13.0391582,52.3950282],[13.0386049,52.3962614],[13.0385976,52.3963305],[13.0385901,52.3964008]],Semmelweisstraße:[[13.0987781,52.3977803],[13.0971045,52.3984132],[13.0989942,52.3977933],[13.0999572,52.3977781],[13.099432,52.3978788],[13.0959389,52.3983719],[13.0992638,52.3977415],[13.0981962,52.3981023],[13.0996187,52.3978426],[13.0978512,52.3980203],[13.0978129,52.3985689],[13.0989395,52.3979814],[13.0980692,52.3979759],[13.097638,52.398053],[13.0974707,52.3982459],[13.0994533,52.3977051],[13.0980352,52.3981332],[13.0965227,52.3984275],[13.0997678,52.3978142],[13.0963619,52.3982324],[13.0964449,52.3982204],[13.0967926,52.3983775],[13.0985397,52.3978702],[13.0975601,52.3980508],[13.0986121,52.3981252],[13.0980176,52.3981616],[13.0973454,52.3981094],[13.0969049,52.3981064],[13.0991627,52.397928],[13.0987009,52.3980015],[13.1018585,52.3970766],[13.1003744,52.3974228],[13.0972222,52.3983906],[13.0974707,52.3982459],[13.0967213,52.3982231],[13.097334,52.398087],[13.0985776,52.398346],[13.098686,52.3975921],[13.0998321,52.397358],[13.1003744,52.3974228],[13.1023328,52.397103],[13.0997452,52.3976333],[13.1013217,52.3972971],[13.1015192,52.3972599],[13.1021422,52.3971375]],Siedlungsweg:dl,Siefertstraße:[[13.0566773,52.3965583],[13.056504,52.3966888],[13.056449,52.3969151],[13.0562028,52.3971176],[13.0567792,52.3968514]],"Siegward-Sprotte-Straße":[[13.0211692,52.4145135],[13.0212023,52.4154975],[13.0217099,52.4152328],[13.0206764,52.4142136],[13.0207206,52.4144001],[13.0207917,52.4145834],[13.0213013,52.4148369],[13.0209218,52.4149343],[13.0210009,52.4151355],[13.0214465,52.4156579],[13.0211377,52.4157735],[13.0212209,52.4160181],[13.0210868,52.4142709],[13.0219223,52.4145703],[13.0219464,52.4148181],[13.0220202,52.4149744],[13.0220443,52.4151609],[13.022224,52.4153416],[13.0213241,52.4149177],[13.0208592,52.4147632],[13.0219103,52.4154268]],Siemensstraße:[[13.0951145,52.3900143],[13.0948624,52.390066],[13.0931923,52.3904778],[13.0978585,52.3894216],[13.0963424,52.3897568],[13.0983912,52.389311],[13.0975875,52.3894779],[13.0968165,52.3896583],[13.0972623,52.3894394],[13.0970523,52.3896094],[13.0960358,52.3896942],[13.0981426,52.3893626],[13.0957425,52.3897581],[13.0959486,52.3895156],[13.097803,52.3891347],[13.0967212,52.3893569],[13.0982446,52.389044],[13.0972983,52.3892384],[13.0963601,52.3894311],[13.0980164,52.3890909],[13.0955563,52.3894715],[13.0970919,52.3892808],[13.0984375,52.3890044],[13.0986495,52.3887649],[13.0966512,52.3896927],[13.0976108,52.3891742],[13.0986257,52.3892623],[13.0936347,52.390196],[13.0962983,52.389319],[13.0970301,52.3891687],[13.0966594,52.3892449],[13.0936565,52.3905599],[13.0931923,52.3904778],[13.0942612,52.3898777],[13.0947857,52.3897709],[13.09509,52.3897076],[13.093706,52.3901215],[13.0937593,52.3904352],[13.0946025,52.3898077]],Sonnenlandstraße:[[13.0158287,52.382939],[13.0158757,52.3827453],[13.0157856,52.3820087],[13.0160202,52.3821302],[13.0162531,52.3825645],[13.016353,52.3827303],[13.0164602,52.3829287],[13.0165765,52.383131],[13.0157846,52.382397],[13.0177078,52.3850887],[13.0169452,52.3836769],[13.0170292,52.384555],[13.0172986,52.384447],[13.0171468,52.384043],[13.0170725,52.3849434],[13.0167524,52.3843967],[13.0160786,52.3837534],[13.0170506,52.3838691],[13.0154669,52.3832853],[13.0164646,52.383756],[13.0167802,52.3835018],[13.0154099,52.3834832],[13.0172017,52.3841423],[13.0174075,52.3846287],[13.0176226,52.3849503],[13.0157552,52.3837294],[13.0169512,52.3847435],[13.01658,52.3841326],[13.016682,52.383318],[13.0175147,52.3848227],[13.0161218,52.3823155]],Sonnentaustraße:[[13.0884006,52.3629759],[13.0883267,52.3630755],[13.0881734,52.3632882],[13.0881021,52.3633844],[13.0880185,52.3634973],[13.089473,52.3633828],[13.0890894,52.3632731],[13.0885794,52.3633967],[13.0885124,52.3634876],[13.0884351,52.3635924],[13.088596,52.3626199],[13.088432,52.362575],[13.0878583,52.3624178],[13.0880616,52.3624735],[13.0882412,52.3625227]],Sonnenweg:fl,"Sophie-Alberti-Straße":[[13.1004909,52.3622951],[13.0997832,52.3620531],[13.0984286,52.3610257],[13.0978313,52.362005],[13.1010268,52.3627037],[13.1007729,52.3620096],[13.0989635,52.3611236]],"Sophie-Farber-Straße":[[13.1133695,52.3837593],[13.1139572,52.3836809],[13.1152336,52.3833407]],Spechtweg:gl,Sperberhorst:_l,Sperberweg:ml,Spielstraße:[[12.9659269,52.4594738],[12.9668256,52.4591866],[12.9649303,52.4601989],[12.9663851,52.459241],[12.9669856,52.4594214],[12.9670219,52.4592906],[12.9657184,52.4595034],[12.9666818,52.4594018],[12.9655021,52.4598205],[12.9658084,52.459863]],Spindelstraße:[[13.092385,52.39758],[13.092582,52.3973959],[13.0932154,52.3969515],[13.0924819,52.3972815],[13.0926635,52.3972024],[13.0922457,52.3973844],[13.0934144,52.3971386],[13.0939129,52.3971082],[13.093577,52.3971941],[13.093883,52.396932],[13.09399,52.3969086],[13.0918971,52.3975027],[13.0916959,52.3975919]],Spitzweggasse:pl,Spornstraße:[[13.0510432,52.3972165],[13.0522171,52.3969569],[13.0517825,52.3970064],[13.0517825,52.3970064],[13.0520655,52.3970803]],"St.-Anna-Straße":[[13.1040494,52.4647733],[13.1040707,52.4638997],[13.1039481,52.4644141],[13.103933,52.4654083],[13.1046793,52.4624763],[13.1044999,52.4616665],[13.1046008,52.4626556],[13.1045844,52.4628739],[13.1047162,52.4622518],[13.1044674,52.461877],[13.1045317,52.4620448],[13.1039431,52.461855],[13.1039962,52.4616559],[13.103901,52.4620249],[13.1039707,52.4626324],[13.1040364,52.4624003],[13.1039785,52.4621975],[13.1048369,52.4651958],[13.1046351,52.4653285],[13.1052088,52.464389],[13.1045986,52.4638237],[13.1048017,52.4649661],[13.104818,52.4644732],[13.1047817,52.4639856],[13.1041235,52.4642178],[13.1047522,52.4642969],[13.1041186,52.4645047],[[13.1037652,52.4640993],[13.103904,52.4640963],[13.1038974,52.4639841],[13.1037587,52.4639871],[13.1037652,52.4640993]],[13.104978,52.4641465],[13.1049359,52.4646504],[13.1041588,52.4628496],[13.1039112,52.4628286],[13.1044724,52.4645691],[13.103895,52.4649484]],Stadtheide:yl,"Stahnsdorfer Straße":[[13.1298355,52.3925834],[13.1299951,52.3921029],[13.1290286,52.3926505],[13.1308813,52.392594],[13.1313488,52.3930001],[13.1311124,52.3926221],[13.116664,52.3919124],[13.1255929,52.3915269],[13.1193138,52.3917417],[13.1245187,52.3914025],[13.1242183,52.3914115],[13.1261009,52.3915243],[13.1269415,52.3915049],[13.1254246,52.3913297],[13.1189866,52.3919009],[13.1217802,52.3913378],[13.1259948,52.3914716],[13.1140237,52.391664],[13.1123776,52.3916978],[13.1136901,52.3916541],[13.1151637,52.3912781],[13.1122433,52.3922362],[13.1150839,52.3917203],[13.1134628,52.391597],[13.1133201,52.3921226],[13.1135371,52.391211],[13.1148485,52.3912781],[13.1147134,52.3916728],[13.1080543,52.391785],[13.107313,52.3918394],[13.1067493,52.3918865],[13.1068519,52.3919681],[13.1076685,52.3918136],[13.1156641,52.391902],[13.1186404,52.3918389],[13.118373,52.3919585],[13.11576,52.3916462],[13.1219739,52.3917479],[13.1212024,52.3916591],[13.1196503,52.3917412],[13.1203337,52.3914956],[13.1181097,52.391793],[13.1160556,52.39161],[13.1188645,52.3920681],[13.1228351,52.391804],[13.120093,52.3916926],[13.1178575,52.3919943],[13.1179563,52.3917767],[13.120751,52.3916622],[13.1135297,52.3913082],[13.1137801,52.3913153],[13.1144879,52.3913602],[13.1155759,52.3912217],[13.1089949,52.3915671],[13.1104133,52.3916207],[13.1109556,52.3917065],[13.1107362,52.3916068],[13.1113088,52.3912365],[13.1085502,52.3917408],[13.1094754,52.3916564],[13.1104312,52.3913064],[13.109458,52.3915107],[13.1101232,52.3916004],[13.11158,52.3913623],[13.1091782,52.3916953],[13.1099226,52.3914982],[13.1079497,52.3917924],[13.1105449,52.3914066],[13.1097834,52.391624],[13.1110433,52.39129],[13.1214946,52.3917236],[13.1219548,52.3918446],[13.1225768,52.3912057],[13.1182706,52.3914384],[13.118707,52.3914354],[13.1191294,52.3914448],[13.1195561,52.3914511],[13.1199849,52.3914619],[13.1141286,52.3920506],[13.1127672,52.3922282],[13.1125053,52.3922321],[13.113298,52.3919592],[13.1129038,52.3916773],[13.1126406,52.391687],[13.1128787,52.3913105],[13.1126462,52.3913165],[13.1124137,52.3913225],[13.117421,52.3911939],[13.1170052,52.3911824],[13.116612,52.3911916],[13.1085822,52.3917389],[13.1166741,52.3925111],[13.1083368,52.3915025],[13.1085559,52.3919158],[13.1161141,52.3912494],[13.1110518,52.3913774],[13.1099059,52.3914175],[13.1098176,52.3914243],[13.1097158,52.3914322],[13.1094413,52.3914302],[13.1093517,52.3914371],[13.1092559,52.3914445],[13.1089785,52.391488],[13.1088901,52.3914948],[13.1088022,52.3915016],[13.1103057,52.3913163],[13.1106754,52.3913963],[13.104427,52.3917494],[13.1143732,52.3915554],[13.1149611,52.3916815],[13.1144369,52.3920742],[13.1250276,52.3911583],[13.1304686,52.3921411],[13.1304649,52.3922127],[13.1302512,52.3922169],[13.1300203,52.3925094],[13.1300171,52.3926577],[13.129834,52.3926562],[13.1298671,52.392004],[13.1299013,52.3918987],[13.1301067,52.3919179],[13.1291889,52.3918878],[13.1293934,52.391892],[13.1293872,52.3920079],[13.1288868,52.3921325],[13.128701,52.392129],[13.1287068,52.3920127],[13.1293634,52.3925688],[13.1291708,52.3925643],[13.1291785,52.392423],[13.1309649,52.3927901],[13.1307419,52.3927854],[13.1307476,52.392682],[13.1316928,52.392776],[13.1316863,52.3929064],[13.1314891,52.3929032],[13.1310052,52.3924045],[13.1312182,52.3924082],[13.1312127,52.3925295],[13.105538,52.3918216],[13.1048195,52.3918831],[13.1064969,52.3917354],[13.1059659,52.3917847],[13.1059001,52.3917898],[13.1056784,52.3918108],[13.1053038,52.3918395],[13.1112874,52.3917468],[13.1118407,52.392164],[13.1113476,52.3921381],[13.1115842,52.3921505],[13.1117887,52.3917243],[13.1115261,52.3917367],[13.1070822,52.3916923],[13.1070045,52.3916984],[13.106881,52.3917082],[13.1068287,52.3917123],[13.1065939,52.3917283],[13.1064238,52.3917408],[13.1063457,52.3917465],[13.1061434,52.3917706],[13.1060695,52.3917765],[13.1054437,52.3918288],[13.1050326,52.3918686],[13.1073473,52.3916816],[13.1074432,52.3916734]],Staudenweg:xl,Stechlinweg:El,Steinstraße:[[13.1418041,52.3836469],[13.1421905,52.3831744],[13.1415115,52.3828079],[13.1434937,52.3825793],[13.1415347,52.3846572],[13.1423064,52.3840055],[13.1444904,52.3836788],[13.1419679,52.3817468],[13.1411255,52.3833045],[13.1441355,52.3826785],[13.1442729,52.384392],[13.1424259,52.3821397],[13.1407281,52.3835128],[13.1253735,52.3905527],[13.1245668,52.3902988],[13.1250526,52.3910113],[13.1239243,52.3906883],[13.1254944,52.3903269],[13.1253296,52.3907738],[13.1247154,52.3907764],[13.1241762,52.3905484],[13.1250735,52.3908558],[13.132812,52.3871502],[13.1320449,52.3873328],[13.1325325,52.3867918],[13.132961,52.3873037],[13.1315572,52.3870162],[13.1323816,52.387281],[13.1321416,52.3868437],[13.1311817,52.3870634],[13.1367166,52.386278],[13.1337925,52.3867694],[13.1341563,52.3867044],[13.1344814,52.3866926],[13.134613,52.3865308],[13.1347427,52.3866371],[13.1350446,52.3866489],[13.1353213,52.3865863],[13.1356078,52.3865095],[13.1359656,52.3864453],[13.1361109,52.3865225],[13.1365238,52.3864489],[13.1372543,52.3864063],[13.1375477,52.3863271],[13.1379338,52.3861331],[13.1258871,52.3896065],[13.1256767,52.3898074],[13.1254629,52.389797],[13.1253102,52.3900114],[13.1250744,52.3900176],[13.1262493,52.3892484],[13.1261246,52.3896003],[13.1272623,52.3887674],[13.1355177,52.3868428],[13.134682,52.3869735],[13.1358181,52.3868044],[13.1349853,52.3869267],[13.1361156,52.3867817],[13.1352499,52.3868803],[13.1362853,52.3867875],[13.1392504,52.3853241],[13.1394378,52.385062],[13.138082,52.3862701],[13.1392876,52.3860049],[13.1389931,52.3856342],[13.1381869,52.3861566],[13.1391072,52.3860768],[13.1386894,52.3860723],[13.1388919,52.3857488],[13.1386747,52.3861622],[13.1244098,52.3905509],[13.1247814,52.3903079],[13.1420845,52.3832854],[13.1435636,52.3812856],[13.1437586,52.3808915],[13.1428282,52.3810325],[13.1319223,52.3873413],[13.1440318,52.3808286],[13.1431826,52.3808386],[13.1430217,52.3808389],[13.1275969,52.3887564],[13.1257203,52.3903407],[13.1244063,52.391133],[13.1401826,52.3855564],[13.1396028,52.3850017],[13.1400694,52.3844982],[13.1401007,52.3849966],[13.1415054,52.3850773],[13.1400331,52.3832094],[13.1379577,52.3874644],[13.1371552,52.3866074],[13.1439874,52.3810667],[13.1437893,52.381139],[13.1398174,52.3828475],[13.1459325,52.3805741],[13.1459443,52.3806981],[13.1456498,52.3818831],[13.145417,52.3819643],[13.145635,52.3815248],[13.1452304,52.381666],[13.1447785,52.3815835],[13.1445434,52.3816655],[13.1457027,52.3810689],[13.1452847,52.3812148],[13.144823,52.3811638],[13.1445797,52.3812487],[13.1441708,52.3814021],[13.1439541,52.3814777],[13.1366886,52.3867077],[13.1370297,52.3869406]],Stephensonstraße:[[13.0989024,52.3903534],[13.0992671,52.390099],[13.0981273,52.3908562],[13.0980754,52.3903232],[13.1013786,52.3907624],[13.1011073,52.390611],[13.1033623,52.3912549],[13.103321,52.3913613],[13.0998956,52.3908379],[13.0992794,52.3906382],[13.0994519,52.3907741],[13.0997127,52.3907013],[13.09897,52.3907048],[13.0987678,52.3905637],[13.0981795,52.3910467],[13.1020036,52.3911552],[13.1015702,52.3911026],[13.1012245,52.3912438],[13.1036332,52.3914523],[13.100331,52.3899183],[13.10293,52.3911754],[13.1008365,52.3908742],[13.1033466,52.3909937],[13.0995216,52.3907013],[13.098608,52.3909516],[13.0988304,52.3905728],[13.1019716,52.3908005],[13.102637,52.3908997],[13.1018465,52.3907822],[13.1023017,52.390849],[13.1021682,52.3908294],[13.1025169,52.3908843],[13.1032104,52.3909746],[13.1029986,52.3909525],[13.1028628,52.3909321],[13.1023325,52.3911607],[13.1025349,52.3911865],[13.1036669,52.3910769],[13.1039325,52.3911057],[13.100909,52.3906977],[13.0981521,52.3905369],[13.0996395,52.3907175],[13.0995027,52.3907621],[13.0996172,52.3907778]],"Stern-Center":[[13.1346787,52.3713569],[13.1366143,52.3714075],[13.1355593,52.3712521],[13.1347934,52.3713583],[13.1354205,52.3712499],[13.1347094,52.3712387],[13.134495,52.3712147],[13.1344858,52.3713544],[13.1362297,52.3713957],[13.1341919,52.3713507],[13.1342735,52.3712105],[13.13408,52.3713493],[13.1349077,52.3713598],[13.1354093,52.3713661],[13.1345952,52.3712369],[13.1344422,52.3713877],[13.1358916,52.3713971],[13.135726,52.3713701],[13.1350665,52.3712443],[13.1353553,52.3712489],[13.135733,52.3712548],[13.1344956,52.3711708],[13.1348751,52.3712413],[13.1352272,52.3713638],[13.1355591,52.371368],[13.1344062,52.3714141],[13.1343597,52.3714484],[13.1359032,52.3712377],[13.1358939,52.3715011],[13.1352271,52.3712469],[13.1345651,52.3713555],[13.1345102,52.3701523],[13.1343022,52.3698762],[13.1344995,52.3709031],[13.1343013,52.3714149],[13.1345037,52.3706063],[13.134505,52.3705146],[13.1345062,52.3704344],[13.1345071,52.3703738],[13.1345078,52.3703214],[13.1342396,52.3713795],[13.13507,52.3713618],[13.1342916,52.3703705],[13.1342887,52.3705023],[13.1342877,52.3705498],[13.1342866,52.3706014],[13.1342819,52.3708191],[13.1342802,52.3708986],[13.1342783,52.370987],[13.1342772,52.3710403],[13.1342761,52.371091],[13.1343055,52.36965],[13.1343,52.3699792],[13.1342977,52.370084],[13.1342956,52.3701806],[13.1344977,52.3710256],[13.1344985,52.3709715],[13.1345128,52.3699758],[13.1345138,52.3699054],[13.1345147,52.3698415],[13.1345158,52.3697646],[13.1345174,52.3696549]],Sternstraße:[[13.139528,52.3708623],[13.136079,52.3694086],[13.137303,52.3701093],[13.1356621,52.3695001],[13.136087,52.3695417],[13.1382241,52.3706799],[13.1376974,52.3703601],[13.1381131,52.370623],[13.1369811,52.3699064],[13.1366002,52.3696669],[13.1447155,52.3743163],[13.144374,52.3740764],[13.1450974,52.3745759],[13.1445309,52.374217],[13.1449121,52.3744568],[13.145522,52.3747229],[13.1456652,52.3748619],[13.1459758,52.3750116],[13.1453371,52.3746132],[13.1280215,52.3633126],[13.1266573,52.3621886],[13.1274666,52.3626182],[13.1283597,52.365819],[13.1282036,52.3646031],[13.1281964,52.3640194],[13.1274646,52.364019],[13.1278717,52.3630254],[13.1273602,52.3629873],[13.1272274,52.3626619],[13.1268318,52.3620698],[13.1286978,52.3645413],[13.1273737,52.3625316],[13.1282905,52.3659613],[13.1289379,52.3643846],[13.1270273,52.3624927],[13.1277114,52.3634391],[13.1284711,52.3653858],[13.1289805,52.3662945],[13.1282167,52.3645324],[13.1284543,52.3648183],[13.1268508,52.3623988],[13.1282553,52.3641748],[13.1280671,52.3649895],[13.1274902,52.3642029],[13.1281096,52.3636268],[13.1277405,52.3643419],[13.1286238,52.3656989],[13.1279308,52.3631463],[13.1276365,52.3645895],[13.1312528,52.3659308],[13.1312605,52.3659763],[13.1317713,52.3661701],[13.1314898,52.3661145],[13.1313938,52.3666309],[13.1311705,52.3668775],[13.1318409,52.3668027],[13.1323871,52.3667],[13.1323405,52.3670739],[13.1324416,52.3671117],[13.131864,52.3663465],[13.1274225,52.3630755],[13.1289261,52.3649724],[13.1282466,52.3634339],[13.1360813,52.3689721],[13.1349238,52.3687429],[13.1350611,52.3688424],[13.1352329,52.3689366],[13.134847,52.3685335],[13.1330767,52.3675313],[13.1332974,52.3676592],[13.1334602,52.3677499],[13.1336926,52.367892],[13.1338454,52.3679989],[13.1315408,52.3666503],[13.1293731,52.3650374],[13.1310499,52.3658228],[13.1325075,52.3664078],[13.1276817,52.3633603],[13.1274429,52.3631531],[[13.1271666,52.3638757],[13.1274098,52.3638771],[13.1274089,52.3639389],[13.1271656,52.3639376],[13.1271666,52.3638757]],[13.1277746,52.3636207],[13.1277827,52.364521],[13.127861,52.3638368],[13.1278476,52.3637664],[13.127741,52.3635215],[13.1265588,52.3621518],[13.1282124,52.3640448],[13.1282178,52.3640828],[13.134581,52.3683354],[13.132056,52.366786],[13.1356427,52.3690329],[13.1321835,52.3668641],[13.1278874,52.3650045],[13.128795,52.3660383],[13.1285639,52.3654631],[13.1282586,52.3638059],[13.1282772,52.3642429]],Stiftstraße:[[13.0384934,52.3935302],[13.0385751,52.3933685],[13.0387169,52.3935175],[13.0386638,52.3936196],[13.0386967,52.393668],[13.0386511,52.3937596],[13.0384741,52.3940772],[13.0385545,52.393902]],Storchenhof:wl,Stormstraße:[[13.0217853,52.3851751],[13.0216282,52.3852634],[13.0214713,52.3853516],[13.0213145,52.3854398],[13.0223307,52.3854141],[13.0221492,52.3855165],[13.0219675,52.385619],[13.0217857,52.3857215],[13.0227796,52.3857108],[13.0225998,52.3858129],[13.0224191,52.3859155],[13.0222374,52.3860186],[13.0232777,52.3859814],[13.0230963,52.3860837],[13.0229145,52.3861863],[13.0227317,52.3862894],[13.0234497,52.3870551],[13.0232907,52.3871449],[13.0231332,52.3872338],[13.0229771,52.3873219],[13.0228618,52.3865293],[13.0230064,52.3866259],[13.0231514,52.3867226],[13.0232964,52.3868193],[13.0234417,52.3869162],[13.0234129,52.3858516],[13.0232688,52.3857557],[13.0225506,52.3852765],[13.0226941,52.3853723],[13.0221205,52.3849891],[13.0228376,52.3854682],[13.0229811,52.385564],[13.0231249,52.3856599],[13.0224071,52.3851806],[13.0222637,52.3850848],[13.0244037,52.3866975],[13.02456,52.3866095],[13.0247162,52.3865214],[13.023898,52.3869788],[13.0240666,52.386885],[13.0242351,52.3867913],[13.0243963,52.3868978],[13.024229,52.3869924],[13.0240616,52.387087],[13.021674,52.3886415],[13.0248065,52.3866639],[13.0245863,52.3867903],[13.0243963,52.3868978]],Strandweg:Cl,"Straße des Friedens":[[12.9831574,52.4787468],[12.9834571,52.4785823],[12.9848618,52.4778354],[12.9845851,52.477979],[12.9854739,52.4779863],[12.9843642,52.478096],[12.9849526,52.4782071],[12.9837325,52.4784261],[12.9839793,52.4782862],[12.9864004,52.4769653],[12.9862209,52.4770532],[12.9835857,52.4788238],[12.9839571,52.4787462],[12.9844303,52.4784003],[12.9877646,52.4766675],[12.9876944,52.4767048],[12.9874679,52.4768196],[12.9873735,52.476872],[12.9871651,52.4769771],[12.9870727,52.4770283],[12.9870931,52.4765439],[12.9869917,52.4765915],[12.9868777,52.476781],[12.9867785,52.4768294],[12.9852491,52.4780854],[12.984199,52.4785427],[12.9860041,52.4771663],[12.9857707,52.4772848],[12.9859395,52.4771991],[12.9857062,52.4773176],[12.9868529,52.4771325]],"Straße nach Sacrow":[[13.060281,52.4574995]],"Straße zum Bahnhof":[[12.9845073,52.4764146]],Stubenrauchstraße:[[13.1347941,52.3971171],[13.1314329,52.3962141],[13.1341192,52.396887],[13.1327833,52.3962332],[13.1359076,52.397633],[13.1317905,52.3959307],[13.1356636,52.3975442],[13.1330454,52.3963221],[13.1311052,52.3961105],[13.1308311,52.3959383],[13.1351177,52.3980154],[13.1374093,52.3978917],[13.1369875,52.3979609],[13.1362783,52.397676],[13.1341826,52.3969167],[13.1375304,52.397848],[13.1341802,52.3975033],[13.1319684,52.3962378],[13.1333731,52.3963854],[13.1334771,52.3970511],[13.1377551,52.3977278],[13.1338725,52.3970295],[13.1330925,52.3972176],[13.1344329,52.3969748],[13.1366325,52.3979746],[13.1338448,52.3965441],[13.1323703,52.3965077],[13.1341066,52.3973319],[13.1356948,52.3980424],[13.1350054,52.3972559],[13.1326881,52.3968471],[13.132798,52.3968944],[13.1352653,52.3974238]],Stülerstraße:[[13.1342755,52.3589127],[13.1343142,52.359035],[13.1341944,52.3589568],[13.1344597,52.3592485],[13.1343913,52.3592842],[13.1350512,52.3591968],[13.1348683,52.359299],[13.1349274,52.3592643],[13.1350512,52.3591968],[13.1347979,52.3588592],[13.1347545,52.3586009],[13.1349807,52.3590501],[13.1352154,52.3589242],[13.1346832,52.3586389],[13.1349145,52.3590845],[13.1349171,52.3587946],[13.1349953,52.358752],[13.1344969,52.358748],[13.13472,52.3589043],[13.1351514,52.3589627],[13.1345704,52.3587042]],Tannenstraße:[[13.1091277,52.4106645],[13.1085184,52.4106045],[13.1077709,52.4103665],[13.1074265,52.4105443],[13.1084659,52.4104405],[13.1078649,52.4105396],[13.1073427,52.4103134],[13.1082524,52.4107304],[13.1096651,52.4105114],[13.1088431,52.4104684],[13.1081225,52.4103923],[13.1081225,52.4103923]],Tannenweg:Sl,Taubenbogen:Tl,Telegrafenberg:Rl,"Templiner Straße":[[13.0556945,52.3836902],[13.0560712,52.3836104],[13.0544289,52.3834598],[13.0560928,52.383198],[13.0558614,52.3832569],[13.0557677,52.3833101],[13.0526197,52.3832116],[13.0536116,52.3832927],[13.0510614,52.383454],[13.0521449,52.3834185],[13.051611,52.3834657],[13.0513511,52.3837911],[13.0511437,52.3840692],[13.0531968,52.383492],[13.0537196,52.3836266],[13.0542824,52.383569],[13.0475132,52.3836914],[13.0473248,52.3839986],[13.0521876,52.3831687],[13.0452776,52.3803512],[13.0233038,52.3593368],[13.0224311,52.3596646],[13.0225069,52.3595986],[13.0219734,52.3593517],[13.0514926,52.3838297],[13.051292,52.3841107],[13.0537196,52.3836266],[13.0536116,52.3832927],[13.0531795,52.3835873],[13.0526588,52.3835437],[13.052399,52.3835247],[13.052128,52.3835048],[13.040511,52.3817715],[13.0467952,52.3826992],[13.0467529,52.3826688],[13.0494632,52.3833493],[13.0498913,52.3833793],[13.0499016,52.3833197],[13.0285352,52.3654713],[13.0541396,52.383432],[13.0248346,52.3596949],[13.0243514,52.3601226],[13.0218107,52.3602956],[13.0314812,52.3658017]],Thaerstraße:[[13.0264606,52.4170963],[13.02627,52.4168812],[13.0266489,52.4171009],[13.0259816,52.4165381],[13.0267697,52.4172555],[13.0269134,52.4174304],[13.0265608,52.4172324],[13.0266214,52.4168717],[13.0259591,52.4161984],[13.0261845,52.416565],[13.0265628,52.4170045],[13.0267046,52.4174577],[13.0263465,52.4167517],[13.026417,52.4177474],[13.0257674,52.4162809],[13.0259816,52.4165381],[13.0271009,52.4174338],[13.0265528,52.4167892],[13.0261585,52.416748],[13.0267863,52.4172753],[13.0262232,52.4172606],[13.025863,52.4160785],[13.0269741,52.4170445],[13.0251512,52.4188792],[13.0251784,52.4189293],[13.0272709,52.4179715],[13.0272983,52.4180181],[13.0273538,52.4181144],[13.0273252,52.4180643],[13.0268949,52.4177397],[13.0269227,52.4177881],[13.0269503,52.4178362],[13.0269776,52.4178836],[13.0270048,52.4179309],[13.0270311,52.4179765],[13.0264528,52.4178352],[13.026481,52.4178842],[13.0265077,52.4179307],[13.0265346,52.4179773],[13.0265613,52.4180237],[13.0265892,52.4180722],[13.02468,52.4188912],[13.0234058,52.4196362],[13.024972,52.4186571],[13.0233131,52.4196561],[13.0244815,52.4194006],[13.0270844,52.4182032],[13.024384,52.4187857],[13.0252293,52.4186034],[13.0258066,52.4184772],[13.0265247,52.4183229],[13.0267441,52.4182748],[13.0268292,52.4182569],[13.0269143,52.418239],[13.0269993,52.4182211],[13.0261878,52.4183943],[13.026272,52.4183764],[13.0263562,52.4183586],[13.0264405,52.4183408],[13.0235836,52.4195951],[13.0236771,52.419575],[13.0238533,52.4195363],[13.0239456,52.4195164],[13.0241158,52.4194792],[13.0242094,52.4194591],[13.0243884,52.4194206],[13.024895,52.4192738],[13.0248638,52.4192219],[13.0247962,52.4191087],[13.0247643,52.4190556],[13.0247135,52.4189469],[13.0250337,52.4182893],[13.0250594,52.4183363],[13.0250857,52.4183845],[13.0248542,52.4183285],[13.0248799,52.4183755],[13.024906,52.4184233],[13.024468,52.4187673],[13.024552,52.418749],[13.024636,52.4187306],[13.02472,52.4187122],[13.024804,52.4186938],[13.024888,52.4186755],[13.0253118,52.4185854],[13.0253943,52.4185674],[13.0254767,52.4185493],[13.0255592,52.4185313],[13.0256416,52.4185132],[13.0257241,52.4184952]],"Theodor-Echtermeyer-Straße":[[13.0447731,52.4240533],[13.0450862,52.4243008],[13.045004,52.4241749],[13.0446738,52.4238942],[13.0448544,52.4241991],[13.0449263,52.4243318],[13.0449692,52.4247576],[13.0450741,52.4249189],[13.0451877,52.4250729],[13.045354,52.4251056],[13.0454425,52.425261],[13.0454345,52.4245757],[13.0455038,52.424738],[13.045485,52.4250095],[13.0455708,52.4251632],[13.0456566,52.4253186],[13.0448415,52.423868],[13.0458204,52.4258965],[13.0459004,52.426091],[13.0462168,52.4266358],[13.0461304,52.4264795],[13.0460157,52.4262705],[13.0462531,52.4260108],[13.0456821,52.4256704],[13.0463392,52.4262011],[13.0461095,52.4257922],[13.0458249,52.4255996],[13.0442414,52.4231109],[13.0443315,52.4230763],[13.0444129,52.423045],[13.0444905,52.4230152],[13.0444011,52.4233081],[13.0442424,52.4233797],[13.044456,52.4233642],[13.0442868,52.4234248],[13.0445001,52.4234094],[13.0444002,52.4235506],[13.0446016,52.4235148],[13.0444413,52.4235902],[13.0446376,52.4235517],[13.0444819,52.4236294],[13.0446814,52.4235965],[13.0439673,52.4232173],[13.0441995,52.4233363]],"Theodor-Fontane-Straße":[[13.1048515,52.4706127],[13.1047551,52.4704195],[13.1047504,52.4703685],[13.1052408,52.4703449],[13.105246,52.4704109],[13.1052497,52.4704581],[13.105254,52.4705127],[13.1052581,52.4705636]],"Theodor-Hoppe-Weg":[[13.0936671,52.3920161],[13.0936388,52.3919608],[13.0939431,52.3922901],[13.0937491,52.3922357],[13.093969,52.3923414],[13.0937755,52.3922875],[13.0941495,52.3923076],[13.0936324,52.3923161],[13.093935,52.3924646],[13.0937494,52.3924108],[13.0941076,52.3924556],[13.0936294,52.3924334],[13.0936953,52.3920714],[13.0938905,52.3921857],[13.0935469,52.3920982],[13.0939187,52.3922416],[13.0937225,52.3921837]],"Thomas-Müntzer-Straße":[[12.9669921,52.4079657],[12.9669085,52.4075108],[12.9659494,52.4074603],[12.966266,52.4074686],[12.9691863,52.4075221],[12.969581,52.4077316],[12.9700702,52.4076934],[12.970276,52.4076852],[12.9698759,52.4073311],[12.9673833,52.406755],[12.9673509,52.4070106],[12.9674588,52.4073137],[12.9674482,52.4075154],[12.9681384,52.407486],[12.968453,52.4075101],[12.9686349,52.4074984],[12.9680936,52.4072849],[12.9683763,52.4072488],[12.9687046,52.4072685],[12.9689826,52.4072628],[12.969161,52.4073217],[12.9694291,52.4073288],[12.9684795,52.4069031],[12.9690483,52.4074226],[12.9679538,52.4074031],[12.9689477,52.4074206],[12.9678583,52.4074038]],Thujaweg:Il,Tieckstraße:[[13.0475383,52.4065933],[13.0474487,52.4059031],[13.0474968,52.4059737],[13.0473301,52.4061808],[13.0472422,52.4063578],[13.0470617,52.4055313],[13.0483347,52.4061128],[13.0485101,52.4060641],[13.0479798,52.4062076],[13.0481537,52.4061598]],"Tiroler Damm":[[13.0967079,52.3724879],[13.0962665,52.3726049],[13.0958378,52.3730845],[13.0968198,52.3727894],[13.095041,52.3731556],[13.0952194,52.3723837],[13.0966926,52.3719773],[13.0963846,52.3722297],[13.0962432,52.3723176],[13.0961017,52.3724055],[13.0959603,52.3724934],[13.0958189,52.3725813],[13.0956775,52.3726692],[13.0965136,52.373314],[13.0966971,52.3733871],[13.0953547,52.3722991],[13.0954901,52.3722145],[13.0956255,52.3721299],[13.0957608,52.3720454],[13.0958962,52.3719608],[13.0962697,52.371723],[13.0964005,52.3718029],[13.0965506,52.3718896],[13.0952198,52.3729758]],Tizianstraße:[[13.0788205,52.4147803],[13.0802422,52.4138396],[13.0791666,52.4144388],[13.0808279,52.4134861],[13.0801801,52.4135068],[13.0792769,52.4149631],[13.0805459,52.4136534],[13.078389,52.4145289],[13.0796406,52.4140104],[13.0797066,52.4138281],[13.0786718,52.4146168],[13.0780565,52.4144761],[13.0776401,52.4147256],[13.0806495,52.4153323],[13.0797159,52.4146937],[13.0802519,52.4155879],[13.0790048,52.4150175],[13.0784571,52.4152676],[13.077927,52.4147557],[13.0799499,52.4151951],[13.0796742,52.4152962],[13.0783456,52.4148681],[13.0774061,52.4146696],[13.0801664,52.4154012],[13.0803832,52.4136705],[13.0812973,52.4131684],[13.0809886,52.4134003],[13.0806752,52.4129147],[13.0804122,52.4132209],[13.0806118,52.4135909],[13.0777524,52.4146224]],Tornowstraße:[[13.0421639,52.3864699],[13.043045,52.3873106],[13.0412249,52.3867004],[13.0438062,52.3874067],[13.043614,52.3872239],[13.0427809,52.3877378],[13.042995,52.3879727],[13.0397066,52.3862708],[13.0397978,52.3856952],[13.0400386,52.386528],[13.0410266,52.3863341],[13.0419926,52.3870391],[13.0440861,52.3881432],[13.0440434,52.3880561],[13.0443592,52.3882953],[13.0444008,52.3884516],[13.0446449,52.3887293],[13.0447261,52.3889108],[13.0436913,52.3888534],[13.0433109,52.3884506],[13.0431133,52.3887635],[13.0434568,52.3890312],[13.0436906,52.3894089],[13.044945,52.389156],[13.0441462,52.3905549],[13.0439462,52.39017],[13.0440579,52.3903456],[13.0440048,52.3899098],[13.0441273,52.3898005],[13.0437461,52.3896516],[13.0447504,52.3900925],[13.0447878,52.3902879],[13.0448222,52.3905167],[13.0449143,52.3899314],[13.0435505,52.3892433],[13.0430221,52.3884431],[13.0453041,52.3898873],[13.0446159,52.3897463],[13.0449128,52.3891059],[13.0452464,52.3897104],[13.0436093,52.3871561],[13.043475,52.3869578],[13.0432874,52.3871809],[13.0433679,52.3877457],[13.0433078,52.3874221],[13.0426633,52.3870917],[13.0435792,52.3880717]],"Trebbiner Straße":[[13.1269996,52.361333],[13.1269376,52.3607856],[13.1270379,52.3611562],[13.1271071,52.3607969],[13.1266892,52.3610723],[13.1275941,52.3606746],[13.1266652,52.3613518],[13.1272677,52.3609463],[13.1267309,52.3615032],[13.129734,52.3592629],[13.1296446,52.3590945],[13.1293039,52.3591625],[13.1295112,52.3593697],[13.1296808,52.3589654],[13.1286362,52.359995],[13.1300887,52.3590521],[13.1291571,52.35943],[13.127435,52.3603344],[13.1287468,52.3595896],[13.1304921,52.3583853],[13.1303937,52.3584405],[13.1269631,52.3599597],[13.1299202,52.3587989],[13.1293205,52.3595471],[13.1283817,52.3598381],[13.1290587,52.35974],[13.1284446,52.3601274],[13.128228,52.3599537],[13.1314309,52.3575997],[13.1294569,52.3590973],[13.128862,52.3598624],[13.1310757,52.357807],[13.130267,52.3589321],[13.128142,52.3603283],[13.1279753,52.3604414],[13.1273268,52.3604169],[13.1305122,52.358093],[13.1348041,52.3555152],[13.1337577,52.3569272],[13.1333871,52.3569604],[13.1337085,52.3567674],[13.130422,52.3588256],[13.13067,52.358661],[13.1309565,52.3586371],[13.1321183,52.3578714],[13.134206,52.3559116],[13.1330952,52.3566655],[13.1343532,52.3557176],[13.1319561,52.3583683],[13.1343973,52.3557853],[13.1319686,52.3582013],[13.1343625,52.3565359],[13.1350348,52.3558841],[13.1314381,52.3582995],[13.1324429,52.3578128],[13.1340266,52.3560597],[13.1328605,52.356881],[13.1326494,52.3574975],[13.1328589,52.3573656],[13.1336005,52.3563926],[13.1355561,52.3555427],[13.1350353,52.3562684],[13.1315807,52.3586042],[13.1341295,52.355781],[13.1347693,52.356107],[13.1345259,52.356244],[13.1339401,52.3559031],[13.1344251,52.3563554],[13.1345103,52.3556525],[13.1312573,52.3584152],[13.131602,52.3581897],[13.1341226,52.356709],[13.1326658,52.3570498],[13.1317441,52.3584991],[13.1330663,52.3572076],[13.1340478,52.356555],[13.1352543,52.3557396],[13.1332812,52.3566156],[13.1332919,52.3565446],[13.1266794,52.3601358],[13.1357794,52.3553537],[13.1364051,52.3552058],[13.1320625,52.358136],[13.1314045,52.3576699],[13.1302589,52.358532],[13.1308851,52.3581975],[13.1336708,52.3562361],[13.133708,52.3561827],[13.1311367,52.3585452],[13.1260066,52.3601989],[13.1297065,52.3547007],[13.1290803,52.3548143],[13.1301412,52.3533913],[13.131514,52.3573658],[13.1347555,52.3559901],[13.1257037,52.359929]],Triftweg:vl,Tristanstraße:[[13.1023471,52.458769],[13.1024435,52.4594298],[13.1025789,52.4591585],[13.1024385,52.4589738],[13.102577,52.4597899],[13.1023538,52.4586017],[13.1025221,52.4595829],[13.1027199,52.457322],[13.1028981,52.4570177],[13.1031242,52.4565196],[13.1035727,52.4572411],[13.1030842,52.4576],[13.102915,52.4582552],[13.1038914,52.456612],[13.1031932,52.4573866],[13.1041547,52.4549409],[13.1026099,52.4601786],[13.1026666,52.4607931],[13.1023861,52.4599804],[13.1029937,52.4567275],[13.1029768,52.4569227],[13.1043351,52.4558294],[13.1036217,52.456746],[13.103482,52.4568338],[13.1039776,52.4555343],[13.1037291,52.455929],[13.1037121,52.4556847],[13.1045715,52.4554538],[13.1039953,52.4553267],[13.103196,52.4589751],[13.1030008,52.4596295],[13.1031426,52.4593353],[13.1031331,52.4598809],[13.1032499,52.4602357],[13.1033825,52.4606079],[13.1031386,52.4604588],[13.1032198,52.4609998],[13.1031624,52.4600445],[13.1031713,52.4591435],[13.103047,52.4595152],[13.1040168,52.4551353],[13.1035609,52.4607012],[13.1026599,52.4609546],[13.1048697,52.4557556],[13.1033309,52.4563291],[13.1032394,52.4578625],[13.1045745,52.4547691],[13.1027127,52.4576301],[13.1026923,52.4577045]],Tschaikowskiweg:Al,Tschudistraße:[[13.0510818,52.4388134],[13.0513674,52.4377115],[13.0494079,52.4380977],[13.0501169,52.4396321],[13.0509522,52.4381131],[13.0520736,52.4378642],[13.0519272,52.4382416],[13.0511237,52.4378717],[13.0484815,52.4408961],[13.0505461,52.4389317],[13.0504396,52.4390789],[13.0503329,52.4392264],[13.0513237,52.4384838],[13.0510724,52.4387137],[13.0505424,52.4384607],[13.0506557,52.4382979]],Tuchmacherstraße:[[13.0928713,52.3972765],[13.0933427,52.3974468],[13.0934893,52.3977229],[13.0933082,52.3977566],[13.0932632,52.3972364],[13.0906991,52.3948678],[13.0909542,52.3948876],[13.0914738,52.3958249],[13.0915004,52.3954508],[13.0911346,52.3958869],[13.090761,52.3946171],[13.0908308,52.3944295],[13.0909197,52.3945594],[13.0909845,52.3946542],[13.0910848,52.3947827],[13.091192,52.3948941],[13.0913312,52.3950207],[13.0928613,52.3965915],[13.0931092,52.3968453],[13.0927117,52.3964396],[13.0923368,52.396055],[13.0920814,52.3958033],[13.0922257,52.3959513],[13.09298,52.396711],[13.0927811,52.3965095],[13.092455,52.3961832],[13.0919444,52.3956515],[13.0926252,52.3963526],[13.0926634,52.3966444],[13.09228,52.3962585],[13.0921867,52.396159],[13.0929428,52.3969413],[13.0920334,52.396006],[13.0917848,52.3957647],[13.0918586,52.3958316],[13.0925376,52.3965145],[13.0919644,52.3959423],[13.0928067,52.3967942],[13.0913445,52.3964895],[13.0924385,52.3964123],[13.093609,52.3974381],[13.0937268,52.3976062],[13.0937835,52.3976895],[13.0934893,52.3977229],[13.0911281,52.3953039],[13.0910223,52.3951284],[13.090439,52.3955517],[13.0912351,52.3956805],[13.0907362,52.3955639],[13.0905666,52.3950754],[13.0910481,52.3955768],[13.0910276,52.3957881],[13.0908968,52.3953284],[13.0914858,52.3955417],[13.0909614,52.3952459],[13.0913434,52.3954056],[13.0910274,52.3957184],[13.0910601,52.3950185],[13.0909638,52.3951156],[13.090964,52.3951901],[13.0903468,52.3955357],[13.0922646,52.3963508],[13.090802,52.3958019],[13.091953,52.3955734],[13.091879,52.3954967],[13.0917538,52.3953668],[13.091681,52.3952914]],Tulpenweg:Ml,Turmfalkenweg:Ll,Turmstraße:[[13.1227178,52.3750654],[13.1230735,52.3747504],[13.1225629,52.3753541],[13.1220873,52.3757168],[13.1234499,52.3740499],[13.1212138,52.3757928],[13.1239285,52.372952],[13.1236776,52.3732455],[13.1242795,52.3732245],[13.1232237,52.3737303],[13.1210683,52.3755646],[13.1238851,52.3737066],[13.1234061,52.374253],[13.1236436,52.3737324],[13.1241126,52.3734149],[13.1213701,52.3756338],[13.1235699,52.3741883],[13.1225505,52.3742348],[13.1217727,52.3749706],[13.1225505,52.3742348],[13.1210208,52.3757227],[13.1238115,52.3730988],[13.1249942,52.3706479],[13.1255044,52.3693398],[13.1235208,52.3714126],[13.127134,52.3711039],[13.1260905,52.3695068],[13.1241264,52.3714712],[13.1261153,52.3698781],[13.1253573,52.3709242],[13.1243896,52.3712919],[13.1254653,52.3707783],[13.1259431,52.3711713],[13.1269088,52.369556],[13.124724,52.3715066],[13.1262031,52.3699826],[13.1252608,52.3710323],[13.1261618,52.3707853],[13.126004,52.3708988],[13.1268329,52.3696303],[13.1259641,52.3701552],[13.1263089,52.3695742],[13.1267502,52.3697875],[13.1259687,52.3699784],[13.126302,52.3703432],[13.1258147,52.3701734],[13.1262859,52.3697019],[13.1248726,52.3717853],[13.1246953,52.3712498],[13.1249757,52.371066],[13.1246423,52.3718531],[13.1265042,52.3708751],[13.1256331,52.3715459],[13.1254469,52.3695447],[13.1267686,52.3708639],[13.1243723,52.3729951],[13.1217154,52.3760025],[13.1218633,52.376099],[13.1264646,52.3706971],[13.123876,52.3726451],[13.1230387,52.3743698],[13.122964,52.3744569],[13.1239226,52.3714147],[13.1249526,52.3716761],[13.1250102,52.3713841],[13.1249801,52.3712008],[13.1248923,52.3726275],[13.1248741,52.3727873],[13.1218462,52.3748824],[13.1222038,52.3747267],[13.122158,52.3747816],[13.1233907,52.3734635],[13.1234405,52.3734014],[13.1228934,52.3752427],[13.1228292,52.375223]],Turnstraße:[[13.0969418,52.3967266],[13.0976999,52.3965062],[13.0988783,52.3960825],[13.0960276,52.3971096],[13.0967858,52.3968358],[13.0980772,52.3963771],[13.0986712,52.3961574],[13.0973155,52.3966418],[13.0959906,52.3971266],[13.0961413,52.3969475],[13.0965399,52.3969207],[13.0965399,52.3969207],[13.0977961,52.3964723],[13.0975089,52.3965736],[13.0980772,52.3963771],[13.100933,52.3953515],[13.1007183,52.3954431],[13.0995184,52.3957335],[13.1003434,52.3955694],[13.1005651,52.3954951],[13.1010934,52.3952968],[13.0997926,52.3957625],[13.0999844,52.3956929],[13.1013082,52.3952414],[13.1001774,52.3956269],[13.0995625,52.3957246],[13.0967214,52.3970042],[13.0962034,52.397181],[13.0970679,52.3969048],[13.0963864,52.3972211],[13.0975353,52.3967221],[13.0974327,52.3968708],[13.0958612,52.3973065],[13.097149,52.3968545],[13.0977928,52.3966318],[13.0987233,52.3964366],[13.0984648,52.3965267],[13.0996671,52.3961244],[13.0999065,52.3959033],[13.0999065,52.3959033],[13.0972246,52.3970449],[13.0991444,52.3962757],[13.0991363,52.3961701],[13.0992626,52.3961257],[13.098462,52.3962289],[13.0967213,52.3965374],[13.0987095,52.3963248],[13.0981238,52.396518],[13.0982068,52.3964893]],Türkstraße:[[13.0712696,52.3993483]],"Uetzer Dorfstraße":[[12.9418127,52.4692532],[12.9411935,52.4693239],[12.9421255,52.4692124],[12.9435401,52.4687858],[12.9414841,52.4692818],[12.9406273,52.4693561],[12.942625,52.4690964],[12.9428926,52.4689971],[12.9431324,52.468678],[12.9432198,52.4688483],[12.9426039,52.4693364],[12.9408772,52.4695772],[12.9422255,52.4694254],[12.9412359,52.4695504],[12.9413668,52.4695149],[12.9420951,52.4694355],[12.939681,52.4700012],[12.9402713,52.4696438],[12.9400092,52.4697992],[12.9386849,52.469856],[12.9307444,52.4699255],[12.9329289,52.4742465],[12.9321438,52.4744148],[12.9429523,52.4689415],[12.9430834,52.4688919],[12.9419619,52.4686563],[12.9417951,52.4686543],[12.9399259,52.469308]],Uhlandstraße:[[13.1066512,52.3953639],[13.1069822,52.3956576],[13.1065848,52.3955715],[13.1066008,52.395115],[13.1069821,52.3953195],[13.1065907,52.3954809],[13.1065907,52.3954809],[13.1069822,52.3954885],[13.106982,52.3949715],[13.1065889,52.3957018],[13.1072039,52.3941633],[13.106735,52.3938024],[13.1067292,52.3939581],[13.1070405,52.3939931],[13.1072467,52.3943723],[13.1065669,52.3937068],[13.1065595,52.3938734],[13.1071905,52.3939197],[13.1072016,52.3940669],[13.1072058,52.393617],[13.106712,52.3941617],[13.1071779,52.3958246],[13.1070426,52.393683],[13.1071691,52.3947876]],Ulanenweg:Pl,Ulmenstraße:[[13.1102427,52.3778714],[13.1105667,52.3787569],[13.1100492,52.3784202],[13.1091462,52.3791307],[13.1093624,52.3795668],[13.1092228,52.3793369],[13.1098531,52.3770815]],"Ulrich-Steinhauer-Straße":[[13.1031076,52.4724639],[13.1031818,52.4725938],[13.1033508,52.472818],[13.1035654,52.4728087],[13.1037801,52.4727994],[13.1039947,52.47279],[13.1042094,52.4727807]],"Ulrich-von-Hutten-Straße":[[13.04788,52.3828592],[13.0488712,52.3829306],[13.0486518,52.3827881],[13.048236,52.3827639],[13.0487448,52.3822964],[13.0487575,52.3824409],[13.0486909,52.3825702],[13.0483287,52.3822647],[13.0483002,52.3824068],[13.0482739,52.3825382],[13.0487525,52.3820203]],Ungerstraße:[[13.0131453,52.3843016],[13.013605,52.3843875],[13.0140429,52.384185],[13.0125761,52.383404],[13.0127087,52.382802],[13.0136927,52.3828943],[13.0126178,52.3830708],[13.0134687,52.3843616],[13.0131539,52.3830333],[13.0128172,52.384243],[13.0124582,52.383606],[13.0130374,52.3825791],[13.0129489,52.3824234],[13.0130511,52.3822281],[13.0129018,52.3836956],[13.0134781,52.3840806],[13.0132072,52.3840317],[13.0133832,52.3822273],[13.0132111,52.3837003],[13.0146773,52.3824216],[13.0125258,52.3839031],[13.013767,52.3841345],[13.0132485,52.383116],[13.0126639,52.3832224],[13.0129418,52.3826477],[13.0141599,52.3823178],[13.0148721,52.3824048],[13.0135623,52.382445],[13.0136884,52.382435],[13.0139551,52.382587],[13.0142451,52.3826511]],"Unter den Eichen":[[13.0969339,52.3697785],[13.0970414,52.3698448],[13.0973423,52.3700379],[13.0977445,52.3702878],[13.0978381,52.3703457],[13.098155,52.3705417],[13.0982467,52.3706003],[13.0941528,52.3715447],[13.0944224,52.3717768],[13.0945216,52.3718375],[13.0947492,52.3720503],[13.0948706,52.3721204],[13.0953725,52.3707068],[13.0954671,52.3707617],[13.0957768,52.3709602],[13.0958814,52.3710256],[13.0961939,52.3712172],[13.096285,52.371275],[13.0964974,52.3711498],[13.096405,52.3710966],[13.0960851,52.3708965],[13.0959966,52.3708419],[13.0956722,52.3706395],[13.0955847,52.3705848],[13.0961581,52.3702433],[13.0962479,52.3703023],[13.0965576,52.3704959],[13.0966637,52.3705594],[13.0969658,52.3707495],[13.0970612,52.3708086],[13.0972707,52.370686],[13.097183,52.3706286],[13.0968802,52.3704396],[13.0967684,52.3703714],[13.0964522,52.3701744],[13.0963591,52.3701165],[13.0951083,52.3714813],[13.0954185,52.3716797],[13.0955167,52.371741],[13.0957261,52.371615],[13.095637,52.3715586],[13.0953303,52.3713507],[13.0952214,52.3712801],[13.094927,52.3711048],[13.0948316,52.3710443],[13.0946948,52.3712253],[13.0950069,52.3714187],[13.0974201,52.3700854],[13.094611,52.3711717],[13.094066,52.3714929]],"Untere Planitz":[[13.0484755,52.3922405]],Verkehrshof:bl,"Verlängerte Amtsstraße":[[13.024877,52.4242645],[13.024641,52.4240445],[13.0246255,52.4233422],[13.0247902,52.4239536],[13.0247748,52.4236358],[13.0226362,52.4250835],[13.0227544,52.4250676],[13.0228219,52.425256],[13.0229408,52.4252402],[13.0245188,52.4256439],[13.0239902,52.424056],[13.0242313,52.4230726],[13.0241043,52.4228402],[[13.0240763,52.4244323],[13.0241764,52.4244176],[13.0241281,52.4242952],[13.0240281,52.4243099],[13.0240763,52.4244323]],[13.0230794,52.4247012]],"Versailler Platz":[[13.0632482,52.395742],[13.0630476,52.3958564]],Viereckremise:Fl,Virchowstraße:[[13.1189254,52.3991693],[13.1211591,52.3970924],[13.1218158,52.3972001],[13.118013,52.3991768],[13.1193692,52.3988615],[13.1194946,52.3986296],[13.1200038,52.3976551],[13.1208104,52.3975893],[13.1135155,52.4019347],[13.1184337,52.3996883],[13.1156051,52.4013282],[13.1189202,52.3993611],[13.1167842,52.4005702],[13.1173067,52.4001635],[13.1179521,52.4001565],[13.1160883,52.4011461],[13.1147118,52.4016316],[13.1140988,52.4017786],[13.1151779,52.4016543],[13.1203589,52.3980696],[13.1167947,52.4008199],[13.1165167,52.4011876],[13.1170885,52.4004688],[13.1143742,52.4012812],[13.1133794,52.4014896],[13.1137528,52.4014885],[13.1155736,52.4008093],[13.116122,52.4004271],[13.1140843,52.4014242],[13.1158074,52.4006277],[13.1176843,52.3995369],[13.1171143,52.3997758],[13.1169098,52.4000895],[13.1191065,52.3983686],[13.1191295,52.3985973],[13.1189823,52.3987465],[13.1184425,52.3989029],[13.1198088,52.398019],[13.1149468,52.4012008],[13.1197982,52.3983638],[13.1191482,52.3989886],[13.1128771,52.4020084],[13.1151272,52.4008581],[13.1176676,52.3996629],[13.1176676,52.3996629],[13.1163667,52.4011105],[13.1194111,52.3982596],[13.1199372,52.3979044]],Vogelbeerenweg:Dl,Vogelsang:kl,Vogelweg:Ol,Vogelweide:Gl,Voltaireweg:Nl,Voltastraße:[[13.0900254,52.3916366],[13.0894842,52.3916409],[13.0897773,52.3913899],[13.0895675,52.391439]],"Von-Oppen-Weg":[[13.1283911,52.4853809],[13.1269749,52.4853621],[13.1256488,52.4855766],[13.1271327,52.4855723],[13.126857,52.484952],[13.1281791,52.4856681],[13.1276072,52.4854446],[13.1260436,52.485489],[13.1271507,52.4849196],[13.1274695,52.4852188],[13.1283874,52.4850046],[13.126184,52.4856991],[13.1283022,52.4847889],[13.1266346,52.4854714],[13.1269254,52.4858175],[13.1263452,52.4859068],[13.1285715,52.4855215],[13.1280422,52.4848064],[13.1279385,52.4849819],[13.1279136,52.4852668],[13.1280128,52.4854403],[13.1271009,52.4851815],[13.12725,52.485649],[13.1268074,52.4855712],[13.1257403,52.485357],[13.1262836,52.4849673],[13.126857,52.484952],[13.1264332,52.4850579],[13.1262023,52.4852094],[13.1259513,52.4852385],[13.1255947,52.4849068],[13.1256208,52.4851145],[13.125913,52.4857799],[13.1261677,52.4858845]],"Von-Stechow-Straße":[[13.0249896,52.4694041],[13.0231391,52.4689059],[13.0287534,52.4692145],[13.025895,52.4693551],[13.0282019,52.4691779],[13.0200368,52.4664706],[13.0213058,52.467205],[13.0229521,52.4687734],[13.0250755,52.4694024],[13.0251605,52.4694051],[13.0252454,52.4693991],[13.0253307,52.4693973],[13.0255587,52.4693872],[13.0256427,52.4693791],[13.0257282,52.4693755],[13.025811,52.469363],[13.0278628,52.4691552],[13.0279474,52.4691609],[13.0280316,52.4691712],[13.0281174,52.4691723],[13.0284145,52.4691919],[13.0284994,52.4691977],[13.0285836,52.469208],[13.0286688,52.4692089],[13.0208885,52.4675097],[13.0203411,52.4666973]],Wacholderstieg:zl,Wagnerstraße:[[13.1268932,52.3862013],[13.1264561,52.3862458],[13.126965,52.3861207],[13.1264561,52.3862458],[13.1268142,52.3861186],[13.1265017,52.3861265],[13.126885,52.386037],[13.126383,52.3861682],[13.1267361,52.3860369],[13.1264238,52.3860438],[13.127046,52.3863612],[13.1268106,52.3859591],[13.1264238,52.3860438],[13.1266647,52.3859621],[13.1262291,52.3860049],[13.1267386,52.3858837],[13.1261903,52.3859638],[13.1265868,52.3858806],[13.126309,52.3859221],[13.1266524,52.3857934],[13.1260587,52.3858167],[13.1267647,52.3864055],[13.1264168,52.3857101],[13.1261137,52.3857205],[13.1263142,52.3856045],[13.125889,52.3856502],[13.1259433,52.3855529],[13.1257238,52.3854808],[13.1257789,52.3853846],[13.1260751,52.3853619],[13.1255613,52.3853113],[13.1256164,52.3852151],[13.1259652,52.3852469],[13.1254052,52.385139],[13.125473,52.3850375],[13.1271207,52.3862837],[13.1258582,52.3851316],[13.1252367,52.3849721],[13.1252918,52.3848759],[13.1257466,52.3850143],[13.1250754,52.3847998],[13.1251305,52.3847036],[13.125631,52.3848971],[13.124961,52.3845357],[13.1255269,52.3847568],[13.1255865,52.3846584],[13.1248526,52.3844249],[13.1253189,52.3845648],[13.1246885,52.3842523],[13.1266098,52.3864088],[13.1252349,52.3844931],[13.1244166,52.3841158],[13.1244718,52.3840207],[13.1251228,52.3843665],[13.1243608,52.3839084],[13.1248993,52.3846338],[13.1250111,52.3842517],[13.1241933,52.3837354],[13.124892,52.3841318],[13.1240713,52.3836249],[13.1247853,52.3840115],[13.1239587,52.3835113],[13.1269715,52.3862833],[13.1246861,52.3839175],[13.123727,52.3834419],[13.1244857,52.3837167],[13.1238026,52.3833395],[13.1243716,52.3836023],[13.1242602,52.3834866],[13.1241394,52.3833714],[13.1265729,52.3863697],[13.1270449,52.3862044],[13.1264935,52.3862855],[13.1262961,52.3854417],[13.126652,52.386286],[13.1247472,52.3844627],[13.1245777,52.384292],[13.1242555,52.3839464]],Waldhornweg:Wl,Waldmüllerstraße:[[13.1017088,52.4089654],[13.1028633,52.40863],[13.1013303,52.4092277],[13.1005462,52.4094939],[13.102494,52.4087703],[13.1031107,52.4084175],[13.1020408,52.4089621],[13.104051,52.4083146],[13.099401,52.4098447],[13.0988619,52.4100665],[13.0997883,52.4097761],[13.0994337,52.4099605],[13.0990588,52.4099206],[13.1009808,52.4092915],[13.1022879,52.4086422],[13.0997385,52.4097258],[13.0993478,52.4098651],[13.1017088,52.4089654],[[13.0999157,52.4096601],[13.0997292,52.4094727],[13.0995522,52.4095383],[13.0996215,52.4096081],[13.0996475,52.4096336],[13.0997385,52.4097258],[13.0999157,52.4096601]],[13.1002985,52.4096123],[13.1005494,52.4094318],[13.1012035,52.4092161]],Waldstraße:[[13.0801008,52.3766655],[13.0797822,52.3765046],[13.0795062,52.3763727],[13.0797935,52.3760864],[13.0793063,52.3762834],[13.079126,52.3762029],[13.0789995,52.3761283],[13.0786237,52.3759718],[13.0810905,52.3770281],[13.0790944,52.3758445],[13.0819354,52.3774334],[13.0811957,52.3777935]],Waldweg:Bl,"Wall am Kiez":[[13.0497535,52.3936422],[13.0500973,52.3935991],[13.0484038,52.3951375],[13.0486568,52.3946555],[13.0502817,52.3935537],[13.0499032,52.3936025],[13.0496084,52.3940653],[13.0492207,52.3941036]],Walnussring:Kl,"Walter-Funcke-Straße":[[13.0426428,52.4182924],[13.0418125,52.4184452],[13.0423685,52.4181221],[13.0420743,52.4183969],[13.0421114,52.4181713],[13.0424141,52.4187943],[13.0424708,52.4190016],[13.0430608,52.418512],[13.0429977,52.4186829],[13.0427423,52.4187819],[13.0427551,52.4185988],[13.0423575,52.4187148],[13.0421127,52.4188022],[13.0404308,52.4184164],[13.0424574,52.4181064],[13.0421998,52.4181558],[13.042553,52.4183083],[13.0422966,52.4183556],[13.041984,52.4184133],[13.0417223,52.4184615]],"Walter-Klausch-Straße":[[13.0988787,52.3863146],[13.0998301,52.3871323],[13.0970822,52.3835194],[13.0973041,52.3833968],[13.097485,52.3832834],[13.0976636,52.3832589],[13.0979832,52.3831686],[13.0976733,52.385316],[13.0983535,52.3849427],[13.0985306,52.385282],[13.0988511,52.3851952],[13.0983616,52.3851211],[13.0975319,52.3842835],[13.0997914,52.3876648],[13.0996546,52.3874127],[13.099542,52.3871672]],Wannseestraße:[[13.1054668,52.4090824],[13.1062234,52.4092946],[13.1045851,52.4086384],[13.1076106,52.409546],[13.1103957,52.4095854],[13.1093632,52.4095535],[13.1084531,52.4094603],[13.1087192,52.4095909],[13.1077353,52.4096334],[13.110065,52.4095536],[13.1092527,52.4097801],[13.1081296,52.4095738],[13.1048357,52.4095668],[13.1052513,52.4096394],[13.1059702,52.4093406]],Wattstraße:[[13.0934602,52.3886355],[13.0945164,52.3907056],[13.0946346,52.3909048],[13.0942696,52.3902724],[13.0945242,52.3903879],[13.0946027,52.3901192],[13.093905,52.3896398],[13.0934893,52.3895041],[13.0932172,52.388673],[13.0932923,52.3888263],[13.0933437,52.3889313],[13.0931389,52.3885133],[13.0946945,52.3906667],[13.0945635,52.390785],[13.0936745,52.3898022],[13.0937347,52.3899126],[13.0941009,52.3905557],[13.09423,52.3907597],[13.0940499,52.3904654],[13.0936221,52.3897166],[13.0944932,52.3906665],[13.0939499,52.3897194],[13.0940079,52.3898224],[13.0933324,52.3883588]],Weberplatz:Xl,Weberstraße:[[13.0119759,52.4702159],[13.0135901,52.4711714],[13.0128576,52.470662],[13.0138861,52.4707935],[13.0132717,52.4708455],[13.0140385,52.4705406],[13.0138513,52.4704792],[13.0133998,52.470903],[13.0137283,52.4710563],[13.0125333,52.4705946],[13.0144233,52.4713303],[13.0131752,52.4708027],[13.012613,52.4707224],[13.013319,52.4710914],[13.0127661,52.4706215],[13.0138861,52.4707935],[13.0127805,52.4708023],[13.0142822,52.4705236],[13.0121007,52.4705242],[13.0122949,52.4706291],[13.0119321,52.4704206],[13.0125287,52.4704739],[13.0142042,52.471564],[13.0130568,52.4709493],[13.0137626,52.4707836],[13.0137052,52.4708392],[13.0143416,52.4705754],[13.0143964,52.4705144]],"Weg nach Bornim":[[12.9995929,52.4068232],[12.9994725,52.4073043],[12.9994102,52.4064824],[12.9998663,52.4079675]],Weidendamm:Vl,Weidenhof:Yl,Weinbergstraße:[[13.0454487,52.4033971],[13.0464081,52.4035192],[13.0467698,52.4035367],[13.047099,52.4036067],[13.0460304,52.4033251],[13.0462803,52.4034043],[13.0455061,52.4031165],[13.0456032,52.4031559],[13.0465068,52.4039415],[13.0463759,52.4036514],[13.0458578,52.4032443],[13.0451692,52.4029334],[13.0524796,52.4046364],[13.0513041,52.4047525],[13.051412,52.4046226],[13.0511638,52.4045749],[13.0485782,52.4042427],[13.0500538,52.4043011],[13.0492524,52.4042761],[13.0509436,52.4044493],[13.0507796,52.4043424],[13.0506054,52.4044354],[13.0497738,52.4042318],[13.0481678,52.4040227],[13.0478998,52.4039777],[13.0492724,52.4041235],[13.0494433,52.4043302],[13.0489179,52.4042939],[13.0497397,52.404215],[13.0500019,52.4044509],[13.0511065,52.4047247],[13.0489673,52.4040294],[13.0472441,52.4040099],[13.0468364,52.4035377],[13.0468688,52.404421],[13.0477395,52.4037693],[13.0476527,52.4041088],[13.0481721,52.4043678],[13.0477395,52.4037693],[13.0521654,52.4044804],[13.0520461,52.404645],[13.0473497,52.4045183],[13.0476535,52.403325],[13.050713,52.4047597],[13.0503465,52.4047731],[13.0468046,52.4031315],[13.0492925,52.4043046],[13.0470918,52.4040349],[13.0519115,52.4045048],[13.0520294,52.4045039],[13.0520707,52.4045954],[13.0521029,52.4046692],[13.0521029,52.4047243],[13.049365,52.4045043],[13.0493521,52.4045982],[13.0493574,52.4046398],[13.0493632,52.4046855],[13.0493696,52.4047359]],Weinmeisterstraße:[[12.9682173,52.4050714],[12.9680591,52.4054537],[12.9680591,52.4054537],[12.9673564,52.4038682],[12.967159,52.4038334],[12.9671004,52.4043851],[12.9672358,52.4045251],[12.9675116,52.4047235],[12.9677277,52.4044088],[12.9678865,52.4045976],[12.9676811,52.4050843],[12.9674177,52.4048732],[12.9684658,52.4050215],[12.9670733,52.4041587],[12.9676471,52.4052034]],Weinmeisterweg:Zl,Weißdornweg:[[12.9927419,52.4117044],[12.9928456,52.4117488],[12.9929492,52.4117931],[12.9930539,52.4118379],[12.9931101,52.4115067],[12.9931825,52.4115381],[12.9932548,52.4115695],[12.9933272,52.4116008],[12.9933996,52.4116322],[12.993472,52.4116636],[12.9890773,52.411934],[12.9914825,52.4106026],[12.9905645,52.4106137],[12.9908289,52.4106649],[12.991174,52.4107021],[12.9915803,52.4109653],[12.9916699,52.411101],[12.9899708,52.4111384],[12.9903457,52.4111723],[12.9922356,52.4111727],[12.9905452,52.4112098],[12.9917568,52.4112196],[12.9923764,52.4112297],[12.9919805,52.4113333],[12.9897881,52.4113584],[12.990189,52.4113539],[12.9899657,52.4115173],[12.9898439,52.4116536],[12.9900514,52.4109611]],Wendensteig:Hl,"Werderscher Damm":[[12.9973653,52.3985008],[13.0061264,52.3977801],[13.0097879,52.3961072],[13.0089723,52.3960459],[13.0089702,52.3963226],[[13.0050488,52.3980701],[13.0059802,52.3976189],[13.0069936,52.3972177],[13.007368,52.3971342],[13.0083759,52.3967331],[13.0085678,52.3965972],[13.0086081,52.3965103],[13.0085911,52.3963364]],[13.0088736,52.3960558]],"Werderscher Weg":[[13.0203593,52.3931015],[13.0198173,52.393107],[13.0208726,52.3931938],[13.0211194,52.3934803],[13.0194648,52.3916235],[13.0179887,52.3925546],[13.0185949,52.3919258],[13.0184691,52.3923626],[13.0161482,52.3923817],[13.0172397,52.392454],[13.0167565,52.3924102]],"Werner-Nerlich-Bogen":[[13.0141753,52.4238999],[13.0126242,52.4261779],[13.0134192,52.4236012],[13.0136144,52.4248858],[13.0132474,52.4251719],[13.0127644,52.4258401],[13.013147,52.4253429],[13.0130708,52.4249639],[13.0128665,52.4256743],[13.0127222,52.4259961],[13.0128301,52.4251093],[13.0124008,52.4256691],[13.0134307,52.4238217],[13.0123247,52.42582],[13.0125594,52.425257],[13.0121401,52.4265491],[13.0132199,52.4235085],[13.0138819,52.4241963],[13.0143478,52.4238473],[13.0146429,52.4239656],[13.0142422,52.4245508],[13.0135953,52.4250901],[13.015102,52.4237669],[13.0125956,52.4265753],[13.0149184,52.4242784],[13.0146844,52.4243711],[13.0140218,52.4243425],[13.0121709,52.4267264],[13.0152985,52.4241114],[13.0143561,52.4240241],[13.0144305,52.4244809],[13.0137755,52.4240665],[13.0125358,52.4269415],[13.0140948,52.4247006],[13.0125576,52.426755],[13.0126428,52.4253446],[13.0125686,52.4264996]],"Werner-Seelenbinder-Straße":[[13.0557258,52.3956441],[13.0556006,52.395693]],"Wetzlarer Straße":[[13.1207052,52.3819747],[13.1199549,52.3821462],[13.1209622,52.3819773],[13.1205398,52.3822148],[13.118166,52.3802877],[13.1221123,52.3830162],[13.1152405,52.3801272],[13.117014,52.3804976],[13.1156742,52.3818103],[13.1165794,52.3821146],[13.1158887,52.3822477],[13.1168717,52.3826878],[13.1167267,52.3824072],[13.1168988,52.3827401],[13.1184021,52.3817692],[13.1187491,52.3824412],[13.1184625,52.3824493],[13.1188246,52.3832655],[13.1189708,52.3825837],[13.1177795,52.3829337],[13.1175802,52.3825613],[13.117274,52.3818244],[13.1158389,52.3817085],[13.1164437,52.3814166],[13.1218345,52.3826219],[13.1153703,52.3810021],[13.1172386,52.3790091],[13.1162839,52.3811393],[13.1163156,52.3782089],[13.1178947,52.3817393],[13.1158438,52.3791629],[13.1156802,52.3788436],[13.1221351,52.3829543],[13.116981,52.3814276],[13.1153884,52.3788095],[13.1152834,52.37883],[13.1150211,52.3788813],[13.1149155,52.3789019],[13.1148128,52.378922],[13.1146957,52.3789448],[13.1185421,52.3827411],[13.1185421,52.3831651],[13.1195131,52.3825332],[13.1153127,52.3794012],[13.1151399,52.378858],[13.1152046,52.3794225],[13.1155984,52.3793452],[13.1154721,52.3793699],[13.1150735,52.3794482],[13.114958,52.3794709],[13.1148502,52.3792588],[13.1149735,52.3792346],[13.1150876,52.3792122],[13.1152206,52.379186],[13.1153721,52.3791563],[13.1155251,52.3791263],[13.1154796,52.3790253],[13.1153557,52.3790495],[13.1152284,52.3790743],[13.1150652,52.3791062],[13.1149234,52.3791339],[13.1147903,52.3791599],[13.1160151,52.3787416],[13.1162301,52.379172],[13.116196,52.3791037],[13.1161466,52.3790048],[13.1161005,52.3789126],[13.1160547,52.3788208],[13.1157272,52.3789353],[13.1157686,52.3790161],[13.1158032,52.3790836],[13.1158793,52.3792351],[13.1174015,52.3822011],[13.118655,52.3797716],[13.1192941,52.3826777]],Wichgrafstraße:[[13.0997117,52.3937206],[13.0988717,52.3941291],[13.1000268,52.393958],[13.0978616,52.3937032],[13.0982195,52.393747],[13.0991909,52.3938638],[13.0996626,52.3939987],[13.0964931,52.3935718],[13.0980276,52.3937225],[13.0990615,52.393958],[13.0971754,52.3936353],[13.0991909,52.3938638],[13.0987734,52.3938278],[13.0962576,52.3933439],[13.0977998,52.3934957],[13.0992622,52.393671],[13.0981759,52.3935366],[13.0990575,52.3935351],[13.0989242,52.3933721],[13.0988401,52.3936244],[13.0989553,52.3936368],[13.0972495,52.3934585],[13.0966566,52.3933108],[13.0985533,52.3935954],[13.0973997,52.3933727],[13.0996861,52.3939188],[13.0966365,52.3933831],[13.1004535,52.3940024],[13.1008586,52.394181],[13.0980488,52.3940948],[13.0986822,52.3942372],[13.0994326,52.3936873],[13.0987817,52.394227],[13.0994326,52.3936873],[13.0983332,52.3937589],[13.0990153,52.3933817],[13.0973633,52.3936494],[13.0970353,52.3934353],[13.0974876,52.3936642],[13.0971739,52.3934503]],Wielandstraße:[[13.0354862,52.3899867],[13.0357574,52.3914969],[13.0359265,52.3913967],[13.03608,52.3912877],[13.036228,52.3911758],[13.036365,52.3910589],[13.0379062,52.3906244],[13.0381467,52.3906419],[13.0383873,52.3906594],[13.0386279,52.3906769],[13.0363945,52.3905109],[13.0366371,52.3905276],[13.0368797,52.3905443],[13.0371223,52.390561],[13.0363514,52.3907901],[13.0365992,52.3908067],[13.036843,52.390823],[13.0370914,52.3908396],[13.037837,52.3909212],[13.0380786,52.3909361],[13.0383205,52.3909511],[13.0385666,52.3909664],[13.0389924,52.3901272],[13.0390967,52.3900303],[13.0394143,52.3899671],[13.0395966,52.3900076]],Wieselkiez:Ul,Wiesenhof:jl,Wiesenstraße:[[13.0774663,52.3924241],[13.078092,52.3921311],[13.076869,52.3925163],[13.0771101,52.3924772],[13.0797064,52.3918985],[13.0801047,52.3921613],[13.0759753,52.3933009],[13.0765517,52.3937965],[13.0761221,52.3934271],[13.0762678,52.3935524],[13.0764088,52.3936736],[13.0766011,52.3930517],[13.0767539,52.3931863],[13.0768953,52.3933109],[13.0770044,52.393407],[13.0771218,52.3935104],[13.0772113,52.3928035],[13.0773273,52.3929017],[13.0774446,52.3930018],[13.0775905,52.3931279],[13.077736,52.3932547],[13.0797618,52.3927944],[13.0796795,52.3927212],[13.0803994,52.39236],[13.0805045,52.3924402]],Wildapfelweg:ql,Wildbirnenweg:$l,Wildeberstraße:[[13.1385975,52.3767774],[13.138035,52.3764105],[13.137315,52.3764807],[13.1372286,52.3769684],[13.1371059,52.3763711],[13.1414107,52.3783087],[13.1376086,52.3768223],[13.1383564,52.3765753],[13.1415794,52.3783943],[13.1422985,52.3784173],[13.1385649,52.3772775],[13.1416667,52.3790983],[13.1383736,52.3771666],[13.1368968,52.3767665],[13.1418573,52.3791712],[13.1366946,52.3766458],[13.1381792,52.3770665],[13.1379847,52.3769567],[13.1387494,52.3769147],[13.1414529,52.3790477],[13.1372281,52.3758883],[13.137963,52.3758728],[13.1381531,52.3759763],[13.1384903,52.3762543],[13.1374269,52.3767047],[13.1370683,52.3759093],[13.1378153,52.3758575],[13.1388157,52.376584],[13.1389555,52.3761425],[13.1389378,52.3763613],[13.1407877,52.3788971],[13.1398408,52.3784091],[13.1406726,52.3784134],[13.139602,52.3783058],[13.1400871,52.3785649],[13.14114,52.3786681],[13.140564,52.3788046],[13.1403357,52.3786659],[13.139906,52.3780574],[13.1408841,52.378554],[13.1401985,52.3781671],[13.1404128,52.3783077],[13.1416872,52.3799385],[13.1414539,52.3789634],[13.1412663,52.378811],[13.1408945,52.3790908],[13.1423472,52.3788502],[13.142685,52.3787613],[13.1411844,52.3791407],[13.1420171,52.3793684],[13.1373829,52.37707],[13.1420271,52.3781874],[13.1423153,52.3796091],[13.1412829,52.3795801],[13.1360247,52.3763256],[13.1372474,52.3761471],[13.1366781,52.3763808],[13.1375333,52.3762996]],Wildkirschenweg:Jl,"Wilhelm-Leuschner-Straße":[[13.0993445,52.4114029],[13.0992399,52.4120083],[13.0988702,52.4127048],[13.0993037,52.4121585],[13.0999153,52.4121527],[13.0995098,52.4115742],[13.0986143,52.4126251],[13.1002295,52.4127765],[13.0994639,52.412394],[13.1001154,52.4126699],[13.0982455,52.4127374],[13.0985289,52.4128553],[13.1000124,52.412364],[13.0990913,52.4130541],[13.0994275,52.4111204],[13.0987645,52.4115033],[13.0994352,52.4116867],[13.0988346,52.411693],[13.0987899,52.4115452],[13.0990039,52.4118638],[13.100155,52.4128831],[13.1001648,52.4128073]],"Wilhelm-Staab-Straße":[[13.0562573,52.3982018],[13.0564581,52.3982995],[13.0562949,52.398319],[13.0563376,52.3984523],[13.0558728,52.398345],[13.0559651,52.3986261],[13.0559814,52.3987384],[13.056452,52.3988039],[13.056452,52.3988039],[13.0564925,52.3989286],[13.0565738,52.3991788],[13.0566149,52.3993054],[13.0566505,52.3994147],[13.0561699,52.399315],[13.0562866,52.3991472],[13.0561902,52.3988502],[13.0560247,52.3988705],[13.0555474,52.3980249],[13.0560701,52.3984839],[13.0557483,52.3987669],[13.0559475,52.3989202],[13.0560459,52.3990224],[13.0560128,52.398834],[13.0559814,52.3987384],[13.0558725,52.3978817],[13.0561413,52.3988908],[13.0561739,52.3989753],[13.0561581,52.3987523],[13.0558725,52.3978817],[13.055956,52.398138],[13.056372,52.3994091]],"Willi-Schiller-Weg":[[13.1415577,52.3671419],[13.1417208,52.3670445],[13.1420243,52.3672038],[13.1418854,52.3671161],[13.1410663,52.3674351],[13.1412301,52.3673373],[13.1421631,52.3672915],[13.1409486,52.3665362],[13.1409156,52.3671335],[13.1410793,52.367037],[13.1407906,52.3664365],[13.1407721,52.3672251],[13.1412646,52.3667356],[13.1411066,52.3666359],[13.1412429,52.3669406]],"Willy-A.-Kleinau-Weg":[[13.1392315,52.3674363],[13.1387819,52.3671482],[13.139295,52.3666876],[13.1389318,52.3672442],[13.1391351,52.3667802],[13.1390816,52.3673403],[13.1389744,52.366875],[13.1388135,52.3669692],[13.1392381,52.3678821],[13.1390852,52.3677854],[13.1389377,52.3676986],[13.1387888,52.3676012],[13.138648,52.367507],[13.1384897,52.3674161],[13.1383476,52.3673228]],Windmühlenweg:[],Winkelhof:Ql,"Wolfgang-Staudte-Straße":[[13.1414794,52.3680746],[13.1416307,52.3681699],[13.1417158,52.3678383],[13.1412052,52.3675224],[13.1418399,52.3679168],[13.1413547,52.3676155],[13.141964,52.3679953],[13.1415042,52.3677087],[13.1406421,52.3670652],[13.1401942,52.3673346],[13.1405136,52.3669843],[13.1400379,52.3672336],[13.1403913,52.3669074],[13.1398927,52.3671397],[13.1401793,52.366774],[13.139683,52.3670041],[13.1400354,52.3666834],[13.1395666,52.3669277],[13.1398964,52.366596],[13.1394458,52.3668507],[13.1410539,52.3678358],[13.1409265,52.3677629],[13.1411826,52.3679103]],Wollestraße:[[13.0901367,52.3984771],[13.0901195,52.3992141],[13.089817,52.3981495],[13.0891119,52.3985243],[13.0894855,52.3983562],[13.0895207,52.3992593],[13.0889787,52.3990822],[13.088596,52.3988163],[13.0898926,52.3986823],[13.089967,52.3987409],[13.0906053,52.3988556],[13.0907355,52.3989556],[13.0872142,52.3966744],[13.0872157,52.3965171],[13.0878024,52.3965972],[13.0874491,52.3964809],[13.0875758,52.3964172],[13.0862387,52.3957885],[13.0868476,52.3958291],[13.0861869,52.3955499],[13.0858403,52.3954883],[13.0860124,52.3956172],[13.0863859,52.3957009],[13.0865588,52.3958223],[13.0863056,52.39564],[13.0871251,52.3964472],[13.0869866,52.3963395],[13.0868728,52.3962525],[13.0868042,52.3962015],[13.0865678,52.3960366],[13.086455,52.3959572],[13.086263,52.3959592],[13.0868187,52.3960205],[13.0874538,52.3963243],[13.0873512,52.3962464],[13.0872024,52.3961335],[13.0890414,52.3979132],[13.0890414,52.3979132],[13.087689,52.3968832],[13.0895278,52.3978835],[13.0873324,52.3967641],[13.0886657,52.3978627],[13.0879942,52.3972733],[13.0880178,52.3971201],[13.0885416,52.3973204],[13.0885794,52.3971868],[13.0878043,52.3969708],[13.0877678,52.3971066],[13.087941,52.3967024],[13.0884667,52.3971014],[13.0883306,52.3969985],[13.0880746,52.3968038],[13.0881641,52.3968726],[13.088717,52.3976419],[13.0886105,52.397561],[13.088495,52.3974734],[13.088371,52.3973793],[13.0891673,52.3975721],[13.089422,52.3978026],[13.0893204,52.397726],[13.0890763,52.3980886],[13.0860124,52.3956172],[13.0860894,52.3956756],[13.0869677,52.3959474],[13.0875614,52.3967864],[13.0881312,52.3972063],[13.0904954,52.3992265],[13.0907004,52.3993806],[13.0900095,52.3985381],[13.0903586,52.3988183],[13.0895015,52.3980372],[13.0888849,52.3974872],[13.0886449,52.397353],[13.0914524,52.3990868]],Wublitzstraße:[[12.9535515,52.4323076],[12.9547987,52.4322552],[12.9543657,52.4325704],[12.9542631,52.4326356],[12.9573583,52.4320299],[12.9553593,52.4319532],[12.9569686,52.4320334],[12.9559885,52.4321535],[12.9540858,52.4326086],[12.9542944,52.4320906],[12.9541242,52.4326958],[12.9529524,52.4328836],[12.9600781,52.4313079],[12.9601827,52.4312927],[12.9654729,52.4305678],[12.9550004,52.431995],[12.956547,52.4320527]],Yorckstraße:[[13.0576216,52.3971014],[13.0566972,52.3972167],[13.0571582,52.3971591],[13.0551112,52.3974098],[13.0573776,52.3971091],[13.0569259,52.3971644],[13.0571944,52.3971316],[13.0560975,52.3972916],[13.055467,52.3973732],[13.0557963,52.3973286],[13.0548735,52.3974381],[13.0553283,52.3977963],[13.0557072,52.39775],[13.0562864,52.3976744],[13.0566082,52.3976355],[13.0572012,52.3975638],[13.0566683,52.3971712],[13.0550591,52.3978291],[13.0548735,52.3978519],[13.0547023,52.3978729],[13.0546285,52.3978819],[13.0543937,52.3979106],[13.0541999,52.3979343],[13.053976,52.3979561],[13.0537493,52.3979906],[13.0535744,52.398012],[13.0569118,52.3971357]],Zaunkönigweg:[[12.9819374,52.4132309],[12.9814006,52.4132876],[12.9814895,52.4128133],[12.9817227,52.4127287],[12.9820673,52.4127157],[12.9819949,52.4129784],[12.9816677,52.4129023],[12.9816154,52.4131273],[12.9819879,52.4133699],[12.9817146,52.4133097]],Zeppelinstraße:[[13.0385334,52.3941978],[13.0252484,52.3879453],[13.0252021,52.3871905],[13.0254172,52.3870437],[13.0249154,52.3883433],[13.0254086,52.3883997],[13.0252301,52.386755],[13.031531,52.3921896],[13.0326367,52.3923019],[13.0317426,52.3912576],[13.0311473,52.3906774],[13.0319734,52.3908781],[13.0328938,52.3915434],[13.0316065,52.3904449],[13.0169777,52.381265],[13.0350574,52.3921387],[13.0347964,52.3921459],[13.0346011,52.392041],[13.0347751,52.392553],[13.0345738,52.3924461],[13.0343751,52.3923379],[13.0341263,52.392049],[13.0341263,52.392049],[13.0339341,52.3919419],[13.0325912,52.391391],[13.0322281,52.3910193],[13.032101,52.3911048],[13.0326259,52.3912394],[13.0308112,52.3905461],[13.0290242,52.3891708],[13.0290999,52.3893742],[13.0293309,52.3895267],[13.0295643,52.3896814],[13.0341229,52.3898757],[13.0333065,52.3923711],[13.0344953,52.3922557],[13.0337872,52.3924945],[13.033635,52.3925993],[13.0330601,52.3925993],[13.0335265,52.392457],[13.0335885,52.3922509],[13.0335885,52.3922509],[13.0332645,52.3925568],[13.0464975,52.3985756],[13.0457457,52.3977813],[13.0452995,52.397554],[13.0447341,52.397171],[13.0446817,52.3967714],[13.0448943,52.3972915],[13.0454354,52.3976348],[13.0438678,52.3961368],[13.0432216,52.3962395],[13.0426463,52.3959736],[13.0427532,52.3960309],[13.0420782,52.3956459],[13.0410298,52.3949201],[13.040646,52.3953026],[13.0412889,52.3952443],[13.0416176,52.3953737],[13.0418589,52.3955694],[13.0228796,52.384691],[13.0252129,52.3880571],[13.0213933,52.3835734],[13.039389,52.3945238],[13.0395256,52.3947297],[13.0405742,52.394789],[13.0403344,52.3948731],[13.0374794,52.3936243],[13.0376655,52.3937265],[13.0378454,52.3938228],[13.0374265,52.3935136],[13.039721,52.3952525],[13.0400857,52.3954686],[13.0410642,52.3959989],[13.0410642,52.3959989],[13.0415874,52.3961454],[13.0417516,52.3962341],[13.0402063,52.39569],[13.0416412,52.396309],[13.0420455,52.3963929],[13.0421627,52.3965791],[13.0424051,52.3967432],[13.0424051,52.3967432],[13.0368121,52.3932728],[13.0359906,52.3928454],[13.0365515,52.3935408],[13.0362607,52.3933746],[13.0361559,52.3931637],[13.0376444,52.3941083],[13.0378285,52.3942019],[13.0380361,52.3943095],[13.0381357,52.3944157],[13.0382435,52.3942859],[13.0371942,52.3938623],[13.0370207,52.3936342],[13.0431309,52.3971887],[13.043395,52.3973156],[13.0449194,52.3981212],[13.0463764,52.3989591],[13.0460246,52.3988914],[13.0431009,52.3976804],[13.0218841,52.3844446],[13.0215094,52.3841902],[13.0251593,52.3874242],[13.0251298,52.3875592],[13.0214767,52.3840941],[13.0212995,52.3839795],[13.0211223,52.3838649],[13.0209445,52.3837499],[13.0207674,52.3836353],[13.0205906,52.383521],[13.0204133,52.3834064],[13.0202361,52.3832918],[13.0200589,52.3831771],[13.0198817,52.3830626],[13.019418,52.3828832],[13.0182647,52.3822359],[13.0183747,52.3821831],[13.0186238,52.3823511],[13.0187997,52.3824618],[13.0189791,52.3825783],[13.019158,52.382697],[13.0222355,52.3846723],[13.0247536,52.3863546],[13.0223923,52.3847772],[13.0239776,52.3858291],[13.0249203,52.3886943],[13.025321,52.3886033],[13.0245312,52.3862038],[13.0252962,52.3887268],[13.0243107,52.3860521],[13.0249478,52.388567],[13.0206452,52.3831202],[13.0205147,52.3821921],[13.0219328,52.3816154],[13.027731,52.3877796],[13.0389894,52.3943024],[13.0395139,52.3945918],[13.03967,52.3944851],[13.0397011,52.3943104],[13.0394994,52.3942006],[13.0389894,52.3943024],[13.0391438,52.3941969],[13.017185,52.3813912],[13.0173507,52.3815027],[13.0175163,52.3816142],[13.0176819,52.3817257],[13.0178476,52.3818372],[13.0180132,52.3819487],[13.0285624,52.3879645],[13.0283381,52.3878198],[13.030018,52.3881946],[13.0308265,52.3900172],[13.0293428,52.3888031],[13.0406587,52.3961132],[13.0432399,52.3970691],[13.0221472,52.3829384],[13.022463,52.3831427],[13.0249395,52.3871186],[13.0219816,52.3839568],[13.0233934,52.384048],[13.0228993,52.3835219],[13.035429,52.393126],[13.024411,52.3843254],[13.0252398,52.3843098],[13.0219834,52.3840728],[13.0220473,52.3841152],[13.0221112,52.3841575],[13.0221751,52.3841999],[13.02246,52.3837761],[13.0225317,52.3838094],[13.022675,52.3838759],[13.0226034,52.3838426],[13.0230338,52.3841606],[13.0229871,52.3841956],[13.0229405,52.3842305],[13.0228938,52.3842655],[13.0228471,52.3843005],[13.0225284,52.384395],[13.0225794,52.3844319],[13.0224773,52.384358],[13.0344566,52.3919711],[13.0439923,52.3974736],[13.0222302,52.3829925],[13.0225455,52.383194],[13.0438698,52.3975633],[13.023749,52.3840596],[13.0232924,52.3843883],[13.0235236,52.3842182],[13.0178554,52.3811763],[13.0216415,52.3820394],[13.0151056,52.3792915],[13.0313619,52.3911964],[13.0336551,52.3908242],[13.0365885,52.3934598],[13.0390513,52.3947399],[13.0406049,52.395238],[13.024236,52.3854961],[13.0238549,52.3852446],[13.0382211,52.3939244],[13.0361936,52.3928731],[13.0307522,52.3898558],[13.0421098,52.3964276],[13.0421377,52.3964427],[13.0295917,52.389092],[13.029162,52.3887155],[13.0442311,52.3977775],[13.044612,52.3979871],[13.0441158,52.3977122],[13.0444833,52.3979183],[13.0381005,52.3933441],[13.0378559,52.3941305],[13.0378008,52.3941049],[13.0343221,52.3921596],[13.0462995,52.3987217],[13.0348971,52.392168],[13.0335494,52.3904697],[13.0338452,52.3901237],[13.0447395,52.3970216],[13.033059,52.3905701],[13.0329453,52.3906358],[13.0331307,52.3905083],[13.0329488,52.3906987],[13.0454146,52.3982365],[13.045983,52.398551],[13.0457924,52.3984571],[13.0456011,52.3983496],[13.0465583,52.3988756],[13.0355204,52.3931932],[13.0202977,52.3827114],[13.0204633,52.3826176],[13.0208747,52.3824667],[13.0206976,52.3825645],[13.0448818,52.398011],[13.0461165,52.3986524],[13.032783,52.3914254],[13.0330441,52.3915539],[13.0217176,52.3826416]],Zimmerstraße:[[13.045515,52.3990749],[13.0450843,52.3990073],[13.0448881,52.3988832],[13.0448966,52.3988355],[13.0449762,52.3986889],[13.0438777,52.3988116],[13.0440929,52.3985741],[13.0453213,52.3991317],[13.0438118,52.3988923],[13.0427361,52.3989993],[13.0430107,52.3988772],[13.042714,52.3987685],[13.0423805,52.398751],[13.0448881,52.3988832],[13.0430245,52.3987932],[13.0428395,52.3987947],[13.0421786,52.398743],[13.044139,52.3988284],[13.044312,52.3988529],[13.0460391,52.3992454],[13.041567,52.3987428],[13.0455686,52.3990594]],Ziolkowskistraße:[[13.1319996,52.3783156],[13.1329452,52.3787972],[13.1334745,52.3783332],[13.1320583,52.3785063],[13.1318563,52.3778419],[13.1365857,52.3780543],[13.1414282,52.3767214],[13.1432367,52.3768539],[13.1430487,52.3769001],[13.1428607,52.3769462],[13.1426728,52.3769924],[13.1424848,52.3770386],[13.1422968,52.3770848],[13.1421088,52.3771309],[13.1419208,52.3771771],[13.1413629,52.3773171],[13.1411674,52.3773595],[13.1409719,52.3774018],[13.1407765,52.3774441],[13.1405505,52.377512],[13.140358,52.3775572],[13.1401655,52.3776025],[13.139973,52.3776477],[13.1368138,52.3784117],[13.1369942,52.3783674],[13.1371747,52.378323],[13.1373551,52.3782787],[13.1375356,52.3782344],[13.1381685,52.3780866],[13.1378138,52.3781742],[13.1379911,52.3781304],[13.1383459,52.3780428],[13.1385233,52.377999],[13.1388208,52.3779227],[13.139003,52.3778805],[13.1391852,52.3778383],[13.1393674,52.3777961],[13.1395497,52.377754]],"Zu den drei Mohren":[[13.0321203,52.4513253]],"Zum Bahnhof Pirschheide":[[13.0106684,52.3735584],[13.0110172,52.3736307],[13.0100907,52.3741898],[13.0110965,52.3736704],[13.0113664,52.3735529],[13.0088928,52.3746554]],"Zum Bahnübergang":[],"Zum Düsteren Teich":[[13.0089419,52.408087],[13.0086611,52.4075634],[13.0093983,52.4078419],[13.0098069,52.4075764],[13.0084972,52.4072607],[13.0104711,52.4070016],[13.0101638,52.4073005],[13.0090363,52.4073324],[13.0092435,52.4072264],[13.0097479,52.4073533],[13.0102394,52.4071449],[13.0085378,52.4080607],[13.0093808,52.407612],[13.0105605,52.4068495],[13.0091367,52.4079535],[13.0099065,52.4076268],[13.0100061,52.4076773],[13.0103783,52.4073894],[13.0106978,52.4070787],[13.0105844,52.4070401],[13.010271,52.407345],[13.0094898,52.4078979],[13.0095812,52.407954],[13.0090249,52.4081484]],"Zum Exerzierhaus":[[13.0573442,52.4282877],[13.0569392,52.4278312],[13.0573409,52.4285692],[13.0566588,52.4281847],[13.0568433,52.4285174],[13.0571169,52.4285795],[13.0573455,52.4280253],[13.0557098,52.4284753],[13.0561564,52.4285684],[13.0564045,52.428481],[13.0566901,52.4273629],[13.0568833,52.4273645],[13.0571283,52.4273679],[13.0575038,52.4274044],[13.055714,52.4274356],[13.05594,52.4274348],[13.0564905,52.4273596],[13.0566363,52.4276251],[13.0568242,52.4276218],[13.0570073,52.4276244],[13.0572065,52.427618],[13.0574309,52.4276723],[13.057508,52.4276716],[13.0563413,52.4276282],[13.0565282,52.4276282],[13.0566773,52.4278431],[13.056678,52.4279167]],"Zum Großen Herzberg":[[12.9827896,52.4131429],[12.9829879,52.4135491],[12.9826263,52.4128692],[12.9823021,52.4135106],[12.9822904,52.4130875],[12.9821714,52.4129621],[12.9820624,52.4145314],[12.9820172,52.4147904],[12.9819298,52.4147927],[12.9815977,52.414851],[12.9815961,52.4149043],[12.981639,52.4146174],[12.9816406,52.4145641],[12.9820659,52.4145847],[12.9824193,52.4145241],[12.9824158,52.4144708],[12.9824635,52.4148329],[12.98246,52.4147796],[12.982901,52.4133138]],"Zum Heizwerk":[[13.1035376,52.3600813],[13.1091058,52.3637409],[13.1104379,52.366626],[13.104229,52.3604189],[13.1049705,52.3613662],[13.1053682,52.3638947],[13.1105936,52.3663995],[13.1120761,52.3668108],[13.1056505,52.3589985],[13.1050927,52.3591965],[13.1049407,52.3612144],[13.1102245,52.3641022],[13.109058,52.3645296],[13.1102673,52.3666541],[13.1121308,52.3670604],[13.10858,52.3639927]],"Zum Jagenstein":[[13.0886942,52.3650743],[13.0883124,52.3681208],[13.0875834,52.3688747],[13.0888873,52.3665292],[13.0921,52.3647],[13.0885451,52.3670035],[13.0884596,52.3671178],[13.0882144,52.3674457],[13.0882863,52.3673496],[13.0883764,52.3672291],[13.0889578,52.3673326],[13.0888291,52.3675041],[13.0888942,52.3674173],[13.0890932,52.3671366],[13.0891702,52.3670339],[13.089247,52.3669313],[13.089312,52.3668447],[13.0918765,52.3658476],[13.0916999,52.3658],[13.0915521,52.3657601],[13.0913842,52.3657149],[13.0910535,52.3656205],[13.0908957,52.3655772],[13.0907253,52.3655305],[13.0905501,52.3654824],[13.090379,52.3654356],[13.0874219,52.3682941],[13.0873101,52.3678482],[13.0883282,52.368317],[13.0875456,52.3690345],[13.0887325,52.3685551],[13.0883327,52.3692003],[13.0879994,52.3696478],[13.0887152,52.3688801],[13.087012,52.3688663],[13.086868,52.3690272],[13.0866113,52.3686364],[13.0862886,52.3689337],[13.0862951,52.368632],[13.086131,52.3688156],[13.0882201,52.3683304],[13.088185,52.3683792],[13.088611,52.3679231],[13.0882593,52.3682758],[13.088371,52.3682573],[13.0882973,52.3682228],[13.0884104,52.3682025],[13.0883411,52.3681619],[13.0884995,52.3680785],[13.0884592,52.3681345],[13.0883829,52.3681037],[13.0884204,52.3680514],[13.0884951,52.3679475],[13.0885365,52.3680269],[13.0884618,52.3679938],[13.0885734,52.3679755],[13.0875185,52.3690654],[13.0875712,52.3690052],[13.087592,52.3689815],[13.0876163,52.3689539],[13.0876374,52.3689298],[13.0876602,52.3689038],[13.0876882,52.3688719],[13.0877163,52.3688398],[13.0877455,52.3688065],[13.0877735,52.3687746],[13.0878031,52.3687408],[13.0876867,52.368816],[13.0883163,52.3681879],[13.0883874,52.3682293],[13.0885175,52.3679083],[13.0882895,52.3683709]],"Zum Kahleberg":[[13.0848774,52.3677133],[13.0886601,52.3663169],[13.089181,52.3686628],[13.086291,52.3678205],[13.0862783,52.3679486],[13.0862663,52.3680702],[13.0862544,52.3681903],[13.0856633,52.3675772],[13.0856488,52.3677243],[13.0856352,52.3678622],[13.0856204,52.3680125],[13.0856069,52.3681491],[13.0863029,52.3677004],[13.0843601,52.3671465],[13.0843726,52.3670192],[13.0843839,52.3669038],[13.0843947,52.3667938],[13.0844048,52.3666908],[13.0844289,52.366471],[13.0844388,52.3663705],[13.0844511,52.3662444],[13.0844629,52.3661238],[13.0844729,52.366022],[13.0853687,52.366584],[13.0853821,52.3664517],[13.0853954,52.3663218],[13.0854075,52.3662028],[13.0854199,52.3660806],[13.0853428,52.3667952],[13.0853296,52.366925],[13.0853166,52.3670529],[13.085304,52.3671762],[13.0858198,52.3672013],[13.0858311,52.3670801],[13.0858408,52.3669757],[13.0858521,52.3668545],[13.0858633,52.3667344],[13.0858881,52.3665379],[13.085899,52.3664211],[13.0859092,52.3663122],[13.0859208,52.3661878],[13.0859316,52.3660722],[13.0873072,52.366791],[13.0872974,52.3669135],[13.0872884,52.367025],[13.0872796,52.367134],[13.0872704,52.367248],[13.0868877,52.3661022],[13.0868736,52.3662424],[13.0868623,52.3663551],[13.0868483,52.3664942],[13.0868348,52.3666284],[13.0868002,52.3668497],[13.0867884,52.3669675],[13.0867739,52.3671114],[13.0867621,52.3672292],[13.0901165,52.3680556],[13.0899457,52.3680089],[13.0897707,52.367961],[13.0895788,52.3679086],[13.0894342,52.367869],[13.0890141,52.3677529],[13.0888518,52.3677085],[13.0890167,52.3681828],[13.0874723,52.3663282],[13.0885279,52.3663029]],"Zum Kirchsteigfeld":[[13.1288388,52.3693876],[13.1306399,52.3711699],[13.1278213,52.3706015],[13.1276949,52.370035],[13.1293627,52.369457],[13.1300549,52.3699458]],"Zum Kurzen Feld":[[13.0274583,52.4177613],[13.0276129,52.4177281],[13.0278009,52.4176836],[13.0278697,52.4176686],[13.0279355,52.4176543],[13.0278132,52.4179364],[13.0286438,52.4177531],[13.0290237,52.4175863],[13.0290524,52.417634],[13.0290815,52.4176834],[13.0291088,52.4177294],[13.028174,52.4176027],[13.0283582,52.4175629],[13.028509,52.4175296],[13.0285815,52.4175138],[13.0277215,52.4179563],[13.0280037,52.4178939],[13.028022,52.4176355],[13.0280954,52.4176196],[13.0287369,52.4174802],[13.0280833,52.4178764],[13.0282887,52.4178332],[13.0272338,52.4178092],[13.0273096,52.4177931],[13.0273847,52.4177769],[13.0275348,52.4177448],[13.0286574,52.4174973],[13.0283696,52.4178156],[13.0284349,52.4175459]],"Zum Lausebusch":[[13.0256329,52.4191553],[13.0256101,52.418876],[13.025582,52.4188267],[13.0259418,52.4190846],[13.025323,52.419166],[13.0260254,52.4190658],[13.0259848,52.4187938],[13.0259605,52.4187498],[13.0262799,52.4190069],[13.0263597,52.4189893],[13.0265849,52.4189407],[13.0266619,52.4189233],[13.0266556,52.4186477],[13.0266266,52.4186002],[13.0269676,52.4188552],[13.0253056,52.4191372],[13.0270458,52.4188373],[13.0270303,52.418563],[13.0270032,52.418515],[13.0252631,52.4190678],[13.025245,52.4190377],[13.0293339,52.4183104],[13.0288272,52.4184117],[13.0295856,52.418253],[13.0279934,52.4185891],[13.0282403,52.4185166],[13.0283047,52.4185021],[13.0285681,52.418459],[13.0287635,52.4184261],[13.0290093,52.4183748],[13.0290748,52.4183602],[13.0292601,52.4183268],[13.0295248,52.4182667],[13.0284942,52.4184757]],"Zum Mühlenteich":[[12.96683,52.4114852],[12.9674091,52.4114228]],"Zum Reiherstand":[[13.0275248,52.4186921],[13.0273774,52.4184343],[13.027446,52.4185513],[13.0274726,52.4185989],[13.0274994,52.418647],[13.027719,52.4183122],[13.0277443,52.4183523],[13.0278513,52.4185326]],"Zum Storchennest":[[13.0191008,52.4671223],[13.0183039,52.467085],[13.0177798,52.4668926],[13.0179617,52.467294],[13.0173624,52.4668568],[13.017036,52.4669858],[13.0178957,52.4673854],[13.0174248,52.4670771],[13.0173218,52.4671575],[13.0176888,52.4672],[13.0175964,52.4672821]],"Zum Teich":[[13.1338081,52.3620314],[13.1328494,52.3620091],[13.1317549,52.3619956],[13.1312042,52.361995],[13.1307966,52.3618493],[13.1305021,52.3617788],[13.130096,52.361774],[13.1296271,52.3617609]],"Zum Teufelssee":[[13.0904743,52.360923],[13.0911638,52.3613579],[13.0915938,52.3627114],[13.0927494,52.360501],[13.0915391,52.3602637],[13.0913438,52.3602093],[13.0917399,52.358715],[13.0918211,52.3586062],[13.0919035,52.358496],[13.0919874,52.3583838],[13.094533,52.3611098],[13.0943438,52.3610576],[13.094174,52.3610108],[13.0940028,52.3609636],[13.093664,52.3608692],[13.0934928,52.3608234],[13.0923933,52.3605052],[13.0922404,52.3604635],[13.0920311,52.3604064],[13.0918586,52.3603593],[13.0912955,52.3600118],[13.0913689,52.3599103],[13.091435,52.359819],[13.0915225,52.3596981],[13.0915958,52.3595967],[13.0912682,52.3593619],[13.0913472,52.3592541],[13.0914192,52.3591558],[13.0914992,52.3590466],[13.0915757,52.3589421],[13.0926469,52.3605489],[13.0906798,52.3601615],[13.0904585,52.359993],[13.0911887,52.3595461]],"Zum Wasserturm":[[13.0706592,52.3908719],[13.0714441,52.3908343],[13.0722224,52.3907971],[13.0725668,52.3902735],[13.072509,52.3897755]],"Zum Weizenring":[[13.0048745,52.423867],[13.0048692,52.4239303],[13.0043421,52.4238677],[13.004734,52.4236918],[13.0043481,52.4237068],[13.0044553,52.4235005],[13.0050138,52.4233044],[13.0044121,52.4242032],[13.0049027,52.4235063],[13.0048241,52.4242052],[13.0049616,52.4240529],[13.00496,52.4239999],[13.0048346,52.4243348],[13.0048637,52.4243936]],"Zum Weißen See":[[13.0375696,52.4453787],[13.0373158,52.4451729],[13.0373442,52.4450011],[13.0375188,52.4448367],[13.0374532,52.4446984],[13.037031,52.4444364],[13.0369073,52.4442953],[13.0369176,52.4440776],[13.0365161,52.4434878],[13.0362228,52.4430417],[13.0358907,52.4429852],[13.0355395,52.4429841],[13.0360566,52.4434744],[13.0361857,52.443855],[13.0363106,52.4440755],[13.0365362,52.4446738],[13.0365823,52.4447323],[13.0365896,52.4450477],[13.0368737,52.4453967],[13.0368626,52.4455798],[13.0358954,52.4432729],[13.0366188,52.4437255],[13.0367291,52.4430708],[13.0369798,52.4437558],[13.0364019,52.4443567],[13.0364486,52.4444669],[13.0368198,52.4451045],[13.0368474,52.445172]],"Zum Windmühlenberg":[],"Zur Historischen Mühle":[[13.0362398,52.4052838]],"Zur Königlichen Hofbrauerei":[[13.0587077,52.3891777]],"Zur Nuthe":[[13.1028202,52.3706296],[13.1031418,52.3708294],[13.1025137,52.3708087],[13.1028599,52.371014],[13.1031754,52.3711944],[13.1033888,52.371297],[13.1034583,52.370993],[13.1036439,52.3710924],[13.1035752,52.3713891],[13.1039282,52.3712236],[13.1040367,52.3712758],[13.103791,52.3714837],[13.1042689,52.3713749],[13.1040228,52.3715836],[13.104423,52.3717466],[13.1046658,52.3715315],[13.1050869,52.3716949],[13.1054401,52.3717978],[13.1056403,52.3718719],[13.1058381,52.3719472],[13.1060366,52.3720213],[13.1062785,52.3721449],[13.1045259,52.3717857],[13.1041257,52.3716248],[13.1029447,52.3710621],[13.1025961,52.3708592],[13.1029021,52.3706817],[13.1032318,52.370877],[13.1043871,52.3714234],[13.1047659,52.3715694],[13.1051914,52.3717339],[13.1063845,52.3721833]]};let $3,D5,B1,w0,T4,s2,V2;document.getElementById("nextTaskOnMap").onclick=nh;document.getElementById("nextTaskStreetName").onclick=sh;document.getElementById("submitStreetName").onclick=b7;function th(){s2=new rs({declutter:!0,source:new Ss({attributions:'© <a href="https://www.mapbox.com/map-feedback/">Mapbox</a> © <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>',format:new Zs,url:"https://{a-d}.tiles.mapbox.com/v4/mapbox.mapbox-streets-v6/{z}/{x}/{y}.vector.pbf?access_token=pk.eyJ1IjoiY2xuZXh1cyIsImEiOiJjajMyNHJzb24wMGE4MzJudTk4b3loaWVlIn0.C5EK2wZ72uTyskjsYjOsTQ"})}),V2=new is({source:new Is}),$3=new Gn({target:"map",layers:[V2,s2],view:new Z3({center:L0([13.0702085,52.41924]),zoom:12})}),s2.setVisible(!1)}function ih(){D5=eh}function M7(){const s=D5[B1],e=[];for(const i of s)e.push(new m1({geometry:new i1(L0(i))}));const t=new R9({features:e});w0=new k9({source:t,style:new F3({image:new l2({radius:2,fill:new S1({color:"red"})})})}),$3.addLayer(w0),L7()}function L7(s){const e=s||[],i=[...D5[B1],...e].map(r=>L0(r)),n=d5(i);$3.getView().fit(n,{padding:[300,300,300,300]})}function P7(){const s=Object.keys(D5);return s[Math.floor(Math.random()*s.length)]}function nh(){s2.setVisible(!0),V2.setVisible(!1),$3.removeLayer(w0),document.getElementById("streetnameinput").value="",document.getElementById("info").innerHTML="",document.getElementById("elementsOnMap").style.display="block",document.getElementById("elementsStreetName").style.display="none",B1=P7(),M7()}function sh(){rh(),s2.setVisible(!0),V2.setVisible(!1),$3.removeLayer(w0),document.getElementById("elementsOnMap").style.display="none",document.getElementById("elementsStreetName").style.display="block",B1=P7(),document.getElementById("street_name").innerHTML=B1,$3.removeLayer(T4);var s=new R9({wrapX:!1});T4=new k9({source:s,style:new F3({image:new l2({radius:5,fill:new S1({color:"blue"})})})});const e=new er({source:s,type:"Point"});e.on("drawend",t=>{const i=C1(t.feature.getGeometry().getExtent()),n=b0(i,"EPSG:3857","EPSG:4326"),o=D5[B1].map(l=>L4(l,n)),a=Math.min(...o);document.getElementById("distance").innerHTML=a.toFixed(0)+"m",s2.setVisible(!1),V2.setVisible(!0),M7(),L7([n]),$3.removeInteraction(e)}),$3.addInteraction(e),$3.addLayer(T4)}function b7(){B1.toLowerCase()===document.getElementById("streetnameinput").value.toLowerCase()?document.getElementById("info").innerHTML="correct :)":document.getElementById("info").innerHTML="wrong, it was "+B1,s2.setVisible(!1),V2.setVisible(!0)}document.onkeyup=s=>{s.key==="Enter"&&b7()};function rh(){$3.setView(new Z3({center:L0([13.0702085,52.41924]),zoom:12}))}th();ih();
